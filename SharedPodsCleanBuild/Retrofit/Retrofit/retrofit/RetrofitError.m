//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/retrofit/retrofit/src/main/java/retrofit/RetrofitError.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/reflect/Type.h"
#include "retrofit/RetrofitError.h"
#include "retrofit/client/Response.h"
#include "retrofit/converter/ConversionException.h"
#include "retrofit/converter/Converter.h"
#include "retrofit/mime/TypedInput.h"

@interface RetrofitRetrofitError () {
 @public
  NSString *url_;
  RetrofitClientResponse *response_;
  id<RetrofitConverterConverter> converter_;
  id<JavaLangReflectType> successType_;
  RetrofitRetrofitError_Kind *kind_;
}

@end

J2OBJC_FIELD_SETTER(RetrofitRetrofitError, url_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitRetrofitError, response_, RetrofitClientResponse *)
J2OBJC_FIELD_SETTER(RetrofitRetrofitError, converter_, id<RetrofitConverterConverter>)
J2OBJC_FIELD_SETTER(RetrofitRetrofitError, successType_, id<JavaLangReflectType>)
J2OBJC_FIELD_SETTER(RetrofitRetrofitError, kind_, RetrofitRetrofitError_Kind *)

__attribute__((unused)) static void RetrofitRetrofitError_Kind_initWithNSString_withInt_(RetrofitRetrofitError_Kind *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static RetrofitRetrofitError_Kind *new_RetrofitRetrofitError_Kind_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@implementation RetrofitRetrofitError

+ (RetrofitRetrofitError *)networkErrorWithNSString:(NSString *)url
                              withJavaIoIOException:(JavaIoIOException *)exception {
  return RetrofitRetrofitError_networkErrorWithNSString_withJavaIoIOException_(url, exception);
}

+ (RetrofitRetrofitError *)conversionErrorWithNSString:(NSString *)url
                            withRetrofitClientResponse:(RetrofitClientResponse *)response
                        withRetrofitConverterConverter:(id<RetrofitConverterConverter>)converter
                               withJavaLangReflectType:(id<JavaLangReflectType>)successType
              withRetrofitConverterConversionException:(RetrofitConverterConversionException *)exception {
  return RetrofitRetrofitError_conversionErrorWithNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitConverterConversionException_(url, response, converter, successType, exception);
}

+ (RetrofitRetrofitError *)httpErrorWithNSString:(NSString *)url
                      withRetrofitClientResponse:(RetrofitClientResponse *)response
                  withRetrofitConverterConverter:(id<RetrofitConverterConverter>)converter
                         withJavaLangReflectType:(id<JavaLangReflectType>)successType {
  return RetrofitRetrofitError_httpErrorWithNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_(url, response, converter, successType);
}

+ (RetrofitRetrofitError *)unexpectedErrorWithNSString:(NSString *)url
                                       withNSException:(NSException *)exception {
  return RetrofitRetrofitError_unexpectedErrorWithNSString_withNSException_(url, exception);
}

- (instancetype)initWithNSString:(NSString *)message
                    withNSString:(NSString *)url
      withRetrofitClientResponse:(RetrofitClientResponse *)response
  withRetrofitConverterConverter:(id<RetrofitConverterConverter>)converter
         withJavaLangReflectType:(id<JavaLangReflectType>)successType
  withRetrofitRetrofitError_Kind:(RetrofitRetrofitError_Kind *)kind
                 withNSException:(NSException *)exception {
  RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_(self, message, url, response, converter, successType, kind, exception);
  return self;
}

- (NSString *)getUrl {
  return url_;
}

- (RetrofitClientResponse *)getResponse {
  return response_;
}

- (jboolean)isNetworkError {
  return kind_ == JreLoadEnum(RetrofitRetrofitError_Kind, NETWORK);
}

- (RetrofitRetrofitError_Kind *)getKind {
  return kind_;
}

- (id)getBody {
  return [self getBodyAsWithJavaLangReflectType:successType_];
}

- (id<JavaLangReflectType>)getSuccessType {
  return successType_;
}

- (id)getBodyAsWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  if (response_ == nil) {
    return nil;
  }
  id<RetrofitMimeTypedInput> body = [((RetrofitClientResponse *) nil_chk(response_)) getBody];
  if (body == nil) {
    return nil;
  }
  @try {
    return [((id<RetrofitConverterConverter>) nil_chk(converter_)) fromBodyWithRetrofitMimeTypedInput:body withJavaLangReflectType:type];
  }
  @catch (RetrofitConverterConversionException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

+ (IOSObjectArray *)__annotations_isNetworkError {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangDeprecated alloc] init] } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "networkErrorWithNSString:withJavaIoIOException:", "networkError", "Lretrofit.RetrofitError;", 0x9, NULL, NULL },
    { "conversionErrorWithNSString:withRetrofitClientResponse:withRetrofitConverterConverter:withJavaLangReflectType:withRetrofitConverterConversionException:", "conversionError", "Lretrofit.RetrofitError;", 0x9, NULL, NULL },
    { "httpErrorWithNSString:withRetrofitClientResponse:withRetrofitConverterConverter:withJavaLangReflectType:", "httpError", "Lretrofit.RetrofitError;", 0x9, NULL, NULL },
    { "unexpectedErrorWithNSString:withNSException:", "unexpectedError", "Lretrofit.RetrofitError;", 0x9, NULL, NULL },
    { "initWithNSString:withNSString:withRetrofitClientResponse:withRetrofitConverterConverter:withJavaLangReflectType:withRetrofitRetrofitError_Kind:withNSException:", "RetrofitError", NULL, 0x0, NULL, NULL },
    { "getUrl", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getResponse", NULL, "Lretrofit.client.Response;", 0x1, NULL, NULL },
    { "isNetworkError", NULL, "Z", 0x1, NULL, NULL },
    { "getKind", NULL, "Lretrofit.RetrofitError$Kind;", 0x1, NULL, NULL },
    { "getBody", NULL, "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getSuccessType", NULL, "Ljava.lang.reflect.Type;", 0x1, NULL, NULL },
    { "getBodyAsWithJavaLangReflectType:", "getBodyAs", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "url_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "response_", NULL, 0x12, "Lretrofit.client.Response;", NULL, NULL, .constantValue.asLong = 0 },
    { "converter_", NULL, 0x12, "Lretrofit.converter.Converter;", NULL, NULL, .constantValue.asLong = 0 },
    { "successType_", NULL, 0x12, "Ljava.lang.reflect.Type;", NULL, NULL, .constantValue.asLong = 0 },
    { "kind_", NULL, 0x12, "Lretrofit.RetrofitError$Kind;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lretrofit.RetrofitError$Kind;"};
  static const J2ObjcClassInfo _RetrofitRetrofitError = { 2, "RetrofitError", "retrofit", NULL, 0x1, 12, methods, 5, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_RetrofitRetrofitError;
}

@end

RetrofitRetrofitError *RetrofitRetrofitError_networkErrorWithNSString_withJavaIoIOException_(NSString *url, JavaIoIOException *exception) {
  RetrofitRetrofitError_initialize();
  return new_RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_([((JavaIoIOException *) nil_chk(exception)) getMessage], url, nil, nil, nil, JreLoadEnum(RetrofitRetrofitError_Kind, NETWORK), exception);
}

RetrofitRetrofitError *RetrofitRetrofitError_conversionErrorWithNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitConverterConversionException_(NSString *url, RetrofitClientResponse *response, id<RetrofitConverterConverter> converter, id<JavaLangReflectType> successType, RetrofitConverterConversionException *exception) {
  RetrofitRetrofitError_initialize();
  return new_RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_([((RetrofitConverterConversionException *) nil_chk(exception)) getMessage], url, response, converter, successType, JreLoadEnum(RetrofitRetrofitError_Kind, CONVERSION), exception);
}

RetrofitRetrofitError *RetrofitRetrofitError_httpErrorWithNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_(NSString *url, RetrofitClientResponse *response, id<RetrofitConverterConverter> converter, id<JavaLangReflectType> successType) {
  RetrofitRetrofitError_initialize();
  NSString *message = JreStrcat("IC$", [((RetrofitClientResponse *) nil_chk(response)) getStatus], ' ', [response getReason]);
  return new_RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_(message, url, response, converter, successType, JreLoadEnum(RetrofitRetrofitError_Kind, HTTP), nil);
}

RetrofitRetrofitError *RetrofitRetrofitError_unexpectedErrorWithNSString_withNSException_(NSString *url, NSException *exception) {
  RetrofitRetrofitError_initialize();
  return new_RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_([((NSException *) nil_chk(exception)) getMessage], url, nil, nil, nil, JreLoadEnum(RetrofitRetrofitError_Kind, UNEXPECTED), exception);
}

void RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_(RetrofitRetrofitError *self, NSString *message, NSString *url, RetrofitClientResponse *response, id<RetrofitConverterConverter> converter, id<JavaLangReflectType> successType, RetrofitRetrofitError_Kind *kind, NSException *exception) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, message, exception);
  self->url_ = url;
  self->response_ = response;
  self->converter_ = converter;
  self->successType_ = successType;
  self->kind_ = kind;
}

RetrofitRetrofitError *new_RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_(NSString *message, NSString *url, RetrofitClientResponse *response, id<RetrofitConverterConverter> converter, id<JavaLangReflectType> successType, RetrofitRetrofitError_Kind *kind, NSException *exception) {
  RetrofitRetrofitError *self = [RetrofitRetrofitError alloc];
  RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_(self, message, url, response, converter, successType, kind, exception);
  return self;
}

RetrofitRetrofitError *create_RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_(NSString *message, NSString *url, RetrofitClientResponse *response, id<RetrofitConverterConverter> converter, id<JavaLangReflectType> successType, RetrofitRetrofitError_Kind *kind, NSException *exception) {
  return new_RetrofitRetrofitError_initWithNSString_withNSString_withRetrofitClientResponse_withRetrofitConverterConverter_withJavaLangReflectType_withRetrofitRetrofitError_Kind_withNSException_(message, url, response, converter, successType, kind, exception);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitRetrofitError)

J2OBJC_INITIALIZED_DEFN(RetrofitRetrofitError_Kind)

RetrofitRetrofitError_Kind *RetrofitRetrofitError_Kind_values_[4];

@implementation RetrofitRetrofitError_Kind

+ (IOSObjectArray *)values {
  return RetrofitRetrofitError_Kind_values();
}

+ (RetrofitRetrofitError_Kind *)valueOfWithNSString:(NSString *)name {
  return RetrofitRetrofitError_Kind_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [RetrofitRetrofitError_Kind class]) {
    JreEnum(RetrofitRetrofitError_Kind, NETWORK) = new_RetrofitRetrofitError_Kind_initWithNSString_withInt_(@"NETWORK", 0);
    JreEnum(RetrofitRetrofitError_Kind, CONVERSION) = new_RetrofitRetrofitError_Kind_initWithNSString_withInt_(@"CONVERSION", 1);
    JreEnum(RetrofitRetrofitError_Kind, HTTP) = new_RetrofitRetrofitError_Kind_initWithNSString_withInt_(@"HTTP", 2);
    JreEnum(RetrofitRetrofitError_Kind, UNEXPECTED) = new_RetrofitRetrofitError_Kind_initWithNSString_withInt_(@"UNEXPECTED", 3);
    J2OBJC_SET_INITIALIZED(RetrofitRetrofitError_Kind)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "NETWORK", "NETWORK", 0x4019, "Lretrofit.RetrofitError$Kind;", &JreEnum(RetrofitRetrofitError_Kind, NETWORK), NULL, .constantValue.asLong = 0 },
    { "CONVERSION", "CONVERSION", 0x4019, "Lretrofit.RetrofitError$Kind;", &JreEnum(RetrofitRetrofitError_Kind, CONVERSION), NULL, .constantValue.asLong = 0 },
    { "HTTP", "HTTP", 0x4019, "Lretrofit.RetrofitError$Kind;", &JreEnum(RetrofitRetrofitError_Kind, HTTP), NULL, .constantValue.asLong = 0 },
    { "UNEXPECTED", "UNEXPECTED", 0x4019, "Lretrofit.RetrofitError$Kind;", &JreEnum(RetrofitRetrofitError_Kind, UNEXPECTED), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lretrofit.RetrofitError$Kind;"};
  static const J2ObjcClassInfo _RetrofitRetrofitError_Kind = { 2, "Kind", "retrofit", "RetrofitError", 0x4019, 0, NULL, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lretrofit/RetrofitError$Kind;>;" };
  return &_RetrofitRetrofitError_Kind;
}

@end

void RetrofitRetrofitError_Kind_initWithNSString_withInt_(RetrofitRetrofitError_Kind *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

RetrofitRetrofitError_Kind *new_RetrofitRetrofitError_Kind_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  RetrofitRetrofitError_Kind *self = [RetrofitRetrofitError_Kind alloc];
  RetrofitRetrofitError_Kind_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *RetrofitRetrofitError_Kind_values() {
  RetrofitRetrofitError_Kind_initialize();
  return [IOSObjectArray arrayWithObjects:RetrofitRetrofitError_Kind_values_ count:4 type:RetrofitRetrofitError_Kind_class_()];
}

RetrofitRetrofitError_Kind *RetrofitRetrofitError_Kind_valueOfWithNSString_(NSString *name) {
  RetrofitRetrofitError_Kind_initialize();
  for (int i = 0; i < 4; i++) {
    RetrofitRetrofitError_Kind *e = RetrofitRetrofitError_Kind_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

RetrofitRetrofitError_Kind *RetrofitRetrofitError_Kind_fromOrdinal(NSUInteger ordinal) {
  RetrofitRetrofitError_Kind_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return RetrofitRetrofitError_Kind_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitRetrofitError_Kind)
