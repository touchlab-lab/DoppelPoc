//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/retrofit/retrofit/src/main/java/retrofit/client/ClientHeader.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "retrofit/client/ClientHeader.h"

@interface RetrofitClientClientHeader () {
 @public
  NSString *name_;
  NSString *value_;
}

@end

J2OBJC_FIELD_SETTER(RetrofitClientClientHeader, name_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitClientClientHeader, value_, NSString *)

@implementation RetrofitClientClientHeader

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  RetrofitClientClientHeader_initWithNSString_withNSString_(self, name, value);
  return self;
}

- (NSString *)getName {
  return name_;
}

- (NSString *)getValue {
  return value_;
}

- (jboolean)isEqual:(id)o {
  if (self == o) return true;
  if (o == nil || [self getClass] != (id) [o getClass]) return false;
  RetrofitClientClientHeader *header = (RetrofitClientClientHeader *) cast_chk(o, [RetrofitClientClientHeader class]);
  if (name_ != nil ? ![name_ isEqual:((RetrofitClientClientHeader *) nil_chk(header))->name_] : ((RetrofitClientClientHeader *) nil_chk(header))->name_ != nil) return false;
  if (value_ != nil ? ![value_ isEqual:((RetrofitClientClientHeader *) nil_chk(header))->value_] : ((RetrofitClientClientHeader *) nil_chk(header))->value_ != nil) return false;
  return true;
}

- (NSUInteger)hash {
  jint result = name_ != nil ? ((jint) [name_ hash]) : 0;
  result = 31 * result + (value_ != nil ? ((jint) [value_ hash]) : 0);
  return result;
}

- (NSString *)description {
  return JreStrcat("$$$", (name_ != nil ? name_ : @""), @": ", (value_ != nil ? value_ : @""));
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "ClientHeader", NULL, 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValue", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RetrofitClientClientHeader = { 2, "ClientHeader", "retrofit.client", NULL, 0x11, 6, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RetrofitClientClientHeader;
}

@end

void RetrofitClientClientHeader_initWithNSString_withNSString_(RetrofitClientClientHeader *self, NSString *name, NSString *value) {
  NSObject_init(self);
  self->name_ = name;
  self->value_ = value;
}

RetrofitClientClientHeader *new_RetrofitClientClientHeader_initWithNSString_withNSString_(NSString *name, NSString *value) {
  RetrofitClientClientHeader *self = [RetrofitClientClientHeader alloc];
  RetrofitClientClientHeader_initWithNSString_withNSString_(self, name, value);
  return self;
}

RetrofitClientClientHeader *create_RetrofitClientClientHeader_initWithNSString_withNSString_(NSString *name, NSString *value) {
  return new_RetrofitClientClientHeader_initWithNSString_withNSString_(name, value);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitClientClientHeader)
