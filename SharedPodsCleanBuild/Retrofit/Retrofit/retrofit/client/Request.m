//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/retrofit/retrofit/src/main/java/retrofit/client/Request.java
//

#include "J2ObjC_source.h"
#include "java/lang/NullPointerException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "retrofit/client/Request.h"
#include "retrofit/mime/TypedOutput.h"

@interface RetrofitClientRequest () {
 @public
  NSString *method_;
  NSString *url_;
  id<JavaUtilList> headers_;
  id<RetrofitMimeTypedOutput> body_;
}

@end

J2OBJC_FIELD_SETTER(RetrofitClientRequest, method_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitClientRequest, url_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitClientRequest, headers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(RetrofitClientRequest, body_, id<RetrofitMimeTypedOutput>)

@implementation RetrofitClientRequest

- (instancetype)initWithNSString:(NSString *)method
                    withNSString:(NSString *)url
                withJavaUtilList:(id<JavaUtilList>)headers
     withRetrofitMimeTypedOutput:(id<RetrofitMimeTypedOutput>)body {
  RetrofitClientRequest_initWithNSString_withNSString_withJavaUtilList_withRetrofitMimeTypedOutput_(self, method, url, headers, body);
  return self;
}

- (NSString *)getMethod {
  return method_;
}

- (NSString *)getUrl {
  return url_;
}

- (id<JavaUtilList>)getHeaders {
  return headers_;
}

- (id<RetrofitMimeTypedOutput>)getBody {
  return body_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:withJavaUtilList:withRetrofitMimeTypedOutput:", "Request", NULL, 0x1, NULL, "(Ljava/lang/String;Ljava/lang/String;Ljava/util/List<Lretrofit/client/ClientHeader;>;Lretrofit/mime/TypedOutput;)V" },
    { "getMethod", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getUrl", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getHeaders", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lretrofit/client/ClientHeader;>;" },
    { "getBody", NULL, "Lretrofit.mime.TypedOutput;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "method_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "url_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "headers_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lretrofit/client/ClientHeader;>;", .constantValue.asLong = 0 },
    { "body_", NULL, 0x12, "Lretrofit.mime.TypedOutput;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RetrofitClientRequest = { 2, "Request", "retrofit.client", NULL, 0x11, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RetrofitClientRequest;
}

@end

void RetrofitClientRequest_initWithNSString_withNSString_withJavaUtilList_withRetrofitMimeTypedOutput_(RetrofitClientRequest *self, NSString *method, NSString *url, id<JavaUtilList> headers, id<RetrofitMimeTypedOutput> body) {
  NSObject_init(self);
  if (method == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"Method must not be null.");
  }
  if (url == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"URL must not be null.");
  }
  self->method_ = method;
  self->url_ = url;
  if (headers == nil) {
    self->headers_ = JavaUtilCollections_emptyList();
  }
  else {
    self->headers_ = JavaUtilCollections_unmodifiableListWithJavaUtilList_(new_JavaUtilArrayList_initWithJavaUtilCollection_(headers));
  }
  self->body_ = body;
}

RetrofitClientRequest *new_RetrofitClientRequest_initWithNSString_withNSString_withJavaUtilList_withRetrofitMimeTypedOutput_(NSString *method, NSString *url, id<JavaUtilList> headers, id<RetrofitMimeTypedOutput> body) {
  RetrofitClientRequest *self = [RetrofitClientRequest alloc];
  RetrofitClientRequest_initWithNSString_withNSString_withJavaUtilList_withRetrofitMimeTypedOutput_(self, method, url, headers, body);
  return self;
}

RetrofitClientRequest *create_RetrofitClientRequest_initWithNSString_withNSString_withJavaUtilList_withRetrofitMimeTypedOutput_(NSString *method, NSString *url, id<JavaUtilList> headers, id<RetrofitMimeTypedOutput> body) {
  return new_RetrofitClientRequest_initWithNSString_withNSString_withJavaUtilList_withRetrofitMimeTypedOutput_(method, url, headers, body);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitClientRequest)
