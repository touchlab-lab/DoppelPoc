//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/retrofit/retrofit/src/main/java/retrofit/converter/ConversionException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "retrofit/converter/ConversionException.h"

@implementation RetrofitConverterConversionException

- (instancetype)initWithNSString:(NSString *)message {
  RetrofitConverterConversionException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)throwable {
  RetrofitConverterConversionException_initWithNSString_withNSException_(self, message, throwable);
  return self;
}

- (instancetype)initWithNSException:(NSException *)throwable {
  RetrofitConverterConversionException_initWithNSException_(self, throwable);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "ConversionException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "ConversionException", NULL, 0x1, NULL, NULL },
    { "initWithNSException:", "ConversionException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _RetrofitConverterConversionException = { 2, "ConversionException", "retrofit.converter", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RetrofitConverterConversionException;
}

@end

void RetrofitConverterConversionException_initWithNSString_(RetrofitConverterConversionException *self, NSString *message) {
  JavaLangException_initWithNSString_(self, message);
}

RetrofitConverterConversionException *new_RetrofitConverterConversionException_initWithNSString_(NSString *message) {
  RetrofitConverterConversionException *self = [RetrofitConverterConversionException alloc];
  RetrofitConverterConversionException_initWithNSString_(self, message);
  return self;
}

RetrofitConverterConversionException *create_RetrofitConverterConversionException_initWithNSString_(NSString *message) {
  return new_RetrofitConverterConversionException_initWithNSString_(message);
}

void RetrofitConverterConversionException_initWithNSString_withNSException_(RetrofitConverterConversionException *self, NSString *message, NSException *throwable) {
  JavaLangException_initWithNSString_withNSException_(self, message, throwable);
}

RetrofitConverterConversionException *new_RetrofitConverterConversionException_initWithNSString_withNSException_(NSString *message, NSException *throwable) {
  RetrofitConverterConversionException *self = [RetrofitConverterConversionException alloc];
  RetrofitConverterConversionException_initWithNSString_withNSException_(self, message, throwable);
  return self;
}

RetrofitConverterConversionException *create_RetrofitConverterConversionException_initWithNSString_withNSException_(NSString *message, NSException *throwable) {
  return new_RetrofitConverterConversionException_initWithNSString_withNSException_(message, throwable);
}

void RetrofitConverterConversionException_initWithNSException_(RetrofitConverterConversionException *self, NSException *throwable) {
  JavaLangException_initWithNSException_(self, throwable);
}

RetrofitConverterConversionException *new_RetrofitConverterConversionException_initWithNSException_(NSException *throwable) {
  RetrofitConverterConversionException *self = [RetrofitConverterConversionException alloc];
  RetrofitConverterConversionException_initWithNSException_(self, throwable);
  return self;
}

RetrofitConverterConversionException *create_RetrofitConverterConversionException_initWithNSException_(NSException *throwable) {
  return new_RetrofitConverterConversionException_initWithNSException_(throwable);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitConverterConversionException)
