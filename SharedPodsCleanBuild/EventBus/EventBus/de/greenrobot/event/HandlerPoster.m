//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/EventBus/EventBus/src/de/greenrobot/event/HandlerPoster.java
//

#include "J2ObjC_source.h"
#include "android/os/Handler.h"
#include "android/os/Looper.h"
#include "android/os/Message.h"
#include "android/os/SystemClock.h"
#include "de/greenrobot/event/EventBus.h"
#include "de/greenrobot/event/EventBusException.h"
#include "de/greenrobot/event/HandlerPoster.h"
#include "de/greenrobot/event/PendingPost.h"
#include "de/greenrobot/event/PendingPostQueue.h"
#include "de/greenrobot/event/Subscription.h"

@interface DeGreenrobotEventHandlerPoster () {
 @public
  DeGreenrobotEventPendingPostQueue *queue_;
  jint maxMillisInsideHandleMessage_;
  DeGreenrobotEventEventBus *eventBus_;
  jboolean handlerActive_;
}

@end

J2OBJC_FIELD_SETTER(DeGreenrobotEventHandlerPoster, queue_, DeGreenrobotEventPendingPostQueue *)
J2OBJC_FIELD_SETTER(DeGreenrobotEventHandlerPoster, eventBus_, DeGreenrobotEventEventBus *)

@implementation DeGreenrobotEventHandlerPoster

- (instancetype)initWithDeGreenrobotEventEventBus:(DeGreenrobotEventEventBus *)eventBus
                              withAndroidOsLooper:(AndroidOsLooper *)looper
                                          withInt:(jint)maxMillisInsideHandleMessage {
  DeGreenrobotEventHandlerPoster_initWithDeGreenrobotEventEventBus_withAndroidOsLooper_withInt_(self, eventBus, looper, maxMillisInsideHandleMessage);
  return self;
}

- (void)enqueueWithDeGreenrobotEventSubscription:(DeGreenrobotEventSubscription *)subscription
                                          withId:(id)event {
  DeGreenrobotEventPendingPost *pendingPost = DeGreenrobotEventPendingPost_obtainPendingPostWithDeGreenrobotEventSubscription_withId_(subscription, event);
  @synchronized(self) {
    [((DeGreenrobotEventPendingPostQueue *) nil_chk(queue_)) enqueueWithDeGreenrobotEventPendingPost:pendingPost];
    if (!handlerActive_) {
      handlerActive_ = true;
      if (![self sendMessageWithAndroidOsMessage:[self obtainMessage]]) {
        @throw new_DeGreenrobotEventEventBusException_initWithNSString_(@"Could not send handler message");
      }
    }
  }
}

- (void)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg {
  jboolean rescheduled = false;
  @try {
    jlong started = AndroidOsSystemClock_uptimeMillis();
    while (true) {
      DeGreenrobotEventPendingPost *pendingPost = [((DeGreenrobotEventPendingPostQueue *) nil_chk(queue_)) poll];
      if (pendingPost == nil) {
        @synchronized(self) {
          pendingPost = [queue_ poll];
          if (pendingPost == nil) {
            handlerActive_ = false;
            return;
          }
        }
      }
      [((DeGreenrobotEventEventBus *) nil_chk(eventBus_)) invokeSubscriberWithDeGreenrobotEventPendingPost:pendingPost];
      jlong timeInMethod = AndroidOsSystemClock_uptimeMillis() - started;
      if (timeInMethod >= maxMillisInsideHandleMessage_) {
        if (![self sendMessageWithAndroidOsMessage:[self obtainMessage]]) {
          @throw new_DeGreenrobotEventEventBusException_initWithNSString_(@"Could not send handler message");
        }
        rescheduled = true;
        return;
      }
    }
  }
  @finally {
    handlerActive_ = rescheduled;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithDeGreenrobotEventEventBus:withAndroidOsLooper:withInt:", "HandlerPoster", NULL, 0x0, NULL, NULL },
    { "enqueueWithDeGreenrobotEventSubscription:withId:", "enqueue", "V", 0x0, NULL, NULL },
    { "handleMessageWithAndroidOsMessage:", "handleMessage", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "queue_", NULL, 0x12, "Lde.greenrobot.event.PendingPostQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxMillisInsideHandleMessage_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "eventBus_", NULL, 0x12, "Lde.greenrobot.event.EventBus;", NULL, NULL, .constantValue.asLong = 0 },
    { "handlerActive_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _DeGreenrobotEventHandlerPoster = { 2, "HandlerPoster", "de.greenrobot.event", NULL, 0x10, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_DeGreenrobotEventHandlerPoster;
}

@end

void DeGreenrobotEventHandlerPoster_initWithDeGreenrobotEventEventBus_withAndroidOsLooper_withInt_(DeGreenrobotEventHandlerPoster *self, DeGreenrobotEventEventBus *eventBus, AndroidOsLooper *looper, jint maxMillisInsideHandleMessage) {
  AndroidOsHandler_initWithAndroidOsLooper_(self, looper);
  self->eventBus_ = eventBus;
  self->maxMillisInsideHandleMessage_ = maxMillisInsideHandleMessage;
  self->queue_ = new_DeGreenrobotEventPendingPostQueue_init();
}

DeGreenrobotEventHandlerPoster *new_DeGreenrobotEventHandlerPoster_initWithDeGreenrobotEventEventBus_withAndroidOsLooper_withInt_(DeGreenrobotEventEventBus *eventBus, AndroidOsLooper *looper, jint maxMillisInsideHandleMessage) {
  DeGreenrobotEventHandlerPoster *self = [DeGreenrobotEventHandlerPoster alloc];
  DeGreenrobotEventHandlerPoster_initWithDeGreenrobotEventEventBus_withAndroidOsLooper_withInt_(self, eventBus, looper, maxMillisInsideHandleMessage);
  return self;
}

DeGreenrobotEventHandlerPoster *create_DeGreenrobotEventHandlerPoster_initWithDeGreenrobotEventEventBus_withAndroidOsLooper_withInt_(DeGreenrobotEventEventBus *eventBus, AndroidOsLooper *looper, jint maxMillisInsideHandleMessage) {
  return new_DeGreenrobotEventHandlerPoster_initWithDeGreenrobotEventEventBus_withAndroidOsLooper_withInt_(eventBus, looper, maxMillisInsideHandleMessage);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventHandlerPoster)
