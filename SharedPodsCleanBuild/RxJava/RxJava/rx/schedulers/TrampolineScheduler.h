//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/schedulers/TrampolineScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxSchedulersTrampolineScheduler_INCLUDE_ALL")
#ifdef RxSchedulersTrampolineScheduler_RESTRICT
#define RxSchedulersTrampolineScheduler_INCLUDE_ALL 0
#else
#define RxSchedulersTrampolineScheduler_INCLUDE_ALL 1
#endif
#undef RxSchedulersTrampolineScheduler_RESTRICT

#if !defined (RxSchedulersTrampolineScheduler_) && (RxSchedulersTrampolineScheduler_INCLUDE_ALL || defined(RxSchedulersTrampolineScheduler_INCLUDE))
#define RxSchedulersTrampolineScheduler_

#define RxScheduler_RESTRICT 1
#define RxScheduler_INCLUDE 1
#include "rx/Scheduler.h"

@class JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater;
@class RxScheduler_Worker;

@interface RxSchedulersTrampolineScheduler : RxScheduler {
 @public
  volatile_jint counter_;
}

#pragma mark Public

- (RxScheduler_Worker *)createWorker;

#pragma mark Package-Private

- (instancetype)init;

+ (RxSchedulersTrampolineScheduler *)instance;

@end

J2OBJC_STATIC_INIT(RxSchedulersTrampolineScheduler)

inline JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxSchedulersTrampolineScheduler_get_COUNTER_UPDATER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxSchedulersTrampolineScheduler_COUNTER_UPDATER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxSchedulersTrampolineScheduler, COUNTER_UPDATER, JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *)

FOUNDATION_EXPORT RxSchedulersTrampolineScheduler *RxSchedulersTrampolineScheduler_instance();

FOUNDATION_EXPORT void RxSchedulersTrampolineScheduler_init(RxSchedulersTrampolineScheduler *self);

FOUNDATION_EXPORT RxSchedulersTrampolineScheduler *new_RxSchedulersTrampolineScheduler_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSchedulersTrampolineScheduler *create_RxSchedulersTrampolineScheduler_init();

J2OBJC_TYPE_LITERAL_HEADER(RxSchedulersTrampolineScheduler)

#endif

#pragma pop_macro("RxSchedulersTrampolineScheduler_INCLUDE_ALL")
