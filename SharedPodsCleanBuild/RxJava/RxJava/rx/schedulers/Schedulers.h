//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/schedulers/Schedulers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxSchedulersSchedulers_INCLUDE_ALL")
#ifdef RxSchedulersSchedulers_RESTRICT
#define RxSchedulersSchedulers_INCLUDE_ALL 0
#else
#define RxSchedulersSchedulers_INCLUDE_ALL 1
#endif
#undef RxSchedulersSchedulers_RESTRICT

#if !defined (RxSchedulersSchedulers_) && (RxSchedulersSchedulers_INCLUDE_ALL || defined(RxSchedulersSchedulers_INCLUDE))
#define RxSchedulersSchedulers_

@class RxScheduler;
@class RxSchedulersTestScheduler;
@protocol JavaUtilConcurrentExecutor;

@interface RxSchedulersSchedulers : NSObject

#pragma mark Public

+ (RxScheduler *)computation;

+ (RxScheduler *)fromWithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (RxScheduler *)immediate;

+ (RxScheduler *)io;

+ (RxScheduler *)newThread OBJC_METHOD_FAMILY_NONE;

+ (RxSchedulersTestScheduler *)test;

+ (RxScheduler *)trampoline;

@end

J2OBJC_STATIC_INIT(RxSchedulersSchedulers)

FOUNDATION_EXPORT RxScheduler *RxSchedulersSchedulers_immediate();

FOUNDATION_EXPORT RxScheduler *RxSchedulersSchedulers_trampoline();

FOUNDATION_EXPORT RxScheduler *RxSchedulersSchedulers_newThread();

FOUNDATION_EXPORT RxScheduler *RxSchedulersSchedulers_computation();

FOUNDATION_EXPORT RxScheduler *RxSchedulersSchedulers_io();

FOUNDATION_EXPORT RxSchedulersTestScheduler *RxSchedulersSchedulers_test();

FOUNDATION_EXPORT RxScheduler *RxSchedulersSchedulers_fromWithJavaUtilConcurrentExecutor_(id<JavaUtilConcurrentExecutor> executor);

J2OBJC_TYPE_LITERAL_HEADER(RxSchedulersSchedulers)

#endif

#pragma pop_macro("RxSchedulersSchedulers_INCLUDE_ALL")
