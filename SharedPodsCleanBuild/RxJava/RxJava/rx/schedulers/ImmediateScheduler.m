//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/schedulers/ImmediateScheduler.java
//

#include "J2ObjC_source.h"
#include "java/util/concurrent/TimeUnit.h"
#include "rx/Scheduler.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/schedulers/ImmediateScheduler.h"
#include "rx/schedulers/SleepingAction.h"
#include "rx/subscriptions/BooleanSubscription.h"
#include "rx/subscriptions/Subscriptions.h"

inline RxSchedulersImmediateScheduler *RxSchedulersImmediateScheduler_get_INSTANCE();
static RxSchedulersImmediateScheduler *RxSchedulersImmediateScheduler_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxSchedulersImmediateScheduler, INSTANCE, RxSchedulersImmediateScheduler *)

@interface RxSchedulersImmediateScheduler_InnerImmediateScheduler : RxScheduler_Worker < RxSubscription > {
 @public
  RxSchedulersImmediateScheduler *this$0_;
  RxSubscriptionsBooleanSubscription *innerSubscription_;
}

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action
                                            withLong:(jlong)delayTime
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action;

- (void)unsubscribe;

- (jboolean)isUnsubscribed;

- (instancetype)initWithRxSchedulersImmediateScheduler:(RxSchedulersImmediateScheduler *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSchedulersImmediateScheduler_InnerImmediateScheduler)

J2OBJC_FIELD_SETTER(RxSchedulersImmediateScheduler_InnerImmediateScheduler, this$0_, RxSchedulersImmediateScheduler *)
J2OBJC_FIELD_SETTER(RxSchedulersImmediateScheduler_InnerImmediateScheduler, innerSubscription_, RxSubscriptionsBooleanSubscription *)

__attribute__((unused)) static void RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(RxSchedulersImmediateScheduler_InnerImmediateScheduler *self, RxSchedulersImmediateScheduler *outer$);

__attribute__((unused)) static RxSchedulersImmediateScheduler_InnerImmediateScheduler *new_RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(RxSchedulersImmediateScheduler *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSchedulersImmediateScheduler_InnerImmediateScheduler *create_RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(RxSchedulersImmediateScheduler *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxSchedulersImmediateScheduler_InnerImmediateScheduler)

J2OBJC_INITIALIZED_DEFN(RxSchedulersImmediateScheduler)

@implementation RxSchedulersImmediateScheduler

+ (RxSchedulersImmediateScheduler *)instance {
  return RxSchedulersImmediateScheduler_instance();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSchedulersImmediateScheduler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RxScheduler_Worker *)createWorker {
  return new_RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(self);
}

+ (void)initialize {
  if (self == [RxSchedulersImmediateScheduler class]) {
    RxSchedulersImmediateScheduler_INSTANCE = new_RxSchedulersImmediateScheduler_init();
    J2OBJC_SET_INITIALIZED(RxSchedulersImmediateScheduler)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "instance", NULL, "Lrx.schedulers.ImmediateScheduler;", 0x8, NULL, NULL },
    { "init", "ImmediateScheduler", NULL, 0x0, NULL, NULL },
    { "createWorker", NULL, "Lrx.Scheduler$Worker;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "INSTANCE", "INSTANCE", 0x1a, "Lrx.schedulers.ImmediateScheduler;", &RxSchedulersImmediateScheduler_INSTANCE, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.schedulers.ImmediateScheduler$InnerImmediateScheduler;"};
  static const J2ObjcClassInfo _RxSchedulersImmediateScheduler = { 2, "ImmediateScheduler", "rx.schedulers", NULL, 0x11, 3, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_RxSchedulersImmediateScheduler;
}

@end

RxSchedulersImmediateScheduler *RxSchedulersImmediateScheduler_instance() {
  RxSchedulersImmediateScheduler_initialize();
  return RxSchedulersImmediateScheduler_INSTANCE;
}

void RxSchedulersImmediateScheduler_init(RxSchedulersImmediateScheduler *self) {
  RxScheduler_init(self);
}

RxSchedulersImmediateScheduler *new_RxSchedulersImmediateScheduler_init() {
  RxSchedulersImmediateScheduler *self = [RxSchedulersImmediateScheduler alloc];
  RxSchedulersImmediateScheduler_init(self);
  return self;
}

RxSchedulersImmediateScheduler *create_RxSchedulersImmediateScheduler_init() {
  return new_RxSchedulersImmediateScheduler_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSchedulersImmediateScheduler)

@implementation RxSchedulersImmediateScheduler_InnerImmediateScheduler

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action
                                            withLong:(jlong)delayTime
                      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit {
  jlong execTime = [this$0_ now] + [((JavaUtilConcurrentTimeUnit *) nil_chk(unit)) toMillisWithLong:delayTime];
  return [self scheduleWithRxFunctionsAction0:new_RxSchedulersSleepingAction_initWithRxFunctionsAction0_withRxScheduler_Worker_withLong_(action, self, execTime)];
}

- (id<RxSubscription>)scheduleWithRxFunctionsAction0:(id<RxFunctionsAction0>)action {
  [((id<RxFunctionsAction0>) nil_chk(action)) call];
  return RxSubscriptionsSubscriptions_empty();
}

- (void)unsubscribe {
  [((RxSubscriptionsBooleanSubscription *) nil_chk(innerSubscription_)) unsubscribe];
}

- (jboolean)isUnsubscribed {
  return [((RxSubscriptionsBooleanSubscription *) nil_chk(innerSubscription_)) isUnsubscribed];
}

- (instancetype)initWithRxSchedulersImmediateScheduler:(RxSchedulersImmediateScheduler *)outer$ {
  RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "scheduleWithRxFunctionsAction0:withLong:withJavaUtilConcurrentTimeUnit:", "schedule", "Lrx.Subscription;", 0x1, NULL, NULL },
    { "scheduleWithRxFunctionsAction0:", "schedule", "Lrx.Subscription;", 0x1, NULL, NULL },
    { "unsubscribe", NULL, "V", 0x1, NULL, NULL },
    { "isUnsubscribed", NULL, "Z", 0x1, NULL, NULL },
    { "initWithRxSchedulersImmediateScheduler:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrx.schedulers.ImmediateScheduler;", NULL, NULL, .constantValue.asLong = 0 },
    { "innerSubscription_", NULL, 0x10, "Lrx.subscriptions.BooleanSubscription;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSchedulersImmediateScheduler_InnerImmediateScheduler = { 2, "InnerImmediateScheduler", "rx.schedulers", "ImmediateScheduler", 0x2, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxSchedulersImmediateScheduler_InnerImmediateScheduler;
}

@end

void RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(RxSchedulersImmediateScheduler_InnerImmediateScheduler *self, RxSchedulersImmediateScheduler *outer$) {
  self->this$0_ = outer$;
  RxScheduler_Worker_init(self);
  self->innerSubscription_ = new_RxSubscriptionsBooleanSubscription_init();
}

RxSchedulersImmediateScheduler_InnerImmediateScheduler *new_RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(RxSchedulersImmediateScheduler *outer$) {
  RxSchedulersImmediateScheduler_InnerImmediateScheduler *self = [RxSchedulersImmediateScheduler_InnerImmediateScheduler alloc];
  RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(self, outer$);
  return self;
}

RxSchedulersImmediateScheduler_InnerImmediateScheduler *create_RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(RxSchedulersImmediateScheduler *outer$) {
  return new_RxSchedulersImmediateScheduler_InnerImmediateScheduler_initWithRxSchedulersImmediateScheduler_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSchedulersImmediateScheduler_InnerImmediateScheduler)
