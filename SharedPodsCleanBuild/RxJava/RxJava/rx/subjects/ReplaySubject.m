//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/subjects/ReplaySubject.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/concurrent/TimeUnit.h"
#include "java/util/concurrent/atomic/AtomicIntegerFieldUpdater.h"
#include "rx/Observable.h"
#include "rx/Observer.h"
#include "rx/Scheduler.h"
#include "rx/exceptions/CompositeException.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Action1.h"
#include "rx/functions/Func1.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/internal/util/UtilityFunctions.h"
#include "rx/schedulers/Timestamped.h"
#include "rx/subjects/ReplaySubject.h"
#include "rx/subjects/Subject.h"
#include "rx/subjects/SubjectSubscriptionManager.h"

@interface RxSubjectsReplaySubject ()

- (jboolean)caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o;

@end

__attribute__((unused)) static jboolean RxSubjectsReplaySubject_caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsReplaySubject *self, RxSubjectsSubjectSubscriptionManager_SubjectObserver *o);

@interface RxSubjectsReplaySubject_ReplayState : NSObject

@end

@interface RxSubjectsReplaySubject_UnboundedReplayState () {
 @public
  RxInternalOperatorsNotificationLite *nl_;
  JavaUtilArrayList *list_;
  volatile_jboolean terminated_;
}

@end

J2OBJC_FIELD_SETTER(RxSubjectsReplaySubject_UnboundedReplayState, nl_, RxInternalOperatorsNotificationLite *)
J2OBJC_FIELD_SETTER(RxSubjectsReplaySubject_UnboundedReplayState, list_, JavaUtilArrayList *)

@interface RxSubjectsReplaySubject_EvictionPolicy : NSObject

@end

@interface RxSubjectsReplaySubject_$1 : NSObject < RxFunctionsAction1 > {
 @public
  RxSubjectsReplaySubject_UnboundedReplayState *val$state_;
}

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o;

- (instancetype)initWithRxSubjectsReplaySubject_UnboundedReplayState:(RxSubjectsReplaySubject_UnboundedReplayState *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsReplaySubject_$1)

J2OBJC_FIELD_SETTER(RxSubjectsReplaySubject_$1, val$state_, RxSubjectsReplaySubject_UnboundedReplayState *)

__attribute__((unused)) static void RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_$1 *self, RxSubjectsReplaySubject_UnboundedReplayState *capture$0);

__attribute__((unused)) static RxSubjectsReplaySubject_$1 *new_RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSubjectsReplaySubject_$1 *create_RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsReplaySubject_$1)

@interface RxSubjectsReplaySubject_$2 : NSObject < RxFunctionsAction1 > {
 @public
  RxSubjectsReplaySubject_UnboundedReplayState *val$state_;
}

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o;

- (instancetype)initWithRxSubjectsReplaySubject_UnboundedReplayState:(RxSubjectsReplaySubject_UnboundedReplayState *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsReplaySubject_$2)

J2OBJC_FIELD_SETTER(RxSubjectsReplaySubject_$2, val$state_, RxSubjectsReplaySubject_UnboundedReplayState *)

__attribute__((unused)) static void RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_$2 *self, RxSubjectsReplaySubject_UnboundedReplayState *capture$0);

__attribute__((unused)) static RxSubjectsReplaySubject_$2 *new_RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSubjectsReplaySubject_$2 *create_RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsReplaySubject_$2)

@interface RxSubjectsReplaySubject_$3 : NSObject < RxFunctionsAction1 > {
 @public
  RxSubjectsReplaySubject_BoundedState *val$state_;
}

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)t1;

- (instancetype)initWithRxSubjectsReplaySubject_BoundedState:(RxSubjectsReplaySubject_BoundedState *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsReplaySubject_$3)

J2OBJC_FIELD_SETTER(RxSubjectsReplaySubject_$3, val$state_, RxSubjectsReplaySubject_BoundedState *)

__attribute__((unused)) static void RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_$3 *self, RxSubjectsReplaySubject_BoundedState *capture$0);

__attribute__((unused)) static RxSubjectsReplaySubject_$3 *new_RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_BoundedState *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSubjectsReplaySubject_$3 *create_RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_BoundedState *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsReplaySubject_$3)

@implementation RxSubjectsReplaySubject

+ (RxSubjectsReplaySubject *)create {
  return RxSubjectsReplaySubject_create();
}

+ (RxSubjectsReplaySubject *)createWithInt:(jint)capacity {
  return RxSubjectsReplaySubject_createWithInt_(capacity);
}

+ (RxSubjectsReplaySubject *)createUnbounded {
  return RxSubjectsReplaySubject_createUnbounded();
}

+ (RxSubjectsReplaySubject *)createWithSizeWithInt:(jint)size {
  return RxSubjectsReplaySubject_createWithSizeWithInt_(size);
}

+ (RxSubjectsReplaySubject *)createWithTimeWithLong:(jlong)time
                     withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                    withRxScheduler:(RxScheduler *)scheduler {
  return RxSubjectsReplaySubject_createWithTimeWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(time, unit, scheduler);
}

+ (RxSubjectsReplaySubject *)createWithTimeAndSizeWithLong:(jlong)time
                            withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                                                   withInt:(jint)size
                                           withRxScheduler:(RxScheduler *)scheduler {
  return RxSubjectsReplaySubject_createWithTimeAndSizeWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(time, unit, size, scheduler);
}

+ (RxSubjectsReplaySubject *)createWithStateWithRxSubjectsReplaySubject_BoundedState:(RxSubjectsReplaySubject_BoundedState *)state
                                                              withRxFunctionsAction1:(id<RxFunctionsAction1>)onStart {
  return RxSubjectsReplaySubject_createWithStateWithRxSubjectsReplaySubject_BoundedState_withRxFunctionsAction1_(state, onStart);
}

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe
        withRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)ssm
         withRxSubjectsReplaySubject_ReplayState:(id<RxSubjectsReplaySubject_ReplayState>)state {
  RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(self, onSubscribe, ssm, state);
  return self;
}

- (void)onNextWithId:(id)t {
  if (((RxSubjectsSubjectSubscriptionManager *) nil_chk(ssm_))->active_) {
    [((id<RxSubjectsReplaySubject_ReplayState>) nil_chk(state_)) nextWithId:t];
    {
      IOSObjectArray *a__ = [ssm_ observers];
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxSubjectsSubjectSubscriptionManager_SubjectObserver *o = *b__++;
        if (RxSubjectsReplaySubject_caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver_(self, o)) {
          [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o)) onNextWithId:t];
        }
      }
    }
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (((RxSubjectsSubjectSubscriptionManager *) nil_chk(ssm_))->active_) {
    [((id<RxSubjectsReplaySubject_ReplayState>) nil_chk(state_)) errorWithNSException:e];
    id<JavaUtilList> errors = nil;
    {
      IOSObjectArray *a__ = [ssm_ terminateWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(RxInternalOperatorsNotificationLite_instance())) errorWithNSException:e]];
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxSubjectsSubjectSubscriptionManager_SubjectObserver *o = *b__++;
        @try {
          if (RxSubjectsReplaySubject_caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver_(self, o)) {
            [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o)) onErrorWithNSException:e];
          }
        }
        @catch (NSException *e2) {
          if (errors == nil) {
            errors = new_JavaUtilArrayList_init();
          }
          [((id<JavaUtilList>) nil_chk(errors)) addWithId:e2];
        }
      }
    }
    if (errors != nil) {
      if ([errors size] == 1) {
        (void) RxExceptionsExceptions_propagateWithNSException_([errors getWithInt:0]);
      }
      else {
        @throw new_RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(@"Errors while emitting ReplaySubject.onError", errors);
      }
    }
  }
}

- (void)onCompleted {
  if (((RxSubjectsSubjectSubscriptionManager *) nil_chk(ssm_))->active_) {
    [((id<RxSubjectsReplaySubject_ReplayState>) nil_chk(state_)) complete];
    {
      IOSObjectArray *a__ = [ssm_ terminateWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(RxInternalOperatorsNotificationLite_instance())) completed]];
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxSubjectsSubjectSubscriptionManager_SubjectObserver *o = *b__++;
        if (RxSubjectsReplaySubject_caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver_(self, o)) {
          [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o)) onCompleted];
        }
      }
    }
  }
}

- (jint)subscriberCount {
  return ((IOSObjectArray *) nil_chk(((RxSubjectsSubjectSubscriptionManager_State *) nil_chk(JreLoadVolatileId(&((RxSubjectsSubjectSubscriptionManager *) nil_chk(ssm_))->state_)))->observers_))->size_;
}

- (jboolean)hasObservers {
  return ((IOSObjectArray *) nil_chk([((RxSubjectsSubjectSubscriptionManager *) nil_chk(ssm_)) observers]))->size_ > 0;
}

- (jboolean)caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  return RxSubjectsReplaySubject_caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver_(self, o);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", NULL, "Lrx.subjects.ReplaySubject;", 0x9, NULL, "<T:Ljava/lang/Object;>()Lrx/subjects/ReplaySubject<TT;>;" },
    { "createWithInt:", "create", "Lrx.subjects.ReplaySubject;", 0x9, NULL, "<T:Ljava/lang/Object;>(I)Lrx/subjects/ReplaySubject<TT;>;" },
    { "createUnbounded", NULL, "Lrx.subjects.ReplaySubject;", 0x8, NULL, "<T:Ljava/lang/Object;>()Lrx/subjects/ReplaySubject<TT;>;" },
    { "createWithSizeWithInt:", "createWithSize", "Lrx.subjects.ReplaySubject;", 0x9, NULL, "<T:Ljava/lang/Object;>(I)Lrx/subjects/ReplaySubject<TT;>;" },
    { "createWithTimeWithLong:withJavaUtilConcurrentTimeUnit:withRxScheduler:", "createWithTime", "Lrx.subjects.ReplaySubject;", 0x9, NULL, "<T:Ljava/lang/Object;>(JLjava/util/concurrent/TimeUnit;Lrx/Scheduler;)Lrx/subjects/ReplaySubject<TT;>;" },
    { "createWithTimeAndSizeWithLong:withJavaUtilConcurrentTimeUnit:withInt:withRxScheduler:", "createWithTimeAndSize", "Lrx.subjects.ReplaySubject;", 0x9, NULL, "<T:Ljava/lang/Object;>(JLjava/util/concurrent/TimeUnit;ILrx/Scheduler;)Lrx/subjects/ReplaySubject<TT;>;" },
    { "createWithStateWithRxSubjectsReplaySubject_BoundedState:withRxFunctionsAction1:", "createWithState", "Lrx.subjects.ReplaySubject;", 0x18, NULL, "<T:Ljava/lang/Object;>(Lrx/subjects/ReplaySubject$BoundedState<TT;>;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;)Lrx/subjects/ReplaySubject<TT;>;" },
    { "initWithRxObservable_OnSubscribe:withRxSubjectsSubjectSubscriptionManager:withRxSubjectsReplaySubject_ReplayState:", "ReplaySubject", NULL, 0x0, NULL, "(Lrx/Observable$OnSubscribe<TT;>;Lrx/subjects/SubjectSubscriptionManager<TT;>;Lrx/subjects/ReplaySubject$ReplayState<TT;*>;)V" },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "subscriberCount", NULL, "I", 0x0, NULL, NULL },
    { "hasObservers", NULL, "Z", 0x1, NULL, NULL },
    { "caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "caughtUp", "Z", 0x2, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;)Z" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", NULL, 0x10, "Lrx.subjects.ReplaySubject$ReplayState;", NULL, "Lrx/subjects/ReplaySubject$ReplayState<TT;*>;", .constantValue.asLong = 0 },
    { "ssm_", NULL, 0x10, "Lrx.subjects.SubjectSubscriptionManager;", NULL, "Lrx/subjects/SubjectSubscriptionManager<TT;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;", "TT;"};
  static const char *inner_classes[] = {"Lrx.subjects.ReplaySubject$UnboundedReplayState;", "Lrx.subjects.ReplaySubject$BoundedState;", "Lrx.subjects.ReplaySubject$ReplayState;", "Lrx.subjects.ReplaySubject$EvictionPolicy;", "Lrx.subjects.ReplaySubject$SizeEvictionPolicy;", "Lrx.subjects.ReplaySubject$TimeEvictionPolicy;", "Lrx.subjects.ReplaySubject$PairEvictionPolicy;", "Lrx.subjects.ReplaySubject$AddTimestamped;", "Lrx.subjects.ReplaySubject$RemoveTimestamped;", "Lrx.subjects.ReplaySubject$DefaultOnAdd;", "Lrx.subjects.ReplaySubject$TimedOnAdd;", "Lrx.subjects.ReplaySubject$NodeList;", "Lrx.subjects.ReplaySubject$EmptyEvictionPolicy;"};
  static const J2ObjcClassInfo _RxSubjectsReplaySubject = { 2, "ReplaySubject", "rx.subjects", NULL, 0x11, 14, methods, 2, fields, 2, superclass_type_args, 13, inner_classes, NULL, "<T:Ljava/lang/Object;>Lrx/subjects/Subject<TT;TT;>;" };
  return &_RxSubjectsReplaySubject;
}

@end

RxSubjectsReplaySubject *RxSubjectsReplaySubject_create() {
  RxSubjectsReplaySubject_initialize();
  return RxSubjectsReplaySubject_createWithInt_(16);
}

RxSubjectsReplaySubject *RxSubjectsReplaySubject_createWithInt_(jint capacity) {
  RxSubjectsReplaySubject_initialize();
  RxSubjectsReplaySubject_UnboundedReplayState *state = new_RxSubjectsReplaySubject_UnboundedReplayState_initWithInt_(capacity);
  RxSubjectsSubjectSubscriptionManager *ssm = new_RxSubjectsSubjectSubscriptionManager_init();
  ssm->onStart_ = new_RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(state);
  ssm->onTerminated_ = new_RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(state);
  return new_RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(ssm, ssm, state);
}

RxSubjectsReplaySubject *RxSubjectsReplaySubject_createUnbounded() {
  RxSubjectsReplaySubject_initialize();
  RxSubjectsReplaySubject_BoundedState *state = new_RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(new_RxSubjectsReplaySubject_EmptyEvictionPolicy_init(), RxInternalUtilUtilityFunctions_identity(), RxInternalUtilUtilityFunctions_identity());
  return RxSubjectsReplaySubject_createWithStateWithRxSubjectsReplaySubject_BoundedState_withRxFunctionsAction1_(state, new_RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(state));
}

RxSubjectsReplaySubject *RxSubjectsReplaySubject_createWithSizeWithInt_(jint size) {
  RxSubjectsReplaySubject_initialize();
  RxSubjectsReplaySubject_BoundedState *state = new_RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(new_RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(size), RxInternalUtilUtilityFunctions_identity(), RxInternalUtilUtilityFunctions_identity());
  return RxSubjectsReplaySubject_createWithStateWithRxSubjectsReplaySubject_BoundedState_withRxFunctionsAction1_(state, new_RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(state));
}

RxSubjectsReplaySubject *RxSubjectsReplaySubject_createWithTimeWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) {
  RxSubjectsReplaySubject_initialize();
  RxSubjectsReplaySubject_BoundedState *state = new_RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(new_RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_([((JavaUtilConcurrentTimeUnit *) nil_chk(unit)) toMillisWithLong:time], scheduler), new_RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(scheduler), new_RxSubjectsReplaySubject_RemoveTimestamped_init());
  return RxSubjectsReplaySubject_createWithStateWithRxSubjectsReplaySubject_BoundedState_withRxFunctionsAction1_(state, new_RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(state, scheduler));
}

RxSubjectsReplaySubject *RxSubjectsReplaySubject_createWithTimeAndSizeWithLong_withJavaUtilConcurrentTimeUnit_withInt_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, jint size, RxScheduler *scheduler) {
  RxSubjectsReplaySubject_initialize();
  RxSubjectsReplaySubject_BoundedState *state = new_RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(new_RxSubjectsReplaySubject_PairEvictionPolicy_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxSubjectsReplaySubject_EvictionPolicy_(new_RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(size), new_RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_([((JavaUtilConcurrentTimeUnit *) nil_chk(unit)) toMillisWithLong:time], scheduler)), new_RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(scheduler), new_RxSubjectsReplaySubject_RemoveTimestamped_init());
  return RxSubjectsReplaySubject_createWithStateWithRxSubjectsReplaySubject_BoundedState_withRxFunctionsAction1_(state, new_RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(state, scheduler));
}

RxSubjectsReplaySubject *RxSubjectsReplaySubject_createWithStateWithRxSubjectsReplaySubject_BoundedState_withRxFunctionsAction1_(RxSubjectsReplaySubject_BoundedState *state, id<RxFunctionsAction1> onStart) {
  RxSubjectsReplaySubject_initialize();
  RxSubjectsSubjectSubscriptionManager *ssm = new_RxSubjectsSubjectSubscriptionManager_init();
  ssm->onStart_ = onStart;
  ssm->onTerminated_ = new_RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(state);
  return new_RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(ssm, ssm, state);
}

void RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(RxSubjectsReplaySubject *self, id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *ssm, id<RxSubjectsReplaySubject_ReplayState> state) {
  RxSubjectsSubject_initWithRxObservable_OnSubscribe_(self, onSubscribe);
  self->ssm_ = ssm;
  self->state_ = state;
}

RxSubjectsReplaySubject *new_RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *ssm, id<RxSubjectsReplaySubject_ReplayState> state) {
  RxSubjectsReplaySubject *self = [RxSubjectsReplaySubject alloc];
  RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(self, onSubscribe, ssm, state);
  return self;
}

RxSubjectsReplaySubject *create_RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *ssm, id<RxSubjectsReplaySubject_ReplayState> state) {
  return new_RxSubjectsReplaySubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSubjectsReplaySubject_ReplayState_(onSubscribe, ssm, state);
}

jboolean RxSubjectsReplaySubject_caughtUpWithRxSubjectsSubjectSubscriptionManager_SubjectObserver_(RxSubjectsReplaySubject *self, RxSubjectsSubjectSubscriptionManager_SubjectObserver *o) {
  if (!JreLoadVolatileBoolean(&((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o))->caughtUp_)) {
    JreAssignVolatileBoolean(&o->caughtUp_, true);
    [((id<RxSubjectsReplaySubject_ReplayState>) nil_chk(self->state_)) replayObserverWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:o];
    [o indexWithId:nil];
    return false;
  }
  else {
    return true;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject)

@implementation RxSubjectsReplaySubject_ReplayState

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "terminated", NULL, "Z", 0x401, NULL, NULL },
    { "replayObserverWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "replayObserver", "V", 0x401, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;)V" },
    { "replayObserverFromIndexWithId:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "replayObserverFromIndex", "TI;", 0x401, NULL, "(TI;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;)TI;" },
    { "replayObserverFromIndexTestWithId:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:withLong:", "replayObserverFromIndexTest", "TI;", 0x401, NULL, "(TI;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;J)TI;" },
    { "nextWithId:", "next", "V", 0x401, NULL, "(TT;)V" },
    { "errorWithNSException:", "error", "V", 0x401, NULL, NULL },
    { "complete", NULL, "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_ReplayState = { 2, "ReplayState", "rx.subjects", "ReplaySubject", 0x608, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;I:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_RxSubjectsReplaySubject_ReplayState;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_ReplayState)

J2OBJC_INITIALIZED_DEFN(RxSubjectsReplaySubject_UnboundedReplayState)

JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxSubjectsReplaySubject_UnboundedReplayState_INDEX_UPDATER;

@implementation RxSubjectsReplaySubject_UnboundedReplayState

- (instancetype)initWithInt:(jint)initialCapacity {
  RxSubjectsReplaySubject_UnboundedReplayState_initWithInt_(self, initialCapacity);
  return self;
}

- (void)nextWithId:(id)n {
  if (!JreLoadVolatileBoolean(&terminated_)) {
    [((JavaUtilArrayList *) nil_chk(list_)) addWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) nextWithId:n]];
    [((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxSubjectsReplaySubject_UnboundedReplayState_INDEX_UPDATER)) getAndIncrementWithId:self];
  }
}

- (void)acceptWithRxObserver:(id<RxObserver>)o
                     withInt:(jint)idx {
  [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) acceptWithRxObserver:o withId:[((JavaUtilArrayList *) nil_chk(list_)) getWithInt:idx]];
}

- (void)complete {
  if (!JreLoadVolatileBoolean(&terminated_)) {
    JreAssignVolatileBoolean(&terminated_, true);
    [((JavaUtilArrayList *) nil_chk(list_)) addWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) completed]];
    [((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxSubjectsReplaySubject_UnboundedReplayState_INDEX_UPDATER)) getAndIncrementWithId:self];
  }
}

- (void)errorWithNSException:(NSException *)e {
  if (!JreLoadVolatileBoolean(&terminated_)) {
    JreAssignVolatileBoolean(&terminated_, true);
    [((JavaUtilArrayList *) nil_chk(list_)) addWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) errorWithNSException:e]];
    [((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxSubjectsReplaySubject_UnboundedReplayState_INDEX_UPDATER)) getAndIncrementWithId:self];
  }
}

- (jboolean)terminated {
  return JreLoadVolatileBoolean(&terminated_);
}

- (void)replayObserverWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)observer {
  JavaLangInteger *lastEmittedLink = [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(observer)) index];
  if (lastEmittedLink != nil) {
    jint l = [((JavaLangInteger *) nil_chk([self replayObserverFromIndexWithId:lastEmittedLink withRxSubjectsSubjectSubscriptionManager_SubjectObserver:observer])) intValue];
    [observer indexWithId:JavaLangInteger_valueOfWithInt_(l)];
  }
  else {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"failed to find lastEmittedLink for: ", observer));
  }
}

- (JavaLangInteger *)replayObserverFromIndexWithId:(JavaLangInteger *)idx
withRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)observer {
  jint i = [((JavaLangInteger *) nil_chk(idx)) intValue];
  while (i < JreLoadVolatileInt(&index_)) {
    [self acceptWithRxObserver:observer withInt:i];
    i++;
  }
  return JavaLangInteger_valueOfWithInt_(i);
}

- (JavaLangInteger *)replayObserverFromIndexTestWithId:(JavaLangInteger *)idx
withRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)observer
                                              withLong:(jlong)now {
  return [self replayObserverFromIndexWithId:idx withRxSubjectsSubjectSubscriptionManager_SubjectObserver:observer];
}

+ (void)initialize {
  if (self == [RxSubjectsReplaySubject_UnboundedReplayState class]) {
    RxSubjectsReplaySubject_UnboundedReplayState_INDEX_UPDATER = JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxSubjectsReplaySubject_UnboundedReplayState_class_(), @"index");
    J2OBJC_SET_INITIALIZED(RxSubjectsReplaySubject_UnboundedReplayState)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "UnboundedReplayState", NULL, 0x1, NULL, NULL },
    { "nextWithId:", "next", "V", 0x1, NULL, "(TT;)V" },
    { "acceptWithRxObserver:withInt:", "accept", "V", 0x1, NULL, "(Lrx/Observer<-TT;>;I)V" },
    { "complete", NULL, "V", 0x1, NULL, NULL },
    { "errorWithNSException:", "error", "V", 0x1, NULL, NULL },
    { "terminated", NULL, "Z", 0x1, NULL, NULL },
    { "replayObserverWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "replayObserver", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;)V" },
    { "replayObserverFromIndexWithId:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "replayObserverFromIndex", "Ljava.lang.Integer;", 0x1, NULL, "(Ljava/lang/Integer;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;)Ljava/lang/Integer;" },
    { "replayObserverFromIndexTestWithId:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:withLong:", "replayObserverFromIndexTest", "Ljava.lang.Integer;", 0x1, NULL, "(Ljava/lang/Integer;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;J)Ljava/lang/Integer;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nl_", NULL, 0x12, "Lrx.internal.operators.NotificationLite;", NULL, "Lrx/internal/operators/NotificationLite<TT;>;", .constantValue.asLong = 0 },
    { "list_", NULL, 0x12, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "terminated_", NULL, 0x42, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "index_", NULL, 0x40, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "INDEX_UPDATER", "INDEX_UPDATER", 0x18, "Ljava.util.concurrent.atomic.AtomicIntegerFieldUpdater;", &RxSubjectsReplaySubject_UnboundedReplayState_INDEX_UPDATER, "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater<Lrx/subjects/ReplaySubject$UnboundedReplayState;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_UnboundedReplayState = { 2, "UnboundedReplayState", "rx.subjects", "ReplaySubject", 0x18, 9, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/subjects/ReplaySubject$ReplayState<TT;Ljava/lang/Integer;>;" };
  return &_RxSubjectsReplaySubject_UnboundedReplayState;
}

@end

void RxSubjectsReplaySubject_UnboundedReplayState_initWithInt_(RxSubjectsReplaySubject_UnboundedReplayState *self, jint initialCapacity) {
  NSObject_init(self);
  self->nl_ = RxInternalOperatorsNotificationLite_instance();
  self->list_ = new_JavaUtilArrayList_initWithInt_(initialCapacity);
}

RxSubjectsReplaySubject_UnboundedReplayState *new_RxSubjectsReplaySubject_UnboundedReplayState_initWithInt_(jint initialCapacity) {
  RxSubjectsReplaySubject_UnboundedReplayState *self = [RxSubjectsReplaySubject_UnboundedReplayState alloc];
  RxSubjectsReplaySubject_UnboundedReplayState_initWithInt_(self, initialCapacity);
  return self;
}

RxSubjectsReplaySubject_UnboundedReplayState *create_RxSubjectsReplaySubject_UnboundedReplayState_initWithInt_(jint initialCapacity) {
  return new_RxSubjectsReplaySubject_UnboundedReplayState_initWithInt_(initialCapacity);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_UnboundedReplayState)

@implementation RxSubjectsReplaySubject_BoundedState

- (instancetype)initWithRxSubjectsReplaySubject_EvictionPolicy:(id<RxSubjectsReplaySubject_EvictionPolicy>)evictionPolicy
                                          withRxFunctionsFunc1:(id<RxFunctionsFunc1>)enterTransform
                                          withRxFunctionsFunc1:(id<RxFunctionsFunc1>)leaveTransform {
  RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(self, evictionPolicy, enterTransform, leaveTransform);
  return self;
}

- (void)nextWithId:(id)value {
  if (!JreLoadVolatileBoolean(&terminated_)) {
    [((RxSubjectsReplaySubject_NodeList *) nil_chk(list_)) addLastWithId:[((id<RxFunctionsFunc1>) nil_chk(enterTransform_)) callWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) nextWithId:value]]];
    [((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(evictionPolicy_)) evictWithRxSubjectsReplaySubject_NodeList:list_];
    (void) JreVolatileStrongAssign(&tail_, list_->tail_);
  }
}

- (void)complete {
  if (!JreLoadVolatileBoolean(&terminated_)) {
    JreAssignVolatileBoolean(&terminated_, true);
    [((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(evictionPolicy_)) evictWithRxSubjectsReplaySubject_NodeList:list_];
    [((RxSubjectsReplaySubject_NodeList *) nil_chk(list_)) addLastWithId:[((id<RxFunctionsFunc1>) nil_chk(enterTransform_)) callWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) completed]]];
    (void) JreVolatileStrongAssign(&tail_, list_->tail_);
  }
}

- (void)errorWithNSException:(NSException *)e {
  if (!JreLoadVolatileBoolean(&terminated_)) {
    JreAssignVolatileBoolean(&terminated_, true);
    [((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(evictionPolicy_)) evictWithRxSubjectsReplaySubject_NodeList:list_];
    [((RxSubjectsReplaySubject_NodeList *) nil_chk(list_)) addLastWithId:[((id<RxFunctionsFunc1>) nil_chk(enterTransform_)) callWithId:[((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) errorWithNSException:e]]];
    (void) JreVolatileStrongAssign(&tail_, list_->tail_);
  }
}

- (void)acceptWithRxObserver:(id<RxObserver>)o
withRxSubjectsReplaySubject_NodeList_Node:(RxSubjectsReplaySubject_NodeList_Node *)node {
  [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) acceptWithRxObserver:o withId:[((id<RxFunctionsFunc1>) nil_chk(leaveTransform_)) callWithId:((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(node))->value_]];
}

- (void)acceptTestWithRxObserver:(id<RxObserver>)o
withRxSubjectsReplaySubject_NodeList_Node:(RxSubjectsReplaySubject_NodeList_Node *)node
                        withLong:(jlong)now {
  id v = ((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(node))->value_;
  if (![((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(evictionPolicy_)) testWithId:v withLong:now]) {
    [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) acceptWithRxObserver:o withId:[((id<RxFunctionsFunc1>) nil_chk(leaveTransform_)) callWithId:v]];
  }
}

- (RxSubjectsReplaySubject_NodeList_Node *)head {
  return ((RxSubjectsReplaySubject_NodeList *) nil_chk(list_))->head_;
}

- (RxSubjectsReplaySubject_NodeList_Node *)tail {
  return JreLoadVolatileId(&tail_);
}

- (void)replayObserverWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)observer {
  RxSubjectsReplaySubject_NodeList_Node *lastEmittedLink = [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(observer)) index];
  RxSubjectsReplaySubject_NodeList_Node *l = [self replayObserverFromIndexWithId:lastEmittedLink withRxSubjectsSubjectSubscriptionManager_SubjectObserver:observer];
  [observer indexWithId:l];
}

- (RxSubjectsReplaySubject_NodeList_Node *)replayObserverFromIndexWithId:(RxSubjectsReplaySubject_NodeList_Node *)l
                withRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)observer {
  while (l != [self tail]) {
    [self acceptWithRxObserver:observer withRxSubjectsReplaySubject_NodeList_Node:JreLoadVolatileId(&((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(l))->next_)];
    l = JreLoadVolatileId(&l->next_);
  }
  return l;
}

- (RxSubjectsReplaySubject_NodeList_Node *)replayObserverFromIndexTestWithId:(RxSubjectsReplaySubject_NodeList_Node *)l
                    withRxSubjectsSubjectSubscriptionManager_SubjectObserver:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)observer
                                                                    withLong:(jlong)now {
  while (l != [self tail]) {
    [self acceptTestWithRxObserver:observer withRxSubjectsReplaySubject_NodeList_Node:JreLoadVolatileId(&((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(l))->next_) withLong:now];
    l = JreLoadVolatileId(&l->next_);
  }
  return l;
}

- (jboolean)terminated {
  return JreLoadVolatileBoolean(&terminated_);
}

- (void)dealloc {
  JreReleaseVolatile(&tail_);
}

- (void)__javaClone:(RxSubjectsReplaySubject_BoundedState *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&tail_, &original->tail_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubjectsReplaySubject_EvictionPolicy:withRxFunctionsFunc1:withRxFunctionsFunc1:", "BoundedState", NULL, 0x1, NULL, "(Lrx/subjects/ReplaySubject$EvictionPolicy;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Object;>;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Object;>;)V" },
    { "nextWithId:", "next", "V", 0x1, NULL, "(TT;)V" },
    { "complete", NULL, "V", 0x1, NULL, NULL },
    { "errorWithNSException:", "error", "V", 0x1, NULL, NULL },
    { "acceptWithRxObserver:withRxSubjectsReplaySubject_NodeList_Node:", "accept", "V", 0x1, NULL, "(Lrx/Observer<-TT;>;Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;)V" },
    { "acceptTestWithRxObserver:withRxSubjectsReplaySubject_NodeList_Node:withLong:", "acceptTest", "V", 0x1, NULL, "(Lrx/Observer<-TT;>;Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;J)V" },
    { "head", NULL, "Lrx.subjects.ReplaySubject$NodeList$Node;", 0x1, NULL, "()Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;" },
    { "tail", NULL, "Lrx.subjects.ReplaySubject$NodeList$Node;", 0x1, NULL, "()Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;" },
    { "replayObserverWithRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "replayObserver", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;)V" },
    { "replayObserverFromIndexWithId:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:", "replayObserverFromIndex", "Lrx.subjects.ReplaySubject$NodeList$Node;", 0x1, NULL, "(Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;)Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;" },
    { "replayObserverFromIndexTestWithId:withRxSubjectsSubjectSubscriptionManager_SubjectObserver:withLong:", "replayObserverFromIndexTest", "Lrx.subjects.ReplaySubject$NodeList$Node;", 0x1, NULL, "(Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<-TT;>;J)Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;" },
    { "terminated", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "list_", NULL, 0x10, "Lrx.subjects.ReplaySubject$NodeList;", NULL, "Lrx/subjects/ReplaySubject$NodeList<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "evictionPolicy_", NULL, 0x10, "Lrx.subjects.ReplaySubject$EvictionPolicy;", NULL, NULL, .constantValue.asLong = 0 },
    { "enterTransform_", NULL, 0x10, "Lrx.functions.Func1;", NULL, "Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "leaveTransform_", NULL, 0x10, "Lrx.functions.Func1;", NULL, "Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "nl_", NULL, 0x10, "Lrx.internal.operators.NotificationLite;", NULL, "Lrx/internal/operators/NotificationLite<TT;>;", .constantValue.asLong = 0 },
    { "terminated_", NULL, 0x40, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "tail_", NULL, 0x40, "Lrx.subjects.ReplaySubject$NodeList$Node;", NULL, "Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_BoundedState = { 2, "BoundedState", "rx.subjects", "ReplaySubject", 0x18, 12, methods, 7, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/subjects/ReplaySubject$ReplayState<TT;Lrx/subjects/ReplaySubject$NodeList$Node<Ljava/lang/Object;>;>;" };
  return &_RxSubjectsReplaySubject_BoundedState;
}

@end

void RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(RxSubjectsReplaySubject_BoundedState *self, id<RxSubjectsReplaySubject_EvictionPolicy> evictionPolicy, id<RxFunctionsFunc1> enterTransform, id<RxFunctionsFunc1> leaveTransform) {
  NSObject_init(self);
  self->nl_ = RxInternalOperatorsNotificationLite_instance();
  self->list_ = new_RxSubjectsReplaySubject_NodeList_init();
  (void) JreVolatileStrongAssign(&self->tail_, self->list_->tail_);
  self->evictionPolicy_ = evictionPolicy;
  self->enterTransform_ = enterTransform;
  self->leaveTransform_ = leaveTransform;
}

RxSubjectsReplaySubject_BoundedState *new_RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(id<RxSubjectsReplaySubject_EvictionPolicy> evictionPolicy, id<RxFunctionsFunc1> enterTransform, id<RxFunctionsFunc1> leaveTransform) {
  RxSubjectsReplaySubject_BoundedState *self = [RxSubjectsReplaySubject_BoundedState alloc];
  RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(self, evictionPolicy, enterTransform, leaveTransform);
  return self;
}

RxSubjectsReplaySubject_BoundedState *create_RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(id<RxSubjectsReplaySubject_EvictionPolicy> evictionPolicy, id<RxFunctionsFunc1> enterTransform, id<RxFunctionsFunc1> leaveTransform) {
  return new_RxSubjectsReplaySubject_BoundedState_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxFunctionsFunc1_withRxFunctionsFunc1_(evictionPolicy, enterTransform, leaveTransform);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_BoundedState)

@implementation RxSubjectsReplaySubject_EvictionPolicy

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "testWithId:withLong:", "test", "Z", 0x401, NULL, NULL },
    { "evictWithRxSubjectsReplaySubject_NodeList:", "evict", "V", 0x401, NULL, "(Lrx/subjects/ReplaySubject$NodeList<Ljava/lang/Object;>;)V" },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_EvictionPolicy = { 2, "EvictionPolicy", "rx.subjects", "ReplaySubject", 0x608, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxSubjectsReplaySubject_EvictionPolicy;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_EvictionPolicy)

@implementation RxSubjectsReplaySubject_SizeEvictionPolicy

- (instancetype)initWithInt:(jint)maxSize {
  RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(self, maxSize);
  return self;
}

- (void)evictWithRxSubjectsReplaySubject_NodeList:(RxSubjectsReplaySubject_NodeList *)t1 {
  while ([((RxSubjectsReplaySubject_NodeList *) nil_chk(t1)) size] > maxSize_) {
    (void) [t1 removeFirst];
  }
}

- (jboolean)testWithId:(id)value
              withLong:(jlong)now {
  return true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "SizeEvictionPolicy", NULL, 0x1, NULL, NULL },
    { "evictWithRxSubjectsReplaySubject_NodeList:", "evict", "V", 0x1, NULL, "(Lrx/subjects/ReplaySubject$NodeList<Ljava/lang/Object;>;)V" },
    { "testWithId:withLong:", "test", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxSize_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_SizeEvictionPolicy = { 2, "SizeEvictionPolicy", "rx.subjects", "ReplaySubject", 0x18, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxSubjectsReplaySubject_SizeEvictionPolicy;
}

@end

void RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(RxSubjectsReplaySubject_SizeEvictionPolicy *self, jint maxSize) {
  NSObject_init(self);
  self->maxSize_ = maxSize;
}

RxSubjectsReplaySubject_SizeEvictionPolicy *new_RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(jint maxSize) {
  RxSubjectsReplaySubject_SizeEvictionPolicy *self = [RxSubjectsReplaySubject_SizeEvictionPolicy alloc];
  RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(self, maxSize);
  return self;
}

RxSubjectsReplaySubject_SizeEvictionPolicy *create_RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(jint maxSize) {
  return new_RxSubjectsReplaySubject_SizeEvictionPolicy_initWithInt_(maxSize);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_SizeEvictionPolicy)

@implementation RxSubjectsReplaySubject_TimeEvictionPolicy

- (instancetype)initWithLong:(jlong)maxAgeMillis
             withRxScheduler:(RxScheduler *)scheduler {
  RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_(self, maxAgeMillis, scheduler);
  return self;
}

- (void)evictWithRxSubjectsReplaySubject_NodeList:(RxSubjectsReplaySubject_NodeList *)t1 {
  jlong now = [((RxScheduler *) nil_chk(scheduler_)) now];
  while (![((RxSubjectsReplaySubject_NodeList *) nil_chk(t1)) isEmpty]) {
    RxSubjectsReplaySubject_NodeList_Node *n = JreLoadVolatileId(&((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(t1->head_))->next_);
    if ([self testWithId:((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(n))->value_ withLong:now]) {
      (void) [t1 removeFirst];
    }
    else {
      break;
    }
  }
}

- (jboolean)testWithId:(id)value
              withLong:(jlong)now {
  RxSchedulersTimestamped *ts = (RxSchedulersTimestamped *) cast_chk(value, [RxSchedulersTimestamped class]);
  return [((RxSchedulersTimestamped *) nil_chk(ts)) getTimestampMillis] <= now - maxAgeMillis_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withRxScheduler:", "TimeEvictionPolicy", NULL, 0x1, NULL, NULL },
    { "evictWithRxSubjectsReplaySubject_NodeList:", "evict", "V", 0x1, NULL, "(Lrx/subjects/ReplaySubject$NodeList<Ljava/lang/Object;>;)V" },
    { "testWithId:withLong:", "test", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxAgeMillis_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "scheduler_", NULL, 0x10, "Lrx.Scheduler;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_TimeEvictionPolicy = { 2, "TimeEvictionPolicy", "rx.subjects", "ReplaySubject", 0x18, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxSubjectsReplaySubject_TimeEvictionPolicy;
}

@end

void RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_(RxSubjectsReplaySubject_TimeEvictionPolicy *self, jlong maxAgeMillis, RxScheduler *scheduler) {
  NSObject_init(self);
  self->maxAgeMillis_ = maxAgeMillis;
  self->scheduler_ = scheduler;
}

RxSubjectsReplaySubject_TimeEvictionPolicy *new_RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_(jlong maxAgeMillis, RxScheduler *scheduler) {
  RxSubjectsReplaySubject_TimeEvictionPolicy *self = [RxSubjectsReplaySubject_TimeEvictionPolicy alloc];
  RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_(self, maxAgeMillis, scheduler);
  return self;
}

RxSubjectsReplaySubject_TimeEvictionPolicy *create_RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_(jlong maxAgeMillis, RxScheduler *scheduler) {
  return new_RxSubjectsReplaySubject_TimeEvictionPolicy_initWithLong_withRxScheduler_(maxAgeMillis, scheduler);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_TimeEvictionPolicy)

@implementation RxSubjectsReplaySubject_PairEvictionPolicy

- (instancetype)initWithRxSubjectsReplaySubject_EvictionPolicy:(id<RxSubjectsReplaySubject_EvictionPolicy>)first
                    withRxSubjectsReplaySubject_EvictionPolicy:(id<RxSubjectsReplaySubject_EvictionPolicy>)second {
  RxSubjectsReplaySubject_PairEvictionPolicy_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxSubjectsReplaySubject_EvictionPolicy_(self, first, second);
  return self;
}

- (void)evictWithRxSubjectsReplaySubject_NodeList:(RxSubjectsReplaySubject_NodeList *)t1 {
  [((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(first_)) evictWithRxSubjectsReplaySubject_NodeList:t1];
  [((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(second_)) evictWithRxSubjectsReplaySubject_NodeList:t1];
}

- (jboolean)testWithId:(id)value
              withLong:(jlong)now {
  return [((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(first_)) testWithId:value withLong:now] || [((id<RxSubjectsReplaySubject_EvictionPolicy>) nil_chk(second_)) testWithId:value withLong:now];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubjectsReplaySubject_EvictionPolicy:withRxSubjectsReplaySubject_EvictionPolicy:", "PairEvictionPolicy", NULL, 0x1, NULL, NULL },
    { "evictWithRxSubjectsReplaySubject_NodeList:", "evict", "V", 0x1, NULL, "(Lrx/subjects/ReplaySubject$NodeList<Ljava/lang/Object;>;)V" },
    { "testWithId:withLong:", "test", "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "first_", NULL, 0x10, "Lrx.subjects.ReplaySubject$EvictionPolicy;", NULL, NULL, .constantValue.asLong = 0 },
    { "second_", NULL, 0x10, "Lrx.subjects.ReplaySubject$EvictionPolicy;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_PairEvictionPolicy = { 2, "PairEvictionPolicy", "rx.subjects", "ReplaySubject", 0x18, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxSubjectsReplaySubject_PairEvictionPolicy;
}

@end

void RxSubjectsReplaySubject_PairEvictionPolicy_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxSubjectsReplaySubject_EvictionPolicy_(RxSubjectsReplaySubject_PairEvictionPolicy *self, id<RxSubjectsReplaySubject_EvictionPolicy> first, id<RxSubjectsReplaySubject_EvictionPolicy> second) {
  NSObject_init(self);
  self->first_ = first;
  self->second_ = second;
}

RxSubjectsReplaySubject_PairEvictionPolicy *new_RxSubjectsReplaySubject_PairEvictionPolicy_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxSubjectsReplaySubject_EvictionPolicy_(id<RxSubjectsReplaySubject_EvictionPolicy> first, id<RxSubjectsReplaySubject_EvictionPolicy> second) {
  RxSubjectsReplaySubject_PairEvictionPolicy *self = [RxSubjectsReplaySubject_PairEvictionPolicy alloc];
  RxSubjectsReplaySubject_PairEvictionPolicy_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxSubjectsReplaySubject_EvictionPolicy_(self, first, second);
  return self;
}

RxSubjectsReplaySubject_PairEvictionPolicy *create_RxSubjectsReplaySubject_PairEvictionPolicy_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxSubjectsReplaySubject_EvictionPolicy_(id<RxSubjectsReplaySubject_EvictionPolicy> first, id<RxSubjectsReplaySubject_EvictionPolicy> second) {
  return new_RxSubjectsReplaySubject_PairEvictionPolicy_initWithRxSubjectsReplaySubject_EvictionPolicy_withRxSubjectsReplaySubject_EvictionPolicy_(first, second);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_PairEvictionPolicy)

@implementation RxSubjectsReplaySubject_AddTimestamped

- (instancetype)initWithRxScheduler:(RxScheduler *)scheduler {
  RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(self, scheduler);
  return self;
}

- (id)callWithId:(id)t1 {
  return new_RxSchedulersTimestamped_initWithLong_withId_([((RxScheduler *) nil_chk(scheduler_)) now], t1);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxScheduler:", "AddTimestamped", NULL, 0x1, NULL, NULL },
    { "callWithId:", "call", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "scheduler_", NULL, 0x10, "Lrx.Scheduler;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_AddTimestamped = { 2, "AddTimestamped", "rx.subjects", "ReplaySubject", 0x18, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Object;>;" };
  return &_RxSubjectsReplaySubject_AddTimestamped;
}

@end

void RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(RxSubjectsReplaySubject_AddTimestamped *self, RxScheduler *scheduler) {
  NSObject_init(self);
  self->scheduler_ = scheduler;
}

RxSubjectsReplaySubject_AddTimestamped *new_RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(RxScheduler *scheduler) {
  RxSubjectsReplaySubject_AddTimestamped *self = [RxSubjectsReplaySubject_AddTimestamped alloc];
  RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(self, scheduler);
  return self;
}

RxSubjectsReplaySubject_AddTimestamped *create_RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(RxScheduler *scheduler) {
  return new_RxSubjectsReplaySubject_AddTimestamped_initWithRxScheduler_(scheduler);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_AddTimestamped)

@implementation RxSubjectsReplaySubject_RemoveTimestamped

- (id)callWithId:(id)t1 {
  return [((RxSchedulersTimestamped *) nil_chk(((RxSchedulersTimestamped *) cast_chk(t1, [RxSchedulersTimestamped class])))) getValue];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSubjectsReplaySubject_RemoveTimestamped_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_RemoveTimestamped = { 2, "RemoveTimestamped", "rx.subjects", "ReplaySubject", 0x18, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lrx/functions/Func1<Ljava/lang/Object;Ljava/lang/Object;>;" };
  return &_RxSubjectsReplaySubject_RemoveTimestamped;
}

@end

void RxSubjectsReplaySubject_RemoveTimestamped_init(RxSubjectsReplaySubject_RemoveTimestamped *self) {
  NSObject_init(self);
}

RxSubjectsReplaySubject_RemoveTimestamped *new_RxSubjectsReplaySubject_RemoveTimestamped_init() {
  RxSubjectsReplaySubject_RemoveTimestamped *self = [RxSubjectsReplaySubject_RemoveTimestamped alloc];
  RxSubjectsReplaySubject_RemoveTimestamped_init(self);
  return self;
}

RxSubjectsReplaySubject_RemoveTimestamped *create_RxSubjectsReplaySubject_RemoveTimestamped_init() {
  return new_RxSubjectsReplaySubject_RemoveTimestamped_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_RemoveTimestamped)

@implementation RxSubjectsReplaySubject_DefaultOnAdd

- (instancetype)initWithRxSubjectsReplaySubject_BoundedState:(RxSubjectsReplaySubject_BoundedState *)state {
  RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(self, state);
  return self;
}

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)t1 {
  RxSubjectsReplaySubject_NodeList_Node *l = [state_ replayObserverFromIndexWithId:[((RxSubjectsReplaySubject_BoundedState *) nil_chk(state_)) head] withRxSubjectsSubjectSubscriptionManager_SubjectObserver:t1];
  [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(t1)) indexWithId:l];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubjectsReplaySubject_BoundedState:", "DefaultOnAdd", NULL, 0x1, NULL, "(Lrx/subjects/ReplaySubject$BoundedState<TT;>;)V" },
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", NULL, 0x10, "Lrx.subjects.ReplaySubject$BoundedState;", NULL, "Lrx/subjects/ReplaySubject$BoundedState<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_DefaultOnAdd = { 2, "DefaultOnAdd", "rx.subjects", "ReplaySubject", 0x18, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;" };
  return &_RxSubjectsReplaySubject_DefaultOnAdd;
}

@end

void RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_DefaultOnAdd *self, RxSubjectsReplaySubject_BoundedState *state) {
  NSObject_init(self);
  self->state_ = state;
}

RxSubjectsReplaySubject_DefaultOnAdd *new_RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_BoundedState *state) {
  RxSubjectsReplaySubject_DefaultOnAdd *self = [RxSubjectsReplaySubject_DefaultOnAdd alloc];
  RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(self, state);
  return self;
}

RxSubjectsReplaySubject_DefaultOnAdd *create_RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_BoundedState *state) {
  return new_RxSubjectsReplaySubject_DefaultOnAdd_initWithRxSubjectsReplaySubject_BoundedState_(state);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_DefaultOnAdd)

@implementation RxSubjectsReplaySubject_TimedOnAdd

- (instancetype)initWithRxSubjectsReplaySubject_BoundedState:(RxSubjectsReplaySubject_BoundedState *)state
                                             withRxScheduler:(RxScheduler *)scheduler {
  RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(self, state, scheduler);
  return self;
}

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)t1 {
  RxSubjectsReplaySubject_NodeList_Node *l;
  if (!JreLoadVolatileBoolean(&((RxSubjectsReplaySubject_BoundedState *) nil_chk(state_))->terminated_)) {
    l = [state_ replayObserverFromIndexTestWithId:[state_ head] withRxSubjectsSubjectSubscriptionManager_SubjectObserver:t1 withLong:[((RxScheduler *) nil_chk(scheduler_)) now]];
  }
  else {
    l = [state_ replayObserverFromIndexWithId:[state_ head] withRxSubjectsSubjectSubscriptionManager_SubjectObserver:t1];
  }
  [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(t1)) indexWithId:l];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubjectsReplaySubject_BoundedState:withRxScheduler:", "TimedOnAdd", NULL, 0x1, NULL, "(Lrx/subjects/ReplaySubject$BoundedState<TT;>;Lrx/Scheduler;)V" },
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", NULL, 0x10, "Lrx.subjects.ReplaySubject$BoundedState;", NULL, "Lrx/subjects/ReplaySubject$BoundedState<TT;>;", .constantValue.asLong = 0 },
    { "scheduler_", NULL, 0x10, "Lrx.Scheduler;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_TimedOnAdd = { 2, "TimedOnAdd", "rx.subjects", "ReplaySubject", 0x18, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;" };
  return &_RxSubjectsReplaySubject_TimedOnAdd;
}

@end

void RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(RxSubjectsReplaySubject_TimedOnAdd *self, RxSubjectsReplaySubject_BoundedState *state, RxScheduler *scheduler) {
  NSObject_init(self);
  self->state_ = state;
  self->scheduler_ = scheduler;
}

RxSubjectsReplaySubject_TimedOnAdd *new_RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(RxSubjectsReplaySubject_BoundedState *state, RxScheduler *scheduler) {
  RxSubjectsReplaySubject_TimedOnAdd *self = [RxSubjectsReplaySubject_TimedOnAdd alloc];
  RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(self, state, scheduler);
  return self;
}

RxSubjectsReplaySubject_TimedOnAdd *create_RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(RxSubjectsReplaySubject_BoundedState *state, RxScheduler *scheduler) {
  return new_RxSubjectsReplaySubject_TimedOnAdd_initWithRxSubjectsReplaySubject_BoundedState_withRxScheduler_(state, scheduler);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_TimedOnAdd)

@implementation RxSubjectsReplaySubject_NodeList

- (void)addLastWithId:(id)value {
  RxSubjectsReplaySubject_NodeList_Node *t = tail_;
  RxSubjectsReplaySubject_NodeList_Node *t2 = new_RxSubjectsReplaySubject_NodeList_Node_initWithId_(value);
  (void) JreVolatileStrongAssign(&((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(t))->next_, t2);
  tail_ = t2;
  size_++;
}

- (id)removeFirst {
  if (JreLoadVolatileId(&((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(head_))->next_) == nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Empty!");
  }
  RxSubjectsReplaySubject_NodeList_Node *t = JreLoadVolatileId(&head_->next_);
  (void) JreVolatileStrongAssign(&head_->next_, JreLoadVolatileId(&((RxSubjectsReplaySubject_NodeList_Node *) nil_chk(t))->next_));
  if (JreLoadVolatileId(&head_->next_) == nil) {
    tail_ = head_;
  }
  size_--;
  return ((id) t->value_);
}

- (jboolean)isEmpty {
  return size_ == 0;
}

- (jint)size {
  return size_;
}

- (void)clear {
  tail_ = head_;
  size_ = 0;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSubjectsReplaySubject_NodeList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addLastWithId:", "addLast", "V", 0x1, NULL, "(TT;)V" },
    { "removeFirst", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "isEmpty", NULL, "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "head_", NULL, 0x10, "Lrx.subjects.ReplaySubject$NodeList$Node;", NULL, "Lrx/subjects/ReplaySubject$NodeList$Node<TT;>;", .constantValue.asLong = 0 },
    { "tail_", NULL, 0x0, "Lrx.subjects.ReplaySubject$NodeList$Node;", NULL, "Lrx/subjects/ReplaySubject$NodeList$Node<TT;>;", .constantValue.asLong = 0 },
    { "size_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.subjects.ReplaySubject$NodeList$Node;"};
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_NodeList = { 2, "NodeList", "rx.subjects", "ReplaySubject", 0x18, 6, methods, 3, fields, 0, NULL, 1, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_RxSubjectsReplaySubject_NodeList;
}

@end

void RxSubjectsReplaySubject_NodeList_init(RxSubjectsReplaySubject_NodeList *self) {
  NSObject_init(self);
  self->head_ = new_RxSubjectsReplaySubject_NodeList_Node_initWithId_(nil);
  self->tail_ = self->head_;
}

RxSubjectsReplaySubject_NodeList *new_RxSubjectsReplaySubject_NodeList_init() {
  RxSubjectsReplaySubject_NodeList *self = [RxSubjectsReplaySubject_NodeList alloc];
  RxSubjectsReplaySubject_NodeList_init(self);
  return self;
}

RxSubjectsReplaySubject_NodeList *create_RxSubjectsReplaySubject_NodeList_init() {
  return new_RxSubjectsReplaySubject_NodeList_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_NodeList)

@implementation RxSubjectsReplaySubject_NodeList_Node

- (instancetype)initWithId:(id)value {
  RxSubjectsReplaySubject_NodeList_Node_initWithId_(self, value);
  return self;
}

- (void)dealloc {
  JreReleaseVolatile(&next_);
}

- (void)__javaClone:(RxSubjectsReplaySubject_NodeList_Node *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&next_, &original->next_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:", "Node", NULL, 0x0, NULL, "(TT;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "value_", NULL, 0x10, "TT;", NULL, "TT;", .constantValue.asLong = 0 },
    { "next_", NULL, 0x40, "Lrx.subjects.ReplaySubject$NodeList$Node;", NULL, "Lrx/subjects/ReplaySubject$NodeList$Node<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_NodeList_Node = { 2, "Node", "rx.subjects", "ReplaySubject$NodeList", 0x18, 1, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_RxSubjectsReplaySubject_NodeList_Node;
}

@end

void RxSubjectsReplaySubject_NodeList_Node_initWithId_(RxSubjectsReplaySubject_NodeList_Node *self, id value) {
  NSObject_init(self);
  self->value_ = value;
}

RxSubjectsReplaySubject_NodeList_Node *new_RxSubjectsReplaySubject_NodeList_Node_initWithId_(id value) {
  RxSubjectsReplaySubject_NodeList_Node *self = [RxSubjectsReplaySubject_NodeList_Node alloc];
  RxSubjectsReplaySubject_NodeList_Node_initWithId_(self, value);
  return self;
}

RxSubjectsReplaySubject_NodeList_Node *create_RxSubjectsReplaySubject_NodeList_Node_initWithId_(id value) {
  return new_RxSubjectsReplaySubject_NodeList_Node_initWithId_(value);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_NodeList_Node)

@implementation RxSubjectsReplaySubject_EmptyEvictionPolicy

- (jboolean)testWithId:(id)value
              withLong:(jlong)now {
  return true;
}

- (void)evictWithRxSubjectsReplaySubject_NodeList:(RxSubjectsReplaySubject_NodeList *)list {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxSubjectsReplaySubject_EmptyEvictionPolicy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "testWithId:withLong:", "test", "Z", 0x1, NULL, NULL },
    { "evictWithRxSubjectsReplaySubject_NodeList:", "evict", "V", 0x1, NULL, "(Lrx/subjects/ReplaySubject$NodeList<Ljava/lang/Object;>;)V" },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_EmptyEvictionPolicy = { 2, "EmptyEvictionPolicy", "rx.subjects", "ReplaySubject", 0x18, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxSubjectsReplaySubject_EmptyEvictionPolicy;
}

@end

void RxSubjectsReplaySubject_EmptyEvictionPolicy_init(RxSubjectsReplaySubject_EmptyEvictionPolicy *self) {
  NSObject_init(self);
}

RxSubjectsReplaySubject_EmptyEvictionPolicy *new_RxSubjectsReplaySubject_EmptyEvictionPolicy_init() {
  RxSubjectsReplaySubject_EmptyEvictionPolicy *self = [RxSubjectsReplaySubject_EmptyEvictionPolicy alloc];
  RxSubjectsReplaySubject_EmptyEvictionPolicy_init(self);
  return self;
}

RxSubjectsReplaySubject_EmptyEvictionPolicy *create_RxSubjectsReplaySubject_EmptyEvictionPolicy_init() {
  return new_RxSubjectsReplaySubject_EmptyEvictionPolicy_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_EmptyEvictionPolicy)

@implementation RxSubjectsReplaySubject_$1

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  jint lastIndex = [((JavaLangInteger *) nil_chk([((RxSubjectsReplaySubject_UnboundedReplayState *) nil_chk(val$state_)) replayObserverFromIndexWithId:JavaLangInteger_valueOfWithInt_(0) withRxSubjectsSubjectSubscriptionManager_SubjectObserver:o])) intValue];
  [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o)) indexWithId:JavaLangInteger_valueOfWithInt_(lastIndex)];
}

- (instancetype)initWithRxSubjectsReplaySubject_UnboundedReplayState:(RxSubjectsReplaySubject_UnboundedReplayState *)capture$0 {
  RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V" },
    { "initWithRxSubjectsReplaySubject_UnboundedReplayState:", "", NULL, 0x0, NULL, "(Lrx/subjects/ReplaySubject$UnboundedReplayState<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$state_", NULL, 0x1012, "Lrx.subjects.ReplaySubject$UnboundedReplayState;", NULL, "Lrx/subjects/ReplaySubject$UnboundedReplayState<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxSubjectsReplaySubject", "createWithInt:" };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_$1 = { 2, "", "rx.subjects", "ReplaySubject", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;" };
  return &_RxSubjectsReplaySubject_$1;
}

@end

void RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_$1 *self, RxSubjectsReplaySubject_UnboundedReplayState *capture$0) {
  self->val$state_ = capture$0;
  NSObject_init(self);
}

RxSubjectsReplaySubject_$1 *new_RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0) {
  RxSubjectsReplaySubject_$1 *self = [RxSubjectsReplaySubject_$1 alloc];
  RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(self, capture$0);
  return self;
}

RxSubjectsReplaySubject_$1 *create_RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0) {
  return new_RxSubjectsReplaySubject_$1_initWithRxSubjectsReplaySubject_UnboundedReplayState_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_$1)

@implementation RxSubjectsReplaySubject_$2

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  JavaLangInteger *idx = [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o)) index];
  if (idx == nil) {
    idx = JavaLangInteger_valueOfWithInt_(0);
  }
  (void) [((RxSubjectsReplaySubject_UnboundedReplayState *) nil_chk(val$state_)) replayObserverFromIndexWithId:idx withRxSubjectsSubjectSubscriptionManager_SubjectObserver:o];
}

- (instancetype)initWithRxSubjectsReplaySubject_UnboundedReplayState:(RxSubjectsReplaySubject_UnboundedReplayState *)capture$0 {
  RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V" },
    { "initWithRxSubjectsReplaySubject_UnboundedReplayState:", "", NULL, 0x0, NULL, "(Lrx/subjects/ReplaySubject$UnboundedReplayState<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$state_", NULL, 0x1012, "Lrx.subjects.ReplaySubject$UnboundedReplayState;", NULL, "Lrx/subjects/ReplaySubject$UnboundedReplayState<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxSubjectsReplaySubject", "createWithInt:" };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_$2 = { 2, "", "rx.subjects", "ReplaySubject", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;" };
  return &_RxSubjectsReplaySubject_$2;
}

@end

void RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_$2 *self, RxSubjectsReplaySubject_UnboundedReplayState *capture$0) {
  self->val$state_ = capture$0;
  NSObject_init(self);
}

RxSubjectsReplaySubject_$2 *new_RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0) {
  RxSubjectsReplaySubject_$2 *self = [RxSubjectsReplaySubject_$2 alloc];
  RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(self, capture$0);
  return self;
}

RxSubjectsReplaySubject_$2 *create_RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(RxSubjectsReplaySubject_UnboundedReplayState *capture$0) {
  return new_RxSubjectsReplaySubject_$2_initWithRxSubjectsReplaySubject_UnboundedReplayState_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_$2)

@implementation RxSubjectsReplaySubject_$3

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)t1 {
  RxSubjectsReplaySubject_NodeList_Node *l = [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(t1)) index];
  if (l == nil) {
    l = [((RxSubjectsReplaySubject_BoundedState *) nil_chk(val$state_)) head];
  }
  (void) [((RxSubjectsReplaySubject_BoundedState *) nil_chk(val$state_)) replayObserverFromIndexWithId:l withRxSubjectsSubjectSubscriptionManager_SubjectObserver:t1];
}

- (instancetype)initWithRxSubjectsReplaySubject_BoundedState:(RxSubjectsReplaySubject_BoundedState *)capture$0 {
  RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V" },
    { "initWithRxSubjectsReplaySubject_BoundedState:", "", NULL, 0x0, NULL, "(Lrx/subjects/ReplaySubject$BoundedState<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$state_", NULL, 0x1012, "Lrx.subjects.ReplaySubject$BoundedState;", NULL, "Lrx/subjects/ReplaySubject$BoundedState<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxSubjectsReplaySubject", "createWithStateWithRxSubjectsReplaySubject_BoundedState:withRxFunctionsAction1:" };
  static const J2ObjcClassInfo _RxSubjectsReplaySubject_$3 = { 2, "", "rx.subjects", "ReplaySubject", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;" };
  return &_RxSubjectsReplaySubject_$3;
}

@end

void RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_$3 *self, RxSubjectsReplaySubject_BoundedState *capture$0) {
  self->val$state_ = capture$0;
  NSObject_init(self);
}

RxSubjectsReplaySubject_$3 *new_RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_BoundedState *capture$0) {
  RxSubjectsReplaySubject_$3 *self = [RxSubjectsReplaySubject_$3 alloc];
  RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(self, capture$0);
  return self;
}

RxSubjectsReplaySubject_$3 *create_RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(RxSubjectsReplaySubject_BoundedState *capture$0) {
  return new_RxSubjectsReplaySubject_$3_initWithRxSubjectsReplaySubject_BoundedState_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsReplaySubject_$3)
