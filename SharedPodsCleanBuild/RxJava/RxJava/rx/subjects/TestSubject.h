//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/subjects/TestSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxSubjectsTestSubject_INCLUDE_ALL")
#ifdef RxSubjectsTestSubject_RESTRICT
#define RxSubjectsTestSubject_INCLUDE_ALL 0
#else
#define RxSubjectsTestSubject_INCLUDE_ALL 1
#endif
#undef RxSubjectsTestSubject_RESTRICT

#if !defined (RxSubjectsTestSubject_) && (RxSubjectsTestSubject_INCLUDE_ALL || defined(RxSubjectsTestSubject_INCLUDE))
#define RxSubjectsTestSubject_

#define RxSubjectsSubject_RESTRICT 1
#define RxSubjectsSubject_INCLUDE 1
#include "rx/subjects/Subject.h"

@class RxSchedulersTestScheduler;
@class RxSubjectsSubjectSubscriptionManager;
@protocol RxObservable_OnSubscribe;

@interface RxSubjectsTestSubject : RxSubjectsSubject

#pragma mark Public

+ (RxSubjectsTestSubject *)createWithRxSchedulersTestScheduler:(RxSchedulersTestScheduler *)scheduler;

- (jboolean)hasObservers;

- (void)onCompleted;

- (void)onCompletedWithLong:(jlong)timeInMilliseconds;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onErrorWithNSException:(NSException *)e
                      withLong:(jlong)timeInMilliseconds;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)v;

- (void)onNextWithId:(id)v
            withLong:(jlong)timeInMilliseconds;

#pragma mark Protected

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe
        withRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)state
                   withRxSchedulersTestScheduler:(RxSchedulersTestScheduler *)scheduler;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsTestSubject)

FOUNDATION_EXPORT RxSubjectsTestSubject *RxSubjectsTestSubject_createWithRxSchedulersTestScheduler_(RxSchedulersTestScheduler *scheduler);

FOUNDATION_EXPORT void RxSubjectsTestSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSchedulersTestScheduler_(RxSubjectsTestSubject *self, id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state, RxSchedulersTestScheduler *scheduler);

FOUNDATION_EXPORT RxSubjectsTestSubject *new_RxSubjectsTestSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSchedulersTestScheduler_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state, RxSchedulersTestScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSubjectsTestSubject *create_RxSubjectsTestSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_withRxSchedulersTestScheduler_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state, RxSchedulersTestScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsTestSubject)

#endif

#pragma pop_macro("RxSubjectsTestSubject_INCLUDE_ALL")
