//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/subjects/PublishSubject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxSubjectsPublishSubject_INCLUDE_ALL")
#ifdef RxSubjectsPublishSubject_RESTRICT
#define RxSubjectsPublishSubject_INCLUDE_ALL 0
#else
#define RxSubjectsPublishSubject_INCLUDE_ALL 1
#endif
#undef RxSubjectsPublishSubject_RESTRICT

#if !defined (RxSubjectsPublishSubject_) && (RxSubjectsPublishSubject_INCLUDE_ALL || defined(RxSubjectsPublishSubject_INCLUDE))
#define RxSubjectsPublishSubject_

#define RxSubjectsSubject_RESTRICT 1
#define RxSubjectsSubject_INCLUDE 1
#include "rx/subjects/Subject.h"

@class RxSubjectsSubjectSubscriptionManager;
@protocol RxObservable_OnSubscribe;

@interface RxSubjectsPublishSubject : RxSubjectsSubject {
 @public
  RxSubjectsSubjectSubscriptionManager *state_;
}

#pragma mark Public

+ (RxSubjectsPublishSubject *)create;

- (jboolean)hasObservers;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)v;

#pragma mark Protected

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe
        withRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)state;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsPublishSubject)

J2OBJC_FIELD_SETTER(RxSubjectsPublishSubject, state_, RxSubjectsSubjectSubscriptionManager *)

FOUNDATION_EXPORT RxSubjectsPublishSubject *RxSubjectsPublishSubject_create();

FOUNDATION_EXPORT void RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(RxSubjectsPublishSubject *self, id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state);

FOUNDATION_EXPORT RxSubjectsPublishSubject *new_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSubjectsPublishSubject *create_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsPublishSubject)

#endif

#pragma pop_macro("RxSubjectsPublishSubject_INCLUDE_ALL")
