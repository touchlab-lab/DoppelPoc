//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/subjects/PublishSubject.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "rx/Observable.h"
#include "rx/exceptions/CompositeException.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/functions/Action1.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/subjects/PublishSubject.h"
#include "rx/subjects/Subject.h"
#include "rx/subjects/SubjectSubscriptionManager.h"

@interface RxSubjectsPublishSubject () {
 @public
  RxInternalOperatorsNotificationLite *nl_;
}

@end

J2OBJC_FIELD_SETTER(RxSubjectsPublishSubject, nl_, RxInternalOperatorsNotificationLite *)

@interface RxSubjectsPublishSubject_$1 : NSObject < RxFunctionsAction1 > {
 @public
  RxSubjectsSubjectSubscriptionManager *val$state_;
}

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o;

- (instancetype)initWithRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsPublishSubject_$1)

J2OBJC_FIELD_SETTER(RxSubjectsPublishSubject_$1, val$state_, RxSubjectsSubjectSubscriptionManager *)

__attribute__((unused)) static void RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsPublishSubject_$1 *self, RxSubjectsSubjectSubscriptionManager *capture$0);

__attribute__((unused)) static RxSubjectsPublishSubject_$1 *new_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxSubjectsPublishSubject_$1 *create_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsPublishSubject_$1)

@implementation RxSubjectsPublishSubject

+ (RxSubjectsPublishSubject *)create {
  return RxSubjectsPublishSubject_create();
}

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe
        withRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)state {
  RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(self, onSubscribe, state);
  return self;
}

- (void)onCompleted {
  if (((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_))->active_) {
    id n = [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) completed];
    {
      IOSObjectArray *a__ = [state_ terminateWithId:n];
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxSubjectsSubjectSubscriptionManager_SubjectObserver *bo = *b__++;
        [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(bo)) emitNextWithId:n withRxInternalOperatorsNotificationLite:state_->nl_];
      }
    }
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_))->active_) {
    id n = [((RxInternalOperatorsNotificationLite *) nil_chk(nl_)) errorWithNSException:e];
    id<JavaUtilList> errors = nil;
    {
      IOSObjectArray *a__ = [state_ terminateWithId:n];
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        RxSubjectsSubjectSubscriptionManager_SubjectObserver *bo = *b__++;
        @try {
          [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(bo)) emitNextWithId:n withRxInternalOperatorsNotificationLite:state_->nl_];
        }
        @catch (NSException *e2) {
          if (errors == nil) {
            errors = new_JavaUtilArrayList_init();
          }
          [((id<JavaUtilList>) nil_chk(errors)) addWithId:e2];
        }
      }
    }
    if (errors != nil) {
      if ([errors size] == 1) {
        (void) RxExceptionsExceptions_propagateWithNSException_([errors getWithInt:0]);
      }
      else {
        @throw new_RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(@"Errors while emitting PublishSubject.onError", errors);
      }
    }
  }
}

- (void)onNextWithId:(id)v {
  {
    IOSObjectArray *a__ = [((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_)) observers];
    RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    RxSubjectsSubjectSubscriptionManager_SubjectObserver * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      RxSubjectsSubjectSubscriptionManager_SubjectObserver *bo = *b__++;
      [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(bo)) onNextWithId:v];
    }
  }
}

- (jboolean)hasObservers {
  return ((IOSObjectArray *) nil_chk([((RxSubjectsSubjectSubscriptionManager *) nil_chk(state_)) observers]))->size_ > 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", NULL, "Lrx.subjects.PublishSubject;", 0x9, NULL, "<T:Ljava/lang/Object;>()Lrx/subjects/PublishSubject<TT;>;" },
    { "initWithRxObservable_OnSubscribe:withRxSubjectsSubjectSubscriptionManager:", "PublishSubject", NULL, 0x4, NULL, "(Lrx/Observable$OnSubscribe<TT;>;Lrx/subjects/SubjectSubscriptionManager<TT;>;)V" },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "hasObservers", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", NULL, 0x10, "Lrx.subjects.SubjectSubscriptionManager;", NULL, "Lrx/subjects/SubjectSubscriptionManager<TT;>;", .constantValue.asLong = 0 },
    { "nl_", NULL, 0x12, "Lrx.internal.operators.NotificationLite;", NULL, "Lrx/internal/operators/NotificationLite<TT;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;", "TT;"};
  static const J2ObjcClassInfo _RxSubjectsPublishSubject = { 2, "PublishSubject", "rx.subjects", NULL, 0x11, 6, methods, 2, fields, 2, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/subjects/Subject<TT;TT;>;" };
  return &_RxSubjectsPublishSubject;
}

@end

RxSubjectsPublishSubject *RxSubjectsPublishSubject_create() {
  RxSubjectsPublishSubject_initialize();
  RxSubjectsSubjectSubscriptionManager *state = new_RxSubjectsSubjectSubscriptionManager_init();
  state->onTerminated_ = new_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(state);
  return new_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(state, state);
}

void RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(RxSubjectsPublishSubject *self, id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state) {
  RxSubjectsSubject_initWithRxObservable_OnSubscribe_(self, onSubscribe);
  self->nl_ = RxInternalOperatorsNotificationLite_instance();
  self->state_ = state;
}

RxSubjectsPublishSubject *new_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state) {
  RxSubjectsPublishSubject *self = [RxSubjectsPublishSubject alloc];
  RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(self, onSubscribe, state);
  return self;
}

RxSubjectsPublishSubject *create_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(id<RxObservable_OnSubscribe> onSubscribe, RxSubjectsSubjectSubscriptionManager *state) {
  return new_RxSubjectsPublishSubject_initWithRxObservable_OnSubscribe_withRxSubjectsSubjectSubscriptionManager_(onSubscribe, state);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsPublishSubject)

@implementation RxSubjectsPublishSubject_$1

- (void)callWithId:(RxSubjectsSubjectSubscriptionManager_SubjectObserver *)o {
  [((RxSubjectsSubjectSubscriptionManager_SubjectObserver *) nil_chk(o)) emitFirstWithId:[((RxSubjectsSubjectSubscriptionManager *) nil_chk(val$state_)) get] withRxInternalOperatorsNotificationLite:val$state_->nl_];
}

- (instancetype)initWithRxSubjectsSubjectSubscriptionManager:(RxSubjectsSubjectSubscriptionManager *)capture$0 {
  RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;)V" },
    { "initWithRxSubjectsSubjectSubscriptionManager:", "", NULL, 0x0, NULL, "(Lrx/subjects/SubjectSubscriptionManager<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$state_", NULL, 0x1012, "Lrx.subjects.SubjectSubscriptionManager;", NULL, "Lrx/subjects/SubjectSubscriptionManager<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxSubjectsPublishSubject", "create" };
  static const J2ObjcClassInfo _RxSubjectsPublishSubject_$1 = { 2, "", "rx.subjects", "PublishSubject", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/functions/Action1<Lrx/subjects/SubjectSubscriptionManager$SubjectObserver<TT;>;>;" };
  return &_RxSubjectsPublishSubject_$1;
}

@end

void RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsPublishSubject_$1 *self, RxSubjectsSubjectSubscriptionManager *capture$0) {
  self->val$state_ = capture$0;
  NSObject_init(self);
}

RxSubjectsPublishSubject_$1 *new_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0) {
  RxSubjectsPublishSubject_$1 *self = [RxSubjectsPublishSubject_$1 alloc];
  RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(self, capture$0);
  return self;
}

RxSubjectsPublishSubject_$1 *create_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(RxSubjectsSubjectSubscriptionManager *capture$0) {
  return new_RxSubjectsPublishSubject_$1_initWithRxSubjectsSubjectSubscriptionManager_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxSubjectsPublishSubject_$1)
