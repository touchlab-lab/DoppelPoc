//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/observables/ConnectableObservable.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "rx/Observable.h"
#include "rx/Subscription.h"
#include "rx/functions/Action1.h"
#include "rx/internal/operators/OnSubscribeRefCount.h"
#include "rx/observables/ConnectableObservable.h"

@interface RxObservablesConnectableObservable_$1 : NSObject < RxFunctionsAction1 > {
 @public
  IOSObjectArray *val$out_;
}

- (void)callWithId:(id<RxSubscription>)t1;

- (instancetype)initWithRxSubscriptionArray:(IOSObjectArray *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObservablesConnectableObservable_$1)

J2OBJC_FIELD_SETTER(RxObservablesConnectableObservable_$1, val$out_, IOSObjectArray *)

__attribute__((unused)) static void RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(RxObservablesConnectableObservable_$1 *self, IOSObjectArray *capture$0);

__attribute__((unused)) static RxObservablesConnectableObservable_$1 *new_RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(IOSObjectArray *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObservablesConnectableObservable_$1 *create_RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(IOSObjectArray *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxObservablesConnectableObservable_$1)

@implementation RxObservablesConnectableObservable

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe {
  RxObservablesConnectableObservable_initWithRxObservable_OnSubscribe_(self, onSubscribe);
  return self;
}

- (id<RxSubscription>)connect {
  IOSObjectArray *out = [IOSObjectArray newArrayWithLength:1 type:RxSubscription_class_()];
  [self connectWithRxFunctionsAction1:new_RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(out)];
  return IOSObjectArray_Get(out, 0);
}

- (void)connectWithRxFunctionsAction1:(id<RxFunctionsAction1>)connection {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (RxObservable *)refCount {
  return RxObservable_createWithRxObservable_OnSubscribe_(new_RxInternalOperatorsOnSubscribeRefCount_initWithRxObservablesConnectableObservable_(self));
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObservable_OnSubscribe:", "ConnectableObservable", NULL, 0x4, NULL, "(Lrx/Observable$OnSubscribe<TT;>;)V" },
    { "connect", NULL, "Lrx.Subscription;", 0x11, NULL, NULL },
    { "connectWithRxFunctionsAction1:", "connect", "V", 0x401, NULL, "(Lrx/functions/Action1<-Lrx/Subscription;>;)V" },
    { "refCount", NULL, "Lrx.Observable;", 0x1, NULL, "()Lrx/Observable<TT;>;" },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _RxObservablesConnectableObservable = { 2, "ConnectableObservable", "rx.observables", NULL, 0x401, 4, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/Observable<TT;>;" };
  return &_RxObservablesConnectableObservable;
}

@end

void RxObservablesConnectableObservable_initWithRxObservable_OnSubscribe_(RxObservablesConnectableObservable *self, id<RxObservable_OnSubscribe> onSubscribe) {
  RxObservable_initWithRxObservable_OnSubscribe_(self, onSubscribe);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesConnectableObservable)

@implementation RxObservablesConnectableObservable_$1

- (void)callWithId:(id<RxSubscription>)t1 {
  (void) IOSObjectArray_Set(nil_chk(val$out_), 0, t1);
}

- (instancetype)initWithRxSubscriptionArray:(IOSObjectArray *)capture$0 {
  RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, NULL },
    { "initWithRxSubscriptionArray:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$out_", NULL, 0x1012, "[Lrx.Subscription;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxObservablesConnectableObservable", "connect" };
  static const J2ObjcClassInfo _RxObservablesConnectableObservable_$1 = { 2, "", "rx.observables", "ConnectableObservable", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/functions/Action1<Lrx/Subscription;>;" };
  return &_RxObservablesConnectableObservable_$1;
}

@end

void RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(RxObservablesConnectableObservable_$1 *self, IOSObjectArray *capture$0) {
  self->val$out_ = capture$0;
  NSObject_init(self);
}

RxObservablesConnectableObservable_$1 *new_RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(IOSObjectArray *capture$0) {
  RxObservablesConnectableObservable_$1 *self = [RxObservablesConnectableObservable_$1 alloc];
  RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(self, capture$0);
  return self;
}

RxObservablesConnectableObservable_$1 *create_RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(IOSObjectArray *capture$0) {
  return new_RxObservablesConnectableObservable_$1_initWithRxSubscriptionArray_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObservablesConnectableObservable_$1)
