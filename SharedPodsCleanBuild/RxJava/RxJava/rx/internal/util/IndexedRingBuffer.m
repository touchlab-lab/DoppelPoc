//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/util/IndexedRingBuffer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"
#include "java/util/concurrent/atomic/AtomicIntegerArray.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "java/util/concurrent/atomic/AtomicReferenceArray.h"
#include "rx/functions/Func1.h"
#include "rx/internal/util/IndexedRingBuffer.h"
#include "rx/internal/util/ObjectPool.h"
#include "rx/internal/util/PlatformDependent.h"

@class RxInternalUtilIndexedRingBuffer_ElementSection;
@class RxInternalUtilIndexedRingBuffer_IndexSection;

@interface RxInternalUtilIndexedRingBuffer () {
 @public
  RxInternalUtilIndexedRingBuffer_ElementSection *elements_;
  RxInternalUtilIndexedRingBuffer_IndexSection *removed_;
}

- (instancetype)init;

- (RxInternalUtilIndexedRingBuffer_IndexSection *)getIndexSectionWithInt:(jint)index;

- (RxInternalUtilIndexedRingBuffer_ElementSection *)getElementSectionWithInt:(jint)index;

- (jint)getIndexForAdd;

- (jint)getIndexFromPreviouslyRemoved;

- (void)pushRemovedIndexWithInt:(jint)elementIndex;

- (jint)forEachWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)action
                            withInt:(jint)startIndex
                            withInt:(jint)endIndex;

@end

J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer, elements_, RxInternalUtilIndexedRingBuffer_ElementSection *)
J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer, removed_, RxInternalUtilIndexedRingBuffer_IndexSection *)

inline RxInternalUtilObjectPool *RxInternalUtilIndexedRingBuffer_get_POOL();
static RxInternalUtilObjectPool *RxInternalUtilIndexedRingBuffer_POOL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalUtilIndexedRingBuffer, POOL, RxInternalUtilObjectPool *)

__attribute__((unused)) static void RxInternalUtilIndexedRingBuffer_init(RxInternalUtilIndexedRingBuffer *self);

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer *new_RxInternalUtilIndexedRingBuffer_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer *create_RxInternalUtilIndexedRingBuffer_init();

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_IndexSection *RxInternalUtilIndexedRingBuffer_getIndexSectionWithInt_(RxInternalUtilIndexedRingBuffer *self, jint index);

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_ElementSection *RxInternalUtilIndexedRingBuffer_getElementSectionWithInt_(RxInternalUtilIndexedRingBuffer *self, jint index);

__attribute__((unused)) static jint RxInternalUtilIndexedRingBuffer_getIndexForAdd(RxInternalUtilIndexedRingBuffer *self);

__attribute__((unused)) static jint RxInternalUtilIndexedRingBuffer_getIndexFromPreviouslyRemoved(RxInternalUtilIndexedRingBuffer *self);

__attribute__((unused)) static void RxInternalUtilIndexedRingBuffer_pushRemovedIndexWithInt_(RxInternalUtilIndexedRingBuffer *self, jint elementIndex);

__attribute__((unused)) static jint RxInternalUtilIndexedRingBuffer_forEachWithRxFunctionsFunc1_withInt_withInt_(RxInternalUtilIndexedRingBuffer *self, id<RxFunctionsFunc1> action, jint startIndex, jint endIndex);

@interface RxInternalUtilIndexedRingBuffer_ElementSection : NSObject {
 @public
  JavaUtilConcurrentAtomicAtomicReferenceArray *array_;
  JavaUtilConcurrentAtomicAtomicReference *next_;
}

- (RxInternalUtilIndexedRingBuffer_ElementSection *)getNext;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilIndexedRingBuffer_ElementSection)

J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer_ElementSection, array_, JavaUtilConcurrentAtomicAtomicReferenceArray *)
J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer_ElementSection, next_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalUtilIndexedRingBuffer_ElementSection_init(RxInternalUtilIndexedRingBuffer_ElementSection *self);

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_ElementSection *new_RxInternalUtilIndexedRingBuffer_ElementSection_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_ElementSection *create_RxInternalUtilIndexedRingBuffer_ElementSection_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilIndexedRingBuffer_ElementSection)

@interface RxInternalUtilIndexedRingBuffer_IndexSection : NSObject {
 @public
  JavaUtilConcurrentAtomicAtomicIntegerArray *unsafeArray_;
  JavaUtilConcurrentAtomicAtomicReference *_next_;
}

- (jint)getAndSetWithInt:(jint)expected
                 withInt:(jint)newValue;

- (void)setWithInt:(jint)i
           withInt:(jint)elementIndex;

- (RxInternalUtilIndexedRingBuffer_IndexSection *)getNext;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilIndexedRingBuffer_IndexSection)

J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer_IndexSection, unsafeArray_, JavaUtilConcurrentAtomicAtomicIntegerArray *)
J2OBJC_FIELD_SETTER(RxInternalUtilIndexedRingBuffer_IndexSection, _next_, JavaUtilConcurrentAtomicAtomicReference *)

__attribute__((unused)) static void RxInternalUtilIndexedRingBuffer_IndexSection_init(RxInternalUtilIndexedRingBuffer_IndexSection *self);

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_IndexSection *new_RxInternalUtilIndexedRingBuffer_IndexSection_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_IndexSection *create_RxInternalUtilIndexedRingBuffer_IndexSection_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilIndexedRingBuffer_IndexSection)

@interface RxInternalUtilIndexedRingBuffer_$1 : RxInternalUtilObjectPool

- (RxInternalUtilIndexedRingBuffer *)createObject;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilIndexedRingBuffer_$1)

__attribute__((unused)) static void RxInternalUtilIndexedRingBuffer_$1_init(RxInternalUtilIndexedRingBuffer_$1 *self);

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_$1 *new_RxInternalUtilIndexedRingBuffer_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalUtilIndexedRingBuffer_$1 *create_RxInternalUtilIndexedRingBuffer_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilIndexedRingBuffer_$1)

J2OBJC_INITIALIZED_DEFN(RxInternalUtilIndexedRingBuffer)

jint RxInternalUtilIndexedRingBuffer__size = 256;
jint RxInternalUtilIndexedRingBuffer_SIZE;

@implementation RxInternalUtilIndexedRingBuffer

+ (RxInternalUtilIndexedRingBuffer *)getInstance {
  return RxInternalUtilIndexedRingBuffer_getInstance();
}

- (void)releaseToPool {
  jint maxIndex = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(index_)) get];
  jint realIndex = 0;
  RxInternalUtilIndexedRingBuffer_ElementSection *section = elements_;
  while (section != nil) {
    for (jint i = 0; i < RxInternalUtilIndexedRingBuffer_SIZE; i++, realIndex++) {
      if (realIndex >= maxIndex) {
        section = nil;
        goto break_outer;
      }
      [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(section))->array_)) setWithInt:i withId:nil];
    }
    section = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(section))->next_)) get];
  }
  break_outer: ;
  [index_ setWithInt:0];
  [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(removedIndex_)) setWithInt:0];
  [((RxInternalUtilObjectPool *) nil_chk(RxInternalUtilIndexedRingBuffer_POOL)) returnObjectWithId:self];
}

- (void)unsubscribe {
  [self releaseToPool];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilIndexedRingBuffer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jint)addWithId:(id)e {
  jint i = RxInternalUtilIndexedRingBuffer_getIndexForAdd(self);
  if (i < RxInternalUtilIndexedRingBuffer_SIZE) {
    [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(elements_))->array_)) setWithInt:i withId:e];
    return i;
  }
  else {
    jint sectionIndex = i % RxInternalUtilIndexedRingBuffer_SIZE;
    [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(RxInternalUtilIndexedRingBuffer_getElementSectionWithInt_(self, i)))->array_)) setWithInt:sectionIndex withId:e];
    return i;
  }
}

- (id)removeWithInt:(jint)index {
  id e;
  if (index < RxInternalUtilIndexedRingBuffer_SIZE) {
    e = [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(elements_))->array_)) getAndSetWithInt:index withId:nil];
  }
  else {
    jint sectionIndex = index % RxInternalUtilIndexedRingBuffer_SIZE;
    e = [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(RxInternalUtilIndexedRingBuffer_getElementSectionWithInt_(self, index)))->array_)) getAndSetWithInt:sectionIndex withId:nil];
  }
  RxInternalUtilIndexedRingBuffer_pushRemovedIndexWithInt_(self, index);
  return e;
}

- (RxInternalUtilIndexedRingBuffer_IndexSection *)getIndexSectionWithInt:(jint)index {
  return RxInternalUtilIndexedRingBuffer_getIndexSectionWithInt_(self, index);
}

- (RxInternalUtilIndexedRingBuffer_ElementSection *)getElementSectionWithInt:(jint)index {
  return RxInternalUtilIndexedRingBuffer_getElementSectionWithInt_(self, index);
}

- (jint)getIndexForAdd {
  return RxInternalUtilIndexedRingBuffer_getIndexForAdd(self);
}

- (jint)getIndexFromPreviouslyRemoved {
  return RxInternalUtilIndexedRingBuffer_getIndexFromPreviouslyRemoved(self);
}

- (void)pushRemovedIndexWithInt:(jint)elementIndex {
  RxInternalUtilIndexedRingBuffer_pushRemovedIndexWithInt_(self, elementIndex);
}

- (jboolean)isUnsubscribed {
  return false;
}

- (jint)forEachWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)action {
  return [self forEachWithRxFunctionsFunc1:action withInt:0];
}

- (jint)forEachWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)action
                            withInt:(jint)startIndex {
  jint endedAt = RxInternalUtilIndexedRingBuffer_forEachWithRxFunctionsFunc1_withInt_withInt_(self, action, startIndex, [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(index_)) get]);
  if (startIndex > 0 && endedAt == [index_ get]) {
    endedAt = RxInternalUtilIndexedRingBuffer_forEachWithRxFunctionsFunc1_withInt_withInt_(self, action, 0, startIndex);
  }
  else if (endedAt == [index_ get]) {
    endedAt = 0;
  }
  return endedAt;
}

- (jint)forEachWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)action
                            withInt:(jint)startIndex
                            withInt:(jint)endIndex {
  return RxInternalUtilIndexedRingBuffer_forEachWithRxFunctionsFunc1_withInt_withInt_(self, action, startIndex, endIndex);
}

+ (void)initialize {
  if (self == [RxInternalUtilIndexedRingBuffer class]) {
    RxInternalUtilIndexedRingBuffer_POOL = new_RxInternalUtilIndexedRingBuffer_$1_init();
    {
      if (RxInternalUtilPlatformDependent_isAndroid()) {
        RxInternalUtilIndexedRingBuffer__size = 8;
      }
      NSString *sizeFromProperty = JavaLangSystem_getPropertyWithNSString_(@"rx.indexed-ring-buffer.size");
      if (sizeFromProperty != nil) {
        @try {
          RxInternalUtilIndexedRingBuffer__size = JavaLangInteger_parseIntWithNSString_(sizeFromProperty);
        }
        @catch (JavaLangException *e) {
          [((JavaIoPrintStream *) nil_chk(JreLoadStatic(JavaLangSystem, err))) printlnWithNSString:JreStrcat("$$$$", @"Failed to set 'rx.indexed-ring-buffer.size' with value ", sizeFromProperty, @" => ", [((JavaLangException *) nil_chk(e)) getMessage])];
        }
      }
    }
    RxInternalUtilIndexedRingBuffer_SIZE = RxInternalUtilIndexedRingBuffer__size;
    J2OBJC_SET_INITIALIZED(RxInternalUtilIndexedRingBuffer)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getInstance", NULL, "Lrx.internal.util.IndexedRingBuffer;", 0x19, NULL, NULL },
    { "releaseToPool", NULL, "V", 0x1, NULL, NULL },
    { "unsubscribe", NULL, "V", 0x1, NULL, NULL },
    { "init", "IndexedRingBuffer", NULL, 0x2, NULL, NULL },
    { "addWithId:", "add", "I", 0x1, NULL, "(TE;)I" },
    { "removeWithInt:", "remove", "TE;", 0x1, NULL, "(I)TE;" },
    { "getIndexSectionWithInt:", "getIndexSection", "Lrx.internal.util.IndexedRingBuffer$IndexSection;", 0x2, NULL, NULL },
    { "getElementSectionWithInt:", "getElementSection", "Lrx.internal.util.IndexedRingBuffer$ElementSection;", 0x2, NULL, "(I)Lrx/internal/util/IndexedRingBuffer$ElementSection<TE;>;" },
    { "getIndexForAdd", NULL, "I", 0x22, NULL, NULL },
    { "getIndexFromPreviouslyRemoved", NULL, "I", 0x22, NULL, NULL },
    { "pushRemovedIndexWithInt:", "pushRemovedIndex", "V", 0x22, NULL, NULL },
    { "isUnsubscribed", NULL, "Z", 0x1, NULL, NULL },
    { "forEachWithRxFunctionsFunc1:", "forEach", "I", 0x1, NULL, "(Lrx/functions/Func1<-TE;Ljava/lang/Boolean;>;)I" },
    { "forEachWithRxFunctionsFunc1:withInt:", "forEach", "I", 0x1, NULL, "(Lrx/functions/Func1<-TE;Ljava/lang/Boolean;>;I)I" },
    { "forEachWithRxFunctionsFunc1:withInt:withInt:", "forEach", "I", 0x2, NULL, "(Lrx/functions/Func1<-TE;Ljava/lang/Boolean;>;II)I" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "POOL", "POOL", 0x1a, "Lrx.internal.util.ObjectPool;", &RxInternalUtilIndexedRingBuffer_POOL, "Lrx/internal/util/ObjectPool<Lrx/internal/util/IndexedRingBuffer;>;", .constantValue.asLong = 0 },
    { "elements_", NULL, 0x12, "Lrx.internal.util.IndexedRingBuffer$ElementSection;", NULL, "Lrx/internal/util/IndexedRingBuffer$ElementSection<TE;>;", .constantValue.asLong = 0 },
    { "removed_", NULL, 0x12, "Lrx.internal.util.IndexedRingBuffer$IndexSection;", NULL, NULL, .constantValue.asLong = 0 },
    { "index_", NULL, 0x10, "Ljava.util.concurrent.atomic.AtomicInteger;", NULL, NULL, .constantValue.asLong = 0 },
    { "removedIndex_", NULL, 0x10, "Ljava.util.concurrent.atomic.AtomicInteger;", NULL, NULL, .constantValue.asLong = 0 },
    { "_size", "_size", 0x8, "I", &RxInternalUtilIndexedRingBuffer__size, NULL, .constantValue.asLong = 0 },
    { "SIZE", "SIZE", 0x18, "I", &RxInternalUtilIndexedRingBuffer_SIZE, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.internal.util.IndexedRingBuffer$ElementSection;", "Lrx.internal.util.IndexedRingBuffer$IndexSection;"};
  static const J2ObjcClassInfo _RxInternalUtilIndexedRingBuffer = { 2, "IndexedRingBuffer", "rx.internal.util", NULL, 0x11, 15, methods, 7, fields, 0, NULL, 2, inner_classes, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Subscription;" };
  return &_RxInternalUtilIndexedRingBuffer;
}

@end

RxInternalUtilIndexedRingBuffer *RxInternalUtilIndexedRingBuffer_getInstance() {
  RxInternalUtilIndexedRingBuffer_initialize();
  return [((RxInternalUtilObjectPool *) nil_chk(RxInternalUtilIndexedRingBuffer_POOL)) borrowObject];
}

void RxInternalUtilIndexedRingBuffer_init(RxInternalUtilIndexedRingBuffer *self) {
  NSObject_init(self);
  self->elements_ = new_RxInternalUtilIndexedRingBuffer_ElementSection_init();
  self->removed_ = new_RxInternalUtilIndexedRingBuffer_IndexSection_init();
  self->index_ = new_JavaUtilConcurrentAtomicAtomicInteger_init();
  self->removedIndex_ = new_JavaUtilConcurrentAtomicAtomicInteger_init();
}

RxInternalUtilIndexedRingBuffer *new_RxInternalUtilIndexedRingBuffer_init() {
  RxInternalUtilIndexedRingBuffer *self = [RxInternalUtilIndexedRingBuffer alloc];
  RxInternalUtilIndexedRingBuffer_init(self);
  return self;
}

RxInternalUtilIndexedRingBuffer *create_RxInternalUtilIndexedRingBuffer_init() {
  return new_RxInternalUtilIndexedRingBuffer_init();
}

RxInternalUtilIndexedRingBuffer_IndexSection *RxInternalUtilIndexedRingBuffer_getIndexSectionWithInt_(RxInternalUtilIndexedRingBuffer *self, jint index) {
  if (index < RxInternalUtilIndexedRingBuffer_SIZE) {
    return self->removed_;
  }
  jint numSections = index / RxInternalUtilIndexedRingBuffer_SIZE;
  RxInternalUtilIndexedRingBuffer_IndexSection *a = self->removed_;
  for (jint i = 0; i < numSections; i++) {
    a = [((RxInternalUtilIndexedRingBuffer_IndexSection *) nil_chk(a)) getNext];
  }
  return a;
}

RxInternalUtilIndexedRingBuffer_ElementSection *RxInternalUtilIndexedRingBuffer_getElementSectionWithInt_(RxInternalUtilIndexedRingBuffer *self, jint index) {
  if (index < RxInternalUtilIndexedRingBuffer_SIZE) {
    return self->elements_;
  }
  jint numSections = index / RxInternalUtilIndexedRingBuffer_SIZE;
  RxInternalUtilIndexedRingBuffer_ElementSection *a = self->elements_;
  for (jint i = 0; i < numSections; i++) {
    a = [((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(a)) getNext];
  }
  return a;
}

jint RxInternalUtilIndexedRingBuffer_getIndexForAdd(RxInternalUtilIndexedRingBuffer *self) {
  @synchronized(self) {
    jint i;
    jint ri = RxInternalUtilIndexedRingBuffer_getIndexFromPreviouslyRemoved(self);
    if (ri >= 0) {
      if (ri < RxInternalUtilIndexedRingBuffer_SIZE) {
        i = [((RxInternalUtilIndexedRingBuffer_IndexSection *) nil_chk(self->removed_)) getAndSetWithInt:ri withInt:-1];
      }
      else {
        jint sectionIndex = ri % RxInternalUtilIndexedRingBuffer_SIZE;
        i = [((RxInternalUtilIndexedRingBuffer_IndexSection *) nil_chk(RxInternalUtilIndexedRingBuffer_getIndexSectionWithInt_(self, ri))) getAndSetWithInt:sectionIndex withInt:-1];
      }
      if (i == [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->index_)) get]) {
        [self->index_ getAndIncrement];
      }
    }
    else {
      i = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->index_)) getAndIncrement];
    }
    return i;
  }
}

jint RxInternalUtilIndexedRingBuffer_getIndexFromPreviouslyRemoved(RxInternalUtilIndexedRingBuffer *self) {
  @synchronized(self) {
    while (true) {
      jint currentRi = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->removedIndex_)) get];
      if (currentRi > 0) {
        if ([self->removedIndex_ compareAndSetWithInt:currentRi withInt:currentRi - 1]) {
          return currentRi - 1;
        }
      }
      else {
        return -1;
      }
    }
  }
}

void RxInternalUtilIndexedRingBuffer_pushRemovedIndexWithInt_(RxInternalUtilIndexedRingBuffer *self, jint elementIndex) {
  @synchronized(self) {
    jint i = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->removedIndex_)) getAndIncrement];
    if (i < RxInternalUtilIndexedRingBuffer_SIZE) {
      [((RxInternalUtilIndexedRingBuffer_IndexSection *) nil_chk(self->removed_)) setWithInt:i withInt:elementIndex];
    }
    else {
      jint sectionIndex = i % RxInternalUtilIndexedRingBuffer_SIZE;
      [((RxInternalUtilIndexedRingBuffer_IndexSection *) nil_chk(RxInternalUtilIndexedRingBuffer_getIndexSectionWithInt_(self, i))) setWithInt:sectionIndex withInt:elementIndex];
    }
  }
}

jint RxInternalUtilIndexedRingBuffer_forEachWithRxFunctionsFunc1_withInt_withInt_(RxInternalUtilIndexedRingBuffer *self, id<RxFunctionsFunc1> action, jint startIndex, jint endIndex) {
  jint lastIndex = startIndex;
  jint maxIndex = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(self->index_)) get];
  jint realIndex = startIndex;
  RxInternalUtilIndexedRingBuffer_ElementSection *section = self->elements_;
  if (startIndex >= RxInternalUtilIndexedRingBuffer_SIZE) {
    section = RxInternalUtilIndexedRingBuffer_getElementSectionWithInt_(self, startIndex);
    startIndex = startIndex % RxInternalUtilIndexedRingBuffer_SIZE;
  }
  while (section != nil) {
    for (jint i = startIndex; i < RxInternalUtilIndexedRingBuffer_SIZE; i++, realIndex++) {
      if (realIndex >= maxIndex || realIndex >= endIndex) {
        section = nil;
        goto break_outer;
      }
      id element = [((JavaUtilConcurrentAtomicAtomicReferenceArray *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(section))->array_)) getWithInt:i];
      if (element == nil) {
        continue;
      }
      lastIndex = realIndex;
      jboolean continueLoop = [((JavaLangBoolean *) nil_chk([((id<RxFunctionsFunc1>) nil_chk(action)) callWithId:element])) booleanValue];
      if (!continueLoop) {
        return lastIndex;
      }
    }
    section = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(((RxInternalUtilIndexedRingBuffer_ElementSection *) nil_chk(section))->next_)) get];
    startIndex = 0;
  }
  break_outer: ;
  return realIndex;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilIndexedRingBuffer)

@implementation RxInternalUtilIndexedRingBuffer_ElementSection

- (RxInternalUtilIndexedRingBuffer_ElementSection *)getNext {
  if ([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(next_)) get] != nil) {
    return [next_ get];
  }
  else {
    RxInternalUtilIndexedRingBuffer_ElementSection *newSection = new_RxInternalUtilIndexedRingBuffer_ElementSection_init();
    if ([next_ compareAndSetWithId:nil withId:newSection]) {
      return newSection;
    }
    else {
      return [next_ get];
    }
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilIndexedRingBuffer_ElementSection_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getNext", NULL, "Lrx.internal.util.IndexedRingBuffer$ElementSection;", 0x0, NULL, "()Lrx/internal/util/IndexedRingBuffer$ElementSection<TE;>;" },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicReferenceArray;", NULL, "Ljava/util/concurrent/atomic/AtomicReferenceArray<TE;>;", .constantValue.asLong = 0 },
    { "next_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicReference;", NULL, "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/util/IndexedRingBuffer$ElementSection<TE;>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalUtilIndexedRingBuffer_ElementSection = { 2, "ElementSection", "rx.internal.util", "IndexedRingBuffer", 0xa, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<E:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_RxInternalUtilIndexedRingBuffer_ElementSection;
}

@end

void RxInternalUtilIndexedRingBuffer_ElementSection_init(RxInternalUtilIndexedRingBuffer_ElementSection *self) {
  NSObject_init(self);
  self->array_ = new_JavaUtilConcurrentAtomicAtomicReferenceArray_initWithInt_(JreLoadStatic(RxInternalUtilIndexedRingBuffer, SIZE));
  self->next_ = new_JavaUtilConcurrentAtomicAtomicReference_init();
}

RxInternalUtilIndexedRingBuffer_ElementSection *new_RxInternalUtilIndexedRingBuffer_ElementSection_init() {
  RxInternalUtilIndexedRingBuffer_ElementSection *self = [RxInternalUtilIndexedRingBuffer_ElementSection alloc];
  RxInternalUtilIndexedRingBuffer_ElementSection_init(self);
  return self;
}

RxInternalUtilIndexedRingBuffer_ElementSection *create_RxInternalUtilIndexedRingBuffer_ElementSection_init() {
  return new_RxInternalUtilIndexedRingBuffer_ElementSection_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilIndexedRingBuffer_ElementSection)

@implementation RxInternalUtilIndexedRingBuffer_IndexSection

- (jint)getAndSetWithInt:(jint)expected
                 withInt:(jint)newValue {
  return [((JavaUtilConcurrentAtomicAtomicIntegerArray *) nil_chk(unsafeArray_)) getAndSetWithInt:expected withInt:newValue];
}

- (void)setWithInt:(jint)i
           withInt:(jint)elementIndex {
  [((JavaUtilConcurrentAtomicAtomicIntegerArray *) nil_chk(unsafeArray_)) setWithInt:i withInt:elementIndex];
}

- (RxInternalUtilIndexedRingBuffer_IndexSection *)getNext {
  if ([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(_next_)) get] != nil) {
    return [_next_ get];
  }
  else {
    RxInternalUtilIndexedRingBuffer_IndexSection *newSection = new_RxInternalUtilIndexedRingBuffer_IndexSection_init();
    if ([_next_ compareAndSetWithId:nil withId:newSection]) {
      return newSection;
    }
    else {
      return [_next_ get];
    }
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilIndexedRingBuffer_IndexSection_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getAndSetWithInt:withInt:", "getAndSet", "I", 0x1, NULL, NULL },
    { "setWithInt:withInt:", "set", "V", 0x1, NULL, NULL },
    { "getNext", NULL, "Lrx.internal.util.IndexedRingBuffer$IndexSection;", 0x0, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "unsafeArray_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicIntegerArray;", NULL, NULL, .constantValue.asLong = 0 },
    { "_next_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicReference;", NULL, "Ljava/util/concurrent/atomic/AtomicReference<Lrx/internal/util/IndexedRingBuffer$IndexSection;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalUtilIndexedRingBuffer_IndexSection = { 2, "IndexSection", "rx.internal.util", "IndexedRingBuffer", 0xa, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxInternalUtilIndexedRingBuffer_IndexSection;
}

@end

void RxInternalUtilIndexedRingBuffer_IndexSection_init(RxInternalUtilIndexedRingBuffer_IndexSection *self) {
  NSObject_init(self);
  self->unsafeArray_ = new_JavaUtilConcurrentAtomicAtomicIntegerArray_initWithInt_(JreLoadStatic(RxInternalUtilIndexedRingBuffer, SIZE));
  self->_next_ = new_JavaUtilConcurrentAtomicAtomicReference_init();
}

RxInternalUtilIndexedRingBuffer_IndexSection *new_RxInternalUtilIndexedRingBuffer_IndexSection_init() {
  RxInternalUtilIndexedRingBuffer_IndexSection *self = [RxInternalUtilIndexedRingBuffer_IndexSection alloc];
  RxInternalUtilIndexedRingBuffer_IndexSection_init(self);
  return self;
}

RxInternalUtilIndexedRingBuffer_IndexSection *create_RxInternalUtilIndexedRingBuffer_IndexSection_init() {
  return new_RxInternalUtilIndexedRingBuffer_IndexSection_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilIndexedRingBuffer_IndexSection)

@implementation RxInternalUtilIndexedRingBuffer_$1

- (RxInternalUtilIndexedRingBuffer *)createObject {
  return new_RxInternalUtilIndexedRingBuffer_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalUtilIndexedRingBuffer_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "createObject", NULL, "Lrx.internal.util.IndexedRingBuffer;", 0x4, NULL, "()Lrx/internal/util/IndexedRingBuffer;" },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lrx.internal.util.IndexedRingBuffer;"};
  static const J2ObjcClassInfo _RxInternalUtilIndexedRingBuffer_$1 = { 2, "", "rx.internal.util", "IndexedRingBuffer", 0x8008, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Lrx/internal/util/ObjectPool<Lrx/internal/util/IndexedRingBuffer;>;" };
  return &_RxInternalUtilIndexedRingBuffer_$1;
}

@end

void RxInternalUtilIndexedRingBuffer_$1_init(RxInternalUtilIndexedRingBuffer_$1 *self) {
  RxInternalUtilObjectPool_init(self);
}

RxInternalUtilIndexedRingBuffer_$1 *new_RxInternalUtilIndexedRingBuffer_$1_init() {
  RxInternalUtilIndexedRingBuffer_$1 *self = [RxInternalUtilIndexedRingBuffer_$1 alloc];
  RxInternalUtilIndexedRingBuffer_$1_init(self);
  return self;
}

RxInternalUtilIndexedRingBuffer_$1 *create_RxInternalUtilIndexedRingBuffer_$1_init() {
  return new_RxInternalUtilIndexedRingBuffer_$1_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalUtilIndexedRingBuffer_$1)
