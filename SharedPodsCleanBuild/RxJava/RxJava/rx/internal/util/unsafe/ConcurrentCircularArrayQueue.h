//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/util/unsafe/ConcurrentCircularArrayQueue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE_ALL")
#ifdef RxInternalUtilUnsafeConcurrentCircularArrayQueue_RESTRICT
#define RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE_ALL 0
#else
#define RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE_ALL 1
#endif
#undef RxInternalUtilUnsafeConcurrentCircularArrayQueue_RESTRICT
#ifdef RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE
#define RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad_INCLUDE 1
#endif

#if !defined (RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad_) && (RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad_INCLUDE))
#define RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad_

#define JavaUtilAbstractQueue_RESTRICT 1
#define JavaUtilAbstractQueue_INCLUDE 1
#include "java/util/AbstractQueue.h"

#define RxInternalUtilUnsafeMessagePassingQueue_RESTRICT 1
#define RxInternalUtilUnsafeMessagePassingQueue_INCLUDE 1
#include "rx/internal/util/unsafe/MessagePassingQueue.h"

@interface RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad : JavaUtilAbstractQueue < RxInternalUtilUnsafeMessagePassingQueue > {
 @public
  jlong p00_, p01_, p02_, p03_, p04_, p05_, p06_, p07_;
  jlong p30_, p31_, p32_, p33_, p34_, p35_, p36_, p37_;
}

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad_init(RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad *self);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad)

#endif

#if !defined (RxInternalUtilUnsafeConcurrentCircularArrayQueue_) && (RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE))
#define RxInternalUtilUnsafeConcurrentCircularArrayQueue_

@class IOSObjectArray;
@protocol JavaUtilIterator;

@interface RxInternalUtilUnsafeConcurrentCircularArrayQueue : RxInternalUtilUnsafeConcurrentCircularArrayQueueL0Pad {
 @public
  jint capacity_;
  jlong mask_;
  IOSObjectArray *buffer_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

- (id<JavaUtilIterator>)iterator;

#pragma mark Protected

- (jlong)calcElementOffsetWithLong:(jlong)index;

- (id)lpElementWithNSObjectArray:(IOSObjectArray *)buffer
                        withLong:(jlong)offset;

- (id)lpElementWithLong:(jlong)offset;

- (id)lvElementWithNSObjectArray:(IOSObjectArray *)buffer
                        withLong:(jlong)offset;

- (id)lvElementWithLong:(jlong)offset;

- (void)soElementWithNSObjectArray:(IOSObjectArray *)buffer
                          withLong:(jlong)offset
                            withId:(id)e;

- (void)soElementWithLong:(jlong)offset
                   withId:(id)e;

- (void)spElementWithNSObjectArray:(IOSObjectArray *)buffer
                          withLong:(jlong)offset
                            withId:(id)e;

- (void)spElementWithLong:(jlong)offset
                   withId:(id)e;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeConcurrentCircularArrayQueue)

J2OBJC_FIELD_SETTER(RxInternalUtilUnsafeConcurrentCircularArrayQueue, buffer_, IOSObjectArray *)

inline jint RxInternalUtilUnsafeConcurrentCircularArrayQueue_get_SPARSE_SHIFT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint RxInternalUtilUnsafeConcurrentCircularArrayQueue_SPARSE_SHIFT;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilUnsafeConcurrentCircularArrayQueue, SPARSE_SHIFT, jint)

inline jint RxInternalUtilUnsafeConcurrentCircularArrayQueue_get_BUFFER_PAD();
#define RxInternalUtilUnsafeConcurrentCircularArrayQueue_BUFFER_PAD 32
J2OBJC_STATIC_FIELD_CONSTANT(RxInternalUtilUnsafeConcurrentCircularArrayQueue, BUFFER_PAD, jint)

FOUNDATION_EXPORT void RxInternalUtilUnsafeConcurrentCircularArrayQueue_initWithInt_(RxInternalUtilUnsafeConcurrentCircularArrayQueue *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeConcurrentCircularArrayQueue)

#endif

#pragma pop_macro("RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE_ALL")
