//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorSkipTimed.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorSkipTimed_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorSkipTimed_RESTRICT
#define RxInternalOperatorsOperatorSkipTimed_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorSkipTimed_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorSkipTimed_RESTRICT

#if !defined (RxInternalOperatorsOperatorSkipTimed_) && (RxInternalOperatorsOperatorSkipTimed_INCLUDE_ALL || defined(RxInternalOperatorsOperatorSkipTimed_INCLUDE))
#define RxInternalOperatorsOperatorSkipTimed_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class JavaUtilConcurrentTimeUnit;
@class RxScheduler;
@class RxSubscriber;

@interface RxInternalOperatorsOperatorSkipTimed : NSObject < RxObservable_Operator > {
 @public
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
  RxScheduler *scheduler_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
             withRxScheduler:(RxScheduler *)scheduler;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSkipTimed)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSkipTimed, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSkipTimed, scheduler_, RxScheduler *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSkipTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalOperatorsOperatorSkipTimed *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSkipTimed *new_RxInternalOperatorsOperatorSkipTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSkipTimed *create_RxInternalOperatorsOperatorSkipTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSkipTimed)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorSkipTimed_INCLUDE_ALL")
