//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorBufferWithSingleObservable.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "rx/Observable.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/functions/Func0.h"
#include "rx/internal/operators/OperatorBufferWithSingleObservable.h"
#include "rx/observers/SerializedSubscriber.h"
#include "rx/observers/Subscribers.h"

@interface RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber () {
 @public
  RxInternalOperatorsOperatorBufferWithSingleObservable *this$0_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber, this$0_, RxInternalOperatorsOperatorBufferWithSingleObservable *)

@interface RxInternalOperatorsOperatorBufferWithSingleObservable_$1 : NSObject < RxFunctionsFunc0 > {
 @public
  RxObservable *val$bufferClosing_;
}

- (RxObservable *)call;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferWithSingleObservable_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithSingleObservable_$1, val$bufferClosing_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(RxInternalOperatorsOperatorBufferWithSingleObservable_$1 *self, RxObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithSingleObservable_$1 *new_RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(RxObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithSingleObservable_$1 *create_RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(RxObservable *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorBufferWithSingleObservable_$1)

@interface RxInternalOperatorsOperatorBufferWithSingleObservable_$2 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *val$bsub_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onCompleted;

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber:(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorBufferWithSingleObservable_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorBufferWithSingleObservable_$2, val$bsub_, RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable_$2 *self, RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithSingleObservable_$2 *new_RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorBufferWithSingleObservable_$2 *create_RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorBufferWithSingleObservable_$2)

@implementation RxInternalOperatorsOperatorBufferWithSingleObservable

- (instancetype)initWithRxFunctionsFunc0:(id<RxFunctionsFunc0>)bufferClosingSelector
                                 withInt:(jint)initialCapacity {
  RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxFunctionsFunc0_withInt_(self, bufferClosingSelector, initialCapacity);
  return self;
}

- (instancetype)initWithRxObservable:(RxObservable *)bufferClosing
                             withInt:(jint)initialCapacity {
  RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxObservable_withInt_(self, bufferClosing, initialCapacity);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxObservable *closing;
  @try {
    closing = [((id<RxFunctionsFunc0>) nil_chk(bufferClosingSelector_)) call];
  }
  @catch (NSException *t) {
    [((RxSubscriber *) nil_chk(child)) onErrorWithNSException:t];
    return RxObserversSubscribers_empty();
  }
  RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *bsub = new_RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_withRxSubscriber_(self, new_RxObserversSerializedSubscriber_initWithRxSubscriber_(child));
  RxSubscriber *closingSubscriber = new_RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(bsub);
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:closingSubscriber];
  [child addWithRxSubscription:bsub];
  (void) [((RxObservable *) nil_chk(closing)) unsafeSubscribeWithRxSubscriber:closingSubscriber];
  return bsub;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxFunctionsFunc0:withInt:", "OperatorBufferWithSingleObservable", NULL, 0x1, NULL, "(Lrx/functions/Func0<+Lrx/Observable<+TTClosing;>;>;I)V" },
    { "initWithRxObservable:withInt:", "OperatorBufferWithSingleObservable", NULL, 0x1, NULL, "(Lrx/Observable<+TTClosing;>;I)V" },
    { "callWithId:", "call", "Lrx.Subscriber;", 0x1, NULL, "(Lrx/Subscriber<-Ljava/util/List<TT;>;>;)Lrx/Subscriber<-TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "bufferClosingSelector_", NULL, 0x10, "Lrx.functions.Func0;", NULL, "Lrx/functions/Func0<+Lrx/Observable<+TTClosing;>;>;", .constantValue.asLong = 0 },
    { "initialCapacity_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithSingleObservable = { 2, "OperatorBufferWithSingleObservable", "rx.internal.operators", NULL, 0x11, 3, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, "<T:Ljava/lang/Object;TClosing:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<Ljava/util/List<TT;>;TT;>;" };
  return &_RxInternalOperatorsOperatorBufferWithSingleObservable;
}

@end

void RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxFunctionsFunc0_withInt_(RxInternalOperatorsOperatorBufferWithSingleObservable *self, id<RxFunctionsFunc0> bufferClosingSelector, jint initialCapacity) {
  NSObject_init(self);
  self->bufferClosingSelector_ = bufferClosingSelector;
  self->initialCapacity_ = initialCapacity;
}

RxInternalOperatorsOperatorBufferWithSingleObservable *new_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxFunctionsFunc0_withInt_(id<RxFunctionsFunc0> bufferClosingSelector, jint initialCapacity) {
  RxInternalOperatorsOperatorBufferWithSingleObservable *self = [RxInternalOperatorsOperatorBufferWithSingleObservable alloc];
  RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxFunctionsFunc0_withInt_(self, bufferClosingSelector, initialCapacity);
  return self;
}

RxInternalOperatorsOperatorBufferWithSingleObservable *create_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxFunctionsFunc0_withInt_(id<RxFunctionsFunc0> bufferClosingSelector, jint initialCapacity) {
  return new_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxFunctionsFunc0_withInt_(bufferClosingSelector, initialCapacity);
}

void RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxObservable_withInt_(RxInternalOperatorsOperatorBufferWithSingleObservable *self, RxObservable *bufferClosing, jint initialCapacity) {
  NSObject_init(self);
  self->bufferClosingSelector_ = new_RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(bufferClosing);
  self->initialCapacity_ = initialCapacity;
}

RxInternalOperatorsOperatorBufferWithSingleObservable *new_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxObservable_withInt_(RxObservable *bufferClosing, jint initialCapacity) {
  RxInternalOperatorsOperatorBufferWithSingleObservable *self = [RxInternalOperatorsOperatorBufferWithSingleObservable alloc];
  RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxObservable_withInt_(self, bufferClosing, initialCapacity);
  return self;
}

RxInternalOperatorsOperatorBufferWithSingleObservable *create_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxObservable_withInt_(RxObservable *bufferClosing, jint initialCapacity) {
  return new_RxInternalOperatorsOperatorBufferWithSingleObservable_initWithRxObservable_withInt_(bufferClosing, initialCapacity);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithSingleObservable)

@implementation RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithSingleObservable:(RxInternalOperatorsOperatorBufferWithSingleObservable *)outer$
                                                             withRxSubscriber:(RxSubscriber *)child {
  RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_withRxSubscriber_(self, outer$, child);
  return self;
}

- (void)onNextWithId:(id)t {
  @synchronized(self) {
    if (done_) {
      return;
    }
    [((id<JavaUtilList>) nil_chk(chunk_)) addWithId:t];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  @synchronized(self) {
    if (done_) {
      return;
    }
    done_ = true;
    chunk_ = nil;
  }
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
  [self unsubscribe];
}

- (void)onCompleted {
  @try {
    id<JavaUtilList> toEmit;
    @synchronized(self) {
      if (done_) {
        return;
      }
      done_ = true;
      toEmit = chunk_;
      chunk_ = nil;
    }
    [((RxSubscriber *) nil_chk(child_)) onNextWithId:toEmit];
  }
  @catch (NSException *t) {
    [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:t];
    return;
  }
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
  [self unsubscribe];
}

- (void)emit {
  id<JavaUtilList> toEmit;
  @synchronized(self) {
    if (done_) {
      return;
    }
    toEmit = chunk_;
    chunk_ = new_JavaUtilArrayList_initWithInt_(this$0_->initialCapacity_);
  }
  @try {
    [((RxSubscriber *) nil_chk(child_)) onNextWithId:toEmit];
  }
  @catch (NSException *t) {
    [self unsubscribe];
    @synchronized(self) {
      if (done_) {
        return;
      }
      done_ = true;
    }
    [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:t];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorBufferWithSingleObservable:withRxSubscriber:", "BufferingSubscriber", NULL, 0x1, NULL, "(Lrx/internal/operators/OperatorBufferWithSingleObservable;Lrx/Subscriber<-Ljava/util/List<TT;>;>;)V" },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "emit", NULL, "V", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrx.internal.operators.OperatorBufferWithSingleObservable;", NULL, NULL, .constantValue.asLong = 0 },
    { "child_", NULL, 0x10, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<-Ljava/util/List<TT;>;>;", .constantValue.asLong = 0 },
    { "chunk_", NULL, 0x0, "Ljava.util.List;", NULL, "Ljava/util/List<TT;>;", .constantValue.asLong = 0 },
    { "done_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber = { 2, "BufferingSubscriber", "rx.internal.operators", "OperatorBufferWithSingleObservable", 0x10, 5, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber;
}

@end

void RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_withRxSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *self, RxInternalOperatorsOperatorBufferWithSingleObservable *outer$, RxSubscriber *child) {
  self->this$0_ = outer$;
  RxSubscriber_init(self);
  self->child_ = child;
  self->chunk_ = new_JavaUtilArrayList_initWithInt_(outer$->initialCapacity_);
}

RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *new_RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_withRxSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable *outer$, RxSubscriber *child) {
  RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *self = [RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber alloc];
  RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_withRxSubscriber_(self, outer$, child);
  return self;
}

RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *create_RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_withRxSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable *outer$, RxSubscriber *child) {
  return new_RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_withRxSubscriber_(outer$, child);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber)

@implementation RxInternalOperatorsOperatorBufferWithSingleObservable_$1

- (RxObservable *)call {
  return val$bufferClosing_;
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0 {
  RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", NULL, "Lrx.Observable;", 0x1, NULL, "()Lrx/Observable<+TTClosing;>;" },
    { "initWithRxObservable:", "", NULL, 0x0, NULL, "(Lrx/Observable<+TTClosing;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$bufferClosing_", NULL, 0x1012, "Lrx.Observable;", NULL, "Lrx/Observable<+TTClosing;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorBufferWithSingleObservable", "initWithRxObservable:withInt:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithSingleObservable_$1 = { 2, "", "rx.internal.operators", "OperatorBufferWithSingleObservable", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/functions/Func0<Lrx/Observable<+TTClosing;>;>;" };
  return &_RxInternalOperatorsOperatorBufferWithSingleObservable_$1;
}

@end

void RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(RxInternalOperatorsOperatorBufferWithSingleObservable_$1 *self, RxObservable *capture$0) {
  self->val$bufferClosing_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorBufferWithSingleObservable_$1 *new_RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(RxObservable *capture$0) {
  RxInternalOperatorsOperatorBufferWithSingleObservable_$1 *self = [RxInternalOperatorsOperatorBufferWithSingleObservable_$1 alloc];
  RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(self, capture$0);
  return self;
}

RxInternalOperatorsOperatorBufferWithSingleObservable_$1 *create_RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(RxObservable *capture$0) {
  return new_RxInternalOperatorsOperatorBufferWithSingleObservable_$1_initWithRxObservable_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithSingleObservable_$1)

@implementation RxInternalOperatorsOperatorBufferWithSingleObservable_$2

- (void)onNextWithId:(id)t {
  [((RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *) nil_chk(val$bsub_)) emit];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *) nil_chk(val$bsub_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *) nil_chk(val$bsub_)) onCompleted];
}

- (instancetype)initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber:(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *)capture$0 {
  RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TTClosing;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$bsub_", NULL, 0x1012, "Lrx.internal.operators.OperatorBufferWithSingleObservable$BufferingSubscriber;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TTClosing;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorBufferWithSingleObservable", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorBufferWithSingleObservable_$2 = { 2, "", "rx.internal.operators", "OperatorBufferWithSingleObservable", 0x8008, 4, methods, 1, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lrx/Subscriber<TTClosing;>;" };
  return &_RxInternalOperatorsOperatorBufferWithSingleObservable_$2;
}

@end

void RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable_$2 *self, RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *capture$0) {
  self->val$bsub_ = capture$0;
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorBufferWithSingleObservable_$2 *new_RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *capture$0) {
  RxInternalOperatorsOperatorBufferWithSingleObservable_$2 *self = [RxInternalOperatorsOperatorBufferWithSingleObservable_$2 alloc];
  RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(self, capture$0);
  return self;
}

RxInternalOperatorsOperatorBufferWithSingleObservable_$2 *create_RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(RxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber *capture$0) {
  return new_RxInternalOperatorsOperatorBufferWithSingleObservable_$2_initWithRxInternalOperatorsOperatorBufferWithSingleObservable_BufferingSubscriber_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorBufferWithSingleObservable_$2)
