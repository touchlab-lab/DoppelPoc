//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorReplay.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorReplay_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorReplay_RESTRICT
#define RxInternalOperatorsOperatorReplay_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorReplay_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorReplay_RESTRICT

#if !defined (RxInternalOperatorsOperatorReplay_) && (RxInternalOperatorsOperatorReplay_INCLUDE_ALL || defined(RxInternalOperatorsOperatorReplay_INCLUDE))
#define RxInternalOperatorsOperatorReplay_

@class RxObservable;
@class RxScheduler;
@class RxSubjectsSubject;
@protocol RxObservable_OnSubscribe;

@interface RxInternalOperatorsOperatorReplay : NSObject

#pragma mark Public

+ (RxSubjectsSubject *)createScheduledSubjectWithRxSubjectsSubject:(RxSubjectsSubject *)subject
                                                   withRxScheduler:(RxScheduler *)scheduler;

+ (id<RxObservable_OnSubscribe>)subscriberOfWithRxObservable:(RxObservable *)target;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay)

FOUNDATION_EXPORT RxSubjectsSubject *RxInternalOperatorsOperatorReplay_createScheduledSubjectWithRxSubjectsSubject_withRxScheduler_(RxSubjectsSubject *subject, RxScheduler *scheduler);

FOUNDATION_EXPORT id<RxObservable_OnSubscribe> RxInternalOperatorsOperatorReplay_subscriberOfWithRxObservable_(RxObservable *target);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorReplay)

#endif

#if !defined (RxInternalOperatorsOperatorReplay_SubjectWrapper_) && (RxInternalOperatorsOperatorReplay_INCLUDE_ALL || defined(RxInternalOperatorsOperatorReplay_SubjectWrapper_INCLUDE))
#define RxInternalOperatorsOperatorReplay_SubjectWrapper_

#define RxSubjectsSubject_RESTRICT 1
#define RxSubjectsSubject_INCLUDE 1
#include "rx/subjects/Subject.h"

@protocol RxObservable_OnSubscribe;

@interface RxInternalOperatorsOperatorReplay_SubjectWrapper : RxSubjectsSubject {
 @public
  RxSubjectsSubject *subject_;
}

#pragma mark Public

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)func
                           withRxSubjectsSubject:(RxSubjectsSubject *)subject;

- (jboolean)hasObservers;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)args;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_SubjectWrapper)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorReplay_SubjectWrapper, subject_, RxSubjectsSubject *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(RxInternalOperatorsOperatorReplay_SubjectWrapper *self, id<RxObservable_OnSubscribe> func, RxSubjectsSubject *subject);

FOUNDATION_EXPORT RxInternalOperatorsOperatorReplay_SubjectWrapper *new_RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(id<RxObservable_OnSubscribe> func, RxSubjectsSubject *subject) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorReplay_SubjectWrapper *create_RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(id<RxObservable_OnSubscribe> func, RxSubjectsSubject *subject);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorReplay_SubjectWrapper)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorReplay_INCLUDE_ALL")
