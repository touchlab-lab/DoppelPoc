//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorSampleWithObservable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorSampleWithObservable_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorSampleWithObservable_RESTRICT
#define RxInternalOperatorsOperatorSampleWithObservable_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorSampleWithObservable_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorSampleWithObservable_RESTRICT

#if !defined (RxInternalOperatorsOperatorSampleWithObservable_) && (RxInternalOperatorsOperatorSampleWithObservable_INCLUDE_ALL || defined(RxInternalOperatorsOperatorSampleWithObservable_INCLUDE))
#define RxInternalOperatorsOperatorSampleWithObservable_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class RxObservable;
@class RxSubscriber;

@interface RxInternalOperatorsOperatorSampleWithObservable : NSObject < RxObservable_Operator > {
 @public
  RxObservable *sampler_;
}

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)sampler;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorSampleWithObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithObservable, sampler_, RxObservable *)

inline id RxInternalOperatorsOperatorSampleWithObservable_get_EMPTY_TOKEN();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id RxInternalOperatorsOperatorSampleWithObservable_EMPTY_TOKEN;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorSampleWithObservable, EMPTY_TOKEN, id)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(RxInternalOperatorsOperatorSampleWithObservable *self, RxObservable *sampler);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSampleWithObservable *new_RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(RxObservable *sampler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSampleWithObservable *create_RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(RxObservable *sampler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSampleWithObservable)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorSampleWithObservable_INCLUDE_ALL")
