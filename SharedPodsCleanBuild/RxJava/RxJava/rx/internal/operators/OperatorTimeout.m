//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorTimeout.java
//

#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/util/concurrent/TimeUnit.h"
#include "rx/Observable.h"
#include "rx/Scheduler.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/internal/operators/OperatorTimeout.h"
#include "rx/internal/operators/OperatorTimeoutBase.h"

@interface RxInternalOperatorsOperatorTimeout_$1 : NSObject < RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub > {
 @public
  jlong val$timeout_;
  JavaUtilConcurrentTimeUnit *val$timeUnit_;
}

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(RxScheduler_Worker *)inner;

- (instancetype)initWithLong:(jlong)capture$0
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeout_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeout_$1, val$timeUnit_, JavaUtilConcurrentTimeUnit *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(RxInternalOperatorsOperatorTimeout_$1 *self, jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$1 *new_RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$1 *create_RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTimeout_$1)

@interface RxInternalOperatorsOperatorTimeout_$1_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *val$timeoutSubscriber_;
  JavaLangLong *val$seqId_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeout_$1_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeout_$1_$1, val$timeoutSubscriber_, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeout_$1_$1, val$seqId_, JavaLangLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeout_$1_$1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$1_$1 *new_RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$1_$1 *create_RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTimeout_$1_$1)

@interface RxInternalOperatorsOperatorTimeout_$2 : NSObject < RxInternalOperatorsOperatorTimeoutBase_TimeoutStub > {
 @public
  jlong val$timeout_;
  JavaUtilConcurrentTimeUnit *val$timeUnit_;
}

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(id)value
                          withId:(RxScheduler_Worker *)inner;

- (instancetype)initWithLong:(jlong)capture$0
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeout_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeout_$2, val$timeUnit_, JavaUtilConcurrentTimeUnit *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(RxInternalOperatorsOperatorTimeout_$2 *self, jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$2 *new_RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$2 *create_RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTimeout_$2)

@interface RxInternalOperatorsOperatorTimeout_$2_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *val$timeoutSubscriber_;
  JavaLangLong *val$seqId_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeout_$2_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeout_$2_$1, val$timeoutSubscriber_, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeout_$2_$1, val$seqId_, JavaLangLong *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeout_$2_$1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$2_$1 *new_RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeout_$2_$1 *create_RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTimeout_$2_$1)

@implementation RxInternalOperatorsOperatorTimeout

- (instancetype)initWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
            withRxObservable:(RxObservable *)other
             withRxScheduler:(RxScheduler *)scheduler {
  RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(self, timeout, timeUnit, other, scheduler);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withJavaUtilConcurrentTimeUnit:withRxObservable:withRxScheduler:", "OperatorTimeout", NULL, 0x1, NULL, "(JLjava/util/concurrent/TimeUnit;Lrx/Observable<+TT;>;Lrx/Scheduler;)V" },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeout = { 2, "OperatorTimeout", "rx.internal.operators", NULL, 0x11, 1, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/internal/operators/OperatorTimeoutBase<TT;>;" };
  return &_RxInternalOperatorsOperatorTimeout;
}

@end

void RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(RxInternalOperatorsOperatorTimeout *self, jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler) {
  RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(self, new_RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(timeout, timeUnit), new_RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(timeout, timeUnit), other, scheduler);
}

RxInternalOperatorsOperatorTimeout *new_RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler) {
  RxInternalOperatorsOperatorTimeout *self = [RxInternalOperatorsOperatorTimeout alloc];
  RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(self, timeout, timeUnit, other, scheduler);
  return self;
}

RxInternalOperatorsOperatorTimeout *create_RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler) {
  return new_RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(timeout, timeUnit, other, scheduler);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeout)

@implementation RxInternalOperatorsOperatorTimeout_$1

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(RxScheduler_Worker *)inner {
  return [((RxScheduler_Worker *) nil_chk(inner)) scheduleWithRxFunctionsAction0:new_RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(timeoutSubscriber, seqId) withLong:val$timeout_ withJavaUtilConcurrentTimeUnit:val$timeUnit_];
}

- (instancetype)initWithLong:(jlong)capture$0
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$1 {
  RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:withId:withId:", "call", "Lrx.Subscription;", 0x1, NULL, "(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;Lrx/Scheduler$Worker;)Lrx/Subscription;" },
    { "initWithLong:withJavaUtilConcurrentTimeUnit:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$timeout_", NULL, 0x1012, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "val$timeUnit_", NULL, 0x1012, "Ljava.util.concurrent.TimeUnit;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorTimeout", "initWithLong:withJavaUtilConcurrentTimeUnit:withRxObservable:withRxScheduler:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeout_$1 = { 2, "", "rx.internal.operators", "OperatorTimeout", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/internal/operators/OperatorTimeoutBase$FirstTimeoutStub<TT;>;" };
  return &_RxInternalOperatorsOperatorTimeout_$1;
}

@end

void RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(RxInternalOperatorsOperatorTimeout_$1 *self, jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) {
  self->val$timeout_ = capture$0;
  self->val$timeUnit_ = capture$1;
  NSObject_init(self);
}

RxInternalOperatorsOperatorTimeout_$1 *new_RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) {
  RxInternalOperatorsOperatorTimeout_$1 *self = [RxInternalOperatorsOperatorTimeout_$1 alloc];
  RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(self, capture$0, capture$1);
  return self;
}

RxInternalOperatorsOperatorTimeout_$1 *create_RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) {
  return new_RxInternalOperatorsOperatorTimeout_$1_initWithLong_withJavaUtilConcurrentTimeUnit_(capture$0, capture$1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeout_$1)

@implementation RxInternalOperatorsOperatorTimeout_$1_$1

- (void)call {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onTimeoutWithLong:[((JavaLangLong *) nil_chk(val$seqId_)) longLongValue]];
}

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1 {
  RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", NULL, "V", 0x1, NULL, NULL },
    { "initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:withJavaLangLong:", "", NULL, 0x0, NULL, "(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$timeoutSubscriber_", NULL, 0x1012, "Lrx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber;", NULL, "Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;", .constantValue.asLong = 0 },
    { "val$seqId_", NULL, 0x1012, "Ljava.lang.Long;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorTimeout_$1", "callWithId:withId:withId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeout_$1_$1 = { 2, "", "rx.internal.operators", "OperatorTimeout$", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_RxInternalOperatorsOperatorTimeout_$1_$1;
}

@end

void RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeout_$1_$1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  self->val$timeoutSubscriber_ = capture$0;
  self->val$seqId_ = capture$1;
  NSObject_init(self);
}

RxInternalOperatorsOperatorTimeout_$1_$1 *new_RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  RxInternalOperatorsOperatorTimeout_$1_$1 *self = [RxInternalOperatorsOperatorTimeout_$1_$1 alloc];
  RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(self, capture$0, capture$1);
  return self;
}

RxInternalOperatorsOperatorTimeout_$1_$1 *create_RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  return new_RxInternalOperatorsOperatorTimeout_$1_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(capture$0, capture$1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeout_$1_$1)

@implementation RxInternalOperatorsOperatorTimeout_$2

- (id<RxSubscription>)callWithId:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)timeoutSubscriber
                          withId:(JavaLangLong *)seqId
                          withId:(id)value
                          withId:(RxScheduler_Worker *)inner {
  return [((RxScheduler_Worker *) nil_chk(inner)) scheduleWithRxFunctionsAction0:new_RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(timeoutSubscriber, seqId) withLong:val$timeout_ withJavaUtilConcurrentTimeUnit:val$timeUnit_];
}

- (instancetype)initWithLong:(jlong)capture$0
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)capture$1 {
  RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:withId:withId:withId:", "call", "Lrx.Subscription;", 0x1, NULL, "(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;TT;Lrx/Scheduler$Worker;)Lrx/Subscription;" },
    { "initWithLong:withJavaUtilConcurrentTimeUnit:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$timeout_", NULL, 0x1012, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "val$timeUnit_", NULL, 0x1012, "Ljava.util.concurrent.TimeUnit;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorTimeout", "initWithLong:withJavaUtilConcurrentTimeUnit:withRxObservable:withRxScheduler:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeout_$2 = { 2, "", "rx.internal.operators", "OperatorTimeout", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub<TT;>;" };
  return &_RxInternalOperatorsOperatorTimeout_$2;
}

@end

void RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(RxInternalOperatorsOperatorTimeout_$2 *self, jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) {
  self->val$timeout_ = capture$0;
  self->val$timeUnit_ = capture$1;
  NSObject_init(self);
}

RxInternalOperatorsOperatorTimeout_$2 *new_RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) {
  RxInternalOperatorsOperatorTimeout_$2 *self = [RxInternalOperatorsOperatorTimeout_$2 alloc];
  RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(self, capture$0, capture$1);
  return self;
}

RxInternalOperatorsOperatorTimeout_$2 *create_RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(jlong capture$0, JavaUtilConcurrentTimeUnit *capture$1) {
  return new_RxInternalOperatorsOperatorTimeout_$2_initWithLong_withJavaUtilConcurrentTimeUnit_(capture$0, capture$1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeout_$2)

@implementation RxInternalOperatorsOperatorTimeout_$2_$1

- (void)call {
  [((RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *) nil_chk(val$timeoutSubscriber_)) onTimeoutWithLong:[((JavaLangLong *) nil_chk(val$seqId_)) longLongValue]];
}

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *)capture$0
                                                                withJavaLangLong:(JavaLangLong *)capture$1 {
  RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", NULL, "V", 0x1, NULL, NULL },
    { "initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber:withJavaLangLong:", "", NULL, 0x0, NULL, "(Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$timeoutSubscriber_", NULL, 0x1012, "Lrx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber;", NULL, "Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;", .constantValue.asLong = 0 },
    { "val$seqId_", NULL, 0x1012, "Ljava.lang.Long;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorTimeout_$2", "callWithId:withId:withId:withId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeout_$2_$1 = { 2, "", "rx.internal.operators", "OperatorTimeout$", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_RxInternalOperatorsOperatorTimeout_$2_$1;
}

@end

void RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeout_$2_$1 *self, RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  self->val$timeoutSubscriber_ = capture$0;
  self->val$seqId_ = capture$1;
  NSObject_init(self);
}

RxInternalOperatorsOperatorTimeout_$2_$1 *new_RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  RxInternalOperatorsOperatorTimeout_$2_$1 *self = [RxInternalOperatorsOperatorTimeout_$2_$1 alloc];
  RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(self, capture$0, capture$1);
  return self;
}

RxInternalOperatorsOperatorTimeout_$2_$1 *create_RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *capture$0, JavaLangLong *capture$1) {
  return new_RxInternalOperatorsOperatorTimeout_$2_$1_initWithRxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_withJavaLangLong_(capture$0, capture$1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeout_$2_$1)
