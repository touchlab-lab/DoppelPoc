//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorTakeWhile.java
//

#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "rx/Subscriber.h"
#include "rx/functions/Func1.h"
#include "rx/functions/Func2.h"
#include "rx/internal/operators/OperatorTakeWhile.h"

@interface RxInternalOperatorsOperatorTakeWhile () {
 @public
  id<RxFunctionsFunc2> predicate_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeWhile, predicate_, id<RxFunctionsFunc2>)

@interface RxInternalOperatorsOperatorTakeWhile_$1 : NSObject < RxFunctionsFunc2 > {
 @public
  id<RxFunctionsFunc1> val$underlying_;
}

- (JavaLangBoolean *)callWithId:(id)input
                         withId:(JavaLangInteger *)index;

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeWhile_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeWhile_$1, val$underlying_, id<RxFunctionsFunc1>)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTakeWhile_$1 *self, id<RxFunctionsFunc1> capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$1 *new_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$1 *create_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeWhile_$1)

@interface RxInternalOperatorsOperatorTakeWhile_$2 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorTakeWhile *this$0_;
  jint counter_;
  jboolean done_;
  RxSubscriber *val$subscriber_;
}

- (void)onNextWithId:(id)args;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (instancetype)initWithRxInternalOperatorsOperatorTakeWhile:(RxInternalOperatorsOperatorTakeWhile *)outer$
                                            withRxSubscriber:(RxSubscriber *)capture$0
                                            withRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeWhile_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeWhile_$2, this$0_, RxInternalOperatorsOperatorTakeWhile *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeWhile_$2, val$subscriber_, RxSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorTakeWhile_$2 *self, RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$2 *new_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTakeWhile_$2 *create_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeWhile_$2)

@implementation RxInternalOperatorsOperatorTakeWhile

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)underlying {
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(self, underlying);
  return self;
}

- (instancetype)initWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate {
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(self, predicate);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)subscriber {
  return new_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(self, subscriber, subscriber);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxFunctionsFunc1:", "OperatorTakeWhile", NULL, 0x1, NULL, "(Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)V" },
    { "initWithRxFunctionsFunc2:", "OperatorTakeWhile", NULL, 0x1, NULL, "(Lrx/functions/Func2<-TT;-Ljava/lang/Integer;Ljava/lang/Boolean;>;)V" },
    { "callWithId:", "call", "Lrx.Subscriber;", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "predicate_", NULL, 0x12, "Lrx.functions.Func2;", NULL, "Lrx/functions/Func2<-TT;-Ljava/lang/Integer;Ljava/lang/Boolean;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeWhile = { 2, "OperatorTakeWhile", "rx.internal.operators", NULL, 0x11, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  return &_RxInternalOperatorsOperatorTakeWhile;
}

@end

void RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTakeWhile *self, id<RxFunctionsFunc1> underlying) {
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(self, new_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(underlying));
}

RxInternalOperatorsOperatorTakeWhile *new_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> underlying) {
  RxInternalOperatorsOperatorTakeWhile *self = [RxInternalOperatorsOperatorTakeWhile alloc];
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(self, underlying);
  return self;
}

RxInternalOperatorsOperatorTakeWhile *create_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> underlying) {
  return new_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc1_(underlying);
}

void RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(RxInternalOperatorsOperatorTakeWhile *self, id<RxFunctionsFunc2> predicate) {
  NSObject_init(self);
  self->predicate_ = predicate;
}

RxInternalOperatorsOperatorTakeWhile *new_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate) {
  RxInternalOperatorsOperatorTakeWhile *self = [RxInternalOperatorsOperatorTakeWhile alloc];
  RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(self, predicate);
  return self;
}

RxInternalOperatorsOperatorTakeWhile *create_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate) {
  return new_RxInternalOperatorsOperatorTakeWhile_initWithRxFunctionsFunc2_(predicate);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeWhile)

@implementation RxInternalOperatorsOperatorTakeWhile_$1

- (JavaLangBoolean *)callWithId:(id)input
                         withId:(JavaLangInteger *)index {
  return [((id<RxFunctionsFunc1>) nil_chk(val$underlying_)) callWithId:input];
}

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)capture$0 {
  RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:withId:", "call", "Ljava.lang.Boolean;", 0x1, NULL, "(TT;Ljava/lang/Integer;)Ljava/lang/Boolean;" },
    { "initWithRxFunctionsFunc1:", "", NULL, 0x0, NULL, "(Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$underlying_", NULL, 0x1012, "Lrx.functions.Func1;", NULL, "Lrx/functions/Func1<-TT;Ljava/lang/Boolean;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorTakeWhile", "initWithRxFunctionsFunc1:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeWhile_$1 = { 2, "", "rx.internal.operators", "OperatorTakeWhile", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/functions/Func2<TT;Ljava/lang/Integer;Ljava/lang/Boolean;>;" };
  return &_RxInternalOperatorsOperatorTakeWhile_$1;
}

@end

void RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorTakeWhile_$1 *self, id<RxFunctionsFunc1> capture$0) {
  self->val$underlying_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorTakeWhile_$1 *new_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) {
  RxInternalOperatorsOperatorTakeWhile_$1 *self = [RxInternalOperatorsOperatorTakeWhile_$1 alloc];
  RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(self, capture$0);
  return self;
}

RxInternalOperatorsOperatorTakeWhile_$1 *create_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> capture$0) {
  return new_RxInternalOperatorsOperatorTakeWhile_$1_initWithRxFunctionsFunc1_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeWhile_$1)

@implementation RxInternalOperatorsOperatorTakeWhile_$2

- (void)onNextWithId:(id)args {
  jboolean isSelected;
  @try {
    isSelected = [((JavaLangBoolean *) nil_chk([((id<RxFunctionsFunc2>) nil_chk(this$0_->predicate_)) callWithId:args withId:JavaLangInteger_valueOfWithInt_(counter_++)])) booleanValue];
  }
  @catch (NSException *e) {
    done_ = true;
    [((RxSubscriber *) nil_chk(val$subscriber_)) onErrorWithNSException:e];
    [self unsubscribe];
    return;
  }
  if (isSelected) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onNextWithId:args];
  }
  else {
    done_ = true;
    [((RxSubscriber *) nil_chk(val$subscriber_)) onCompleted];
    [self unsubscribe];
  }
}

- (void)onCompleted {
  if (!done_) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onCompleted];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (!done_) {
    [((RxSubscriber *) nil_chk(val$subscriber_)) onErrorWithNSException:e];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorTakeWhile:(RxInternalOperatorsOperatorTakeWhile *)outer$
                                            withRxSubscriber:(RxSubscriber *)capture$0
                                            withRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(self, outer$, capture$0, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "initWithRxInternalOperatorsOperatorTakeWhile:withRxSubscriber:withRxSubscriber:", "", NULL, 0x0, NULL, "(Lrx/internal/operators/OperatorTakeWhile;Lrx/Subscriber<-TT;>;Lrx/Subscriber<*>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrx.internal.operators.OperatorTakeWhile;", NULL, NULL, .constantValue.asLong = 0 },
    { "counter_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "done_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "val$subscriber_", NULL, 0x1012, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<-TT;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorTakeWhile", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTakeWhile_$2 = { 2, "", "rx.internal.operators", "OperatorTakeWhile", 0x8008, 4, methods, 4, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOperatorTakeWhile_$2;
}

@end

void RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorTakeWhile_$2 *self, RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  self->this$0_ = outer$;
  self->val$subscriber_ = capture$0;
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
  self->counter_ = 0;
  self->done_ = false;
}

RxInternalOperatorsOperatorTakeWhile_$2 *new_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  RxInternalOperatorsOperatorTakeWhile_$2 *self = [RxInternalOperatorsOperatorTakeWhile_$2 alloc];
  RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(self, outer$, capture$0, arg$0);
  return self;
}

RxInternalOperatorsOperatorTakeWhile_$2 *create_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorTakeWhile *outer$, RxSubscriber *capture$0, RxSubscriber *arg$0) {
  return new_RxInternalOperatorsOperatorTakeWhile_$2_initWithRxInternalOperatorsOperatorTakeWhile_withRxSubscriber_withRxSubscriber_(outer$, capture$0, arg$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTakeWhile_$2)
