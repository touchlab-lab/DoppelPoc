//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/BufferUntilSubscriber.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/concurrent/atomic/AtomicReferenceFieldUpdater.h"
#include "rx/Observer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/internal/operators/BufferUntilSubscriber.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/subjects/Subject.h"
#include "rx/subscriptions/Subscriptions.h"

@interface RxInternalOperatorsBufferUntilSubscriber () {
 @public
  jboolean forward_;
}

- (instancetype)initWithRxInternalOperatorsBufferUntilSubscriber_State:(RxInternalOperatorsBufferUntilSubscriber_State *)state;

- (void)emitWithId:(id)v;

@end

inline id<RxObserver> RxInternalOperatorsBufferUntilSubscriber_get_EMPTY_OBSERVER();
static id<RxObserver> RxInternalOperatorsBufferUntilSubscriber_EMPTY_OBSERVER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsBufferUntilSubscriber, EMPTY_OBSERVER, id<RxObserver>)

__attribute__((unused)) static void RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber *self, RxInternalOperatorsBufferUntilSubscriber_State *state);

__attribute__((unused)) static RxInternalOperatorsBufferUntilSubscriber *new_RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber_State *state) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsBufferUntilSubscriber *create_RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber_State *state);

__attribute__((unused)) static void RxInternalOperatorsBufferUntilSubscriber_emitWithId_(RxInternalOperatorsBufferUntilSubscriber *self, id v);

@interface RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction:(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1, this$0_, RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *)

__attribute__((unused)) static void RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 *self, RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *outer$);

__attribute__((unused)) static RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 *new_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 *create_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1)

@interface RxInternalOperatorsBufferUntilSubscriber_$1 : NSObject < RxObserver >

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)t;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBufferUntilSubscriber_$1)

__attribute__((unused)) static void RxInternalOperatorsBufferUntilSubscriber_$1_init(RxInternalOperatorsBufferUntilSubscriber_$1 *self);

__attribute__((unused)) static RxInternalOperatorsBufferUntilSubscriber_$1 *new_RxInternalOperatorsBufferUntilSubscriber_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsBufferUntilSubscriber_$1 *create_RxInternalOperatorsBufferUntilSubscriber_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBufferUntilSubscriber_$1)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsBufferUntilSubscriber)

@implementation RxInternalOperatorsBufferUntilSubscriber

+ (RxInternalOperatorsBufferUntilSubscriber *)create {
  return RxInternalOperatorsBufferUntilSubscriber_create();
}

- (instancetype)initWithRxInternalOperatorsBufferUntilSubscriber_State:(RxInternalOperatorsBufferUntilSubscriber_State *)state {
  RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(self, state);
  return self;
}

- (void)emitWithId:(id)v {
  RxInternalOperatorsBufferUntilSubscriber_emitWithId_(self, v);
}

- (void)onCompleted {
  if (forward_) {
    [((id<RxObserver>) nil_chk(JreLoadVolatileId(&((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_))->observerRef_))) onCompleted];
  }
  else {
    RxInternalOperatorsBufferUntilSubscriber_emitWithId_(self, [((RxInternalOperatorsNotificationLite *) nil_chk(((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_))->nl_)) completed]);
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  if (forward_) {
    [((id<RxObserver>) nil_chk(JreLoadVolatileId(&((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_))->observerRef_))) onErrorWithNSException:e];
  }
  else {
    RxInternalOperatorsBufferUntilSubscriber_emitWithId_(self, [((RxInternalOperatorsNotificationLite *) nil_chk(((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_))->nl_)) errorWithNSException:e]);
  }
}

- (void)onNextWithId:(id)t {
  if (forward_) {
    [((id<RxObserver>) nil_chk(JreLoadVolatileId(&((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_))->observerRef_))) onNextWithId:t];
  }
  else {
    RxInternalOperatorsBufferUntilSubscriber_emitWithId_(self, [((RxInternalOperatorsNotificationLite *) nil_chk(((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_))->nl_)) nextWithId:t]);
  }
}

- (jboolean)hasObservers {
  @synchronized(((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_))->guard_) {
    return JreLoadVolatileId(&state_->observerRef_) != nil;
  }
}

+ (void)initialize {
  if (self == [RxInternalOperatorsBufferUntilSubscriber class]) {
    RxInternalOperatorsBufferUntilSubscriber_EMPTY_OBSERVER = new_RxInternalOperatorsBufferUntilSubscriber_$1_init();
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsBufferUntilSubscriber)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", NULL, "Lrx.internal.operators.BufferUntilSubscriber;", 0x9, NULL, "<T:Ljava/lang/Object;>()Lrx/internal/operators/BufferUntilSubscriber<TT;>;" },
    { "initWithRxInternalOperatorsBufferUntilSubscriber_State:", "BufferUntilSubscriber", NULL, 0x2, NULL, "(Lrx/internal/operators/BufferUntilSubscriber$State<TT;>;)V" },
    { "emitWithId:", "emit", "V", 0x2, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "hasObservers", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", NULL, 0x10, "Lrx.internal.operators.BufferUntilSubscriber$State;", NULL, "Lrx/internal/operators/BufferUntilSubscriber$State<TT;>;", .constantValue.asLong = 0 },
    { "forward_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "EMPTY_OBSERVER", "EMPTY_OBSERVER", 0x1a, "Lrx.Observer;", &RxInternalOperatorsBufferUntilSubscriber_EMPTY_OBSERVER, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;", "TT;"};
  static const char *inner_classes[] = {"Lrx.internal.operators.BufferUntilSubscriber$State;", "Lrx.internal.operators.BufferUntilSubscriber$OnSubscribeAction;"};
  static const J2ObjcClassInfo _RxInternalOperatorsBufferUntilSubscriber = { 2, "BufferUntilSubscriber", "rx.internal.operators", NULL, 0x11, 7, methods, 3, fields, 2, superclass_type_args, 2, inner_classes, NULL, "<T:Ljava/lang/Object;>Lrx/subjects/Subject<TT;TT;>;" };
  return &_RxInternalOperatorsBufferUntilSubscriber;
}

@end

RxInternalOperatorsBufferUntilSubscriber *RxInternalOperatorsBufferUntilSubscriber_create() {
  RxInternalOperatorsBufferUntilSubscriber_initialize();
  RxInternalOperatorsBufferUntilSubscriber_State *state = new_RxInternalOperatorsBufferUntilSubscriber_State_init();
  return new_RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(state);
}

void RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber *self, RxInternalOperatorsBufferUntilSubscriber_State *state) {
  RxSubjectsSubject_initWithRxObservable_OnSubscribe_(self, new_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_initWithRxInternalOperatorsBufferUntilSubscriber_State_(state));
  self->forward_ = false;
  self->state_ = state;
}

RxInternalOperatorsBufferUntilSubscriber *new_RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber_State *state) {
  RxInternalOperatorsBufferUntilSubscriber *self = [RxInternalOperatorsBufferUntilSubscriber alloc];
  RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(self, state);
  return self;
}

RxInternalOperatorsBufferUntilSubscriber *create_RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber_State *state) {
  return new_RxInternalOperatorsBufferUntilSubscriber_initWithRxInternalOperatorsBufferUntilSubscriber_State_(state);
}

void RxInternalOperatorsBufferUntilSubscriber_emitWithId_(RxInternalOperatorsBufferUntilSubscriber *self, id v) {
  @synchronized(((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(self->state_))->guard_) {
    [((JavaUtilConcurrentConcurrentLinkedQueue *) nil_chk(self->state_->buffer_)) addWithId:v];
    if (JreLoadVolatileId(&self->state_->observerRef_) != nil && !self->state_->emitting_) {
      self->forward_ = true;
      self->state_->emitting_ = true;
    }
  }
  if (self->forward_) {
    id o;
    while ((o = [self->state_->buffer_ poll]) != nil) {
      [((RxInternalOperatorsNotificationLite *) nil_chk(self->state_->nl_)) acceptWithRxObserver:JreLoadVolatileId(&self->state_->observerRef_) withId:o];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsBufferUntilSubscriber)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsBufferUntilSubscriber_State)

JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater *RxInternalOperatorsBufferUntilSubscriber_State_OBSERVER_UPDATER;

@implementation RxInternalOperatorsBufferUntilSubscriber_State

- (jboolean)casObserverRefWithRxObserver:(id<RxObserver>)expected
                          withRxObserver:(id<RxObserver>)next {
  return [((JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater *) nil_chk(RxInternalOperatorsBufferUntilSubscriber_State_OBSERVER_UPDATER)) compareAndSetWithId:self withId:expected withId:next];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsBufferUntilSubscriber_State_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)dealloc {
  JreReleaseVolatile(&observerRef_);
}

- (void)__javaClone:(RxInternalOperatorsBufferUntilSubscriber_State *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&observerRef_, &original->observerRef_);
}

+ (void)initialize {
  if (self == [RxInternalOperatorsBufferUntilSubscriber_State class]) {
    RxInternalOperatorsBufferUntilSubscriber_State_OBSERVER_UPDATER = JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_newUpdaterWithIOSClass_withIOSClass_withNSString_(RxInternalOperatorsBufferUntilSubscriber_State_class_(), RxObserver_class_(), @"observerRef");
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsBufferUntilSubscriber_State)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "casObserverRefWithRxObserver:withRxObserver:", "casObserverRef", "Z", 0x0, NULL, "(Lrx/Observer<-TT;>;Lrx/Observer<-TT;>;)Z" },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "observerRef_", NULL, 0x40, "Lrx.Observer;", NULL, "Lrx/Observer<-TT;>;", .constantValue.asLong = 0 },
    { "OBSERVER_UPDATER", "OBSERVER_UPDATER", 0x18, "Ljava.util.concurrent.atomic.AtomicReferenceFieldUpdater;", &RxInternalOperatorsBufferUntilSubscriber_State_OBSERVER_UPDATER, "Ljava/util/concurrent/atomic/AtomicReferenceFieldUpdater<Lrx/internal/operators/BufferUntilSubscriber$State;Lrx/Observer;>;", .constantValue.asLong = 0 },
    { "guard_", NULL, 0x0, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "emitting_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x10, "Ljava.util.concurrent.ConcurrentLinkedQueue;", NULL, "Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "nl_", NULL, 0x10, "Lrx.internal.operators.NotificationLite;", NULL, "Lrx/internal/operators/NotificationLite<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsBufferUntilSubscriber_State = { 2, "State", "rx.internal.operators", "BufferUntilSubscriber", 0x18, 2, methods, 6, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_RxInternalOperatorsBufferUntilSubscriber_State;
}

@end

void RxInternalOperatorsBufferUntilSubscriber_State_init(RxInternalOperatorsBufferUntilSubscriber_State *self) {
  NSObject_init(self);
  (void) JreVolatileStrongAssign(&self->observerRef_, nil);
  self->guard_ = new_NSObject_init();
  self->emitting_ = false;
  self->buffer_ = new_JavaUtilConcurrentConcurrentLinkedQueue_init();
  self->nl_ = RxInternalOperatorsNotificationLite_instance();
}

RxInternalOperatorsBufferUntilSubscriber_State *new_RxInternalOperatorsBufferUntilSubscriber_State_init() {
  RxInternalOperatorsBufferUntilSubscriber_State *self = [RxInternalOperatorsBufferUntilSubscriber_State alloc];
  RxInternalOperatorsBufferUntilSubscriber_State_init(self);
  return self;
}

RxInternalOperatorsBufferUntilSubscriber_State *create_RxInternalOperatorsBufferUntilSubscriber_State_init() {
  return new_RxInternalOperatorsBufferUntilSubscriber_State_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsBufferUntilSubscriber_State)

@implementation RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction

- (instancetype)initWithRxInternalOperatorsBufferUntilSubscriber_State:(RxInternalOperatorsBufferUntilSubscriber_State *)state {
  RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_initWithRxInternalOperatorsBufferUntilSubscriber_State_(self, state);
  return self;
}

- (void)callWithId:(RxSubscriber *)s {
  if ([((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(state_)) casObserverRefWithRxObserver:nil withRxObserver:s]) {
    [((RxSubscriber *) nil_chk(s)) addWithRxSubscription:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(self))];
    jboolean win = false;
    @synchronized(state_->guard_) {
      if (!state_->emitting_) {
        state_->emitting_ = true;
        win = true;
      }
    }
    if (win) {
      RxInternalOperatorsNotificationLite *nl = RxInternalOperatorsNotificationLite_instance();
      while (true) {
        id o;
        while ((o = [((JavaUtilConcurrentConcurrentLinkedQueue *) nil_chk(state_->buffer_)) poll]) != nil) {
          [((RxInternalOperatorsNotificationLite *) nil_chk(nl)) acceptWithRxObserver:JreLoadVolatileId(&state_->observerRef_) withId:o];
        }
        @synchronized(state_->guard_) {
          if ([state_->buffer_ isEmpty]) {
            state_->emitting_ = false;
            break;
          }
        }
      }
    }
  }
  else {
    [((RxSubscriber *) nil_chk(s)) onErrorWithNSException:new_JavaLangIllegalStateException_initWithNSString_(@"Only one subscriber allowed!")];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsBufferUntilSubscriber_State:", "OnSubscribeAction", NULL, 0x1, NULL, "(Lrx/internal/operators/BufferUntilSubscriber$State<TT;>;)V" },
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "state_", NULL, 0x10, "Lrx.internal.operators.BufferUntilSubscriber$State;", NULL, "Lrx/internal/operators/BufferUntilSubscriber$State<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction = { 2, "OnSubscribeAction", "rx.internal.operators", "BufferUntilSubscriber", 0x18, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  return &_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction;
}

@end

void RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *self, RxInternalOperatorsBufferUntilSubscriber_State *state) {
  NSObject_init(self);
  self->state_ = state;
}

RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *new_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber_State *state) {
  RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *self = [RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction alloc];
  RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_initWithRxInternalOperatorsBufferUntilSubscriber_State_(self, state);
  return self;
}

RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *create_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_initWithRxInternalOperatorsBufferUntilSubscriber_State_(RxInternalOperatorsBufferUntilSubscriber_State *state) {
  return new_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_initWithRxInternalOperatorsBufferUntilSubscriber_State_(state);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction)

@implementation RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1

- (void)call {
  (void) JreVolatileStrongAssign(&((RxInternalOperatorsBufferUntilSubscriber_State *) nil_chk(this$0_->state_))->observerRef_, JreLoadStatic(RxInternalOperatorsBufferUntilSubscriber, EMPTY_OBSERVER));
}

- (instancetype)initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction:(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *)outer$ {
  RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", NULL, "V", 0x1, NULL, NULL },
    { "initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrx.internal.operators.BufferUntilSubscriber$OnSubscribeAction;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 = { 2, "", "rx.internal.operators", "BufferUntilSubscriber$OnSubscribeAction", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1;
}

@end

void RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 *self, RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 *new_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *outer$) {
  RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 *self = [RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 alloc];
  RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(self, outer$);
  return self;
}

RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1 *create_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction *outer$) {
  return new_RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1_initWithRxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsBufferUntilSubscriber_OnSubscribeAction_$1)

@implementation RxInternalOperatorsBufferUntilSubscriber_$1

- (void)onCompleted {
}

- (void)onErrorWithNSException:(NSException *)e {
}

- (void)onNextWithId:(id)t {
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsBufferUntilSubscriber_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsBufferUntilSubscriber_$1 = { 2, "", "rx.internal.operators", "BufferUntilSubscriber", 0x8008, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxInternalOperatorsBufferUntilSubscriber_$1;
}

@end

void RxInternalOperatorsBufferUntilSubscriber_$1_init(RxInternalOperatorsBufferUntilSubscriber_$1 *self) {
  NSObject_init(self);
}

RxInternalOperatorsBufferUntilSubscriber_$1 *new_RxInternalOperatorsBufferUntilSubscriber_$1_init() {
  RxInternalOperatorsBufferUntilSubscriber_$1 *self = [RxInternalOperatorsBufferUntilSubscriber_$1 alloc];
  RxInternalOperatorsBufferUntilSubscriber_$1_init(self);
  return self;
}

RxInternalOperatorsBufferUntilSubscriber_$1 *create_RxInternalOperatorsBufferUntilSubscriber_$1_init() {
  return new_RxInternalOperatorsBufferUntilSubscriber_$1_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsBufferUntilSubscriber_$1)
