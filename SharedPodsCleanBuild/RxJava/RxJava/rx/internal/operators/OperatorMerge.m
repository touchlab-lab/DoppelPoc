//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorMerge.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Boolean.h"
#include "java/lang/Long.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/ConcurrentLinkedQueue.h"
#include "java/util/concurrent/atomic/AtomicIntegerFieldUpdater.h"
#include "java/util/concurrent/atomic/AtomicLongFieldUpdater.h"
#include "rx/Observable.h"
#include "rx/Producer.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/exceptions/CompositeException.h"
#include "rx/exceptions/MissingBackpressureException.h"
#include "rx/exceptions/OnErrorThrowable.h"
#include "rx/functions/Func1.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/internal/operators/OperatorMerge.h"
#include "rx/internal/util/RxRingBuffer.h"
#include "rx/internal/util/ScalarSynchronousObservable.h"
#include "rx/internal/util/SubscriptionIndexedRingBuffer.h"

@class RxInternalOperatorsOperatorMerge_InnerSubscriber;
@class RxInternalOperatorsOperatorMerge_MergeProducer;

@interface RxInternalOperatorsOperatorMerge () {
 @public
  jboolean delayErrors_;
}

@end

@interface RxInternalOperatorsOperatorMerge_MergeSubscriber : RxSubscriber {
 @public
  RxInternalOperatorsNotificationLite *on_;
  RxSubscriber *actual_;
  RxInternalOperatorsOperatorMerge_MergeProducer *mergeProducer_;
  jint wip_;
  jboolean completed_;
  jboolean delayErrors_;
  JavaUtilConcurrentConcurrentLinkedQueue *exceptions_;
  volatile_id childrenSubscribers_;
  RxInternalUtilRxRingBuffer *scalarValueQueue_;
  jint missedEmitting_;
  jboolean emitLock_;
  jint lastDrainedIndex_;
  id<RxFunctionsFunc1> DRAIN_ACTION_;
}

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual
                         withBoolean:(jboolean)delayErrors;

- (void)onStart;

- (void)onNextWithId:(RxObservable *)t;

- (void)handleNewSourceWithRxObservable:(RxObservable *)t;

- (void)handleScalarSynchronousObservableWithRxInternalUtilScalarSynchronousObservable:(RxInternalUtilScalarSynchronousObservable *)t;

- (void)handleScalarSynchronousObservableWithoutRequestLimitsWithRxInternalUtilScalarSynchronousObservable:(RxInternalUtilScalarSynchronousObservable *)t;

- (void)handleScalarSynchronousObservableWithRequestLimitsWithRxInternalUtilScalarSynchronousObservable:(RxInternalUtilScalarSynchronousObservable *)t;

- (void)initScalarValueQueueIfNeeded OBJC_METHOD_FAMILY_NONE;

- (jboolean)releaseEmitLock;

- (jboolean)getEmitLock;

- (jboolean)drainQueuesIfNeeded;

- (void)drainChildrenQueues;

- (jint)drainScalarValueQueue;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)innerErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define innerErrorWithJavaLangThrowable innerErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onCompleted;

- (void)completeInnerWithRxInternalOperatorsOperatorMerge_InnerSubscriber:(RxInternalOperatorsOperatorMerge_InnerSubscriber *)s;

- (void)drainAndComplete;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMerge_MergeSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber, on_, RxInternalOperatorsNotificationLite *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber, actual_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber, mergeProducer_, RxInternalOperatorsOperatorMerge_MergeProducer *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber, exceptions_, JavaUtilConcurrentConcurrentLinkedQueue *)
J2OBJC_VOLATILE_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber, childrenSubscribers_, RxInternalUtilSubscriptionIndexedRingBuffer *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber, scalarValueQueue_, RxInternalUtilRxRingBuffer *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber, DRAIN_ACTION_, id<RxFunctionsFunc1>)

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxSubscriber *actual, jboolean delayErrors);

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_MergeSubscriber *new_RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(RxSubscriber *actual, jboolean delayErrors) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_MergeSubscriber *create_RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(RxSubscriber *actual, jboolean delayErrors);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleNewSourceWithRxObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxObservable *t);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRxInternalUtilScalarSynchronousObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxInternalUtilScalarSynchronousObservable *t);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithoutRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxInternalUtilScalarSynchronousObservable *t);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxInternalUtilScalarSynchronousObservable *t);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_initScalarValueQueueIfNeeded(RxInternalOperatorsOperatorMerge_MergeSubscriber *self);

__attribute__((unused)) static jboolean RxInternalOperatorsOperatorMerge_MergeSubscriber_releaseEmitLock(RxInternalOperatorsOperatorMerge_MergeSubscriber *self);

__attribute__((unused)) static jboolean RxInternalOperatorsOperatorMerge_MergeSubscriber_getEmitLock(RxInternalOperatorsOperatorMerge_MergeSubscriber *self);

__attribute__((unused)) static jboolean RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(RxInternalOperatorsOperatorMerge_MergeSubscriber *self);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_drainChildrenQueues(RxInternalOperatorsOperatorMerge_MergeSubscriber *self);

__attribute__((unused)) static jint RxInternalOperatorsOperatorMerge_MergeSubscriber_drainScalarValueQueue(RxInternalOperatorsOperatorMerge_MergeSubscriber *self);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_innerErrorWithNSException_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, NSException *e);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_drainAndComplete(RxInternalOperatorsOperatorMerge_MergeSubscriber *self);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMerge_MergeSubscriber)

@interface RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 : NSObject < RxFunctionsFunc1 > {
 @public
  RxInternalOperatorsOperatorMerge_MergeSubscriber *this$0_;
}

- (JavaLangBoolean *)callWithId:(RxInternalOperatorsOperatorMerge_InnerSubscriber *)s;

- (instancetype)initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:(RxInternalOperatorsOperatorMerge_MergeSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMerge_MergeSubscriber_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeSubscriber_$1, this$0_, RxInternalOperatorsOperatorMerge_MergeSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 *self, RxInternalOperatorsOperatorMerge_MergeSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 *new_RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 *create_RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMerge_MergeSubscriber_$1)

@interface RxInternalOperatorsOperatorMerge_MergeProducer : NSObject < RxProducer > {
 @public
  RxInternalOperatorsOperatorMerge_MergeSubscriber *ms_;
  volatile_jlong requested_;
}

- (instancetype)initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:(RxInternalOperatorsOperatorMerge_MergeSubscriber *)ms;

- (void)requestWithLong:(jlong)n;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorMerge_MergeProducer)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_MergeProducer, ms_, RxInternalOperatorsOperatorMerge_MergeSubscriber *)

inline JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOperatorMerge_MergeProducer_get_REQUESTED();
static JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOperatorMerge_MergeProducer_REQUESTED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorMerge_MergeProducer, REQUESTED, JavaUtilConcurrentAtomicAtomicLongFieldUpdater *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeProducer *self, RxInternalOperatorsOperatorMerge_MergeSubscriber *ms);

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_MergeProducer *new_RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *ms) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_MergeProducer *create_RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *ms);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMerge_MergeProducer)

@interface RxInternalOperatorsOperatorMerge_InnerSubscriber : RxSubscriber {
 @public
  jint sindex_;
  RxInternalOperatorsOperatorMerge_MergeSubscriber *parentSubscriber_;
  RxInternalOperatorsOperatorMerge_MergeProducer *producer_;
  volatile_jint terminated_;
  RxInternalUtilRxRingBuffer *q_;
  jint emitted_;
  jint THRESHOLD_;
}

- (instancetype)initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:(RxInternalOperatorsOperatorMerge_MergeSubscriber *)parent
                      withRxInternalOperatorsOperatorMerge_MergeProducer:(RxInternalOperatorsOperatorMerge_MergeProducer *)producer;

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onCompleted;

- (void)requestMoreWithLong:(jlong)n;

- (void)emitWithId:(id)t
       withBoolean:(jboolean)complete;

- (void)enqueueWithId:(id)t
          withBoolean:(jboolean)complete;

- (jint)drainRequested;

- (jint)drainAll;

- (jint)drainQueue;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorMerge_InnerSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_InnerSubscriber, parentSubscriber_, RxInternalOperatorsOperatorMerge_MergeSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_InnerSubscriber, producer_, RxInternalOperatorsOperatorMerge_MergeProducer *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMerge_InnerSubscriber, q_, RxInternalUtilRxRingBuffer *)

inline JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorMerge_InnerSubscriber_get_ONCE_TERMINATED();
static JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorMerge_InnerSubscriber_ONCE_TERMINATED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorMerge_InnerSubscriber, ONCE_TERMINATED, JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(RxInternalOperatorsOperatorMerge_InnerSubscriber *self, RxInternalOperatorsOperatorMerge_MergeSubscriber *parent, RxInternalOperatorsOperatorMerge_MergeProducer *producer);

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_InnerSubscriber *new_RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(RxInternalOperatorsOperatorMerge_MergeSubscriber *parent, RxInternalOperatorsOperatorMerge_MergeProducer *producer) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMerge_InnerSubscriber *create_RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(RxInternalOperatorsOperatorMerge_MergeSubscriber *parent, RxInternalOperatorsOperatorMerge_MergeProducer *producer);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_InnerSubscriber_emitWithId_withBoolean_(RxInternalOperatorsOperatorMerge_InnerSubscriber *self, id t, jboolean complete);

__attribute__((unused)) static void RxInternalOperatorsOperatorMerge_InnerSubscriber_enqueueWithId_withBoolean_(RxInternalOperatorsOperatorMerge_InnerSubscriber *self, id t, jboolean complete);

__attribute__((unused)) static jint RxInternalOperatorsOperatorMerge_InnerSubscriber_drainRequested(RxInternalOperatorsOperatorMerge_InnerSubscriber *self);

__attribute__((unused)) static jint RxInternalOperatorsOperatorMerge_InnerSubscriber_drainAll(RxInternalOperatorsOperatorMerge_InnerSubscriber *self);

__attribute__((unused)) static jint RxInternalOperatorsOperatorMerge_InnerSubscriber_drainQueue(RxInternalOperatorsOperatorMerge_InnerSubscriber *self);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMerge_InnerSubscriber)

@implementation RxInternalOperatorsOperatorMerge

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorMerge_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithBoolean:(jboolean)delayErrors {
  RxInternalOperatorsOperatorMerge_initWithBoolean_(self, delayErrors);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  return new_RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(child, delayErrors_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "OperatorMerge", NULL, 0x1, NULL, NULL },
    { "initWithBoolean:", "OperatorMerge", NULL, 0x1, NULL, NULL },
    { "callWithId:", "call", "Lrx.Subscriber;", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<Lrx/Observable<+TT;>;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delayErrors_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.internal.operators.OperatorMerge$MergeSubscriber;", "Lrx.internal.operators.OperatorMerge$MergeProducer;", "Lrx.internal.operators.OperatorMerge$InnerSubscriber;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMerge = { 2, "OperatorMerge", "rx.internal.operators", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 3, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;Lrx/Observable<+TT;>;>;" };
  return &_RxInternalOperatorsOperatorMerge;
}

@end

void RxInternalOperatorsOperatorMerge_init(RxInternalOperatorsOperatorMerge *self) {
  NSObject_init(self);
  self->delayErrors_ = false;
}

RxInternalOperatorsOperatorMerge *new_RxInternalOperatorsOperatorMerge_init() {
  RxInternalOperatorsOperatorMerge *self = [RxInternalOperatorsOperatorMerge alloc];
  RxInternalOperatorsOperatorMerge_init(self);
  return self;
}

RxInternalOperatorsOperatorMerge *create_RxInternalOperatorsOperatorMerge_init() {
  return new_RxInternalOperatorsOperatorMerge_init();
}

void RxInternalOperatorsOperatorMerge_initWithBoolean_(RxInternalOperatorsOperatorMerge *self, jboolean delayErrors) {
  NSObject_init(self);
  self->delayErrors_ = delayErrors;
}

RxInternalOperatorsOperatorMerge *new_RxInternalOperatorsOperatorMerge_initWithBoolean_(jboolean delayErrors) {
  RxInternalOperatorsOperatorMerge *self = [RxInternalOperatorsOperatorMerge alloc];
  RxInternalOperatorsOperatorMerge_initWithBoolean_(self, delayErrors);
  return self;
}

RxInternalOperatorsOperatorMerge *create_RxInternalOperatorsOperatorMerge_initWithBoolean_(jboolean delayErrors) {
  return new_RxInternalOperatorsOperatorMerge_initWithBoolean_(delayErrors);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMerge)

@implementation RxInternalOperatorsOperatorMerge_MergeSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)actual
                         withBoolean:(jboolean)delayErrors {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(self, actual, delayErrors);
  return self;
}

- (void)onStart {
  [self requestWithLong:JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE)];
}

- (void)onNextWithId:(RxObservable *)t {
  if ([t isKindOfClass:[RxInternalUtilScalarSynchronousObservable class]]) {
    RxInternalUtilScalarSynchronousObservable *t2 = (RxInternalUtilScalarSynchronousObservable *) cast_chk(t, [RxInternalUtilScalarSynchronousObservable class]);
    RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRxInternalUtilScalarSynchronousObservable_(self, t2);
  }
  else {
    if (t == nil || [self isUnsubscribed]) {
      return;
    }
    @synchronized(self) {
      wip_++;
    }
    RxInternalOperatorsOperatorMerge_MergeSubscriber_handleNewSourceWithRxObservable_(self, t);
  }
}

- (void)handleNewSourceWithRxObservable:(RxObservable *)t {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_handleNewSourceWithRxObservable_(self, t);
}

- (void)handleScalarSynchronousObservableWithRxInternalUtilScalarSynchronousObservable:(RxInternalUtilScalarSynchronousObservable *)t {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRxInternalUtilScalarSynchronousObservable_(self, t);
}

- (void)handleScalarSynchronousObservableWithoutRequestLimitsWithRxInternalUtilScalarSynchronousObservable:(RxInternalUtilScalarSynchronousObservable *)t {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithoutRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(self, t);
}

- (void)handleScalarSynchronousObservableWithRequestLimitsWithRxInternalUtilScalarSynchronousObservable:(RxInternalUtilScalarSynchronousObservable *)t {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(self, t);
}

- (void)initScalarValueQueueIfNeeded {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_initScalarValueQueueIfNeeded(self);
}

- (jboolean)releaseEmitLock {
  return RxInternalOperatorsOperatorMerge_MergeSubscriber_releaseEmitLock(self);
}

- (jboolean)getEmitLock {
  return RxInternalOperatorsOperatorMerge_MergeSubscriber_getEmitLock(self);
}

- (jboolean)drainQueuesIfNeeded {
  return RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(self);
}

- (void)drainChildrenQueues {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_drainChildrenQueues(self);
}

- (jint)drainScalarValueQueue {
  return RxInternalOperatorsOperatorMerge_MergeSubscriber_drainScalarValueQueue(self);
}

- (void)onErrorWithNSException:(NSException *)e {
  completed_ = true;
  RxInternalOperatorsOperatorMerge_MergeSubscriber_innerErrorWithNSException_(self, e);
}

- (void)innerErrorWithNSException:(NSException *)e {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_innerErrorWithNSException_(self, e);
}

- (void)onCompleted {
  jboolean c = false;
  @synchronized(self) {
    completed_ = true;
    if (wip_ == 0 && (scalarValueQueue_ == nil || [scalarValueQueue_ isEmpty])) {
      c = true;
    }
  }
  if (c) {
    RxInternalOperatorsOperatorMerge_MergeSubscriber_drainAndComplete(self);
  }
}

- (void)completeInnerWithRxInternalOperatorsOperatorMerge_InnerSubscriber:(RxInternalOperatorsOperatorMerge_InnerSubscriber *)s {
  jboolean sendOnComplete = false;
  @synchronized(self) {
    wip_--;
    if (wip_ == 0 && completed_) {
      sendOnComplete = true;
    }
  }
  [((RxInternalUtilSubscriptionIndexedRingBuffer *) nil_chk(JreLoadVolatileId(&childrenSubscribers_))) removeWithInt:((RxInternalOperatorsOperatorMerge_InnerSubscriber *) nil_chk(s))->sindex_];
  if (sendOnComplete) {
    RxInternalOperatorsOperatorMerge_MergeSubscriber_drainAndComplete(self);
  }
}

- (void)drainAndComplete {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_drainAndComplete(self);
}

- (void)dealloc {
  JreReleaseVolatile(&childrenSubscribers_);
}

- (void)__javaClone:(RxInternalOperatorsOperatorMerge_MergeSubscriber *)original {
  [super __javaClone:original];
  JreCloneVolatileStrong(&childrenSubscribers_, &original->childrenSubscribers_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withBoolean:", "MergeSubscriber", NULL, 0x1, NULL, "(Lrx/Subscriber<-TT;>;Z)V" },
    { "onStart", NULL, "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(Lrx/Observable<+TT;>;)V" },
    { "handleNewSourceWithRxObservable:", "handleNewSource", "V", 0x2, NULL, "(Lrx/Observable<+TT;>;)V" },
    { "handleScalarSynchronousObservableWithRxInternalUtilScalarSynchronousObservable:", "handleScalarSynchronousObservable", "V", 0x2, NULL, "(Lrx/internal/util/ScalarSynchronousObservable<+TT;>;)V" },
    { "handleScalarSynchronousObservableWithoutRequestLimitsWithRxInternalUtilScalarSynchronousObservable:", "handleScalarSynchronousObservableWithoutRequestLimits", "V", 0x2, NULL, "(Lrx/internal/util/ScalarSynchronousObservable<+TT;>;)V" },
    { "handleScalarSynchronousObservableWithRequestLimitsWithRxInternalUtilScalarSynchronousObservable:", "handleScalarSynchronousObservableWithRequestLimits", "V", 0x2, NULL, "(Lrx/internal/util/ScalarSynchronousObservable<+TT;>;)V" },
    { "initScalarValueQueueIfNeeded", NULL, "V", 0x2, NULL, NULL },
    { "releaseEmitLock", NULL, "Z", 0x22, NULL, NULL },
    { "getEmitLock", NULL, "Z", 0x22, NULL, NULL },
    { "drainQueuesIfNeeded", NULL, "Z", 0x2, NULL, NULL },
    { "drainChildrenQueues", NULL, "V", 0x2, NULL, NULL },
    { "drainScalarValueQueue", NULL, "I", 0x2, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "innerErrorWithNSException:", "innerError", "V", 0x2, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "completeInnerWithRxInternalOperatorsOperatorMerge_InnerSubscriber:", "completeInner", "V", 0x0, NULL, "(Lrx/internal/operators/OperatorMerge$InnerSubscriber<TT;>;)V" },
    { "drainAndComplete", NULL, "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "on_", NULL, 0x10, "Lrx.internal.operators.NotificationLite;", NULL, "Lrx/internal/operators/NotificationLite<TT;>;", .constantValue.asLong = 0 },
    { "actual_", NULL, 0x10, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<-TT;>;", .constantValue.asLong = 0 },
    { "mergeProducer_", NULL, 0x12, "Lrx.internal.operators.OperatorMerge$MergeProducer;", NULL, "Lrx/internal/operators/OperatorMerge$MergeProducer<TT;>;", .constantValue.asLong = 0 },
    { "wip_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "completed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "delayErrors_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "exceptions_", NULL, 0x2, "Ljava.util.concurrent.ConcurrentLinkedQueue;", NULL, "Ljava/util/concurrent/ConcurrentLinkedQueue<Ljava/lang/Throwable;>;", .constantValue.asLong = 0 },
    { "childrenSubscribers_", NULL, 0x42, "Lrx.internal.util.SubscriptionIndexedRingBuffer;", NULL, "Lrx/internal/util/SubscriptionIndexedRingBuffer<Lrx/internal/operators/OperatorMerge$InnerSubscriber<TT;>;>;", .constantValue.asLong = 0 },
    { "scalarValueQueue_", NULL, 0x2, "Lrx.internal.util.RxRingBuffer;", NULL, NULL, .constantValue.asLong = 0 },
    { "missedEmitting_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "emitLock_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "lastDrainedIndex_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "DRAIN_ACTION_", NULL, 0x10, "Lrx.functions.Func1;", NULL, "Lrx/functions/Func1<Lrx/internal/operators/OperatorMerge$InnerSubscriber<TT;>;Ljava/lang/Boolean;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lrx.Observable;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMerge_MergeSubscriber = { 2, "MergeSubscriber", "rx.internal.operators", "OperatorMerge", 0x1a, 18, methods, 13, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/Subscriber<Lrx/Observable<+TT;>;>;" };
  return &_RxInternalOperatorsOperatorMerge_MergeSubscriber;
}

@end

void RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxSubscriber *actual, jboolean delayErrors) {
  RxSubscriber_initWithRxSubscriber_(self, actual);
  self->on_ = RxInternalOperatorsNotificationLite_instance();
  self->scalarValueQueue_ = nil;
  self->missedEmitting_ = 0;
  self->emitLock_ = false;
  self->lastDrainedIndex_ = 0;
  self->DRAIN_ACTION_ = new_RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(self);
  self->actual_ = actual;
  self->mergeProducer_ = new_RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(self);
  self->delayErrors_ = delayErrors;
  [((RxSubscriber *) nil_chk(actual)) addWithRxSubscription:self];
  [actual setProducerWithRxProducer:self->mergeProducer_];
}

RxInternalOperatorsOperatorMerge_MergeSubscriber *new_RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(RxSubscriber *actual, jboolean delayErrors) {
  RxInternalOperatorsOperatorMerge_MergeSubscriber *self = [RxInternalOperatorsOperatorMerge_MergeSubscriber alloc];
  RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(self, actual, delayErrors);
  return self;
}

RxInternalOperatorsOperatorMerge_MergeSubscriber *create_RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(RxSubscriber *actual, jboolean delayErrors) {
  return new_RxInternalOperatorsOperatorMerge_MergeSubscriber_initWithRxSubscriber_withBoolean_(actual, delayErrors);
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleNewSourceWithRxObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxObservable *t) {
  if (JreLoadVolatileId(&self->childrenSubscribers_) == nil) {
    (void) JreVolatileStrongAssign(&self->childrenSubscribers_, new_RxInternalUtilSubscriptionIndexedRingBuffer_init());
    [self addWithRxSubscription:JreLoadVolatileId(&self->childrenSubscribers_)];
  }
  RxInternalOperatorsOperatorMerge_MergeProducer *producerIfNeeded = nil;
  if (JreLoadVolatileLong(&((RxInternalOperatorsOperatorMerge_MergeProducer *) nil_chk(self->mergeProducer_))->requested_) != JavaLangLong_MAX_VALUE) {
    producerIfNeeded = self->mergeProducer_;
  }
  RxInternalOperatorsOperatorMerge_InnerSubscriber *i = new_RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(self, producerIfNeeded);
  i->sindex_ = [((RxInternalUtilSubscriptionIndexedRingBuffer *) nil_chk(JreLoadVolatileId(&self->childrenSubscribers_))) addWithRxSubscription:i];
  (void) [((RxObservable *) nil_chk(t)) unsafeSubscribeWithRxSubscriber:i];
  [self requestWithLong:1];
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRxInternalUtilScalarSynchronousObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxInternalUtilScalarSynchronousObservable *t) {
  if (JreLoadVolatileLong(&((RxInternalOperatorsOperatorMerge_MergeProducer *) nil_chk(self->mergeProducer_))->requested_) == JavaLangLong_MAX_VALUE) {
    RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithoutRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(self, t);
  }
  else {
    RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(self, t);
  }
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithoutRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxInternalUtilScalarSynchronousObservable *t) {
  id value = [((RxInternalUtilScalarSynchronousObservable *) nil_chk(t)) get];
  if (RxInternalOperatorsOperatorMerge_MergeSubscriber_getEmitLock(self)) {
    @try {
      [((RxSubscriber *) nil_chk(self->actual_)) onNextWithId:value];
      return;
    }
    @finally {
      if (RxInternalOperatorsOperatorMerge_MergeSubscriber_releaseEmitLock(self)) {
        RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(self);
      }
      [self requestWithLong:1];
    }
  }
  else {
    RxInternalOperatorsOperatorMerge_MergeSubscriber_initScalarValueQueueIfNeeded(self);
    @try {
      [((RxInternalUtilRxRingBuffer *) nil_chk(self->scalarValueQueue_)) onNextWithId:value];
    }
    @catch (RxExceptionsMissingBackpressureException *e) {
      [self onErrorWithNSException:e];
    }
    return;
  }
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_handleScalarSynchronousObservableWithRequestLimitsWithRxInternalUtilScalarSynchronousObservable_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, RxInternalUtilScalarSynchronousObservable *t) {
  if (RxInternalOperatorsOperatorMerge_MergeSubscriber_getEmitLock(self)) {
    jboolean emitted = false;
    @try {
      jlong r = JreLoadVolatileLong(&((RxInternalOperatorsOperatorMerge_MergeProducer *) nil_chk(self->mergeProducer_))->requested_);
      if (r > 0) {
        emitted = true;
        [((RxSubscriber *) nil_chk(self->actual_)) onNextWithId:[((RxInternalUtilScalarSynchronousObservable *) nil_chk(t)) get]];
        [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorMerge_MergeProducer, REQUESTED))) decrementAndGetWithId:self->mergeProducer_];
        return;
      }
    }
    @finally {
      if (RxInternalOperatorsOperatorMerge_MergeSubscriber_releaseEmitLock(self)) {
        RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(self);
      }
      if (emitted) {
        [self requestWithLong:1];
      }
    }
  }
  RxInternalOperatorsOperatorMerge_MergeSubscriber_initScalarValueQueueIfNeeded(self);
  @try {
    [((RxInternalUtilRxRingBuffer *) nil_chk(self->scalarValueQueue_)) onNextWithId:[((RxInternalUtilScalarSynchronousObservable *) nil_chk(t)) get]];
  }
  @catch (RxExceptionsMissingBackpressureException *e) {
    [self onErrorWithNSException:e];
  }
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_initScalarValueQueueIfNeeded(RxInternalOperatorsOperatorMerge_MergeSubscriber *self) {
  if (self->scalarValueQueue_ == nil) {
    self->scalarValueQueue_ = RxInternalUtilRxRingBuffer_getSpmcInstance();
    [self addWithRxSubscription:self->scalarValueQueue_];
  }
}

jboolean RxInternalOperatorsOperatorMerge_MergeSubscriber_releaseEmitLock(RxInternalOperatorsOperatorMerge_MergeSubscriber *self) {
  @synchronized(self) {
    self->emitLock_ = false;
    if (self->missedEmitting_ == 0) {
      return false;
    }
    else {
      return true;
    }
  }
}

jboolean RxInternalOperatorsOperatorMerge_MergeSubscriber_getEmitLock(RxInternalOperatorsOperatorMerge_MergeSubscriber *self) {
  @synchronized(self) {
    if (self->emitLock_) {
      self->missedEmitting_++;
      return false;
    }
    else {
      self->emitLock_ = true;
      self->missedEmitting_ = 0;
      return true;
    }
  }
}

jboolean RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(RxInternalOperatorsOperatorMerge_MergeSubscriber *self) {
  while (true) {
    if (RxInternalOperatorsOperatorMerge_MergeSubscriber_getEmitLock(self)) {
      jint emitted = 0;
      @try {
        emitted = RxInternalOperatorsOperatorMerge_MergeSubscriber_drainScalarValueQueue(self);
        RxInternalOperatorsOperatorMerge_MergeSubscriber_drainChildrenQueues(self);
      }
      @finally {
        jboolean moreToDrain = RxInternalOperatorsOperatorMerge_MergeSubscriber_releaseEmitLock(self);
        [self requestWithLong:emitted];
        if (!moreToDrain) {
          return true;
        }
      }
    }
    else {
      return false;
    }
  }
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_drainChildrenQueues(RxInternalOperatorsOperatorMerge_MergeSubscriber *self) {
  if (JreLoadVolatileId(&self->childrenSubscribers_) != nil) {
    self->lastDrainedIndex_ = [((RxInternalUtilSubscriptionIndexedRingBuffer *) JreLoadVolatileId(&self->childrenSubscribers_)) forEachWithRxFunctionsFunc1:self->DRAIN_ACTION_ withInt:self->lastDrainedIndex_];
  }
}

jint RxInternalOperatorsOperatorMerge_MergeSubscriber_drainScalarValueQueue(RxInternalOperatorsOperatorMerge_MergeSubscriber *self) {
  if (self->scalarValueQueue_ != nil) {
    jlong r = JreLoadVolatileLong(&((RxInternalOperatorsOperatorMerge_MergeProducer *) nil_chk(self->mergeProducer_))->requested_);
    jint emittedWhileDraining = 0;
    if (r < 0) {
      id o = nil;
      while ((o = [self->scalarValueQueue_ poll]) != nil) {
        [((RxInternalOperatorsNotificationLite *) nil_chk(self->on_)) acceptWithRxObserver:self->actual_ withId:o];
        emittedWhileDraining++;
      }
    }
    else if (r > 0) {
      jlong toEmit = r;
      for (jint i = 0; i < toEmit; i++) {
        id o = [self->scalarValueQueue_ poll];
        if (o == nil) {
          break;
        }
        else {
          [((RxInternalOperatorsNotificationLite *) nil_chk(self->on_)) acceptWithRxObserver:self->actual_ withId:o];
          emittedWhileDraining++;
        }
      }
      [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorMerge_MergeProducer, REQUESTED))) getAndAddWithId:self->mergeProducer_ withLong:-emittedWhileDraining];
    }
    return emittedWhileDraining;
  }
  return 0;
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_innerErrorWithNSException_(RxInternalOperatorsOperatorMerge_MergeSubscriber *self, NSException *e) {
  if (self->delayErrors_) {
    @synchronized(self) {
      if (self->exceptions_ == nil) {
        self->exceptions_ = new_JavaUtilConcurrentConcurrentLinkedQueue_init();
      }
    }
    [((JavaUtilConcurrentConcurrentLinkedQueue *) nil_chk(self->exceptions_)) addWithId:e];
    jboolean sendOnComplete = false;
    @synchronized(self) {
      self->wip_--;
      if ((self->wip_ == 0 && self->completed_) || (self->wip_ < 0)) {
        sendOnComplete = true;
      }
    }
    if (sendOnComplete) {
      RxInternalOperatorsOperatorMerge_MergeSubscriber_drainAndComplete(self);
    }
  }
  else {
    [((RxSubscriber *) nil_chk(self->actual_)) onErrorWithNSException:e];
  }
}

void RxInternalOperatorsOperatorMerge_MergeSubscriber_drainAndComplete(RxInternalOperatorsOperatorMerge_MergeSubscriber *self) {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(self);
  if (self->delayErrors_) {
    id<JavaUtilQueue> es = nil;
    @synchronized(self) {
      es = self->exceptions_;
    }
    if (es != nil) {
      if ([es isEmpty]) {
        [((RxSubscriber *) nil_chk(self->actual_)) onCompleted];
      }
      else if ([es size] == 1) {
        [((RxSubscriber *) nil_chk(self->actual_)) onErrorWithNSException:[es poll]];
      }
      else {
        [((RxSubscriber *) nil_chk(self->actual_)) onErrorWithNSException:new_RxExceptionsCompositeException_initWithJavaUtilCollection_(es)];
      }
    }
    else {
      [((RxSubscriber *) nil_chk(self->actual_)) onCompleted];
    }
  }
  else {
    [((RxSubscriber *) nil_chk(self->actual_)) onCompleted];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMerge_MergeSubscriber)

@implementation RxInternalOperatorsOperatorMerge_MergeSubscriber_$1

- (JavaLangBoolean *)callWithId:(RxInternalOperatorsOperatorMerge_InnerSubscriber *)s {
  if (((RxInternalOperatorsOperatorMerge_InnerSubscriber *) nil_chk(s))->q_ != nil) {
    jlong r = JreLoadVolatileLong(&((RxInternalOperatorsOperatorMerge_MergeProducer *) nil_chk(this$0_->mergeProducer_))->requested_);
    jint emitted = 0;
    emitted += RxInternalOperatorsOperatorMerge_InnerSubscriber_drainQueue(s);
    if (emitted > 0) {
      emitted += s->emitted_;
      s->emitted_ = 0;
      [s requestMoreWithLong:emitted];
    }
    if (emitted == r) {
      return JreLoadStatic(JavaLangBoolean, FALSE);
    }
  }
  return JreLoadStatic(JavaLangBoolean, TRUE);
}

- (instancetype)initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:(RxInternalOperatorsOperatorMerge_MergeSubscriber *)outer$ {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "Ljava.lang.Boolean;", 0x1, NULL, "(Lrx/internal/operators/OperatorMerge$InnerSubscriber<TT;>;)Ljava/lang/Boolean;" },
    { "initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrx.internal.operators.OperatorMerge$MergeSubscriber;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 = { 2, "", "rx.internal.operators", "OperatorMerge$MergeSubscriber", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lrx/functions/Func1<Lrx/internal/operators/OperatorMerge$InnerSubscriber<TT;>;Ljava/lang/Boolean;>;" };
  return &_RxInternalOperatorsOperatorMerge_MergeSubscriber_$1;
}

@end

void RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 *self, RxInternalOperatorsOperatorMerge_MergeSubscriber *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 *new_RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *outer$) {
  RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 *self = [RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 alloc];
  RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(self, outer$);
  return self;
}

RxInternalOperatorsOperatorMerge_MergeSubscriber_$1 *create_RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *outer$) {
  return new_RxInternalOperatorsOperatorMerge_MergeSubscriber_$1_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMerge_MergeSubscriber_$1)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorMerge_MergeProducer)

@implementation RxInternalOperatorsOperatorMerge_MergeProducer

- (instancetype)initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:(RxInternalOperatorsOperatorMerge_MergeSubscriber *)ms {
  RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(self, ms);
  return self;
}

- (void)requestWithLong:(jlong)n {
  if (JreLoadVolatileLong(&requested_) == JavaLangLong_MAX_VALUE) {
    return;
  }
  if (n == JavaLangLong_MAX_VALUE) {
    JreAssignVolatileLong(&requested_, JavaLangLong_MAX_VALUE);
  }
  else {
    [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(RxInternalOperatorsOperatorMerge_MergeProducer_REQUESTED)) getAndAddWithId:self withLong:n];
    if (RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(nil_chk(ms_))) {
      jboolean sendComplete = false;
      @synchronized(ms_) {
        if (ms_->wip_ == 0 && ms_->scalarValueQueue_ != nil && [ms_->scalarValueQueue_ isEmpty]) {
          sendComplete = true;
        }
      }
      if (sendComplete) {
        RxInternalOperatorsOperatorMerge_MergeSubscriber_drainAndComplete(ms_);
      }
    }
  }
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorMerge_MergeProducer class]) {
    RxInternalOperatorsOperatorMerge_MergeProducer_REQUESTED = JavaUtilConcurrentAtomicAtomicLongFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxInternalOperatorsOperatorMerge_MergeProducer_class_(), @"requested");
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorMerge_MergeProducer)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:", "MergeProducer", NULL, 0x1, NULL, "(Lrx/internal/operators/OperatorMerge$MergeSubscriber<TT;>;)V" },
    { "requestWithLong:", "request", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ms_", NULL, 0x12, "Lrx.internal.operators.OperatorMerge$MergeSubscriber;", NULL, "Lrx/internal/operators/OperatorMerge$MergeSubscriber<TT;>;", .constantValue.asLong = 0 },
    { "requested_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "REQUESTED", "REQUESTED", 0x18, "Ljava.util.concurrent.atomic.AtomicLongFieldUpdater;", &RxInternalOperatorsOperatorMerge_MergeProducer_REQUESTED, "Ljava/util/concurrent/atomic/AtomicLongFieldUpdater<Lrx/internal/operators/OperatorMerge$MergeProducer;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMerge_MergeProducer = { 2, "MergeProducer", "rx.internal.operators", "OperatorMerge", 0x1a, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Producer;" };
  return &_RxInternalOperatorsOperatorMerge_MergeProducer;
}

@end

void RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeProducer *self, RxInternalOperatorsOperatorMerge_MergeSubscriber *ms) {
  NSObject_init(self);
  JreAssignVolatileLong(&self->requested_, 0);
  self->ms_ = ms;
}

RxInternalOperatorsOperatorMerge_MergeProducer *new_RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *ms) {
  RxInternalOperatorsOperatorMerge_MergeProducer *self = [RxInternalOperatorsOperatorMerge_MergeProducer alloc];
  RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(self, ms);
  return self;
}

RxInternalOperatorsOperatorMerge_MergeProducer *create_RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(RxInternalOperatorsOperatorMerge_MergeSubscriber *ms) {
  return new_RxInternalOperatorsOperatorMerge_MergeProducer_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_(ms);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMerge_MergeProducer)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorMerge_InnerSubscriber)

@implementation RxInternalOperatorsOperatorMerge_InnerSubscriber

- (instancetype)initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:(RxInternalOperatorsOperatorMerge_MergeSubscriber *)parent
                      withRxInternalOperatorsOperatorMerge_MergeProducer:(RxInternalOperatorsOperatorMerge_MergeProducer *)producer {
  RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(self, parent, producer);
  return self;
}

- (void)onNextWithId:(id)t {
  RxInternalOperatorsOperatorMerge_InnerSubscriber_emitWithId_withBoolean_(self, t, false);
}

- (void)onErrorWithNSException:(NSException *)e {
  if ([((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxInternalOperatorsOperatorMerge_InnerSubscriber_ONCE_TERMINATED)) compareAndSetWithId:self withInt:0 withInt:1]) {
    RxInternalOperatorsOperatorMerge_MergeSubscriber_innerErrorWithNSException_(nil_chk(parentSubscriber_), e);
  }
}

- (void)onCompleted {
  if ([((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxInternalOperatorsOperatorMerge_InnerSubscriber_ONCE_TERMINATED)) compareAndSetWithId:self withInt:0 withInt:1]) {
    RxInternalOperatorsOperatorMerge_InnerSubscriber_emitWithId_withBoolean_(self, nil, true);
  }
}

- (void)requestMoreWithLong:(jlong)n {
  [self requestWithLong:n];
}

- (void)emitWithId:(id)t
       withBoolean:(jboolean)complete {
  RxInternalOperatorsOperatorMerge_InnerSubscriber_emitWithId_withBoolean_(self, t, complete);
}

- (void)enqueueWithId:(id)t
          withBoolean:(jboolean)complete {
  RxInternalOperatorsOperatorMerge_InnerSubscriber_enqueueWithId_withBoolean_(self, t, complete);
}

- (jint)drainRequested {
  return RxInternalOperatorsOperatorMerge_InnerSubscriber_drainRequested(self);
}

- (jint)drainAll {
  return RxInternalOperatorsOperatorMerge_InnerSubscriber_drainAll(self);
}

- (jint)drainQueue {
  return RxInternalOperatorsOperatorMerge_InnerSubscriber_drainQueue(self);
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorMerge_InnerSubscriber class]) {
    RxInternalOperatorsOperatorMerge_InnerSubscriber_ONCE_TERMINATED = JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxInternalOperatorsOperatorMerge_InnerSubscriber_class_(), @"terminated");
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorMerge_InnerSubscriber)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorMerge_MergeSubscriber:withRxInternalOperatorsOperatorMerge_MergeProducer:", "InnerSubscriber", NULL, 0x1, NULL, "(Lrx/internal/operators/OperatorMerge$MergeSubscriber<TT;>;Lrx/internal/operators/OperatorMerge$MergeProducer<TT;>;)V" },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "requestMoreWithLong:", "requestMore", "V", 0x1, NULL, NULL },
    { "emitWithId:withBoolean:", "emit", "V", 0x2, NULL, "(TT;Z)V" },
    { "enqueueWithId:withBoolean:", "enqueue", "V", 0x2, NULL, "(TT;Z)V" },
    { "drainRequested", NULL, "I", 0x2, NULL, NULL },
    { "drainAll", NULL, "I", 0x2, NULL, NULL },
    { "drainQueue", NULL, "I", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sindex_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "parentSubscriber_", NULL, 0x10, "Lrx.internal.operators.OperatorMerge$MergeSubscriber;", NULL, "Lrx/internal/operators/OperatorMerge$MergeSubscriber<TT;>;", .constantValue.asLong = 0 },
    { "producer_", NULL, 0x10, "Lrx.internal.operators.OperatorMerge$MergeProducer;", NULL, "Lrx/internal/operators/OperatorMerge$MergeProducer<TT;>;", .constantValue.asLong = 0 },
    { "terminated_", NULL, 0x40, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "ONCE_TERMINATED", "ONCE_TERMINATED", 0x18, "Ljava.util.concurrent.atomic.AtomicIntegerFieldUpdater;", &RxInternalOperatorsOperatorMerge_InnerSubscriber_ONCE_TERMINATED, "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater<Lrx/internal/operators/OperatorMerge$InnerSubscriber;>;", .constantValue.asLong = 0 },
    { "q_", NULL, 0x12, "Lrx.internal.util.RxRingBuffer;", NULL, NULL, .constantValue.asLong = 0 },
    { "emitted_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "THRESHOLD_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMerge_InnerSubscriber = { 2, "InnerSubscriber", "rx.internal.operators", "OperatorMerge", 0x1a, 10, methods, 8, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOperatorMerge_InnerSubscriber;
}

@end

void RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(RxInternalOperatorsOperatorMerge_InnerSubscriber *self, RxInternalOperatorsOperatorMerge_MergeSubscriber *parent, RxInternalOperatorsOperatorMerge_MergeProducer *producer) {
  RxSubscriber_init(self);
  self->q_ = RxInternalUtilRxRingBuffer_getSpmcInstance();
  self->emitted_ = 0;
  self->THRESHOLD_ = JreFpToInt(([((RxInternalUtilRxRingBuffer *) nil_chk(self->q_)) capacity] * 0.7));
  self->parentSubscriber_ = parent;
  self->producer_ = producer;
  [self addWithRxSubscription:self->q_];
  [self requestWithLong:[self->q_ capacity]];
}

RxInternalOperatorsOperatorMerge_InnerSubscriber *new_RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(RxInternalOperatorsOperatorMerge_MergeSubscriber *parent, RxInternalOperatorsOperatorMerge_MergeProducer *producer) {
  RxInternalOperatorsOperatorMerge_InnerSubscriber *self = [RxInternalOperatorsOperatorMerge_InnerSubscriber alloc];
  RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(self, parent, producer);
  return self;
}

RxInternalOperatorsOperatorMerge_InnerSubscriber *create_RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(RxInternalOperatorsOperatorMerge_MergeSubscriber *parent, RxInternalOperatorsOperatorMerge_MergeProducer *producer) {
  return new_RxInternalOperatorsOperatorMerge_InnerSubscriber_initWithRxInternalOperatorsOperatorMerge_MergeSubscriber_withRxInternalOperatorsOperatorMerge_MergeProducer_(parent, producer);
}

void RxInternalOperatorsOperatorMerge_InnerSubscriber_emitWithId_withBoolean_(RxInternalOperatorsOperatorMerge_InnerSubscriber *self, id t, jboolean complete) {
  jboolean drain = false;
  jboolean enqueue = true;
  if (RxInternalOperatorsOperatorMerge_MergeSubscriber_getEmitLock(nil_chk(self->parentSubscriber_))) {
    enqueue = false;
    @try {
      self->emitted_ += RxInternalOperatorsOperatorMerge_InnerSubscriber_drainQueue(self);
      if (self->producer_ == nil) {
        if (complete) {
          [self->parentSubscriber_ completeInnerWithRxInternalOperatorsOperatorMerge_InnerSubscriber:self];
        }
        else {
          @try {
            [((RxSubscriber *) nil_chk(self->parentSubscriber_->actual_)) onNextWithId:t];
          }
          @catch (NSException *e) {
            [self onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(e, t)];
          }
          self->emitted_++;
        }
      }
      else {
        if (JreLoadVolatileLong(&self->producer_->requested_) > 0 && [((RxInternalUtilRxRingBuffer *) nil_chk(self->q_)) count] == 0) {
          if (complete) {
            [self->parentSubscriber_ completeInnerWithRxInternalOperatorsOperatorMerge_InnerSubscriber:self];
          }
          else {
            @try {
              [((RxSubscriber *) nil_chk(self->parentSubscriber_->actual_)) onNextWithId:t];
            }
            @catch (NSException *e) {
              [self onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(e, t)];
            }
            self->emitted_++;
            [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorMerge_MergeProducer, REQUESTED))) decrementAndGetWithId:self->producer_];
          }
        }
        else {
          enqueue = true;
        }
      }
    }
    @finally {
      drain = RxInternalOperatorsOperatorMerge_MergeSubscriber_releaseEmitLock(self->parentSubscriber_);
    }
    if (self->emitted_ > self->THRESHOLD_) {
      [self requestWithLong:self->emitted_];
      self->emitted_ = 0;
    }
  }
  if (enqueue) {
    RxInternalOperatorsOperatorMerge_InnerSubscriber_enqueueWithId_withBoolean_(self, t, complete);
    drain = true;
  }
  if (drain) {
    RxInternalOperatorsOperatorMerge_MergeSubscriber_drainQueuesIfNeeded(self->parentSubscriber_);
  }
}

void RxInternalOperatorsOperatorMerge_InnerSubscriber_enqueueWithId_withBoolean_(RxInternalOperatorsOperatorMerge_InnerSubscriber *self, id t, jboolean complete) {
  @try {
    if (complete) {
      [((RxInternalUtilRxRingBuffer *) nil_chk(self->q_)) onCompleted];
    }
    else {
      [((RxInternalUtilRxRingBuffer *) nil_chk(self->q_)) onNextWithId:t];
    }
  }
  @catch (RxExceptionsMissingBackpressureException *e) {
    [self onErrorWithNSException:e];
  }
}

jint RxInternalOperatorsOperatorMerge_InnerSubscriber_drainRequested(RxInternalOperatorsOperatorMerge_InnerSubscriber *self) {
  jint emitted = 0;
  jlong toEmit = JreLoadVolatileLong(&((RxInternalOperatorsOperatorMerge_MergeProducer *) nil_chk(self->producer_))->requested_);
  id o;
  for (jint i = 0; i < toEmit; i++) {
    o = [((RxInternalUtilRxRingBuffer *) nil_chk(self->q_)) poll];
    if (o == nil) {
      break;
    }
    else if ([self->q_ isCompletedWithId:o]) {
      [((RxInternalOperatorsOperatorMerge_MergeSubscriber *) nil_chk(self->parentSubscriber_)) completeInnerWithRxInternalOperatorsOperatorMerge_InnerSubscriber:self];
    }
    else {
      @try {
        if (![self->q_ acceptWithId:o withRxObserver:((RxInternalOperatorsOperatorMerge_MergeSubscriber *) nil_chk(self->parentSubscriber_))->actual_]) {
          emitted++;
        }
      }
      @catch (NSException *e) {
        [self onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(e, o)];
      }
    }
  }
  [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(JreLoadStatic(RxInternalOperatorsOperatorMerge_MergeProducer, REQUESTED))) getAndAddWithId:self->producer_ withLong:-emitted];
  return emitted;
}

jint RxInternalOperatorsOperatorMerge_InnerSubscriber_drainAll(RxInternalOperatorsOperatorMerge_InnerSubscriber *self) {
  jint emitted = 0;
  id o;
  while ((o = [((RxInternalUtilRxRingBuffer *) nil_chk(self->q_)) poll]) != nil) {
    if ([self->q_ isCompletedWithId:o]) {
      [((RxInternalOperatorsOperatorMerge_MergeSubscriber *) nil_chk(self->parentSubscriber_)) completeInnerWithRxInternalOperatorsOperatorMerge_InnerSubscriber:self];
    }
    else {
      @try {
        if (![self->q_ acceptWithId:o withRxObserver:((RxInternalOperatorsOperatorMerge_MergeSubscriber *) nil_chk(self->parentSubscriber_))->actual_]) {
          emitted++;
        }
      }
      @catch (NSException *e) {
        [self onErrorWithNSException:RxExceptionsOnErrorThrowable_addValueAsLastCauseWithNSException_withId_(e, o)];
      }
    }
  }
  return emitted;
}

jint RxInternalOperatorsOperatorMerge_InnerSubscriber_drainQueue(RxInternalOperatorsOperatorMerge_InnerSubscriber *self) {
  if (self->producer_ != nil) {
    return RxInternalOperatorsOperatorMerge_InnerSubscriber_drainRequested(self);
  }
  else {
    return RxInternalOperatorsOperatorMerge_InnerSubscriber_drainAll(self);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMerge_InnerSubscriber)
