//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorTakeTimed.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorTakeTimed_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorTakeTimed_RESTRICT
#define RxInternalOperatorsOperatorTakeTimed_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorTakeTimed_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorTakeTimed_RESTRICT

#if !defined (RxInternalOperatorsOperatorTakeTimed_) && (RxInternalOperatorsOperatorTakeTimed_INCLUDE_ALL || defined(RxInternalOperatorsOperatorTakeTimed_INCLUDE))
#define RxInternalOperatorsOperatorTakeTimed_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class JavaUtilConcurrentTimeUnit;
@class RxScheduler;
@class RxSubscriber;

@interface RxInternalOperatorsOperatorTakeTimed : NSObject < RxObservable_Operator > {
 @public
  jlong time_;
  JavaUtilConcurrentTimeUnit *unit_;
  RxScheduler *scheduler_;
}

#pragma mark Public

- (instancetype)initWithLong:(jlong)time
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
             withRxScheduler:(RxScheduler *)scheduler;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeTimed)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeTimed, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeTimed, scheduler_, RxScheduler *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorTakeTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalOperatorsOperatorTakeTimed *self, jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

FOUNDATION_EXPORT RxInternalOperatorsOperatorTakeTimed *new_RxInternalOperatorsOperatorTakeTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorTakeTimed *create_RxInternalOperatorsOperatorTakeTimed_initWithLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(jlong time, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeTimed)

#endif

#if !defined (RxInternalOperatorsOperatorTakeTimed_TakeSubscriber_) && (RxInternalOperatorsOperatorTakeTimed_INCLUDE_ALL || defined(RxInternalOperatorsOperatorTakeTimed_TakeSubscriber_INCLUDE))
#define RxInternalOperatorsOperatorTakeTimed_TakeSubscriber_

#define RxSubscriber_RESTRICT 1
#define RxSubscriber_INCLUDE 1
#include "rx/Subscriber.h"

#define RxFunctionsAction0_RESTRICT 1
#define RxFunctionsAction0_INCLUDE 1
#include "rx/functions/Action0.h"

@interface RxInternalOperatorsOperatorTakeTimed_TakeSubscriber : RxSubscriber < RxFunctionsAction0 > {
 @public
  RxSubscriber *child_;
}

#pragma mark Public

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child;

- (void)call;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTakeTimed_TakeSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTakeTimed_TakeSubscriber, child_, RxSubscriber *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorTakeTimed_TakeSubscriber_initWithRxSubscriber_(RxInternalOperatorsOperatorTakeTimed_TakeSubscriber *self, RxSubscriber *child);

FOUNDATION_EXPORT RxInternalOperatorsOperatorTakeTimed_TakeSubscriber *new_RxInternalOperatorsOperatorTakeTimed_TakeSubscriber_initWithRxSubscriber_(RxSubscriber *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorTakeTimed_TakeSubscriber *create_RxInternalOperatorsOperatorTakeTimed_TakeSubscriber_initWithRxSubscriber_(RxSubscriber *child);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTakeTimed_TakeSubscriber)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorTakeTimed_INCLUDE_ALL")
