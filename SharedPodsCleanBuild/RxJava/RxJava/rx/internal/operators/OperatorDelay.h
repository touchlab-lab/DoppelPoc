//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorDelay.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorDelay_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorDelay_RESTRICT
#define RxInternalOperatorsOperatorDelay_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorDelay_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorDelay_RESTRICT

#if !defined (RxInternalOperatorsOperatorDelay_) && (RxInternalOperatorsOperatorDelay_INCLUDE_ALL || defined(RxInternalOperatorsOperatorDelay_INCLUDE))
#define RxInternalOperatorsOperatorDelay_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class JavaUtilConcurrentTimeUnit;
@class RxObservable;
@class RxScheduler;
@class RxSubscriber;

@interface RxInternalOperatorsOperatorDelay : NSObject < RxObservable_Operator > {
 @public
  RxObservable *source_;
  jlong delay_;
  JavaUtilConcurrentTimeUnit *unit_;
  RxScheduler *scheduler_;
}

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)source
                            withLong:(jlong)delay
      withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit
                     withRxScheduler:(RxScheduler *)scheduler;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorDelay)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelay, source_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelay, unit_, JavaUtilConcurrentTimeUnit *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorDelay, scheduler_, RxScheduler *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorDelay_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxInternalOperatorsOperatorDelay *self, RxObservable *source, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

FOUNDATION_EXPORT RxInternalOperatorsOperatorDelay *new_RxInternalOperatorsOperatorDelay_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorDelay *create_RxInternalOperatorsOperatorDelay_initWithRxObservable_withLong_withJavaUtilConcurrentTimeUnit_withRxScheduler_(RxObservable *source, jlong delay, JavaUtilConcurrentTimeUnit *unit, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorDelay)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorDelay_INCLUDE_ALL")
