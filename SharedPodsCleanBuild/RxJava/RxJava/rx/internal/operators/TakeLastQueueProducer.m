//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/TakeLastQueueProducer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/util/Deque.h"
#include "java/util/concurrent/atomic/AtomicLongFieldUpdater.h"
#include "rx/Subscriber.h"
#include "rx/internal/operators/NotificationLite.h"
#include "rx/internal/operators/TakeLastQueueProducer.h"

@interface RxInternalOperatorsTakeLastQueueProducer () {
 @public
  RxInternalOperatorsNotificationLite *notification_;
  id<JavaUtilDeque> deque_;
  RxSubscriber *subscriber_;
  volatile_jboolean emittingStarted_;
  volatile_jlong requested_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsTakeLastQueueProducer, notification_, RxInternalOperatorsNotificationLite *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsTakeLastQueueProducer, deque_, id<JavaUtilDeque>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsTakeLastQueueProducer, subscriber_, RxSubscriber *)

inline JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsTakeLastQueueProducer_get_REQUESTED_UPDATER();
static JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsTakeLastQueueProducer_REQUESTED_UPDATER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsTakeLastQueueProducer, REQUESTED_UPDATER, JavaUtilConcurrentAtomicAtomicLongFieldUpdater *)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsTakeLastQueueProducer)

@implementation RxInternalOperatorsTakeLastQueueProducer

- (instancetype)initWithRxInternalOperatorsNotificationLite:(RxInternalOperatorsNotificationLite *)n
                                          withJavaUtilDeque:(id<JavaUtilDeque>)q
                                           withRxSubscriber:(RxSubscriber *)subscriber {
  RxInternalOperatorsTakeLastQueueProducer_initWithRxInternalOperatorsNotificationLite_withJavaUtilDeque_withRxSubscriber_(self, n, q, subscriber);
  return self;
}

- (void)startEmitting {
  if (!JreLoadVolatileBoolean(&emittingStarted_)) {
    JreAssignVolatileBoolean(&emittingStarted_, true);
    [self emitWithLong:0];
  }
}

- (void)requestWithLong:(jlong)n {
  if (JreLoadVolatileLong(&requested_) == JavaLangLong_MAX_VALUE) {
    return;
  }
  jlong _c;
  if (n == JavaLangLong_MAX_VALUE) {
    _c = [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(RxInternalOperatorsTakeLastQueueProducer_REQUESTED_UPDATER)) getAndSetWithId:self withLong:JavaLangLong_MAX_VALUE];
  }
  else {
    _c = [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(RxInternalOperatorsTakeLastQueueProducer_REQUESTED_UPDATER)) getAndAddWithId:self withLong:n];
  }
  if (!JreLoadVolatileBoolean(&emittingStarted_)) {
    return;
  }
  [self emitWithLong:_c];
}

- (void)emitWithLong:(jlong)previousRequested {
  if (JreLoadVolatileLong(&requested_) == JavaLangLong_MAX_VALUE) {
    if (previousRequested == 0) {
      @try {
        for (id __strong value in nil_chk(deque_)) {
          [((RxInternalOperatorsNotificationLite *) nil_chk(notification_)) acceptWithRxObserver:subscriber_ withId:value];
        }
      }
      @catch (NSException *e) {
        [((RxSubscriber *) nil_chk(subscriber_)) onErrorWithNSException:e];
      }
      @finally {
        [((id<JavaUtilDeque>) nil_chk(deque_)) clear];
      }
    }
    else {
    }
  }
  else {
    if (previousRequested == 0) {
      while (true) {
        jlong numToEmit = JreLoadVolatileLong(&requested_);
        jint emitted = 0;
        id o;
        while (--numToEmit >= 0 && (o = [((id<JavaUtilDeque>) nil_chk(deque_)) poll]) != nil) {
          if ([((RxSubscriber *) nil_chk(subscriber_)) isUnsubscribed]) {
            return;
          }
          if ([((RxInternalOperatorsNotificationLite *) nil_chk(notification_)) acceptWithRxObserver:subscriber_ withId:o]) {
            return;
          }
          else {
            emitted++;
          }
        }
        for (; ; ) {
          jlong oldRequested = JreLoadVolatileLong(&requested_);
          jlong newRequested = oldRequested - emitted;
          if (oldRequested == JavaLangLong_MAX_VALUE) {
            break;
          }
          if ([((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(RxInternalOperatorsTakeLastQueueProducer_REQUESTED_UPDATER)) compareAndSetWithId:self withLong:oldRequested withLong:newRequested]) {
            if (newRequested == 0) {
              return;
            }
            break;
          }
        }
      }
    }
  }
}

+ (void)initialize {
  if (self == [RxInternalOperatorsTakeLastQueueProducer class]) {
    RxInternalOperatorsTakeLastQueueProducer_REQUESTED_UPDATER = JavaUtilConcurrentAtomicAtomicLongFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxInternalOperatorsTakeLastQueueProducer_class_(), @"requested");
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsTakeLastQueueProducer)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsNotificationLite:withJavaUtilDeque:withRxSubscriber:", "TakeLastQueueProducer", NULL, 0x1, NULL, "(Lrx/internal/operators/NotificationLite<TT;>;Ljava/util/Deque<Ljava/lang/Object;>;Lrx/Subscriber<-TT;>;)V" },
    { "startEmitting", NULL, "V", 0x0, NULL, NULL },
    { "requestWithLong:", "request", "V", 0x1, NULL, NULL },
    { "emitWithLong:", "emit", "V", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "notification_", NULL, 0x12, "Lrx.internal.operators.NotificationLite;", NULL, "Lrx/internal/operators/NotificationLite<TT;>;", .constantValue.asLong = 0 },
    { "deque_", NULL, 0x12, "Ljava.util.Deque;", NULL, "Ljava/util/Deque<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "subscriber_", NULL, 0x12, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<-TT;>;", .constantValue.asLong = 0 },
    { "emittingStarted_", NULL, 0x42, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "requested_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "REQUESTED_UPDATER", "REQUESTED_UPDATER", 0x1a, "Ljava.util.concurrent.atomic.AtomicLongFieldUpdater;", &RxInternalOperatorsTakeLastQueueProducer_REQUESTED_UPDATER, "Ljava/util/concurrent/atomic/AtomicLongFieldUpdater<Lrx/internal/operators/TakeLastQueueProducer;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsTakeLastQueueProducer = { 2, "TakeLastQueueProducer", "rx.internal.operators", NULL, 0x10, 4, methods, 6, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Producer;" };
  return &_RxInternalOperatorsTakeLastQueueProducer;
}

@end

void RxInternalOperatorsTakeLastQueueProducer_initWithRxInternalOperatorsNotificationLite_withJavaUtilDeque_withRxSubscriber_(RxInternalOperatorsTakeLastQueueProducer *self, RxInternalOperatorsNotificationLite *n, id<JavaUtilDeque> q, RxSubscriber *subscriber) {
  NSObject_init(self);
  JreAssignVolatileBoolean(&self->emittingStarted_, false);
  JreAssignVolatileLong(&self->requested_, 0);
  self->notification_ = n;
  self->deque_ = q;
  self->subscriber_ = subscriber;
}

RxInternalOperatorsTakeLastQueueProducer *new_RxInternalOperatorsTakeLastQueueProducer_initWithRxInternalOperatorsNotificationLite_withJavaUtilDeque_withRxSubscriber_(RxInternalOperatorsNotificationLite *n, id<JavaUtilDeque> q, RxSubscriber *subscriber) {
  RxInternalOperatorsTakeLastQueueProducer *self = [RxInternalOperatorsTakeLastQueueProducer alloc];
  RxInternalOperatorsTakeLastQueueProducer_initWithRxInternalOperatorsNotificationLite_withJavaUtilDeque_withRxSubscriber_(self, n, q, subscriber);
  return self;
}

RxInternalOperatorsTakeLastQueueProducer *create_RxInternalOperatorsTakeLastQueueProducer_initWithRxInternalOperatorsNotificationLite_withJavaUtilDeque_withRxSubscriber_(RxInternalOperatorsNotificationLite *n, id<JavaUtilDeque> q, RxSubscriber *subscriber) {
  return new_RxInternalOperatorsTakeLastQueueProducer_initWithRxInternalOperatorsNotificationLite_withJavaUtilDeque_withRxSubscriber_(n, q, subscriber);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsTakeLastQueueProducer)
