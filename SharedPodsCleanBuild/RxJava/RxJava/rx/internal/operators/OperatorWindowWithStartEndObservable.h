//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorWindowWithStartEndObservable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorWindowWithStartEndObservable_RESTRICT
#define RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorWindowWithStartEndObservable_RESTRICT

#if !defined (RxInternalOperatorsOperatorWindowWithStartEndObservable_) && (RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE_ALL || defined(RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE))
#define RxInternalOperatorsOperatorWindowWithStartEndObservable_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class RxObservable;
@class RxSubscriber;
@protocol RxFunctionsFunc1;

@interface RxInternalOperatorsOperatorWindowWithStartEndObservable : NSObject < RxObservable_Operator > {
 @public
  RxObservable *windowOpenings_;
  id<RxFunctionsFunc1> windowClosingSelector_;
}

#pragma mark Public

- (instancetype)initWithRxObservable:(RxObservable *)windowOpenings
                withRxFunctionsFunc1:(id<RxFunctionsFunc1>)windowClosingSelector;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservable)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable, windowOpenings_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable, windowClosingSelector_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorWindowWithStartEndObservable_initWithRxObservable_withRxFunctionsFunc1_(RxInternalOperatorsOperatorWindowWithStartEndObservable *self, RxObservable *windowOpenings, id<RxFunctionsFunc1> windowClosingSelector);

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithStartEndObservable *new_RxInternalOperatorsOperatorWindowWithStartEndObservable_initWithRxObservable_withRxFunctionsFunc1_(RxObservable *windowOpenings, id<RxFunctionsFunc1> windowClosingSelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithStartEndObservable *create_RxInternalOperatorsOperatorWindowWithStartEndObservable_initWithRxObservable_withRxFunctionsFunc1_(RxObservable *windowOpenings, id<RxFunctionsFunc1> windowClosingSelector);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithStartEndObservable)

#endif

#if !defined (RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject_) && (RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE_ALL || defined(RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject_INCLUDE))
#define RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject_

@class RxObservable;
@protocol RxObserver;

@interface RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject : NSObject {
 @public
  id<RxObserver> consumer_;
  RxObservable *producer_;
}

#pragma mark Public

- (instancetype)initWithRxObserver:(id<RxObserver>)consumer
                  withRxObservable:(RxObservable *)producer;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject, consumer_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject, producer_, RxObservable *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject_initWithRxObserver_withRxObservable_(RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject *self, id<RxObserver> consumer, RxObservable *producer);

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject *new_RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject_initWithRxObserver_withRxObservable_(id<RxObserver> consumer, RxObservable *producer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject *create_RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject_initWithRxObserver_withRxObservable_(id<RxObserver> consumer, RxObservable *producer);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject)

#endif

#if !defined (RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber_) && (RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE_ALL || defined(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber_INCLUDE))
#define RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber_

#define RxSubscriber_RESTRICT 1
#define RxSubscriber_INCLUDE 1
#include "rx/Subscriber.h"

@class RxInternalOperatorsOperatorWindowWithStartEndObservable;
@class RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject;
@class RxSubscriptionsCompositeSubscription;
@protocol JavaUtilList;

@interface RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber : RxSubscriber {
 @public
  RxSubscriber *child_;
  RxSubscriptionsCompositeSubscription *csub_;
  id guard_;
  id<JavaUtilList> chunks_;
  jboolean done_;
}

#pragma mark Public

- (instancetype)initWithRxInternalOperatorsOperatorWindowWithStartEndObservable:(RxInternalOperatorsOperatorWindowWithStartEndObservable *)outer$
                                                               withRxSubscriber:(RxSubscriber *)child;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)t;

- (void)onStart;

#pragma mark Package-Private

- (void)beginWindowWithId:(id)token;

- (RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject *)createSerializedSubject;

- (void)endWindowWithRxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject:(RxInternalOperatorsOperatorWindowWithStartEndObservable_SerializedSubject *)window;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber, child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber, csub_, RxSubscriptionsCompositeSubscription *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber, guard_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber, chunks_, id<JavaUtilList>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber_initWithRxInternalOperatorsOperatorWindowWithStartEndObservable_withRxSubscriber_(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber *self, RxInternalOperatorsOperatorWindowWithStartEndObservable *outer$, RxSubscriber *child);

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber *new_RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber_initWithRxInternalOperatorsOperatorWindowWithStartEndObservable_withRxSubscriber_(RxInternalOperatorsOperatorWindowWithStartEndObservable *outer$, RxSubscriber *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber *create_RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber_initWithRxInternalOperatorsOperatorWindowWithStartEndObservable_withRxSubscriber_(RxInternalOperatorsOperatorWindowWithStartEndObservable *outer$, RxSubscriber *child);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorWindowWithStartEndObservable_SourceSubscriber)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorWindowWithStartEndObservable_INCLUDE_ALL")
