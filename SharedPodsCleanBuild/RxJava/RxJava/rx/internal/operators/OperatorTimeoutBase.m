//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorTimeoutBase.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/lang/Long.h"
#include "java/util/concurrent/TimeoutException.h"
#include "java/util/concurrent/atomic/AtomicIntegerFieldUpdater.h"
#include "java/util/concurrent/atomic/AtomicLongFieldUpdater.h"
#include "rx/Observable.h"
#include "rx/Scheduler.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/internal/operators/OperatorTimeoutBase.h"
#include "rx/observers/SerializedSubscriber.h"
#include "rx/subscriptions/SerialSubscription.h"

@interface RxInternalOperatorsOperatorTimeoutBase () {
 @public
  id<RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub> firstTimeoutStub_;
  id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub_;
  RxObservable *other_;
  RxScheduler *scheduler_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase, firstTimeoutStub_, id<RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase, timeoutStub_, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase, other_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase, scheduler_, RxScheduler *)

@interface RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub : NSObject

@end

@interface RxInternalOperatorsOperatorTimeoutBase_TimeoutStub : NSObject

@end

@interface RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber () {
 @public
  RxSubscriptionsSerialSubscription *serial_;
  id gate_;
  RxObserversSerializedSubscriber *serializedSubscriber_;
  id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub_;
  RxObservable *other_;
  RxScheduler_Worker *inner_;
}

- (instancetype)initWithRxObserversSerializedSubscriber:(RxObserversSerializedSubscriber *)serializedSubscriber
 withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub:(id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub>)timeoutStub
                  withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)serial
                                       withRxObservable:(RxObservable *)other
                                 withRxScheduler_Worker:(RxScheduler_Worker *)inner;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber, serial_, RxSubscriptionsSerialSubscription *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber, gate_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber, serializedSubscriber_, RxObserversSerializedSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber, timeoutStub_, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber, other_, RxObservable *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber, inner_, RxScheduler_Worker *)

__attribute__((unused)) static void RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *self, RxObserversSerializedSubscriber *serializedSubscriber, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxSubscriptionsSerialSubscription *serial, RxObservable *other, RxScheduler_Worker *inner);

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *new_RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(RxObserversSerializedSubscriber *serializedSubscriber, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxSubscriptionsSerialSubscription *serial, RxObservable *other, RxScheduler_Worker *inner) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *create_RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(RxObserversSerializedSubscriber *serializedSubscriber, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxSubscriptionsSerialSubscription *serial, RxObservable *other, RxScheduler_Worker *inner);

@implementation RxInternalOperatorsOperatorTimeoutBase

- (instancetype)initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub:(id<RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub>)firstTimeoutStub
                         withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub:(id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub>)timeoutStub
                                                               withRxObservable:(RxObservable *)other
                                                                withRxScheduler:(RxScheduler *)scheduler {
  RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(self, firstTimeoutStub, timeoutStub, other, scheduler);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)subscriber {
  RxScheduler_Worker *inner = [((RxScheduler *) nil_chk(scheduler_)) createWorker];
  [((RxSubscriber *) nil_chk(subscriber)) addWithRxSubscription:inner];
  RxSubscriptionsSerialSubscription *serial = new_RxSubscriptionsSerialSubscription_init();
  [subscriber addWithRxSubscription:serial];
  RxObserversSerializedSubscriber *synchronizedSubscriber = new_RxObserversSerializedSubscriber_initWithRxSubscriber_(subscriber);
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *timeoutSubscriber = new_RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(synchronizedSubscriber, timeoutStub_, serial, other_, inner);
  [serial setWithRxSubscription:[((id<RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub>) nil_chk(firstTimeoutStub_)) callWithId:timeoutSubscriber withId:JavaLangLong_valueOfWithLong_(0LL) withId:inner]];
  return timeoutSubscriber;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub:withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub:withRxObservable:withRxScheduler:", "OperatorTimeoutBase", NULL, 0x0, NULL, "(Lrx/internal/operators/OperatorTimeoutBase$FirstTimeoutStub<TT;>;Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub<TT;>;Lrx/Observable<+TT;>;Lrx/Scheduler;)V" },
    { "callWithId:", "call", "Lrx.Subscriber;", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "firstTimeoutStub_", NULL, 0x12, "Lrx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub;", NULL, "Lrx/internal/operators/OperatorTimeoutBase$FirstTimeoutStub<TT;>;", .constantValue.asLong = 0 },
    { "timeoutStub_", NULL, 0x12, "Lrx.internal.operators.OperatorTimeoutBase$TimeoutStub;", NULL, "Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub<TT;>;", .constantValue.asLong = 0 },
    { "other_", NULL, 0x12, "Lrx.Observable;", NULL, "Lrx/Observable<+TT;>;", .constantValue.asLong = 0 },
    { "scheduler_", NULL, 0x12, "Lrx.Scheduler;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.internal.operators.OperatorTimeoutBase$FirstTimeoutStub;", "Lrx.internal.operators.OperatorTimeoutBase$TimeoutStub;", "Lrx.internal.operators.OperatorTimeoutBase$TimeoutSubscriber;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutBase = { 2, "OperatorTimeoutBase", "rx.internal.operators", NULL, 0x0, 2, methods, 4, fields, 0, NULL, 3, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  return &_RxInternalOperatorsOperatorTimeoutBase;
}

@end

void RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(RxInternalOperatorsOperatorTimeoutBase *self, id<RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub> firstTimeoutStub, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxObservable *other, RxScheduler *scheduler) {
  NSObject_init(self);
  self->firstTimeoutStub_ = firstTimeoutStub;
  self->timeoutStub_ = timeoutStub;
  self->other_ = other;
  self->scheduler_ = scheduler;
}

RxInternalOperatorsOperatorTimeoutBase *new_RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(id<RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub> firstTimeoutStub, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxObservable *other, RxScheduler *scheduler) {
  RxInternalOperatorsOperatorTimeoutBase *self = [RxInternalOperatorsOperatorTimeoutBase alloc];
  RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(self, firstTimeoutStub, timeoutStub, other, scheduler);
  return self;
}

RxInternalOperatorsOperatorTimeoutBase *create_RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(id<RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub> firstTimeoutStub, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxObservable *other, RxScheduler *scheduler) {
  return new_RxInternalOperatorsOperatorTimeoutBase_initWithRxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxObservable_withRxScheduler_(firstTimeoutStub, timeoutStub, other, scheduler);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeoutBase)

@implementation RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub = { 2, "FirstTimeoutStub", "rx.internal.operators", "OperatorTimeoutBase", 0x608, 0, NULL, 0, NULL, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func3<Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;Lrx/Scheduler$Worker;Lrx/Subscription;>;" };
  return &_RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeoutBase_FirstTimeoutStub)

@implementation RxInternalOperatorsOperatorTimeoutBase_TimeoutStub

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutBase_TimeoutStub = { 2, "TimeoutStub", "rx.internal.operators", "OperatorTimeoutBase", 0x608, 0, NULL, 0, NULL, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/functions/Func4<Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber<TT;>;Ljava/lang/Long;TT;Lrx/Scheduler$Worker;Lrx/Subscription;>;" };
  return &_RxInternalOperatorsOperatorTimeoutBase_TimeoutStub;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeoutBase_TimeoutStub)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber)

JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_TERMINATED_UPDATER;
JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_ACTUAL_UPDATER;

@implementation RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber

- (instancetype)initWithRxObserversSerializedSubscriber:(RxObserversSerializedSubscriber *)serializedSubscriber
 withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub:(id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub>)timeoutStub
                  withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)serial
                                       withRxObservable:(RxObservable *)other
                                 withRxScheduler_Worker:(RxScheduler_Worker *)inner {
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(self, serializedSubscriber, timeoutStub, serial, other, inner);
  return self;
}

- (void)onNextWithId:(id)value {
  jboolean onNextWins = false;
  @synchronized(gate_) {
    if (JreLoadVolatileInt(&terminated_) == 0) {
      [((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_ACTUAL_UPDATER)) incrementAndGetWithId:self];
      onNextWins = true;
    }
  }
  if (onNextWins) {
    [((RxObserversSerializedSubscriber *) nil_chk(serializedSubscriber_)) onNextWithId:value];
    [((RxSubscriptionsSerialSubscription *) nil_chk(serial_)) setWithRxSubscription:[((id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub>) nil_chk(timeoutStub_)) callWithId:self withId:JavaLangLong_valueOfWithLong_(JreLoadVolatileLong(&actual_)) withId:value withId:inner_]];
  }
}

- (void)onErrorWithNSException:(NSException *)error {
  jboolean onErrorWins = false;
  @synchronized(gate_) {
    if ([((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_TERMINATED_UPDATER)) getAndSetWithId:self withInt:1] == 0) {
      onErrorWins = true;
    }
  }
  if (onErrorWins) {
    [((RxSubscriptionsSerialSubscription *) nil_chk(serial_)) unsubscribe];
    [((RxObserversSerializedSubscriber *) nil_chk(serializedSubscriber_)) onErrorWithNSException:error];
  }
}

- (void)onCompleted {
  jboolean onCompletedWins = false;
  @synchronized(gate_) {
    if ([((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_TERMINATED_UPDATER)) getAndSetWithId:self withInt:1] == 0) {
      onCompletedWins = true;
    }
  }
  if (onCompletedWins) {
    [((RxSubscriptionsSerialSubscription *) nil_chk(serial_)) unsubscribe];
    [((RxObserversSerializedSubscriber *) nil_chk(serializedSubscriber_)) onCompleted];
  }
}

- (void)onTimeoutWithLong:(jlong)seqId {
  jlong expected = seqId;
  jboolean timeoutWins = false;
  @synchronized(gate_) {
    if (expected == JreLoadVolatileLong(&actual_) && [((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_TERMINATED_UPDATER)) getAndSetWithId:self withInt:1] == 0) {
      timeoutWins = true;
    }
  }
  if (timeoutWins) {
    if (other_ == nil) {
      [((RxObserversSerializedSubscriber *) nil_chk(serializedSubscriber_)) onErrorWithNSException:new_JavaUtilConcurrentTimeoutException_init()];
    }
    else {
      (void) [other_ unsafeSubscribeWithRxSubscriber:serializedSubscriber_];
      [((RxSubscriptionsSerialSubscription *) nil_chk(serial_)) setWithRxSubscription:serializedSubscriber_];
    }
  }
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber class]) {
    RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_TERMINATED_UPDATER = JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_class_(), @"terminated");
    RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_ACTUAL_UPDATER = JavaUtilConcurrentAtomicAtomicLongFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_class_(), @"actual");
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObserversSerializedSubscriber:withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub:withRxSubscriptionsSerialSubscription:withRxObservable:withRxScheduler_Worker:", "TimeoutSubscriber", NULL, 0x2, NULL, "(Lrx/observers/SerializedSubscriber<TT;>;Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub<TT;>;Lrx/subscriptions/SerialSubscription;Lrx/Observable<+TT;>;Lrx/Scheduler$Worker;)V" },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onTimeoutWithLong:", "onTimeout", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serial_", NULL, 0x12, "Lrx.subscriptions.SerialSubscription;", NULL, NULL, .constantValue.asLong = 0 },
    { "gate_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "serializedSubscriber_", NULL, 0x12, "Lrx.observers.SerializedSubscriber;", NULL, "Lrx/observers/SerializedSubscriber<TT;>;", .constantValue.asLong = 0 },
    { "timeoutStub_", NULL, 0x12, "Lrx.internal.operators.OperatorTimeoutBase$TimeoutStub;", NULL, "Lrx/internal/operators/OperatorTimeoutBase$TimeoutStub<TT;>;", .constantValue.asLong = 0 },
    { "other_", NULL, 0x12, "Lrx.Observable;", NULL, "Lrx/Observable<+TT;>;", .constantValue.asLong = 0 },
    { "inner_", NULL, 0x12, "Lrx.Scheduler$Worker;", NULL, NULL, .constantValue.asLong = 0 },
    { "terminated_", NULL, 0x40, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "actual_", NULL, 0x40, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "TERMINATED_UPDATER", "TERMINATED_UPDATER", 0x18, "Ljava.util.concurrent.atomic.AtomicIntegerFieldUpdater;", &RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_TERMINATED_UPDATER, "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater<Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber;>;", .constantValue.asLong = 0 },
    { "ACTUAL_UPDATER", "ACTUAL_UPDATER", 0x18, "Ljava.util.concurrent.atomic.AtomicLongFieldUpdater;", &RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_ACTUAL_UPDATER, "Ljava/util/concurrent/atomic/AtomicLongFieldUpdater<Lrx/internal/operators/OperatorTimeoutBase$TimeoutSubscriber;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber = { 2, "TimeoutSubscriber", "rx.internal.operators", "OperatorTimeoutBase", 0x18, 5, methods, 10, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber;
}

@end

void RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *self, RxObserversSerializedSubscriber *serializedSubscriber, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxSubscriptionsSerialSubscription *serial, RxObservable *other, RxScheduler_Worker *inner) {
  RxSubscriber_initWithRxSubscriber_(self, serializedSubscriber);
  self->gate_ = new_NSObject_init();
  self->serializedSubscriber_ = serializedSubscriber;
  self->timeoutStub_ = timeoutStub;
  self->serial_ = serial;
  self->other_ = other;
  self->inner_ = inner;
}

RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *new_RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(RxObserversSerializedSubscriber *serializedSubscriber, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxSubscriptionsSerialSubscription *serial, RxObservable *other, RxScheduler_Worker *inner) {
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *self = [RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber alloc];
  RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(self, serializedSubscriber, timeoutStub, serial, other, inner);
  return self;
}

RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber *create_RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(RxObserversSerializedSubscriber *serializedSubscriber, id<RxInternalOperatorsOperatorTimeoutBase_TimeoutStub> timeoutStub, RxSubscriptionsSerialSubscription *serial, RxObservable *other, RxScheduler_Worker *inner) {
  return new_RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber_initWithRxObserversSerializedSubscriber_withRxInternalOperatorsOperatorTimeoutBase_TimeoutStub_withRxSubscriptionsSerialSubscription_withRxObservable_withRxScheduler_Worker_(serializedSubscriber, timeoutStub, serial, other, inner);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorTimeoutBase_TimeoutSubscriber)
