//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/BlockingOperatorToFuture.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsBlockingOperatorToFuture_INCLUDE_ALL")
#ifdef RxInternalOperatorsBlockingOperatorToFuture_RESTRICT
#define RxInternalOperatorsBlockingOperatorToFuture_INCLUDE_ALL 0
#else
#define RxInternalOperatorsBlockingOperatorToFuture_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsBlockingOperatorToFuture_RESTRICT

#if !defined (RxInternalOperatorsBlockingOperatorToFuture_) && (RxInternalOperatorsBlockingOperatorToFuture_INCLUDE_ALL || defined(RxInternalOperatorsBlockingOperatorToFuture_INCLUDE))
#define RxInternalOperatorsBlockingOperatorToFuture_

@class RxObservable;
@protocol JavaUtilConcurrentFuture;

@interface RxInternalOperatorsBlockingOperatorToFuture : NSObject

#pragma mark Public

+ (id<JavaUtilConcurrentFuture>)toFutureWithRxObservable:(RxObservable *)that;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsBlockingOperatorToFuture)

FOUNDATION_EXPORT id<JavaUtilConcurrentFuture> RxInternalOperatorsBlockingOperatorToFuture_toFutureWithRxObservable_(RxObservable *that);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsBlockingOperatorToFuture)

#endif

#pragma pop_macro("RxInternalOperatorsBlockingOperatorToFuture_INCLUDE_ALL")
