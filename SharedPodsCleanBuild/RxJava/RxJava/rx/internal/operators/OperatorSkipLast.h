//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorSkipLast.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorSkipLast_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorSkipLast_RESTRICT
#define RxInternalOperatorsOperatorSkipLast_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorSkipLast_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorSkipLast_RESTRICT

#if !defined (RxInternalOperatorsOperatorSkipLast_) && (RxInternalOperatorsOperatorSkipLast_INCLUDE_ALL || defined(RxInternalOperatorsOperatorSkipLast_INCLUDE))
#define RxInternalOperatorsOperatorSkipLast_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class RxSubscriber;

@interface RxInternalOperatorsOperatorSkipLast : NSObject < RxObservable_Operator >

#pragma mark Public

- (instancetype)initWithInt:(jint)count;

- (RxSubscriber *)callWithId:(RxSubscriber *)subscriber;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSkipLast)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorSkipLast_initWithInt_(RxInternalOperatorsOperatorSkipLast *self, jint count);

FOUNDATION_EXPORT RxInternalOperatorsOperatorSkipLast *new_RxInternalOperatorsOperatorSkipLast_initWithInt_(jint count) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorSkipLast *create_RxInternalOperatorsOperatorSkipLast_initWithInt_(jint count);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSkipLast)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorSkipLast_INCLUDE_ALL")
