//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorSampleWithObservable.java
//

#include "J2ObjC_source.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "rx/Observable.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/internal/operators/OperatorSampleWithObservable.h"
#include "rx/observers/SerializedSubscriber.h"

@interface RxInternalOperatorsOperatorSampleWithObservable_$1 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$value_;
  RxObserversSerializedSubscriber *val$s_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onCompleted;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                            withRxObserversSerializedSubscriber:(RxObserversSerializedSubscriber *)capture$1
                                               withRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSampleWithObservable_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithObservable_$1, val$value_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithObservable_$1, val$s_, RxObserversSerializedSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSampleWithObservable_$1 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSampleWithObservable_$1 *new_RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSampleWithObservable_$1 *create_RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSampleWithObservable_$1)

@interface RxInternalOperatorsOperatorSampleWithObservable_$2 : RxSubscriber {
 @public
  JavaUtilConcurrentAtomicAtomicReference *val$value_;
  RxObserversSerializedSubscriber *val$s_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onCompleted;

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                            withRxObserversSerializedSubscriber:(RxObserversSerializedSubscriber *)capture$1
                                               withRxSubscriber:(RxSubscriber *)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorSampleWithObservable_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithObservable_$2, val$value_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorSampleWithObservable_$2, val$s_, RxObserversSerializedSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSampleWithObservable_$2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0);

__attribute__((unused)) static RxInternalOperatorsOperatorSampleWithObservable_$2 *new_RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorSampleWithObservable_$2 *create_RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorSampleWithObservable_$2)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorSampleWithObservable)

id RxInternalOperatorsOperatorSampleWithObservable_EMPTY_TOKEN;

@implementation RxInternalOperatorsOperatorSampleWithObservable

- (instancetype)initWithRxObservable:(RxObservable *)sampler {
  RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(self, sampler);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxObserversSerializedSubscriber *s = new_RxObserversSerializedSubscriber_initWithRxSubscriber_(child);
  JavaUtilConcurrentAtomicAtomicReference *value = new_JavaUtilConcurrentAtomicAtomicReference_initWithId_(RxInternalOperatorsOperatorSampleWithObservable_EMPTY_TOKEN);
  RxSubscriber *samplerSub = new_RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(value, s, child);
  RxSubscriber *result = new_RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(value, s, child);
  (void) [((RxObservable *) nil_chk(sampler_)) unsafeSubscribeWithRxSubscriber:samplerSub];
  return result;
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorSampleWithObservable class]) {
    RxInternalOperatorsOperatorSampleWithObservable_EMPTY_TOKEN = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorSampleWithObservable)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObservable:", "OperatorSampleWithObservable", NULL, 0x1, NULL, "(Lrx/Observable<TU;>;)V" },
    { "callWithId:", "call", "Lrx.Subscriber;", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<-TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sampler_", NULL, 0x10, "Lrx.Observable;", NULL, "Lrx/Observable<TU;>;", .constantValue.asLong = 0 },
    { "EMPTY_TOKEN", "EMPTY_TOKEN", 0x18, "Ljava.lang.Object;", &RxInternalOperatorsOperatorSampleWithObservable_EMPTY_TOKEN, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSampleWithObservable = { 2, "OperatorSampleWithObservable", "rx.internal.operators", NULL, 0x11, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;U:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;TT;>;" };
  return &_RxInternalOperatorsOperatorSampleWithObservable;
}

@end

void RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(RxInternalOperatorsOperatorSampleWithObservable *self, RxObservable *sampler) {
  NSObject_init(self);
  self->sampler_ = sampler;
}

RxInternalOperatorsOperatorSampleWithObservable *new_RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(RxObservable *sampler) {
  RxInternalOperatorsOperatorSampleWithObservable *self = [RxInternalOperatorsOperatorSampleWithObservable alloc];
  RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(self, sampler);
  return self;
}

RxInternalOperatorsOperatorSampleWithObservable *create_RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(RxObservable *sampler) {
  return new_RxInternalOperatorsOperatorSampleWithObservable_initWithRxObservable_(sampler);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSampleWithObservable)

@implementation RxInternalOperatorsOperatorSampleWithObservable_$1

- (void)onNextWithId:(id)t {
  id localValue = [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$value_)) getAndSetWithId:JreLoadStatic(RxInternalOperatorsOperatorSampleWithObservable, EMPTY_TOKEN)];
  if (localValue != JreLoadStatic(RxInternalOperatorsOperatorSampleWithObservable, EMPTY_TOKEN)) {
    id v = localValue;
    [((RxObserversSerializedSubscriber *) nil_chk(val$s_)) onNextWithId:v];
  }
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxObserversSerializedSubscriber *) nil_chk(val$s_)) onErrorWithNSException:e];
  [self unsubscribe];
}

- (void)onCompleted {
  [((RxObserversSerializedSubscriber *) nil_chk(val$s_)) onCompleted];
  [self unsubscribe];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                            withRxObserversSerializedSubscriber:(RxObserversSerializedSubscriber *)capture$1
                                               withRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(self, capture$0, capture$1, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TU;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "initWithJavaUtilConcurrentAtomicAtomicReference:withRxObserversSerializedSubscriber:withRxSubscriber:", "", NULL, 0x0, NULL, "(Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;Lrx/observers/SerializedSubscriber<TT;>;Lrx/Subscriber<*>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", NULL, 0x1012, "Ljava.util.concurrent.atomic.AtomicReference;", NULL, "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "val$s_", NULL, 0x1012, "Lrx.observers.SerializedSubscriber;", NULL, "Lrx/observers/SerializedSubscriber<TT;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TU;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorSampleWithObservable", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSampleWithObservable_$1 = { 2, "", "rx.internal.operators", "OperatorSampleWithObservable", 0x8008, 4, methods, 2, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lrx/Subscriber<TU;>;" };
  return &_RxInternalOperatorsOperatorSampleWithObservable_$1;
}

@end

void RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSampleWithObservable_$1 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) {
  self->val$value_ = capture$0;
  self->val$s_ = capture$1;
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
}

RxInternalOperatorsOperatorSampleWithObservable_$1 *new_RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) {
  RxInternalOperatorsOperatorSampleWithObservable_$1 *self = [RxInternalOperatorsOperatorSampleWithObservable_$1 alloc];
  RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(self, capture$0, capture$1, arg$0);
  return self;
}

RxInternalOperatorsOperatorSampleWithObservable_$1 *create_RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) {
  return new_RxInternalOperatorsOperatorSampleWithObservable_$1_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(capture$0, capture$1, arg$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSampleWithObservable_$1)

@implementation RxInternalOperatorsOperatorSampleWithObservable_$2

- (void)onNextWithId:(id)t {
  [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$value_)) setWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxObserversSerializedSubscriber *) nil_chk(val$s_)) onErrorWithNSException:e];
  [self unsubscribe];
}

- (void)onCompleted {
  [((RxObserversSerializedSubscriber *) nil_chk(val$s_)) onCompleted];
  [self unsubscribe];
}

- (instancetype)initWithJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$0
                            withRxObserversSerializedSubscriber:(RxObserversSerializedSubscriber *)capture$1
                                               withRxSubscriber:(RxSubscriber *)arg$0 {
  RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(self, capture$0, capture$1, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "initWithJavaUtilConcurrentAtomicAtomicReference:withRxObserversSerializedSubscriber:withRxSubscriber:", "", NULL, 0x0, NULL, "(Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;Lrx/observers/SerializedSubscriber<TT;>;Lrx/Subscriber<*>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$value_", NULL, 0x1012, "Ljava.util.concurrent.atomic.AtomicReference;", NULL, "Ljava/util/concurrent/atomic/AtomicReference<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "val$s_", NULL, 0x1012, "Lrx.observers.SerializedSubscriber;", NULL, "Lrx/observers/SerializedSubscriber<TT;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorSampleWithObservable", "callWithId:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorSampleWithObservable_$2 = { 2, "", "rx.internal.operators", "OperatorSampleWithObservable", 0x8008, 4, methods, 2, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOperatorSampleWithObservable_$2;
}

@end

void RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(RxInternalOperatorsOperatorSampleWithObservable_$2 *self, JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) {
  self->val$value_ = capture$0;
  self->val$s_ = capture$1;
  RxSubscriber_initWithRxSubscriber_(self, arg$0);
}

RxInternalOperatorsOperatorSampleWithObservable_$2 *new_RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) {
  RxInternalOperatorsOperatorSampleWithObservable_$2 *self = [RxInternalOperatorsOperatorSampleWithObservable_$2 alloc];
  RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(self, capture$0, capture$1, arg$0);
  return self;
}

RxInternalOperatorsOperatorSampleWithObservable_$2 *create_RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(JavaUtilConcurrentAtomicAtomicReference *capture$0, RxObserversSerializedSubscriber *capture$1, RxSubscriber *arg$0) {
  return new_RxInternalOperatorsOperatorSampleWithObservable_$2_initWithJavaUtilConcurrentAtomicAtomicReference_withRxObserversSerializedSubscriber_withRxSubscriber_(capture$0, capture$1, arg$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorSampleWithObservable_$2)
