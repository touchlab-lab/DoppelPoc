//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorMergeMaxConcurrent.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/LinkedList.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/atomic/AtomicIntegerFieldUpdater.h"
#include "rx/Observable.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/internal/operators/OperatorMergeMaxConcurrent.h"
#include "rx/observers/SerializedSubscriber.h"
#include "rx/subscriptions/CompositeSubscription.h"

@interface RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 : RxSubscriber {
 @public
  RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *this$0_;
  jboolean once_;
}

- (void)onNextWithId:(id)t;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onCompleted;

- (instancetype)initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber:(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1, this$0_, RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 *self, RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 *new_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 *create_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1)

@implementation RxInternalOperatorsOperatorMergeMaxConcurrent

- (instancetype)initWithInt:(jint)maxConcurrency {
  RxInternalOperatorsOperatorMergeMaxConcurrent_initWithInt_(self, maxConcurrency);
  return self;
}

- (RxSubscriber *)callWithId:(RxSubscriber *)child {
  RxObserversSerializedSubscriber *s = new_RxObserversSerializedSubscriber_initWithRxSubscriber_(child);
  RxSubscriptionsCompositeSubscription *csub = new_RxSubscriptionsCompositeSubscription_init();
  [((RxSubscriber *) nil_chk(child)) addWithRxSubscription:csub];
  return new_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_initWithInt_withRxSubscriber_withRxSubscriptionsCompositeSubscription_(maxConcurrency_, s, csub);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:", "OperatorMergeMaxConcurrent", NULL, 0x1, NULL, NULL },
    { "callWithId:", "call", "Lrx.Subscriber;", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)Lrx/Subscriber<+Lrx/Observable<+TT;>;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxConcurrency_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.internal.operators.OperatorMergeMaxConcurrent$SourceSubscriber;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeMaxConcurrent = { 2, "OperatorMergeMaxConcurrent", "rx.internal.operators", NULL, 0x11, 2, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$Operator<TT;Lrx/Observable<+TT;>;>;" };
  return &_RxInternalOperatorsOperatorMergeMaxConcurrent;
}

@end

void RxInternalOperatorsOperatorMergeMaxConcurrent_initWithInt_(RxInternalOperatorsOperatorMergeMaxConcurrent *self, jint maxConcurrency) {
  NSObject_init(self);
  self->maxConcurrency_ = maxConcurrency;
}

RxInternalOperatorsOperatorMergeMaxConcurrent *new_RxInternalOperatorsOperatorMergeMaxConcurrent_initWithInt_(jint maxConcurrency) {
  RxInternalOperatorsOperatorMergeMaxConcurrent *self = [RxInternalOperatorsOperatorMergeMaxConcurrent alloc];
  RxInternalOperatorsOperatorMergeMaxConcurrent_initWithInt_(self, maxConcurrency);
  return self;
}

RxInternalOperatorsOperatorMergeMaxConcurrent *create_RxInternalOperatorsOperatorMergeMaxConcurrent_initWithInt_(jint maxConcurrency) {
  return new_RxInternalOperatorsOperatorMergeMaxConcurrent_initWithInt_(maxConcurrency);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeMaxConcurrent)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber)

JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_WIP_UPDATER;

@implementation RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber

- (instancetype)initWithInt:(jint)maxConcurrency
           withRxSubscriber:(RxSubscriber *)s
withRxSubscriptionsCompositeSubscription:(RxSubscriptionsCompositeSubscription *)csub {
  RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_initWithInt_withRxSubscriber_withRxSubscriptionsCompositeSubscription_(self, maxConcurrency, s, csub);
  return self;
}

- (void)onNextWithId:(RxObservable *)t {
  @synchronized(guard_) {
    [((id<JavaUtilQueue>) nil_chk(queue_)) addWithId:t];
  }
  [self subscribeNext];
}

- (void)subscribeNext {
  RxObservable *t;
  @synchronized(guard_) {
    t = [((id<JavaUtilQueue>) nil_chk(queue_)) peek];
    if (t == nil || active_ >= maxConcurrency_) {
      return;
    }
    active_++;
    (void) [queue_ poll];
  }
  RxSubscriber *itemSub = new_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(self);
  [((RxSubscriptionsCompositeSubscription *) nil_chk(csub_)) addWithRxSubscription:itemSub];
  [((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_WIP_UPDATER)) incrementAndGetWithId:self];
  (void) [((RxObservable *) nil_chk(t)) unsafeSubscribeWithRxSubscriber:itemSub];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(s_)) onErrorWithNSException:e];
  [self unsubscribe];
}

- (void)onCompleted {
  if ([((JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *) nil_chk(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_WIP_UPDATER)) decrementAndGetWithId:self] == 0) {
    [((RxSubscriber *) nil_chk(s_)) onCompleted];
  }
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber class]) {
    RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_WIP_UPDATER = JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_class_(), @"wip");
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withRxSubscriber:withRxSubscriptionsCompositeSubscription:", "SourceSubscriber", NULL, 0x1, NULL, "(ILrx/Subscriber<TT;>;Lrx/subscriptions/CompositeSubscription;)V" },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(Lrx/Observable<+TT;>;)V" },
    { "subscribeNext", NULL, "V", 0x0, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "maxConcurrency_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "s_", NULL, 0x10, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<TT;>;", .constantValue.asLong = 0 },
    { "csub_", NULL, 0x10, "Lrx.subscriptions.CompositeSubscription;", NULL, NULL, .constantValue.asLong = 0 },
    { "guard_", NULL, 0x10, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "wip_", NULL, 0x40, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "WIP_UPDATER", "WIP_UPDATER", 0x18, "Ljava.util.concurrent.atomic.AtomicIntegerFieldUpdater;", &RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_WIP_UPDATER, "Ljava/util/concurrent/atomic/AtomicIntegerFieldUpdater<Lrx/internal/operators/OperatorMergeMaxConcurrent$SourceSubscriber;>;", .constantValue.asLong = 0 },
    { "active_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "queue_", NULL, 0x10, "Ljava.util.Queue;", NULL, "Ljava/util/Queue<Lrx/Observable<+TT;>;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lrx.Observable;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber = { 2, "SourceSubscriber", "rx.internal.operators", "OperatorMergeMaxConcurrent", 0x18, 5, methods, 8, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/Subscriber<Lrx/Observable<+TT;>;>;" };
  return &_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber;
}

@end

void RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_initWithInt_withRxSubscriber_withRxSubscriptionsCompositeSubscription_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *self, jint maxConcurrency, RxSubscriber *s, RxSubscriptionsCompositeSubscription *csub) {
  RxSubscriber_initWithRxSubscriber_(self, s);
  self->maxConcurrency_ = maxConcurrency;
  self->s_ = s;
  self->csub_ = csub;
  self->guard_ = new_NSObject_init();
  self->queue_ = new_JavaUtilLinkedList_init();
  JreAssignVolatileInt(&self->wip_, 1);
}

RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *new_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_initWithInt_withRxSubscriber_withRxSubscriptionsCompositeSubscription_(jint maxConcurrency, RxSubscriber *s, RxSubscriptionsCompositeSubscription *csub) {
  RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *self = [RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber alloc];
  RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_initWithInt_withRxSubscriber_withRxSubscriptionsCompositeSubscription_(self, maxConcurrency, s, csub);
  return self;
}

RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *create_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_initWithInt_withRxSubscriber_withRxSubscriptionsCompositeSubscription_(jint maxConcurrency, RxSubscriber *s, RxSubscriptionsCompositeSubscription *csub) {
  return new_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_initWithInt_withRxSubscriber_withRxSubscriptionsCompositeSubscription_(maxConcurrency, s, csub);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber)

@implementation RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(this$0_->s_)) onNextWithId:t];
}

- (void)onErrorWithNSException:(NSException *)e {
  [this$0_ onErrorWithNSException:e];
}

- (void)onCompleted {
  if (once_) {
    once_ = false;
    @synchronized(this$0_->guard_) {
      this$0_->active_--;
    }
    [((RxSubscriptionsCompositeSubscription *) nil_chk(this$0_->csub_)) removeWithRxSubscription:self];
    [this$0_ subscribeNext];
    [this$0_ onCompleted];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber:(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *)outer$ {
  RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrx.internal.operators.OperatorMergeMaxConcurrent$SourceSubscriber;", NULL, NULL, .constantValue.asLong = 0 },
    { "once_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber", "subscribeNext" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 = { 2, "", "rx.internal.operators", "OperatorMergeMaxConcurrent$SourceSubscriber", 0x8008, 4, methods, 2, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1;
}

@end

void RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 *self, RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *outer$) {
  self->this$0_ = outer$;
  RxSubscriber_init(self);
  self->once_ = true;
}

RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 *new_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *outer$) {
  RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 *self = [RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 alloc];
  RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(self, outer$);
  return self;
}

RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1 *create_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber *outer$) {
  return new_RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1_initWithRxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMergeMaxConcurrent_SourceSubscriber_$1)
