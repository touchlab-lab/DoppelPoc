//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/internal/operators/OperatorRetryWithPredicate.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorRetryWithPredicate_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorRetryWithPredicate_RESTRICT
#define RxInternalOperatorsOperatorRetryWithPredicate_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorRetryWithPredicate_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorRetryWithPredicate_RESTRICT

#if !defined (RxInternalOperatorsOperatorRetryWithPredicate_) && (RxInternalOperatorsOperatorRetryWithPredicate_INCLUDE_ALL || defined(RxInternalOperatorsOperatorRetryWithPredicate_INCLUDE))
#define RxInternalOperatorsOperatorRetryWithPredicate_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc2;

@interface RxInternalOperatorsOperatorRetryWithPredicate : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc2> predicate_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorRetryWithPredicate)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorRetryWithPredicate, predicate_, id<RxFunctionsFunc2>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorRetryWithPredicate_initWithRxFunctionsFunc2_(RxInternalOperatorsOperatorRetryWithPredicate *self, id<RxFunctionsFunc2> predicate);

FOUNDATION_EXPORT RxInternalOperatorsOperatorRetryWithPredicate *new_RxInternalOperatorsOperatorRetryWithPredicate_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorRetryWithPredicate *create_RxInternalOperatorsOperatorRetryWithPredicate_initWithRxFunctionsFunc2_(id<RxFunctionsFunc2> predicate);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorRetryWithPredicate)

#endif

#if !defined (RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_) && (RxInternalOperatorsOperatorRetryWithPredicate_INCLUDE_ALL || defined(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_INCLUDE))
#define RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_

#define RxSubscriber_RESTRICT 1
#define RxSubscriber_INCLUDE 1
#include "rx/Subscriber.h"

@class JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater;
@class RxObservable;
@class RxScheduler_Worker;
@class RxSubscriptionsSerialSubscription;
@protocol RxFunctionsFunc2;

@interface RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber : RxSubscriber {
 @public
  RxSubscriber *child_;
  id<RxFunctionsFunc2> predicate_;
  RxScheduler_Worker *inner_;
  RxSubscriptionsSerialSubscription *serialSubscription_;
  volatile_jint attempts_;
}

#pragma mark Public

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
                withRxFunctionsFunc2:(id<RxFunctionsFunc2>)predicate
              withRxScheduler_Worker:(RxScheduler_Worker *)inner
withRxSubscriptionsSerialSubscription:(RxSubscriptionsSerialSubscription *)serialSubscription;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(RxObservable *)o;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber, child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber, predicate_, id<RxFunctionsFunc2>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber, inner_, RxScheduler_Worker *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber, serialSubscription_, RxSubscriptionsSerialSubscription *)

inline JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_get_ATTEMPTS_UPDATER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_ATTEMPTS_UPDATER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber, ATTEMPTS_UPDATER, JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc2_withRxScheduler_Worker_withRxSubscriptionsSerialSubscription_(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber *self, RxSubscriber *child, id<RxFunctionsFunc2> predicate, RxScheduler_Worker *inner, RxSubscriptionsSerialSubscription *serialSubscription);

FOUNDATION_EXPORT RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber *new_RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc2_withRxScheduler_Worker_withRxSubscriptionsSerialSubscription_(RxSubscriber *child, id<RxFunctionsFunc2> predicate, RxScheduler_Worker *inner, RxSubscriptionsSerialSubscription *serialSubscription) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber *create_RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber_initWithRxSubscriber_withRxFunctionsFunc2_withRxScheduler_Worker_withRxSubscriptionsSerialSubscription_(RxSubscriber *child, id<RxFunctionsFunc2> predicate, RxScheduler_Worker *inner, RxSubscriptionsSerialSubscription *serialSubscription);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorRetryWithPredicate_SourceSubscriber)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorRetryWithPredicate_INCLUDE_ALL")
