//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/observers/TestSubscriber.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxObserversTestSubscriber_INCLUDE_ALL")
#ifdef RxObserversTestSubscriber_RESTRICT
#define RxObserversTestSubscriber_INCLUDE_ALL 0
#else
#define RxObserversTestSubscriber_INCLUDE_ALL 1
#endif
#undef RxObserversTestSubscriber_RESTRICT

#if !defined (RxObserversTestSubscriber_) && (RxObserversTestSubscriber_INCLUDE_ALL || defined(RxObserversTestSubscriber_INCLUDE))
#define RxObserversTestSubscriber_

#define RxSubscriber_RESTRICT 1
#define RxSubscriber_INCLUDE 1
#include "rx/Subscriber.h"

@class JavaLangThread;
@class JavaUtilConcurrentTimeUnit;
@protocol JavaUtilList;
@protocol RxObserver;

@interface RxObserversTestSubscriber : RxSubscriber

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithRxObserver:(id<RxObserver>)delegate;

- (instancetype)initWithRxSubscriber:(RxSubscriber *)delegate;

- (void)assertNoErrors;

- (void)assertReceivedOnNextWithJavaUtilList:(id<JavaUtilList>)items;

- (void)assertTerminalEvent;

- (void)assertUnsubscribed;

- (void)awaitTerminalEvent;

- (void)awaitTerminalEventWithLong:(jlong)timeout
    withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (void)awaitTerminalEventAndUnsubscribeOnTimeoutWithLong:(jlong)timeout
                           withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)unit;

- (JavaLangThread *)getLastSeenThread;

- (id<JavaUtilList>)getOnCompletedEvents;

- (id<JavaUtilList>)getOnErrorEvents;

- (id<JavaUtilList>)getOnNextEvents;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)t;

- (void)requestMoreWithLong:(jlong)n;

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversTestSubscriber)

FOUNDATION_EXPORT void RxObserversTestSubscriber_initWithRxSubscriber_(RxObserversTestSubscriber *self, RxSubscriber *delegate);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_initWithRxSubscriber_(RxSubscriber *delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_initWithRxSubscriber_(RxSubscriber *delegate);

FOUNDATION_EXPORT void RxObserversTestSubscriber_initWithRxObserver_(RxObserversTestSubscriber *self, id<RxObserver> delegate);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_initWithRxObserver_(id<RxObserver> delegate) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_initWithRxObserver_(id<RxObserver> delegate);

FOUNDATION_EXPORT void RxObserversTestSubscriber_init(RxObserversTestSubscriber *self);

FOUNDATION_EXPORT RxObserversTestSubscriber *new_RxObserversTestSubscriber_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxObserversTestSubscriber *create_RxObserversTestSubscriber_init();

J2OBJC_TYPE_LITERAL_HEADER(RxObserversTestSubscriber)

#endif

#pragma pop_macro("RxObserversTestSubscriber_INCLUDE_ALL")
