//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/observers/SerializedObserver.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/Integer.h"
#include "java/lang/System.h"
#include "rx/Observer.h"
#include "rx/exceptions/Exceptions.h"
#include "rx/observers/SerializedObserver.h"

@interface RxObserversSerializedObserver () {
 @public
  id<RxObserver> actual_;
  jboolean emitting_;
  jboolean terminated_;
  RxObserversSerializedObserver_FastList *queue_;
}

@end

J2OBJC_FIELD_SETTER(RxObserversSerializedObserver, actual_, id<RxObserver>)
J2OBJC_FIELD_SETTER(RxObserversSerializedObserver, queue_, RxObserversSerializedObserver_FastList *)

inline jint RxObserversSerializedObserver_get_MAX_DRAIN_ITERATION();
#define RxObserversSerializedObserver_MAX_DRAIN_ITERATION 2147483647
J2OBJC_STATIC_FIELD_CONSTANT(RxObserversSerializedObserver, MAX_DRAIN_ITERATION, jint)

inline id RxObserversSerializedObserver_get_NULL_SENTINEL();
static id RxObserversSerializedObserver_NULL_SENTINEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxObserversSerializedObserver, NULL_SENTINEL, id)

inline id RxObserversSerializedObserver_get_COMPLETE_SENTINEL();
static id RxObserversSerializedObserver_COMPLETE_SENTINEL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxObserversSerializedObserver, COMPLETE_SENTINEL, id)

@interface RxObserversSerializedObserver_ErrorSentinel : NSObject {
 @public
  NSException *e_;
}

- (instancetype)initWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define initWithJavaLangThrowable initWithNSException
#endif // J2OBJC_RENAME_ALIASES

@end

J2OBJC_EMPTY_STATIC_INIT(RxObserversSerializedObserver_ErrorSentinel)

J2OBJC_FIELD_SETTER(RxObserversSerializedObserver_ErrorSentinel, e_, NSException *)

__attribute__((unused)) static void RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(RxObserversSerializedObserver_ErrorSentinel *self, NSException *e);

__attribute__((unused)) static RxObserversSerializedObserver_ErrorSentinel *new_RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(NSException *e) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxObserversSerializedObserver_ErrorSentinel *create_RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(NSException *e);

J2OBJC_TYPE_LITERAL_HEADER(RxObserversSerializedObserver_ErrorSentinel)

J2OBJC_INITIALIZED_DEFN(RxObserversSerializedObserver)

@implementation RxObserversSerializedObserver

- (instancetype)initWithRxObserver:(id<RxObserver>)s {
  RxObserversSerializedObserver_initWithRxObserver_(self, s);
  return self;
}

- (void)onCompleted {
  RxObserversSerializedObserver_FastList *list;
  @synchronized(self) {
    if (terminated_) {
      return;
    }
    terminated_ = true;
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_RxObserversSerializedObserver_FastList_init();
      }
      [((RxObserversSerializedObserver_FastList *) nil_chk(queue_)) addWithId:RxObserversSerializedObserver_COMPLETE_SENTINEL];
      return;
    }
    emitting_ = true;
    list = queue_;
    queue_ = nil;
  }
  [self drainQueueWithRxObserversSerializedObserver_FastList:list];
  [((id<RxObserver>) nil_chk(actual_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  RxExceptionsExceptions_throwIfFatalWithNSException_(e);
  RxObserversSerializedObserver_FastList *list;
  @synchronized(self) {
    if (terminated_) {
      return;
    }
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_RxObserversSerializedObserver_FastList_init();
      }
      [((RxObserversSerializedObserver_FastList *) nil_chk(queue_)) addWithId:new_RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(e)];
      return;
    }
    emitting_ = true;
    list = queue_;
    queue_ = nil;
  }
  [self drainQueueWithRxObserversSerializedObserver_FastList:list];
  [((id<RxObserver>) nil_chk(actual_)) onErrorWithNSException:e];
  @synchronized(self) {
    emitting_ = false;
  }
}

- (void)onNextWithId:(id)t {
  RxObserversSerializedObserver_FastList *list;
  @synchronized(self) {
    if (terminated_) {
      return;
    }
    if (emitting_) {
      if (queue_ == nil) {
        queue_ = new_RxObserversSerializedObserver_FastList_init();
      }
      [((RxObserversSerializedObserver_FastList *) nil_chk(queue_)) addWithId:t != nil ? t : RxObserversSerializedObserver_NULL_SENTINEL];
      return;
    }
    emitting_ = true;
    list = queue_;
    queue_ = nil;
  }
  jboolean skipFinal = false;
  @try {
    jint iter = RxObserversSerializedObserver_MAX_DRAIN_ITERATION;
    do {
      [self drainQueueWithRxObserversSerializedObserver_FastList:list];
      if (iter == RxObserversSerializedObserver_MAX_DRAIN_ITERATION) {
        [((id<RxObserver>) nil_chk(actual_)) onNextWithId:t];
      }
      --iter;
      if (iter > 0) {
        @synchronized(self) {
          list = queue_;
          queue_ = nil;
          if (list == nil) {
            emitting_ = false;
            skipFinal = true;
            return;
          }
        }
      }
    }
    while (iter > 0);
  }
  @finally {
    if (!skipFinal) {
      @synchronized(self) {
        if (terminated_) {
          list = queue_;
          queue_ = nil;
        }
        else {
          emitting_ = false;
          list = nil;
        }
      }
    }
  }
  [self drainQueueWithRxObserversSerializedObserver_FastList:list];
}

- (void)drainQueueWithRxObserversSerializedObserver_FastList:(RxObserversSerializedObserver_FastList *)list {
  if (list == nil || list->size_ == 0) {
    return;
  }
  {
    IOSObjectArray *a__ = ((RxObserversSerializedObserver_FastList *) nil_chk(list))->array_;
    id const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id v = *b__++;
      if (v == nil) {
        break;
      }
      if (v == RxObserversSerializedObserver_NULL_SENTINEL) {
        [((id<RxObserver>) nil_chk(actual_)) onNextWithId:nil];
      }
      else if (v == RxObserversSerializedObserver_COMPLETE_SENTINEL) {
        [((id<RxObserver>) nil_chk(actual_)) onCompleted];
      }
      else if ([nil_chk(v) getClass] == (id) RxObserversSerializedObserver_ErrorSentinel_class_()) {
        [((id<RxObserver>) nil_chk(actual_)) onErrorWithNSException:((RxObserversSerializedObserver_ErrorSentinel *) cast_chk(v, [RxObserversSerializedObserver_ErrorSentinel class]))->e_];
      }
      else {
        id t = v;
        [((id<RxObserver>) nil_chk(actual_)) onNextWithId:t];
      }
    }
  }
}

+ (void)initialize {
  if (self == [RxObserversSerializedObserver class]) {
    RxObserversSerializedObserver_NULL_SENTINEL = new_NSObject_init();
    RxObserversSerializedObserver_COMPLETE_SENTINEL = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(RxObserversSerializedObserver)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObserver:", "SerializedObserver", NULL, 0x1, NULL, "(Lrx/Observer<-TT;>;)V" },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "drainQueueWithRxObserversSerializedObserver_FastList:", "drainQueue", "V", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "actual_", NULL, 0x12, "Lrx.Observer;", NULL, "Lrx/Observer<-TT;>;", .constantValue.asLong = 0 },
    { "emitting_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "terminated_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "queue_", NULL, 0x2, "Lrx.observers.SerializedObserver$FastList;", NULL, NULL, .constantValue.asLong = 0 },
    { "MAX_DRAIN_ITERATION", "MAX_DRAIN_ITERATION", 0x1a, "I", NULL, NULL, .constantValue.asInt = RxObserversSerializedObserver_MAX_DRAIN_ITERATION },
    { "NULL_SENTINEL", "NULL_SENTINEL", 0x1a, "Ljava.lang.Object;", &RxObserversSerializedObserver_NULL_SENTINEL, NULL, .constantValue.asLong = 0 },
    { "COMPLETE_SENTINEL", "COMPLETE_SENTINEL", 0x1a, "Ljava.lang.Object;", &RxObserversSerializedObserver_COMPLETE_SENTINEL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.observers.SerializedObserver$FastList;", "Lrx.observers.SerializedObserver$ErrorSentinel;"};
  static const J2ObjcClassInfo _RxObserversSerializedObserver = { 2, "SerializedObserver", "rx.observers", NULL, 0x1, 5, methods, 7, fields, 0, NULL, 2, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observer<TT;>;" };
  return &_RxObserversSerializedObserver;
}

@end

void RxObserversSerializedObserver_initWithRxObserver_(RxObserversSerializedObserver *self, id<RxObserver> s) {
  NSObject_init(self);
  self->emitting_ = false;
  self->terminated_ = false;
  self->actual_ = s;
}

RxObserversSerializedObserver *new_RxObserversSerializedObserver_initWithRxObserver_(id<RxObserver> s) {
  RxObserversSerializedObserver *self = [RxObserversSerializedObserver alloc];
  RxObserversSerializedObserver_initWithRxObserver_(self, s);
  return self;
}

RxObserversSerializedObserver *create_RxObserversSerializedObserver_initWithRxObserver_(id<RxObserver> s) {
  return new_RxObserversSerializedObserver_initWithRxObserver_(s);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObserversSerializedObserver)

@implementation RxObserversSerializedObserver_FastList

- (void)addWithId:(id)o {
  jint s = size_;
  IOSObjectArray *a = array_;
  if (a == nil) {
    a = [IOSObjectArray newArrayWithLength:16 type:NSObject_class_()];
    array_ = a;
  }
  else if (s == a->size_) {
    IOSObjectArray *array2 = [IOSObjectArray newArrayWithLength:s + (JreRShift32(s, 2)) type:NSObject_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(a, 0, array2, 0, s);
    a = array2;
    array_ = a;
  }
  (void) IOSObjectArray_Set(nil_chk(a), s, o);
  size_ = s + 1;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxObserversSerializedObserver_FastList_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithId:", "add", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "array_", NULL, 0x0, "[Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "size_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxObserversSerializedObserver_FastList = { 2, "FastList", "rx.observers", "SerializedObserver", 0x18, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxObserversSerializedObserver_FastList;
}

@end

void RxObserversSerializedObserver_FastList_init(RxObserversSerializedObserver_FastList *self) {
  NSObject_init(self);
}

RxObserversSerializedObserver_FastList *new_RxObserversSerializedObserver_FastList_init() {
  RxObserversSerializedObserver_FastList *self = [RxObserversSerializedObserver_FastList alloc];
  RxObserversSerializedObserver_FastList_init(self);
  return self;
}

RxObserversSerializedObserver_FastList *create_RxObserversSerializedObserver_FastList_init() {
  return new_RxObserversSerializedObserver_FastList_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObserversSerializedObserver_FastList)

@implementation RxObserversSerializedObserver_ErrorSentinel

- (instancetype)initWithNSException:(NSException *)e {
  RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(self, e);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSException:", "ErrorSentinel", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "e_", NULL, 0x10, "Ljava.lang.Throwable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxObserversSerializedObserver_ErrorSentinel = { 2, "ErrorSentinel", "rx.observers", "SerializedObserver", 0x1a, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxObserversSerializedObserver_ErrorSentinel;
}

@end

void RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(RxObserversSerializedObserver_ErrorSentinel *self, NSException *e) {
  NSObject_init(self);
  self->e_ = e;
}

RxObserversSerializedObserver_ErrorSentinel *new_RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(NSException *e) {
  RxObserversSerializedObserver_ErrorSentinel *self = [RxObserversSerializedObserver_ErrorSentinel alloc];
  RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(self, e);
  return self;
}

RxObserversSerializedObserver_ErrorSentinel *create_RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(NSException *e) {
  return new_RxObserversSerializedObserver_ErrorSentinel_initWithNSException_(e);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxObserversSerializedObserver_ErrorSentinel)
