//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/RxJava/src/main/java/rx/subscriptions/RefCountSubscription.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxSubscriptionsRefCountSubscription_INCLUDE_ALL")
#ifdef RxSubscriptionsRefCountSubscription_RESTRICT
#define RxSubscriptionsRefCountSubscription_INCLUDE_ALL 0
#else
#define RxSubscriptionsRefCountSubscription_INCLUDE_ALL 1
#endif
#undef RxSubscriptionsRefCountSubscription_RESTRICT

#if !defined (RxSubscriptionsRefCountSubscription_) && (RxSubscriptionsRefCountSubscription_INCLUDE_ALL || defined(RxSubscriptionsRefCountSubscription_INCLUDE))
#define RxSubscriptionsRefCountSubscription_

#define RxSubscription_RESTRICT 1
#define RxSubscription_INCLUDE 1
#include "rx/Subscription.h"

@class JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater;
@class RxSubscriptionsRefCountSubscription_State;

@interface RxSubscriptionsRefCountSubscription : NSObject < RxSubscription > {
 @public
  volatile_id state_;
}

#pragma mark Public

- (instancetype)initWithRxSubscription:(id<RxSubscription>)s;

- (id<RxSubscription>)get;

- (jboolean)isUnsubscribed;

- (void)unsubscribe;

#pragma mark Package-Private

- (void)unsubscribeAChild;

@end

J2OBJC_STATIC_INIT(RxSubscriptionsRefCountSubscription)

J2OBJC_VOLATILE_FIELD_SETTER(RxSubscriptionsRefCountSubscription, state_, RxSubscriptionsRefCountSubscription_State *)

inline RxSubscriptionsRefCountSubscription_State *RxSubscriptionsRefCountSubscription_get_EMPTY_STATE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT RxSubscriptionsRefCountSubscription_State *RxSubscriptionsRefCountSubscription_EMPTY_STATE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxSubscriptionsRefCountSubscription, EMPTY_STATE, RxSubscriptionsRefCountSubscription_State *)

inline JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater *RxSubscriptionsRefCountSubscription_get_STATE_UPDATER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater *RxSubscriptionsRefCountSubscription_STATE_UPDATER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxSubscriptionsRefCountSubscription, STATE_UPDATER, JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater *)

FOUNDATION_EXPORT void RxSubscriptionsRefCountSubscription_initWithRxSubscription_(RxSubscriptionsRefCountSubscription *self, id<RxSubscription> s);

FOUNDATION_EXPORT RxSubscriptionsRefCountSubscription *new_RxSubscriptionsRefCountSubscription_initWithRxSubscription_(id<RxSubscription> s) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSubscriptionsRefCountSubscription *create_RxSubscriptionsRefCountSubscription_initWithRxSubscription_(id<RxSubscription> s);

J2OBJC_TYPE_LITERAL_HEADER(RxSubscriptionsRefCountSubscription)

#endif

#if !defined (RxSubscriptionsRefCountSubscription_State_) && (RxSubscriptionsRefCountSubscription_INCLUDE_ALL || defined(RxSubscriptionsRefCountSubscription_State_INCLUDE))
#define RxSubscriptionsRefCountSubscription_State_

@interface RxSubscriptionsRefCountSubscription_State : NSObject {
 @public
  jboolean isUnsubscribed_;
  jint children_;
}

#pragma mark Package-Private

- (instancetype)initWithBoolean:(jboolean)u
                        withInt:(jint)c;

- (RxSubscriptionsRefCountSubscription_State *)addChild;

- (RxSubscriptionsRefCountSubscription_State *)removeChild;

- (RxSubscriptionsRefCountSubscription_State *)unsubscribe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubscriptionsRefCountSubscription_State)

FOUNDATION_EXPORT void RxSubscriptionsRefCountSubscription_State_initWithBoolean_withInt_(RxSubscriptionsRefCountSubscription_State *self, jboolean u, jint c);

FOUNDATION_EXPORT RxSubscriptionsRefCountSubscription_State *new_RxSubscriptionsRefCountSubscription_State_initWithBoolean_withInt_(jboolean u, jint c) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSubscriptionsRefCountSubscription_State *create_RxSubscriptionsRefCountSubscription_State_initWithBoolean_withInt_(jboolean u, jint c);

J2OBJC_TYPE_LITERAL_HEADER(RxSubscriptionsRefCountSubscription_State)

#endif

#pragma pop_macro("RxSubscriptionsRefCountSubscription_INCLUDE_ALL")
