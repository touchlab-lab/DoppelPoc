//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/persisted/CommandPersistenceProvider.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/content/ContentValues.h"
#include "co/touchlab/android/threading/tasks/persisted/BusLog.h"
#include "co/touchlab/android/threading/tasks/persisted/BusLogImpl.h"
#include "co/touchlab/android/threading/tasks/persisted/CommandPersistenceProvider.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTask.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTaskQueue.h"
#include "co/touchlab/android/threading/tasks/persisted/SuperbusProcessException.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/StoredCommandAdapter.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/gson/GsonStoredCommandAdapter.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/sqlite/CursorIntf.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/sqlite/SQLiteDatabaseFactory.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/sqlite/SQLiteDatabaseIntf.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"
#include "java/lang/Runnable.h"
#include "java/lang/reflect/Constructor.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"

@interface CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider () {
 @public
  id<JavaUtilSet> checkedCommandClasses_;
  id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log_;
  id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory_;
  id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter_;
}

- (AndroidContentContentValues *)prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask;

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>)c;

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, checkedCommandClasses_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, log_, id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, databaseFactory_, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider, storedCommandAdapter_, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>)

__attribute__((unused)) static AndroidContentContentValues *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTask *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf> c);

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider)

NSString *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME = @"__SQL_PERS_PROV";
NSString *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMNS = @"id INTEGER PRIMARY KEY AUTOINCREMENT, type VARCHAR, commandData VARCHAR";
IOSObjectArray *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST;

@implementation CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)databaseFactory {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(self, databaseFactory);
  return self;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)databaseFactory
                                                withCoTouchlabAndroidThreadingTasksPersistedBusLog:(id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)log {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, log);
  return self;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>)databaseFactory
                           withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter:(id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>)storedCommandAdapter
                                                withCoTouchlabAndroidThreadingTasksPersistedBusLog:(id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)log {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, storedCommandAdapter, log);
  return self;
}

- (void)removeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  @try {
    jint removedCount = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) delete__WithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSString:@"id = ?" withNSStringArray:[IOSObjectArray newArrayWithObjects:(id[]){ [((JavaLangLong *) nil_chk([((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getId])) description] } count:1 type:NSString_class_()]];
    if (removedCount != 1) {
      [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(log_)) eWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:JreStrcat("$I", @"Deleted count != 1, was ", removedCount)];
    }
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]]) {
      @throw (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *) cast_chk(e, [CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]);
    }
    else {
      @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
    }
  }
}

- (void)saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  [self checkNoArgWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:persistedTask];
  @try {
    AndroidContentContentValues *values = CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, persistedTask);
    if ([((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getId] == nil) {
      jlong newRowId = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) insertOrThrowWithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSString:@"type" withAndroidContentContentValues:values];
      [persistedTask setIdWithJavaLangLong:JavaLangLong_valueOfWithLong_(newRowId)];
    }
    else {
      [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) updateWithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withAndroidContentContentValues:values withNSString:@"id = ?" withNSStringArray:[IOSObjectArray newArrayWithObjects:(id[]){ [((JavaLangLong *) nil_chk([persistedTask getId])) description] } count:1 type:NSString_class_()]];
    }
  }
  @catch (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
  }
}

- (void)saveCommandBatchWithJavaUtilCollection:(id<JavaUtilCollection>)persistedTasks {
  id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> database = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase];
  @try {
    [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(database)) beginTransaction];
    for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong persistedTask in nil_chk(persistedTasks)) {
      [self saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:persistedTask];
    }
    [database setTransactionSuccessful];
  }
  @finally {
    [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(database)) endTransaction];
  }
}

- (id<JavaUtilCollection>)loadPersistedCommands {
  @try {
    id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> db = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase];
    [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(db)) beginTransaction];
    @try {
      id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf> cursor = [db queryWithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSStringArray:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST];
      id<JavaUtilList> persistedTasks = nil;
      @try {
        persistedTasks = new_JavaUtilArrayList_init();
        while ([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>) nil_chk(cursor)) moveToNext]) {
          CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask = CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(self, cursor);
          if (persistedTask != nil) {
            [persistedTasks addWithId:persistedTask];
          }
        }
      }
      @finally {
        [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>) nil_chk(cursor)) close];
      }
      [db setTransactionSuccessful];
      return persistedTasks;
    }
    @finally {
      [db endTransaction];
    }
  }
  @catch (JavaLangException *e) {
    @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
  }
}

- (void)clearPersistedCommands {
  @try {
    [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk([((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase])) delete__WithNSString:CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME withNSString:nil withNSStringArray:nil];
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]]) {
      @throw (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *) cast_chk(e, [CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]);
    }
    else {
      @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
    }
  }
}

- (void)runInTransactionWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> db = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory>) nil_chk(databaseFactory_)) getDatabase];
  [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(db)) beginTransaction];
  @try {
    [((id<JavaLangRunnable>) nil_chk(r)) run];
    [db setTransactionSuccessful];
  }
  @finally {
    [db endTransaction];
  }
}

- (AndroidContentContentValues *)prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  return CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, persistedTask);
}

- (void)checkNoArgWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  IOSClass *commandClass = [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getClass];
  if ([((id<JavaUtilSet>) nil_chk(checkedCommandClasses_)) containsWithId:commandClass]) {
    return;
  }
  jboolean isNoArg = false;
  IOSObjectArray *constructors = [commandClass getConstructors];
  {
    IOSObjectArray *a__ = constructors;
    JavaLangReflectConstructor * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectConstructor * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectConstructor *constructor = *b__++;
      if (((IOSObjectArray *) nil_chk([((JavaLangReflectConstructor *) nil_chk(constructor)) getParameterTypes]))->size_ == 0) {
        isNoArg = true;
        break;
      }
    }
  }
  if (!isNoArg) {
    @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSString_(@"All StoredCommand classes must have a no-arg constructor");
  }
  [checkedCommandClasses_ addWithId:commandClass];
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>)c {
  return CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(self, c);
}

+ (void)createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>)database {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(database);
}

+ (void)dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>)database {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(database);
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider class]) {
    CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST = [IOSObjectArray newArrayWithObjects:(id[]){ @"id", @"type", @"commandData" } count:3 type:NSString_class_()];
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:", "CommandPersistenceProvider", NULL, 0x1, NULL, NULL },
    { "initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:withCoTouchlabAndroidThreadingTasksPersistedBusLog:", "CommandPersistenceProvider", NULL, 0x1, NULL, NULL },
    { "initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory:withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter:withCoTouchlabAndroidThreadingTasksPersistedBusLog:", "CommandPersistenceProvider", NULL, 0x1, NULL, NULL },
    { "removeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "removeCommand", "V", 0x1, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
    { "saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "saveCommand", "V", 0x1, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
    { "saveCommandBatchWithJavaUtilCollection:", "saveCommandBatch", "V", 0x1, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", "(Ljava/util/Collection<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;)V" },
    { "loadPersistedCommands", NULL, "Ljava.util.Collection;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", "()Ljava/util/Collection<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;" },
    { "clearPersistedCommands", NULL, "V", 0x1, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
    { "runInTransactionWithJavaLangRunnable:", "runInTransaction", "V", 0x1, NULL, NULL },
    { "prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "prepCommandSave", "Landroid.content.ContentValues;", 0x2, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
    { "checkNoArgWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "checkNoArg", "V", 0x4, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
    { "loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf:", "loadFromCursor", "Lco.touchlab.android.threading.tasks.persisted.PersistedTask;", 0x2, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
    { "createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:", "createTables", "V", 0x9, NULL, NULL },
    { "dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf:", "dropTables", "V", 0x9, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TABLE_NAME", "TABLE_NAME", 0x19, "Ljava.lang.String;", &CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME, NULL, .constantValue.asLong = 0 },
    { "COLUMNS", "COLUMNS", 0x19, "Ljava.lang.String;", &CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMNS, NULL, .constantValue.asLong = 0 },
    { "COLUMN_LIST", "COLUMN_LIST", 0x19, "[Ljava.lang.String;", &CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMN_LIST, NULL, .constantValue.asLong = 0 },
    { "checkedCommandClasses_", NULL, 0x2, "Ljava.util.Set;", NULL, "Ljava/util/Set<Ljava/lang/Class;>;", .constantValue.asLong = 0 },
    { "log_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.BusLog;", NULL, NULL, .constantValue.asLong = 0 },
    { "databaseFactory_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.storage.sqlite.SQLiteDatabaseFactory;", NULL, NULL, .constantValue.asLong = 0 },
    { "storedCommandAdapter_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.storage.StoredCommandAdapter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider = { 2, "CommandPersistenceProvider", "co.touchlab.android.threading.tasks.persisted", NULL, 0x1, 14, methods, 7, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, nil);
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self = [CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider alloc];
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(self, databaseFactory);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *create_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory) {
  return new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(databaseFactory);
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, new_CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init(), log);
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self = [CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider alloc];
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, log);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *create_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  return new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(databaseFactory, log);
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  NSObject_init(self);
  self->checkedCommandClasses_ = new_JavaUtilHashSet_init();
  self->databaseFactory_ = databaseFactory;
  self->storedCommandAdapter_ = storedCommandAdapter;
  self->log_ = log == nil ? new_CoTouchlabAndroidThreadingTasksPersistedBusLogImpl_init() : ((id) log);
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self = [CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider alloc];
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(self, databaseFactory, storedCommandAdapter, log);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *create_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory> databaseFactory, id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter> storedCommandAdapter, id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log) {
  return new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_withCoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter_withCoTouchlabAndroidThreadingTasksPersistedBusLog_(databaseFactory, storedCommandAdapter, log);
}

AndroidContentContentValues *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_prepCommandSaveWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask) {
  NSString *commandData = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>) nil_chk(self->storedCommandAdapter_)) storeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:persistedTask];
  AndroidContentContentValues *values = new_AndroidContentContentValues_init();
  [values putWithNSString:@"type" withNSString:[[((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getClass] getName]];
  [values putWithNSString:@"commandData" withNSString:commandData];
  return values;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTask *CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_loadFromCursorWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf_(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider *self, id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf> c) {
  @try {
    jlong id_ = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteCursorIntf>) nil_chk(c)) getLongWithInt:0];
    NSString *type = [c getStringWithInt:1];
    NSString *commandData = [c getStringWithInt:2];
    CoTouchlabAndroidThreadingTasksPersistedPersistedTask *storedPersistedTask = [((id<CoTouchlabAndroidThreadingTasksPersistedStorageStoredCommandAdapter>) nil_chk(self->storedCommandAdapter_)) inflateCommandWithNSString:commandData withNSString:type];
    [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(storedPersistedTask)) setIdWithJavaLangLong:JavaLangLong_valueOfWithLong_(id_)];
    return storedPersistedTask;
  }
  @catch (JavaLangException *e) {
    if ([e isKindOfClass:[JavaLangClassNotFoundException class]]) {
      [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) eWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:@"Class cast on load. Nothing to do here. Be more careful." withNSException:e];
      return nil;
    }
    else if ([e isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]]) {
      @throw (CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException *) cast_chk(e, [CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException class]);
    }
    else {
      @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
    }
  }
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_createTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> database) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initialize();
  [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(database)) execSQLWithNSString:JreStrcat("$$$$C", @"create table ", CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME, @" (", CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_COLUMNS, ')')];
}

void CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_dropTablesWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf_(id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf> database) {
  CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initialize();
  [((id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>) nil_chk(database)) execSQLWithNSString:JreStrcat("$$", @"drop table ", CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_TABLE_NAME)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider)
