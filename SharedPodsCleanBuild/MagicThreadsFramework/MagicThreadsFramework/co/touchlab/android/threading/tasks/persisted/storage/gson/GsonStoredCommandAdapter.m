//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/persisted/storage/gson/GsonStoredCommandAdapter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTask.h"
#include "co/touchlab/android/threading/tasks/persisted/SuperbusProcessException.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/gson/GsonStoredCommandAdapter.h"
#include "com/google/gson/Gson.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/ThreadLocal.h"

@interface CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter ()

- (ComGoogleGsonGson *)gsonForThread;

@end

__attribute__((unused)) static ComGoogleGsonGson *CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_gsonForThread(CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter *self);

@implementation CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)inflateCommandWithNSString:(NSString *)data
                                                                         withNSString:(NSString *)className_ {
  @try {
    ComGoogleGsonGson *gson = CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_gsonForThread(self);
    id returnedCommand = [((ComGoogleGsonGson *) nil_chk(gson)) fromJsonWithNSString:data withIOSClass:IOSClass_forName_(className_)];
    return (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) cast_chk(returnedCommand, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class]);
  }
  @catch (JavaLangClassNotFoundException *e) {
    @throw e;
  }
  @catch (JavaLangException *e) {
    @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
  }
}

- (ComGoogleGsonGson *)gsonForThread {
  return CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_gsonForThread(self);
}

- (NSString *)storeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  @try {
    return [((ComGoogleGsonGson *) nil_chk(CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_gsonForThread(self))) toJsonWithId:persistedTask withJavaLangReflectType:[((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getClass]];
  }
  @catch (JavaLangException *e) {
    @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(e);
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "inflateCommandWithNSString:withNSString:", "inflateCommand", "Lco.touchlab.android.threading.tasks.persisted.PersistedTask;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;Ljava.lang.ClassNotFoundException;", NULL },
    { "gsonForThread", NULL, "Lcom.google.gson.Gson;", 0x2, NULL, NULL },
    { "storeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "storeCommand", "Ljava.lang.String;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.SuperbusProcessException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "gsonThreadLocal_", NULL, 0x0, "Ljava.lang.ThreadLocal;", NULL, "Ljava/lang/ThreadLocal<Lcom/google/gson/Gson;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter = { 2, "GsonStoredCommandAdapter", "co.touchlab.android.threading.tasks.persisted.storage.gson", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter;
}

@end

ComGoogleGsonGson *CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_gsonForThread(CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter *self) {
  ComGoogleGsonGson *gson = [((JavaLangThreadLocal *) nil_chk(self->gsonThreadLocal_)) get];
  if (gson == nil) {
    gson = new_ComGoogleGsonGson_init();
    [self->gsonThreadLocal_ setWithId:gson];
  }
  return gson;
}

void CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init(CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter *self) {
  NSObject_init(self);
  self->gsonThreadLocal_ = new_JavaLangThreadLocal_init();
}

CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter *new_CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init() {
  CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter *self = [CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter alloc];
  CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init(self);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter *create_CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init() {
  return new_CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedStorageGsonGsonStoredCommandAdapter)
