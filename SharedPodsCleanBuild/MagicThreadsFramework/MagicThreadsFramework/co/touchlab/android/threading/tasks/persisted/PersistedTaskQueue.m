//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/persisted/PersistedTaskQueue.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/content/Context.h"
#include "android/os/Handler.h"
#include "android/os/Message.h"
#include "co/touchlab/android/threading/errorcontrol/SoftException.h"
#include "co/touchlab/android/threading/tasks/BaseTaskQueue.h"
#include "co/touchlab/android/threading/tasks/Task.h"
#include "co/touchlab/android/threading/tasks/persisted/BusLog.h"
#include "co/touchlab/android/threading/tasks/persisted/CommandPurgePolicy.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTask.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTaskQueue.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTaskQueueConfig.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistenceProvider.h"
#include "co/touchlab/android/threading/tasks/persisted/SuperbusProcessException.h"
#include "co/touchlab/android/threading/utils/UiThreadContext.h"
#include "java/lang/Enum.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/PriorityQueue.h"
#include "java/util/Queue.h"
#include "java/util/concurrent/ExecutorService.h"

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue () {
 @public
  id<JavaUtilQueue> addingTasks_;
  id<JavaUtilQueue> pendingTasks_;
  id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider> provider_;
  id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy> commandPurgePolicy_;
  id<CoTouchlabAndroidThreadingTasksPersistedBusLog> log_;
}

- (void)callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task;

- (jboolean)checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c;

- (jboolean)checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                          withJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (void)callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask;

- (void)logQueueState;

- (void)logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask
                                                                      withNSString:(NSString *)methodName;

- (void)logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define withJavaLangThrowable withNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define withJavaLangThrowable withNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)runInBackgroundWithJavaLangRunnable:(id<JavaLangRunnable>)r;

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, addingTasks_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, pendingTasks_, id<JavaUtilQueue>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, provider_, id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, commandPurgePolicy_, id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy>)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, log_, id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task);

__attribute__((unused)) static jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c);

__attribute__((unused)) static jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, id<JavaUtilCollection> collection);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask, NSString *methodName);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e);

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, id<JavaLangRunnable> r);

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *this$0_;
}

- (void)run;

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable, this$0_, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *this$0_;
  id<JavaUtilCollection> val$persistedTasks_;
}

- (void)run;

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *)outer$
                                                                            withJavaUtilCollection:(id<JavaUtilCollection>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1, this$0_, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1, val$persistedTasks_, id<JavaUtilCollection>)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *this$0_;
  id<JavaUtilList> tasks_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                                                                  withJavaUtilList:(id<JavaUtilList>)tasks;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable, this$0_, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable, tasks_, id<JavaUtilList>)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable)

typedef NS_ENUM(NSUInteger, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Success = 0,
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Transient = 1,
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Permanent = 2,
};

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult : JavaLangEnum < NSCopying >

+ (IOSObjectArray *)values;

+ (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)valueOfWithNSString:(NSString *)name;

- (id)copyWithZone:(NSZone *)zone;

@end

J2OBJC_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

/*! INTERNAL ONLY - Use enum accessors declared below. */
FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[];

inline CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_get_Success();
J2OBJC_ENUM_CONSTANT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success)

inline CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_get_Transient();
J2OBJC_ENUM_CONSTANT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Transient)

inline CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_get_Permanent();
J2OBJC_ENUM_CONSTANT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT IOSObjectArray *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values();

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_valueOfWithNSString_(NSString *name);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_fromOrdinal(NSUInteger ordinal);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *this$0_;
  CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                         withCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask, this$0_, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask, c_, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *this$0_;
}

- (void)run;

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1, this$0_, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer : NSObject {
 @public
  CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c_;
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult_;
  NSException *cause_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
 withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)commandResult
                                                              withNSException:(NSException *)cause;
#ifdef J2OBJC_RENAME_ALIASES
#define withJavaLangThrowable withNSException
#endif // J2OBJC_RENAME_ALIASES

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, c_, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, commandResult_, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer, cause_, NSException *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper () {
 @public
  JavaUtilPriorityQueue *priorityQueue_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper, priorityQueue_, JavaUtilPriorityQueue *)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 : NSObject < JavaLangRunnable > {
 @public
  id<JavaLangRunnable> val$r_;
}

- (void)run;

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1, val$r_, id<JavaLangRunnable>)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 *self, id<JavaLangRunnable> capture$0);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1)

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue)

NSString *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG;

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)appContext
withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *)config {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(self, appContext, config);
  return self;
}

- (void)otherOperationsWithAndroidOsMessage:(AndroidOsMessage *)msg {
  {
    id<JavaUtilList> copyPersisted;
    switch (((AndroidOsMessage *) nil_chk(msg))->what_) {
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_START_PERSISTING_TASK:
      CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) cast_chk(msg->obj_, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class]));
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING:
      if (![((id<JavaUtilQueue>) nil_chk(addingTasks_)) isEmpty]) {
        id<JavaUtilList> copyPendingTasks = new_JavaUtilArrayList_initWithJavaUtilCollection_(addingTasks_);
        [((id<JavaUtilQueue>) nil_chk(pendingTasks_)) addAllWithJavaUtilCollection:addingTasks_];
        [addingTasks_ clear];
        CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(self, copyPendingTasks));
      }
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TRIGGER_PENDING:
      copyPersisted = (id<JavaUtilList>) cast_check(msg->obj_, JavaUtilList_class_());
      [((id<JavaUtilQueue>) nil_chk(pendingTasks_)) removeAllWithJavaUtilCollection:copyPersisted];
      [((id<JavaUtilCollection>) nil_chk([((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper>) nil_chk(tasks_)) all])) addAllWithJavaUtilCollection:copyPersisted];
      [self resetPollRunnable];
      break;
    }
  }
}

- (void)finishTaskWithAndroidOsMessage:(AndroidOsMessage *)msg
withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *container = (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *) cast_chk(((AndroidOsMessage *) nil_chk(msg))->obj_, [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer class]);
  jboolean shouldReset = true;
  @try {
    switch ([((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *) nil_chk(container))->commandResult_ ordinal]) {
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Success:
      [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(container->c_)) onCompleteWithAndroidContentContext:application_];
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Transient:
      CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, container->c_, container->cause_);
      [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper>) nil_chk(tasks_)) offerWithId:container->c_];
      shouldReset = false;
      [self callQueueFinished];
      break;
      case CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_Enum_Permanent:
      CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, container->c_, container->cause_);
      break;
      default:
      @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSString_(@"Unknown status");
    }
  }
  @finally {
    if (shouldReset) {
      [self resetPollRunnable];
    }
  }
}

- (void)executeWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task {
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(task)) setMyQueueWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:self];
  if (CoTouchlabAndroidThreadingUtilsUiThreadContext_isInUiThread()) {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, task);
  }
  else {
    [handler_ sendMessageWithAndroidOsMessage:[((AndroidOsHandler *) nil_chk(handler_)) obtainMessageWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_START_PERSISTING_TASK withId:task]];
  }
}

- (void)callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, task);
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *)copyPersistedState {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  CoTouchlabAndroidThreadingTasksBaseTaskQueue_TaskQueueState *taskQueueState = [self copyState];
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(new_JavaUtilArrayList_initWithJavaUtilCollection_(addingTasks_), new_JavaUtilArrayList_initWithJavaUtilCollection_(pendingTasks_), [((CoTouchlabAndroidThreadingTasksBaseTaskQueue_TaskQueueState *) nil_chk(taskQueueState)) getQueued], [taskQueueState getCurrentTask]);
}

- (jboolean)checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, c);
}

- (jboolean)checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                          withJavaUtilCollection:(id<JavaUtilCollection>)collection {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, collection);
}

- (void)restartQueue {
  [self resetPollRunnable];
}

- (void)callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, persistedTask);
}

- (void)runTaskWithCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, (CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) cast_chk(task, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class])));
}

- (void)queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery:(id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery>)queueQuery {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong pendingTask in nil_chk(addingTasks_)) {
    [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery>) nil_chk(queueQuery)) queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:self withCoTouchlabAndroidThreadingTasksTask:pendingTask];
  }
  for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong pendingTask in nil_chk(pendingTasks_)) {
    [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery>) nil_chk(queueQuery)) queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:self withCoTouchlabAndroidThreadingTasksTask:pendingTask];
  }
  [super queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery:queueQuery];
}

- (void)logQueueState {
}

- (void)logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask
                                                                      withNSString:(NSString *)methodName {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(self, persistedTask, methodName);
}

- (void)logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, c, e);
}

- (void)logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
                                                                       withNSException:(NSException *)e {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(self, c, e);
}

- (void)runInBackgroundWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, r);
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue class]) {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_class_() getSimpleName];
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAndroidContentContext:withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig:", "PersistedTaskQueue", NULL, 0x1, NULL, NULL },
    { "otherOperationsWithAndroidOsMessage:", "otherOperations", "V", 0x4, NULL, NULL },
    { "finishTaskWithAndroidOsMessage:withCoTouchlabAndroidThreadingTasksTask:", "finishTask", "V", 0x4, NULL, NULL },
    { "executeWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "execute", "V", 0x1, NULL, NULL },
    { "callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "callExecute", "V", 0x2, NULL, NULL },
    { "copyPersistedState", NULL, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$PersistedTaskQueueState;", 0x1, NULL, NULL },
    { "checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "checkHasDuplicate", "Z", 0x2, NULL, NULL },
    { "checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withJavaUtilCollection:", "checkCollectionHasDuplicate", "Z", 0x2, NULL, NULL },
    { "restartQueue", NULL, "V", 0x1, NULL, NULL },
    { "callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "callCommand", "V", 0x2, "Ljava.lang.Throwable;", NULL },
    { "runTaskWithCoTouchlabAndroidThreadingTasksTask:", "runTask", "V", 0x4, NULL, NULL },
    { "queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery:", "query", "V", 0x1, NULL, NULL },
    { "logQueueState", NULL, "V", 0x2, NULL, NULL },
    { "logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withNSString:", "logCommandVerbose", "V", 0x2, NULL, NULL },
    { "logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withNSException:", "logTransientException", "V", 0x2, NULL, NULL },
    { "logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withNSException:", "logPermanentException", "V", 0x2, NULL, NULL },
    { "runInBackgroundWithJavaLangRunnable:", "runInBackground", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "TAG", 0x19, "Ljava.lang.String;", &CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG, NULL, .constantValue.asLong = 0 },
    { "START_PERSISTING_TASK", "START_PERSISTING_TASK", 0x18, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_START_PERSISTING_TASK },
    { "PERSIST_ALL_ADDING", "PERSIST_ALL_ADDING", 0x18, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING },
    { "TRIGGER_PENDING", "TRIGGER_PENDING", 0x18, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TRIGGER_PENDING },
    { "addingTasks_", NULL, 0x2, "Ljava.util.Queue;", NULL, "Ljava/util/Queue<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", .constantValue.asLong = 0 },
    { "pendingTasks_", NULL, 0x2, "Ljava.util.Queue;", NULL, "Ljava/util/Queue<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", .constantValue.asLong = 0 },
    { "provider_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.PersistenceProvider;", NULL, NULL, .constantValue.asLong = 0 },
    { "commandPurgePolicy_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.CommandPurgePolicy;", NULL, NULL, .constantValue.asLong = 0 },
    { "log_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.BusLog;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$LoadAllRunnable;", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$PersistTasksRunnable;", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$CommandResult;", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$ExeTask;", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$FinishTaskContainer;", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$PriorityQueueWrapper;", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$PersistedTaskQueueState;"};
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue = { 2, "PersistedTaskQueue", "co.touchlab.android.threading.tasks.persisted", NULL, 0x1, 17, methods, 9, fields, 0, NULL, 7, inner_classes, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, AndroidContentContext *appContext, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *config) {
  CoTouchlabAndroidThreadingTasksBaseTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper_(self, appContext, new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init());
  self->addingTasks_ = new_JavaUtilLinkedList_init();
  self->pendingTasks_ = new_JavaUtilLinkedList_init();
  self->provider_ = [((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config)) getPersistenceProvider];
  self->commandPurgePolicy_ = config->commandPurgePolicy_;
  self->log_ = [config getLog];
  for (id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener> __strong queueListener in nil_chk([config getEventListeners])) {
    [self addListenerWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener:queueListener];
  }
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(self, new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(self));
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(AndroidContentContext *appContext, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *config) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(self, appContext, config);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(AndroidContentContext *appContext, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *config) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_(appContext, config);
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callExecuteWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  jboolean duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, task);
  if (duplicate) {
    return;
  }
  [((id<JavaUtilQueue>) nil_chk(self->addingTasks_)) addWithId:task];
  [((AndroidOsHandler *) nil_chk(self->handler_)) removeMessagesWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING];
  [self->handler_ sendMessageWithAndroidOsMessage:[self->handler_ obtainMessageWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PERSIST_ALL_ADDING]];
}

jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c) {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertUiThread();
  jboolean duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, self->addingTasks_);
  if (!duplicate) {
    duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, self->pendingTasks_);
  }
  if (!duplicate) {
    duplicate = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(self, c, [((id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper>) nil_chk(self->tasks_)) all]);
  }
  return duplicate;
}

jboolean CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_checkCollectionHasDuplicateWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, id<JavaUtilCollection> collection) {
  for (id __strong command in nil_chk(collection)) {
    if ([command isKindOfClass:[CoTouchlabAndroidThreadingTasksPersistedPersistedTask class]] && [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c)) sameWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) cast_chk(command, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class])]) {
      return true;
    }
  }
  return false;
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(self, persistedTask, @"callCommand-start");
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) runWithAndroidContentContext:self->application_];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(self, persistedTask, @"callComand-finish");
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logCommandVerboseWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSString_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *persistedTask, NSString *methodName) {
  @try {
    [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) vWithNSString:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG withNSString:JreStrcat("$$J$$", methodName, @": ", [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getAdded], @" : ", [persistedTask logSummary])];
  }
  @catch (JavaLangException *e) {
  }
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e) {
  [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) eWithNSString:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG withNSString:nil withNSException:e];
  CoTouchlabAndroidThreadingErrorcontrolSoftException *pe = [e isKindOfClass:[CoTouchlabAndroidThreadingErrorcontrolSoftException class]] ? (CoTouchlabAndroidThreadingErrorcontrolSoftException *) cast_chk(e, [CoTouchlabAndroidThreadingErrorcontrolSoftException class]) : new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(e);
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c)) onTransientErrorWithAndroidContentContext:self->application_ withCoTouchlabAndroidThreadingErrorcontrolSoftException:pe];
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_logPermanentExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, NSException *e) {
  [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(self->log_)) eWithNSString:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TAG withNSString:nil withNSException:e];
  [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c)) onPermanentErrorWithAndroidContentContext:self->application_ withNSException:e];
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_runInBackgroundWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *self, id<JavaLangRunnable> r) {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(self->executorService_)) executeWithJavaLangRunnable:new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(r)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable

- (void)run {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertBackgroundThread();
  id<JavaUtilCollection> persistedTasks = [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->provider_)) loadPersistedCommands];
  [((AndroidOsHandler *) nil_chk(this$0_->handler_)) postWithJavaLangRunnable:new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(self, persistedTasks)];
  [this$0_ resetPollRunnable];
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$ {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable = { 2, "LoadAllRunnable", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0x2, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(self, outer$);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1

- (void)run {
  for (CoTouchlabAndroidThreadingTasksPersistedPersistedTask * __strong persistedTask in nil_chk(val$persistedTasks_)) {
    [this$0_->this$0_ insertTaskWithCoTouchlabAndroidThreadingTasksTask:persistedTask];
  }
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *)outer$
                                                                            withJavaUtilCollection:(id<JavaUtilCollection>)capture$0 {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable:withJavaUtilCollection:", "", NULL, 0x0, NULL, "(Lco/touchlab/android/threading/tasks/persisted/PersistedTaskQueue$LoadAllRunnable;Ljava/util/Collection<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$LoadAllRunnable;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$persistedTasks_", NULL, 0x1012, "Ljava.util.Collection;", NULL, "Ljava/util/Collection<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable", "run" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 = { 2, "", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue$LoadAllRunnable", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) {
  self->this$0_ = outer$;
  self->val$persistedTasks_ = capture$0;
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(self, outer$, capture$0);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable *outer$, id<JavaUtilCollection> capture$0) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_withJavaUtilCollection_(outer$, capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_LoadAllRunnable_$1)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                                                                  withJavaUtilList:(id<JavaUtilList>)tasks {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(self, outer$, tasks);
  return self;
}

- (void)run {
  jlong start = JavaLangSystem_currentTimeMillis();
  [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(this$0_->log_)) dWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:@"PersistTasksRunnable - start"];
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertBackgroundThread();
  [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->provider_)) saveCommandBatchWithJavaUtilCollection:tasks_];
  [this$0_->handler_ sendMessageWithAndroidOsMessage:[((AndroidOsHandler *) nil_chk(this$0_->handler_)) obtainMessageWithInt:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_TRIGGER_PENDING withId:tasks_]];
  [this$0_->log_ dWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:JreStrcat("$J", @"PersistTasksRunnable - end - ", (JavaLangSystem_currentTimeMillis() - start))];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:withJavaUtilList:", "PersistTasksRunnable", NULL, 0x2, NULL, "(Lco/touchlab/android/threading/tasks/persisted/PersistedTaskQueue;Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;)V" },
    { "run", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "tasks_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable = { 2, "PersistTasksRunnable", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0x2, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->tasks_ = tasks;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(self, outer$, tasks);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, id<JavaUtilList> tasks) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withJavaUtilList_(outer$, tasks);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistTasksRunnable)

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[3];

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult

+ (IOSObjectArray *)values {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values();
}

+ (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)valueOfWithNSString:(NSString *)name {
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult class]) {
    JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success) = new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(@"Success", 0);
    JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Transient) = new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(@"Transient", 1);
    JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent) = new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(@"Permanent", 2);
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "Success", "Success", 0x4019, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$CommandResult;", &JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success), NULL, .constantValue.asLong = 0 },
    { "Transient", "Transient", 0x4019, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$CommandResult;", &JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Transient), NULL, .constantValue.asLong = 0 },
    { "Permanent", "Permanent", 0x4019, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$CommandResult;", &JreEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$CommandResult;"};
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult = { 2, "CommandResult", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0x401a, 0, NULL, 3, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lco/touchlab/android/threading/tasks/persisted/PersistedTaskQueue$CommandResult;>;" };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values() {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initialize();
  return [IOSObjectArray arrayWithObjects:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_ count:3 type:CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_class_()];
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_valueOfWithNSString_(NSString *name) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initialize();
  for (int i = 0; i < 3; i++) {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *e = CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_fromOrdinal(NSUInteger ordinal) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *)outer$
                         withCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)task {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, outer$, task);
  return self;
}

- (void)run {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertBackgroundThread();
  id<JavaLangRunnable> taskRun = new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(self);
  if ([((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(c_)) runAllInTransaction]) {
    [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->provider_)) runInTransactionWithJavaLangRunnable:taskRun];
  }
  else {
    [taskRun run];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue:withCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "ExeTask", NULL, 0x2, NULL, NULL },
    { "run", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "c_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.PersistedTask;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask = { 2, "ExeTask", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0x2, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->c_ = task;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(self, outer$, task);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue *outer$, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *task) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_withCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(outer$, task);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1

- (void)run {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult;
  NSException *cause;
  @try {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_callCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_(this$0_->this$0_, this$0_->c_);
    cause = nil;
    commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success);
  }
  @catch (CoTouchlabAndroidThreadingErrorcontrolSoftException *e) {
    cause = e;
    jboolean purge = [((id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy>) nil_chk(this$0_->this$0_->commandPurgePolicy_)) purgeCommandOnTransientExceptionWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:this$0_->c_ withCoTouchlabAndroidThreadingErrorcontrolSoftException:e];
    if (purge) {
      [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(this$0_->this$0_->log_)) wWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:JreStrcat("$$C", @"Purging command on TransientException: {", [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(this$0_->c_)) logSummary], '}')];
      commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent);
    }
    else {
      commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Transient);
    }
  }
  @catch (NSException *e) {
    cause = e;
    commandResult = JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent);
  }
  if (cause != nil) {
    [((id<CoTouchlabAndroidThreadingTasksPersistedBusLog>) nil_chk(this$0_->this$0_->log_)) eWithNSString:JreLoadStatic(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue, TAG) withNSString:nil withNSException:cause];
  }
  if (commandResult == JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Success) || commandResult == JreLoadEnum(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult, Permanent)) {
    [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->this$0_->provider_)) removeCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:this$0_->c_];
  }
  else {
    [this$0_->c_ setTransientExceptionCountWithInt:[((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(this$0_->c_)) getTransientExceptionCount] + 1];
    [((id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>) nil_chk(this$0_->this$0_->provider_)) saveCommandWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:this$0_->c_];
  }
  [this$0_->this$0_->handler_ sendMessageWithAndroidOsMessage:[((AndroidOsHandler *) nil_chk(this$0_->this$0_->handler_)) obtainMessageWithInt:CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueHandler_POST_EXE withId:new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(this$0_->c_, commandResult, cause)]];
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *)outer$ {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$ExeTask;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask", "run" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 = { 2, "", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue$ExeTask", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(self, outer$);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask *outer$) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_ExeTask_$1)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer

- (instancetype)initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)c
 withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult:(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *)commandResult
                                                              withNSException:(NSException *)cause {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(self, c, commandResult, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult:withNSException:", "FinishTaskContainer", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "c_", NULL, 0x12, "Lco.touchlab.android.threading.tasks.persisted.PersistedTask;", NULL, NULL, .constantValue.asLong = 0 },
    { "commandResult_", NULL, 0x12, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueue$CommandResult;", NULL, NULL, .constantValue.asLong = 0 },
    { "cause_", NULL, 0x12, "Ljava.lang.Throwable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer = { 2, "FinishTaskContainer", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0xa, 1, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *self, CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) {
  NSObject_init(self);
  self->c_ = c;
  self->commandResult_ = commandResult;
  self->cause_ = cause;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(self, c, commandResult, cause);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *c, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult *commandResult, NSException *cause) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer_initWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask_withCoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_CommandResult_withNSException_(c, commandResult, cause);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_FinishTaskContainer)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper

- (CoTouchlabAndroidThreadingTasksTask *)poll {
  return [((JavaUtilPriorityQueue *) nil_chk(priorityQueue_)) poll];
}

- (void)offerWithId:(CoTouchlabAndroidThreadingTasksTask *)task {
  [((JavaUtilPriorityQueue *) nil_chk(priorityQueue_)) offerWithId:task];
}

- (id<JavaUtilCollection>)all {
  return priorityQueue_;
}

- (void)removeWithId:(CoTouchlabAndroidThreadingTasksTask *)task {
  [((JavaUtilPriorityQueue *) nil_chk(priorityQueue_)) removeWithId:task];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "poll", NULL, "Lco.touchlab.android.threading.tasks.Task;", 0x1, NULL, NULL },
    { "offerWithId:", "offer", "V", 0x1, NULL, NULL },
    { "all", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection<Lco/touchlab/android/threading/tasks/Task;>;" },
    { "removeWithId:", "remove", "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "priorityQueue_", NULL, 0x12, "Ljava.util.PriorityQueue;", NULL, "Ljava/util/PriorityQueue<Lco/touchlab/android/threading/tasks/Task;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper = { 2, "PriorityQueueWrapper", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0x8, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lco/touchlab/android/threading/tasks/BaseTaskQueue$QueueWrapper<Lco/touchlab/android/threading/tasks/Task;>;" };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper *self) {
  NSObject_init(self);
  self->priorityQueue_ = new_JavaUtilPriorityQueue_init();
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init() {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init(self);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init() {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PriorityQueueWrapper)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)adding
                    withJavaUtilList:(id<JavaUtilList>)pending
                    withJavaUtilList:(id<JavaUtilList>)queued
withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)currentTask {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(self, adding, pending, queued, currentTask);
  return self;
}

- (id<JavaUtilList>)getAdding {
  return adding_;
}

- (id<JavaUtilList>)getPending {
  return pending_;
}

- (id<JavaUtilList>)getQueued {
  return queued_;
}

- (CoTouchlabAndroidThreadingTasksTask *)getCurrentTask {
  return currentTask_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:withJavaUtilList:withJavaUtilList:withCoTouchlabAndroidThreadingTasksTask:", "PersistedTaskQueueState", NULL, 0x1, NULL, "(Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;Ljava/util/List<Lco/touchlab/android/threading/tasks/Task;>;Lco/touchlab/android/threading/tasks/Task;)V" },
    { "getAdding", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;" },
    { "getPending", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;" },
    { "getQueued", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lco/touchlab/android/threading/tasks/Task;>;" },
    { "getCurrentTask", NULL, "Lco.touchlab.android.threading.tasks.Task;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "adding_", NULL, 0x0, "Ljava.util.List;", NULL, "Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", .constantValue.asLong = 0 },
    { "pending_", NULL, 0x0, "Ljava.util.List;", NULL, "Ljava/util/List<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;", .constantValue.asLong = 0 },
    { "queued_", NULL, 0x0, "Ljava.util.List;", NULL, "Ljava/util/List<Lco/touchlab/android/threading/tasks/Task;>;", .constantValue.asLong = 0 },
    { "currentTask_", NULL, 0x0, "Lco.touchlab.android.threading.tasks.Task;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState = { 2, "PersistedTaskQueueState", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0x9, 5, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *self, id<JavaUtilList> adding, id<JavaUtilList> pending, id<JavaUtilList> queued, CoTouchlabAndroidThreadingTasksTask *currentTask) {
  NSObject_init(self);
  self->adding_ = adding;
  self->pending_ = pending;
  self->queued_ = queued;
  self->currentTask_ = currentTask;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(id<JavaUtilList> adding, id<JavaUtilList> pending, id<JavaUtilList> queued, CoTouchlabAndroidThreadingTasksTask *currentTask) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(self, adding, pending, queued, currentTask);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(id<JavaUtilList> adding, id<JavaUtilList> pending, id<JavaUtilList> queued, CoTouchlabAndroidThreadingTasksTask *currentTask) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState_initWithJavaUtilList_withJavaUtilList_withJavaUtilList_withCoTouchlabAndroidThreadingTasksTask_(adding, pending, queued, currentTask);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_PersistedTaskQueueState)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1

- (void)run {
  @try {
    [((id<JavaLangRunnable>) nil_chk(val$r_)) run];
  }
  @catch (NSException *e) {
    if ([e isKindOfClass:[JavaLangRuntimeException class]]) {
      @throw (JavaLangRuntimeException *) cast_chk(e, [JavaLangRuntimeException class]);
    }
    else if ([e isKindOfClass:[JavaLangError class]]) {
      @throw (JavaLangError *) cast_chk(e, [JavaLangError class]);
    }
    else {
      @throw new_JavaLangRuntimeException_initWithNSException_(e);
    }
  }
}

- (instancetype)initWithJavaLangRunnable:(id<JavaLangRunnable>)capture$0 {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "initWithJavaLangRunnable:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$r_", NULL, 0x1012, "Ljava.lang.Runnable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue", "runInBackgroundWithJavaLangRunnable:" };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 = { 2, "", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueue", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 *self, id<JavaLangRunnable> capture$0) {
  self->val$r_ = capture$0;
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(self, capture$0);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1 *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(id<JavaLangRunnable> capture$0) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1_initWithJavaLangRunnable_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueue_$1)
