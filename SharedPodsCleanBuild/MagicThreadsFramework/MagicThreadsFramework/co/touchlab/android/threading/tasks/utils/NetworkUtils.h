//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/utils/NetworkUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_INCLUDE_ALL")
#ifdef CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_RESTRICT
#define CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_INCLUDE_ALL 0
#else
#define CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_INCLUDE_ALL 1
#endif
#undef CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_RESTRICT

#if !defined (CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_) && (CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_INCLUDE_ALL || defined(CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_INCLUDE))
#define CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_

@class AndroidContentContext;

@interface CoTouchlabAndroidThreadingTasksUtilsNetworkUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (jboolean)isOnlineWithAndroidContentContext:(AndroidContentContext *)context;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksUtilsNetworkUtils)

FOUNDATION_EXPORT jboolean CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_isOnlineWithAndroidContentContext_(AndroidContentContext *context);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_init(CoTouchlabAndroidThreadingTasksUtilsNetworkUtils *self);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksUtilsNetworkUtils *new_CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksUtilsNetworkUtils *create_CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksUtilsNetworkUtils)

#endif

#pragma pop_macro("CoTouchlabAndroidThreadingTasksUtilsNetworkUtils_INCLUDE_ALL")
