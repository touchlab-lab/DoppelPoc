//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/TaskQueue.java
//

#include "J2ObjC_source.h"
#include "android/content/Context.h"
#include "android/os/Handler.h"
#include "android/os/Message.h"
#include "co/touchlab/android/threading/tasks/BaseTaskQueue.h"
#include "co/touchlab/android/threading/tasks/Task.h"
#include "co/touchlab/android/threading/tasks/TaskQueue.h"
#include "co/touchlab/android/threading/utils/UiThreadContext.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Runnable.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/Map.h"
#include "java/util/concurrent/ExecutorService.h"

@interface CoTouchlabAndroidThreadingTasksTaskQueue () {
 @public
  jboolean fifo_;
}

@end

inline id<JavaUtilMap> CoTouchlabAndroidThreadingTasksTaskQueue_get_queueMap();
inline id<JavaUtilMap> CoTouchlabAndroidThreadingTasksTaskQueue_set_queueMap(id<JavaUtilMap> value);
static id<JavaUtilMap> CoTouchlabAndroidThreadingTasksTaskQueue_queueMap;
J2OBJC_STATIC_FIELD_OBJ(CoTouchlabAndroidThreadingTasksTaskQueue, queueMap, id<JavaUtilMap>)

inline NSString *CoTouchlabAndroidThreadingTasksTaskQueue_get_DEFAULT_QUEUE();
static NSString *CoTouchlabAndroidThreadingTasksTaskQueue_DEFAULT_QUEUE = @"__DEFAULT";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabAndroidThreadingTasksTaskQueue, DEFAULT_QUEUE, NSString *)

inline NSString *CoTouchlabAndroidThreadingTasksTaskQueue_get_NETWORK_QUEUE();
static NSString *CoTouchlabAndroidThreadingTasksTaskQueue_NETWORK_QUEUE = @"__NETWORK";
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabAndroidThreadingTasksTaskQueue, NETWORK_QUEUE, NSString *)

@interface CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue () {
 @public
  JavaUtilLinkedList *linkedList_;
  jboolean fifo_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue, linkedList_, JavaUtilLinkedList *)

@interface CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask : NSObject < JavaLangRunnable > {
 @public
  CoTouchlabAndroidThreadingTasksTaskQueue *this$0_;
  CoTouchlabAndroidThreadingTasksTask *task_;
}

- (instancetype)initWithCoTouchlabAndroidThreadingTasksTaskQueue:(CoTouchlabAndroidThreadingTasksTaskQueue *)outer$
                         withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task;

- (void)run;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask, this$0_, CoTouchlabAndroidThreadingTasksTaskQueue *)
J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask, task_, CoTouchlabAndroidThreadingTasksTask *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask *self, CoTouchlabAndroidThreadingTasksTaskQueue *outer$, CoTouchlabAndroidThreadingTasksTask *task);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask *new_CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksTaskQueue *outer$, CoTouchlabAndroidThreadingTasksTask *task) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask *create_CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksTaskQueue *outer$, CoTouchlabAndroidThreadingTasksTask *task);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask)

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksTaskQueue)

@implementation CoTouchlabAndroidThreadingTasksTaskQueue

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueWithAndroidContentContext:(AndroidContentContext *)context
                                                                    withNSString:(NSString *)name {
  return CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_(context, name);
}

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueWithAndroidContentContext:(AndroidContentContext *)context
                                                                    withNSString:(NSString *)name
                                                                     withBoolean:(jboolean)fifo {
  return CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_withBoolean_(context, name, fifo);
}

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueDefaultWithAndroidContentContext:(AndroidContentContext *)context {
  return CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueDefaultWithAndroidContentContext_(context);
}

+ (CoTouchlabAndroidThreadingTasksTaskQueue *)loadQueueNetworkWithAndroidContentContext:(AndroidContentContext *)context {
  return CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueNetworkWithAndroidContentContext_(context);
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)application {
  CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_(self, application);
  return self;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)application
                                  withBoolean:(jboolean)fifo {
  CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_(self, application, fifo);
  return self;
}

- (void)runTaskWithCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  [((id<JavaUtilConcurrentExecutorService>) nil_chk(executorService_)) executeWithJavaLangRunnable:new_CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(self, task)];
}

- (void)finishTaskWithAndroidOsMessage:(AndroidOsMessage *)msg
withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  @try {
    if (task != nil) {
      [task onCompleteWithAndroidContentContext:application_];
    }
  }
  @finally {
    [self resetPollRunnable];
  }
}

- (void)executeWithCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  [((CoTouchlabAndroidThreadingTasksTask *) nil_chk(task)) setMyQueueWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:self];
  if (CoTouchlabAndroidThreadingUtilsUiThreadContext_isInUiThread()) {
    [self insertTaskWithCoTouchlabAndroidThreadingTasksTask:task];
  }
  else {
    AndroidOsMessage *message = [((AndroidOsHandler *) nil_chk(handler_)) obtainMessageWithInt:CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueHandler_INSERT_TASK withId:task];
    [handler_ sendMessageWithAndroidOsMessage:message];
  }
}

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksTaskQueue class]) {
    CoTouchlabAndroidThreadingTasksTaskQueue_queueMap = new_JavaUtilHashMap_init();
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksTaskQueue)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "loadQueueWithAndroidContentContext:withNSString:", "loadQueue", "Lco.touchlab.android.threading.tasks.TaskQueue;", 0x29, NULL, NULL },
    { "loadQueueWithAndroidContentContext:withNSString:withBoolean:", "loadQueue", "Lco.touchlab.android.threading.tasks.TaskQueue;", 0x29, NULL, NULL },
    { "loadQueueDefaultWithAndroidContentContext:", "loadQueueDefault", "Lco.touchlab.android.threading.tasks.TaskQueue;", 0x9, NULL, NULL },
    { "loadQueueNetworkWithAndroidContentContext:", "loadQueueNetwork", "Lco.touchlab.android.threading.tasks.TaskQueue;", 0x9, NULL, NULL },
    { "initWithAndroidContentContext:", "TaskQueue", NULL, 0x1, NULL, NULL },
    { "initWithAndroidContentContext:withBoolean:", "TaskQueue", NULL, 0x1, NULL, NULL },
    { "runTaskWithCoTouchlabAndroidThreadingTasksTask:", "runTask", "V", 0x4, NULL, NULL },
    { "finishTaskWithAndroidOsMessage:withCoTouchlabAndroidThreadingTasksTask:", "finishTask", "V", 0x4, NULL, NULL },
    { "executeWithCoTouchlabAndroidThreadingTasksTask:", "execute", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "queueMap", "queueMap", 0xa, "Ljava.util.Map;", &CoTouchlabAndroidThreadingTasksTaskQueue_queueMap, "Ljava/util/Map<Ljava/lang/String;Lco/touchlab/android/threading/tasks/TaskQueue;>;", .constantValue.asLong = 0 },
    { "DEFAULT_QUEUE", "DEFAULT_QUEUE", 0x1a, "Ljava.lang.String;", &CoTouchlabAndroidThreadingTasksTaskQueue_DEFAULT_QUEUE, NULL, .constantValue.asLong = 0 },
    { "NETWORK_QUEUE", "NETWORK_QUEUE", 0x1a, "Ljava.lang.String;", &CoTouchlabAndroidThreadingTasksTaskQueue_NETWORK_QUEUE, NULL, .constantValue.asLong = 0 },
    { "fifo_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lco.touchlab.android.threading.tasks.TaskQueue$LinkedListQueue;", "Lco.touchlab.android.threading.tasks.TaskQueue$ExeTask;"};
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksTaskQueue = { 2, "TaskQueue", "co.touchlab.android.threading.tasks", NULL, 0x1, 9, methods, 4, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksTaskQueue;
}

@end

CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_(AndroidContentContext *context, NSString *name) {
  CoTouchlabAndroidThreadingTasksTaskQueue_initialize();
  @synchronized(CoTouchlabAndroidThreadingTasksTaskQueue_class_()) {
    return CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_withBoolean_(context, name, true);
  }
}

CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_withBoolean_(AndroidContentContext *context, NSString *name, jboolean fifo) {
  CoTouchlabAndroidThreadingTasksTaskQueue_initialize();
  @synchronized(CoTouchlabAndroidThreadingTasksTaskQueue_class_()) {
    CoTouchlabAndroidThreadingTasksTaskQueue *taskQueueActual = [((id<JavaUtilMap>) nil_chk(CoTouchlabAndroidThreadingTasksTaskQueue_queueMap)) getWithId:name];
    if (taskQueueActual == nil) {
      taskQueueActual = new_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_([((AndroidContentContext *) nil_chk(context)) getApplicationContext], fifo);
      (void) [CoTouchlabAndroidThreadingTasksTaskQueue_queueMap putWithId:name withId:taskQueueActual];
    }
    else {
      if (taskQueueActual->fifo_ != fifo) {
        @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$CZ", @"Queue already created with different fifo setting: ", name, '/', fifo));
      }
    }
    return taskQueueActual;
  }
}

CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueDefaultWithAndroidContentContext_(AndroidContentContext *context) {
  CoTouchlabAndroidThreadingTasksTaskQueue_initialize();
  return CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_(context, CoTouchlabAndroidThreadingTasksTaskQueue_DEFAULT_QUEUE);
}

CoTouchlabAndroidThreadingTasksTaskQueue *CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueNetworkWithAndroidContentContext_(AndroidContentContext *context) {
  CoTouchlabAndroidThreadingTasksTaskQueue_initialize();
  return CoTouchlabAndroidThreadingTasksTaskQueue_loadQueueWithAndroidContentContext_withNSString_(context, CoTouchlabAndroidThreadingTasksTaskQueue_NETWORK_QUEUE);
}

void CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_(CoTouchlabAndroidThreadingTasksTaskQueue *self, AndroidContentContext *application) {
  CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_(self, application, true);
}

CoTouchlabAndroidThreadingTasksTaskQueue *new_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_(AndroidContentContext *application) {
  CoTouchlabAndroidThreadingTasksTaskQueue *self = [CoTouchlabAndroidThreadingTasksTaskQueue alloc];
  CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_(self, application);
  return self;
}

CoTouchlabAndroidThreadingTasksTaskQueue *create_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_(AndroidContentContext *application) {
  return new_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_(application);
}

void CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_(CoTouchlabAndroidThreadingTasksTaskQueue *self, AndroidContentContext *application, jboolean fifo) {
  CoTouchlabAndroidThreadingTasksBaseTaskQueue_initWithAndroidContentContext_withCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueWrapper_(self, application, new_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(fifo));
  self->fifo_ = fifo;
}

CoTouchlabAndroidThreadingTasksTaskQueue *new_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_(AndroidContentContext *application, jboolean fifo) {
  CoTouchlabAndroidThreadingTasksTaskQueue *self = [CoTouchlabAndroidThreadingTasksTaskQueue alloc];
  CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_(self, application, fifo);
  return self;
}

CoTouchlabAndroidThreadingTasksTaskQueue *create_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_(AndroidContentContext *application, jboolean fifo) {
  return new_CoTouchlabAndroidThreadingTasksTaskQueue_initWithAndroidContentContext_withBoolean_(application, fifo);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksTaskQueue)

@implementation CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue

- (instancetype)initWithBoolean:(jboolean)fifo {
  CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(self, fifo);
  return self;
}

- (id)poll {
  return fifo_ ? [((JavaUtilLinkedList *) nil_chk(linkedList_)) poll] : [((JavaUtilLinkedList *) nil_chk(linkedList_)) pollLast];
}

- (void)offerWithId:(id)task {
  [((JavaUtilLinkedList *) nil_chk(linkedList_)) offerWithId:task];
}

- (id<JavaUtilCollection>)all {
  return linkedList_;
}

- (void)removeWithId:(id)task {
  [((JavaUtilLinkedList *) nil_chk(linkedList_)) removeWithId:task];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithBoolean:", "LinkedListQueue", NULL, 0x1, NULL, NULL },
    { "poll", NULL, "TTask;", 0x1, NULL, "()TTask;" },
    { "offerWithId:", "offer", "V", 0x1, NULL, "(TTask;)V" },
    { "all", NULL, "Ljava.util.Collection;", 0x1, NULL, "()Ljava/util/Collection<TTask;>;" },
    { "removeWithId:", "remove", "V", 0x1, NULL, "(TTask;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "linkedList_", NULL, 0x12, "Ljava.util.LinkedList;", NULL, "Ljava/util/LinkedList<TTask;>;", .constantValue.asLong = 0 },
    { "fifo_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue = { 2, "LinkedListQueue", "co.touchlab.android.threading.tasks", "TaskQueue", 0x8, 5, methods, 2, fields, 0, NULL, 0, NULL, NULL, "<Task:Ljava/lang/Object;>Ljava/lang/Object;Lco/touchlab/android/threading/tasks/BaseTaskQueue$QueueWrapper<TTask;>;" };
  return &_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue;
}

@end

void CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue *self, jboolean fifo) {
  NSObject_init(self);
  self->linkedList_ = new_JavaUtilLinkedList_init();
  self->fifo_ = fifo;
}

CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue *new_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(jboolean fifo) {
  CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue *self = [CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue alloc];
  CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(self, fifo);
  return self;
}

CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue *create_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(jboolean fifo) {
  return new_CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue_initWithBoolean_(fifo);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksTaskQueue_LinkedListQueue)

@implementation CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask

- (instancetype)initWithCoTouchlabAndroidThreadingTasksTaskQueue:(CoTouchlabAndroidThreadingTasksTaskQueue *)outer$
                         withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(self, outer$, task);
  return self;
}

- (void)run {
  CoTouchlabAndroidThreadingUtilsUiThreadContext_assertBackgroundThread();
  @try {
    [((CoTouchlabAndroidThreadingTasksTask *) nil_chk(task_)) runWithAndroidContentContext:this$0_->application_];
  }
  @catch (NSException *e) {
    jboolean handled = [((CoTouchlabAndroidThreadingTasksTask *) nil_chk(task_)) handleErrorWithAndroidContentContext:this$0_->application_ withNSException:e];
    if (!handled) {
      [this$0_->handler_ sendMessageWithAndroidOsMessage:[((AndroidOsHandler *) nil_chk(this$0_->handler_)) obtainMessageWithInt:CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueHandler_THROW withId:e]];
    }
  }
  @finally {
    [this$0_->handler_ sendMessageWithAndroidOsMessage:[((AndroidOsHandler *) nil_chk(this$0_->handler_)) obtainMessageWithInt:CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueHandler_POST_EXE]];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabAndroidThreadingTasksTaskQueue:withCoTouchlabAndroidThreadingTasksTask:", "ExeTask", NULL, 0x2, NULL, NULL },
    { "run", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.android.threading.tasks.TaskQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "task_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.Task;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask = { 2, "ExeTask", "co.touchlab.android.threading.tasks", "TaskQueue", 0x2, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask;
}

@end

void CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask *self, CoTouchlabAndroidThreadingTasksTaskQueue *outer$, CoTouchlabAndroidThreadingTasksTask *task) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->task_ = task;
}

CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask *new_CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksTaskQueue *outer$, CoTouchlabAndroidThreadingTasksTask *task) {
  CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask *self = [CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask alloc];
  CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(self, outer$, task);
  return self;
}

CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask *create_CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(CoTouchlabAndroidThreadingTasksTaskQueue *outer$, CoTouchlabAndroidThreadingTasksTask *task) {
  return new_CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask_initWithCoTouchlabAndroidThreadingTasksTaskQueue_withCoTouchlabAndroidThreadingTasksTask_(outer$, task);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksTaskQueue_ExeTask)
