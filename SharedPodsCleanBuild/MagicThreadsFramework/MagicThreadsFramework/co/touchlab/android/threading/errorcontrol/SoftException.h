//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/errorcontrol/SoftException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabAndroidThreadingErrorcontrolSoftException_INCLUDE_ALL")
#ifdef CoTouchlabAndroidThreadingErrorcontrolSoftException_RESTRICT
#define CoTouchlabAndroidThreadingErrorcontrolSoftException_INCLUDE_ALL 0
#else
#define CoTouchlabAndroidThreadingErrorcontrolSoftException_INCLUDE_ALL 1
#endif
#undef CoTouchlabAndroidThreadingErrorcontrolSoftException_RESTRICT

#if !defined (CoTouchlabAndroidThreadingErrorcontrolSoftException_) && (CoTouchlabAndroidThreadingErrorcontrolSoftException_INCLUDE_ALL || defined(CoTouchlabAndroidThreadingErrorcontrolSoftException_INCLUDE))
#define CoTouchlabAndroidThreadingErrorcontrolSoftException_

#define JavaLangException_RESTRICT 1
#define JavaLangException_INCLUDE 1
#include "java/lang/Exception.h"

@interface CoTouchlabAndroidThreadingErrorcontrolSoftException : JavaLangException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)message;

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause;
#ifdef J2OBJC_RENAME_ALIASES
#define withJavaLangThrowable withNSException
#endif // J2OBJC_RENAME_ALIASES

- (instancetype)initWithNSException:(NSException *)cause;
#ifdef J2OBJC_RENAME_ALIASES
#define initWithJavaLangThrowable initWithNSException
#endif // J2OBJC_RENAME_ALIASES

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingErrorcontrolSoftException)

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_init(CoTouchlabAndroidThreadingErrorcontrolSoftException *self);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_init();

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSString *message);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSString *message, NSException *cause);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(NSString *message, NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(NSString *message, NSException *cause);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSException *cause);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(NSException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(NSException *cause);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingErrorcontrolSoftException)

#endif

#pragma pop_macro("CoTouchlabAndroidThreadingErrorcontrolSoftException_INCLUDE_ALL")
