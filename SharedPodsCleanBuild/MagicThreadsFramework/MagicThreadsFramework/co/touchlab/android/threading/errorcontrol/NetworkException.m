//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/errorcontrol/NetworkException.java
//

#include "J2ObjC_source.h"
#include "co/touchlab/android/threading/errorcontrol/NetworkException.h"
#include "co/touchlab/android/threading/errorcontrol/SoftException.h"

@implementation CoTouchlabAndroidThreadingErrorcontrolNetworkException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "NetworkException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "NetworkException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "NetworkException", NULL, 0x1, NULL, NULL },
    { "initWithNSException:", "NetworkException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingErrorcontrolNetworkException = { 2, "NetworkException", "co.touchlab.android.threading.errorcontrol", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingErrorcontrolNetworkException;
}

@end

void CoTouchlabAndroidThreadingErrorcontrolNetworkException_init(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self) {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_init(self);
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_init() {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException *self = [CoTouchlabAndroidThreadingErrorcontrolNetworkException alloc];
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_init(self);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_init() {
  return new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_init();
}

void CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self, NSString *message) {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(self, message);
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(NSString *message) {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException *self = [CoTouchlabAndroidThreadingErrorcontrolNetworkException alloc];
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(self, message);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(NSString *message) {
  return new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_(message);
}

void CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self, NSString *message, NSException *cause) {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(self, message, cause);
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException *self = [CoTouchlabAndroidThreadingErrorcontrolNetworkException alloc];
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  return new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSString_withNSException_(message, cause);
}

void CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(CoTouchlabAndroidThreadingErrorcontrolNetworkException *self, NSException *cause) {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(self, cause);
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(NSException *cause) {
  CoTouchlabAndroidThreadingErrorcontrolNetworkException *self = [CoTouchlabAndroidThreadingErrorcontrolNetworkException alloc];
  CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(self, cause);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolNetworkException *create_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(NSException *cause) {
  return new_CoTouchlabAndroidThreadingErrorcontrolNetworkException_initWithNSException_(cause);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingErrorcontrolNetworkException)
