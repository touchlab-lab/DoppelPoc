//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/dagger/core/src/main/java/dagger/internal/Preconditions.java
//

#include "J2ObjC_source.h"
#include "dagger/internal/Preconditions.h"
#include "java/lang/NullPointerException.h"

@interface DaggerInternalPreconditions ()

- (instancetype)init;

@end

__attribute__((unused)) static void DaggerInternalPreconditions_init(DaggerInternalPreconditions *self);

__attribute__((unused)) static DaggerInternalPreconditions *new_DaggerInternalPreconditions_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DaggerInternalPreconditions *create_DaggerInternalPreconditions_init();

@implementation DaggerInternalPreconditions

+ (id)checkNotNullWithId:(id)reference {
  return DaggerInternalPreconditions_checkNotNullWithId_(reference);
}

+ (id)checkNotNullWithId:(id)reference
            withNSString:(NSString *)errorMessage {
  return DaggerInternalPreconditions_checkNotNullWithId_withNSString_(reference, errorMessage);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DaggerInternalPreconditions_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkNotNullWithId:", "checkNotNull", "TT;", 0x9, NULL, "<T:Ljava/lang/Object;>(TT;)TT;" },
    { "checkNotNullWithId:withNSString:", "checkNotNull", "TT;", 0x9, NULL, "<T:Ljava/lang/Object;>(TT;Ljava/lang/String;)TT;" },
    { "init", "Preconditions", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _DaggerInternalPreconditions = { 2, "Preconditions", "dagger.internal", NULL, 0x11, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_DaggerInternalPreconditions;
}

@end

id DaggerInternalPreconditions_checkNotNullWithId_(id reference) {
  DaggerInternalPreconditions_initialize();
  if (reference == nil) {
    @throw new_JavaLangNullPointerException_init();
  }
  return reference;
}

id DaggerInternalPreconditions_checkNotNullWithId_withNSString_(id reference, NSString *errorMessage) {
  DaggerInternalPreconditions_initialize();
  if (reference == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(errorMessage);
  }
  return reference;
}

void DaggerInternalPreconditions_init(DaggerInternalPreconditions *self) {
  NSObject_init(self);
}

DaggerInternalPreconditions *new_DaggerInternalPreconditions_init() {
  DaggerInternalPreconditions *self = [DaggerInternalPreconditions alloc];
  DaggerInternalPreconditions_init(self);
  return self;
}

DaggerInternalPreconditions *create_DaggerInternalPreconditions_init() {
  return new_DaggerInternalPreconditions_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalPreconditions)
