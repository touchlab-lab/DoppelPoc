//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/dagger/core/src/main/java/dagger/internal/SetFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "dagger/internal/Collections.h"
#include "dagger/internal/Factory.h"
#include "dagger/internal/SetFactory.h"
#include "java/lang/NullPointerException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "javax/inject/Provider.h"

@interface DaggerInternalSetFactory () {
 @public
  id<JavaUtilList> contributingProviders_;
}

+ (jboolean)hasDuplicatesWithJavaUtilList:(id<JavaUtilList>)original;

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)contributingProviders;

@end

J2OBJC_FIELD_SETTER(DaggerInternalSetFactory, contributingProviders_, id<JavaUtilList>)

inline NSString *DaggerInternalSetFactory_get_ARGUMENTS_MUST_BE_NON_NULL();
static NSString *DaggerInternalSetFactory_ARGUMENTS_MUST_BE_NON_NULL = @"SetFactory.create() requires its arguments to be non-null";
J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalSetFactory, ARGUMENTS_MUST_BE_NON_NULL, NSString *)

inline id<DaggerInternalFactory> DaggerInternalSetFactory_get_EMPTY_FACTORY();
static id<DaggerInternalFactory> DaggerInternalSetFactory_EMPTY_FACTORY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(DaggerInternalSetFactory, EMPTY_FACTORY, id<DaggerInternalFactory>)

__attribute__((unused)) static jboolean DaggerInternalSetFactory_hasDuplicatesWithJavaUtilList_(id<JavaUtilList> original);

__attribute__((unused)) static void DaggerInternalSetFactory_initWithJavaUtilList_(DaggerInternalSetFactory *self, id<JavaUtilList> contributingProviders);

__attribute__((unused)) static DaggerInternalSetFactory *new_DaggerInternalSetFactory_initWithJavaUtilList_(id<JavaUtilList> contributingProviders) NS_RETURNS_RETAINED;

__attribute__((unused)) static DaggerInternalSetFactory *create_DaggerInternalSetFactory_initWithJavaUtilList_(id<JavaUtilList> contributingProviders);

@interface DaggerInternalSetFactory_$1 : NSObject < DaggerInternalFactory >

- (id<JavaUtilSet>)get;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(DaggerInternalSetFactory_$1)

__attribute__((unused)) static void DaggerInternalSetFactory_$1_init(DaggerInternalSetFactory_$1 *self);

__attribute__((unused)) static DaggerInternalSetFactory_$1 *new_DaggerInternalSetFactory_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static DaggerInternalSetFactory_$1 *create_DaggerInternalSetFactory_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(DaggerInternalSetFactory_$1)

J2OBJC_INITIALIZED_DEFN(DaggerInternalSetFactory)

@implementation DaggerInternalSetFactory

+ (id<DaggerInternalFactory>)create {
  return DaggerInternalSetFactory_create();
}

+ (id<DaggerInternalFactory>)createWithDaggerInternalFactory:(id<DaggerInternalFactory>)factory {
  return DaggerInternalSetFactory_createWithDaggerInternalFactory_(factory);
}

+ (id<DaggerInternalFactory>)createWithJavaxInjectProviderArray:(IOSObjectArray *)providers {
  return DaggerInternalSetFactory_createWithJavaxInjectProviderArray_(providers);
}

+ (jboolean)hasDuplicatesWithJavaUtilList:(id<JavaUtilList>)original {
  return DaggerInternalSetFactory_hasDuplicatesWithJavaUtilList_(original);
}

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)contributingProviders {
  DaggerInternalSetFactory_initWithJavaUtilList_(self, contributingProviders);
  return self;
}

- (id<JavaUtilSet>)get {
  jint size = 0;
  id<JavaUtilList> providedSets = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilList>) nil_chk(contributingProviders_)) size]);
  for (jint i = 0, c = [contributingProviders_ size]; i < c; i++) {
    id<JavaxInjectProvider> provider = [contributingProviders_ getWithInt:i];
    id<JavaUtilSet> providedSet = [((id<JavaxInjectProvider>) nil_chk(provider)) get];
    if (providedSet == nil) {
      @throw new_JavaLangNullPointerException_initWithNSString_(JreStrcat("@$", provider, @" returned null"));
    }
    [providedSets addWithId:providedSet];
    size += [((id<JavaUtilSet>) nil_chk(providedSet)) size];
  }
  id<JavaUtilSet> result = DaggerInternalCollections_newLinkedHashSetWithExpectedSizeWithInt_(size);
  for (jint i = 0, c = [providedSets size]; i < c; i++) {
    for (id __strong element in nil_chk([providedSets getWithInt:i])) {
      if (element == nil) {
        @throw new_JavaLangNullPointerException_initWithNSString_(@"a null element was provided");
      }
      [((id<JavaUtilSet>) nil_chk(result)) addWithId:element];
    }
  }
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(result);
}

+ (void)initialize {
  if (self == [DaggerInternalSetFactory class]) {
    DaggerInternalSetFactory_EMPTY_FACTORY = new_DaggerInternalSetFactory_$1_init();
    J2OBJC_SET_INITIALIZED(DaggerInternalSetFactory)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "create", NULL, "Ldagger.internal.Factory;", 0x9, NULL, "<T:Ljava/lang/Object;>()Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;" },
    { "createWithDaggerInternalFactory:", "create", "Ldagger.internal.Factory;", 0x9, NULL, "<T:Ljava/lang/Object;>(Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;)Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;" },
    { "createWithJavaxInjectProviderArray:", "create", "Ldagger.internal.Factory;", 0x89, NULL, "<T:Ljava/lang/Object;>([Ljavax/inject/Provider<Ljava/util/Set<TT;>;>;)Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;" },
    { "hasDuplicatesWithJavaUtilList:", "hasDuplicates", "Z", 0xa, NULL, "(Ljava/util/List<+Ljava/lang/Object;>;)Z" },
    { "initWithJavaUtilList:", "SetFactory", NULL, 0x2, NULL, "(Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Set<TT;>;>;>;)V" },
    { "get", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set<TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ARGUMENTS_MUST_BE_NON_NULL", "ARGUMENTS_MUST_BE_NON_NULL", 0x1a, "Ljava.lang.String;", &DaggerInternalSetFactory_ARGUMENTS_MUST_BE_NON_NULL, NULL, .constantValue.asLong = 0 },
    { "EMPTY_FACTORY", "EMPTY_FACTORY", 0x1a, "Ldagger.internal.Factory;", &DaggerInternalSetFactory_EMPTY_FACTORY, "Ldagger/internal/Factory<Ljava/util/Set<Ljava/lang/Object;>;>;", .constantValue.asLong = 0 },
    { "contributingProviders_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljavax/inject/Provider<Ljava/util/Set<TT;>;>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _DaggerInternalSetFactory = { 2, "SetFactory", "dagger.internal", NULL, 0x11, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Set<TT;>;>;" };
  return &_DaggerInternalSetFactory;
}

@end

id<DaggerInternalFactory> DaggerInternalSetFactory_create() {
  DaggerInternalSetFactory_initialize();
  return DaggerInternalSetFactory_EMPTY_FACTORY;
}

id<DaggerInternalFactory> DaggerInternalSetFactory_createWithDaggerInternalFactory_(id<DaggerInternalFactory> factory) {
  DaggerInternalSetFactory_initialize();
  JreAssert((factory != nil), (DaggerInternalSetFactory_ARGUMENTS_MUST_BE_NON_NULL));
  return factory;
}

id<DaggerInternalFactory> DaggerInternalSetFactory_createWithJavaxInjectProviderArray_(IOSObjectArray *providers) {
  DaggerInternalSetFactory_initialize();
  JreAssert((providers != nil), (DaggerInternalSetFactory_ARGUMENTS_MUST_BE_NON_NULL));
  id<JavaUtilList> contributingProviders = JavaUtilArrays_asListWithNSObjectArray_(providers);
  JreAssert((![((id<JavaUtilList>) nil_chk(contributingProviders)) containsWithId:nil]), (@"Codegen error?  Null within provider list."));
  JreAssert((!DaggerInternalSetFactory_hasDuplicatesWithJavaUtilList_(contributingProviders)), (@"Codegen error?  Duplicates in the provider list"));
  return new_DaggerInternalSetFactory_initWithJavaUtilList_(contributingProviders);
}

jboolean DaggerInternalSetFactory_hasDuplicatesWithJavaUtilList_(id<JavaUtilList> original) {
  DaggerInternalSetFactory_initialize();
  id<JavaUtilSet> asSet = new_JavaUtilHashSet_initWithJavaUtilCollection_(original);
  return [((id<JavaUtilList>) nil_chk(original)) size] != [asSet size];
}

void DaggerInternalSetFactory_initWithJavaUtilList_(DaggerInternalSetFactory *self, id<JavaUtilList> contributingProviders) {
  NSObject_init(self);
  self->contributingProviders_ = contributingProviders;
}

DaggerInternalSetFactory *new_DaggerInternalSetFactory_initWithJavaUtilList_(id<JavaUtilList> contributingProviders) {
  DaggerInternalSetFactory *self = [DaggerInternalSetFactory alloc];
  DaggerInternalSetFactory_initWithJavaUtilList_(self, contributingProviders);
  return self;
}

DaggerInternalSetFactory *create_DaggerInternalSetFactory_initWithJavaUtilList_(id<JavaUtilList> contributingProviders) {
  return new_DaggerInternalSetFactory_initWithJavaUtilList_(contributingProviders);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSetFactory)

@implementation DaggerInternalSetFactory_$1

- (id<JavaUtilSet>)get {
  return JavaUtilCollections_emptySet();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DaggerInternalSetFactory_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "get", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set<Ljava/lang/Object;>;" },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _DaggerInternalSetFactory_$1 = { 2, "", "dagger.internal", "SetFactory", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ldagger/internal/Factory<Ljava/util/Set<Ljava/lang/Object;>;>;" };
  return &_DaggerInternalSetFactory_$1;
}

@end

void DaggerInternalSetFactory_$1_init(DaggerInternalSetFactory_$1 *self) {
  NSObject_init(self);
}

DaggerInternalSetFactory_$1 *new_DaggerInternalSetFactory_$1_init() {
  DaggerInternalSetFactory_$1 *self = [DaggerInternalSetFactory_$1 alloc];
  DaggerInternalSetFactory_$1_init(self);
  return self;
}

DaggerInternalSetFactory_$1 *create_DaggerInternalSetFactory_$1_init() {
  return new_DaggerInternalSetFactory_$1_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DaggerInternalSetFactory_$1)
