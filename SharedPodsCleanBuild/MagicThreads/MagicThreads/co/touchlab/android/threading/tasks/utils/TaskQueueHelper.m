//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/utils/TaskQueueHelper.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "co/touchlab/android/threading/tasks/BaseTaskQueue.h"
#include "co/touchlab/android/threading/tasks/Task.h"
#include "co/touchlab/android/threading/tasks/sticky/StickyTask.h"
#include "co/touchlab/android/threading/tasks/sticky/StickyTaskManager.h"
#include "co/touchlab/android/threading/tasks/utils/TaskQueueHelper.h"

@implementation CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper

+ (jboolean)hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)taskQueueActual
                                                         withIOSClassArray:(IOSObjectArray *)classes {
  return CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_withIOSClassArray_(taskQueueActual, classes);
}

+ (jboolean)hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager:(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *)stickyTaskManager
                                    withCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)taskQueueActual
                                                                   withIOSClassArray:(IOSObjectArray *)classes {
  return CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withCoTouchlabAndroidThreadingTasksBaseTaskQueue_withIOSClassArray_(stickyTaskManager, taskQueueActual, classes);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:withIOSClassArray:", "hasTasksOfType", "Z", 0x89, NULL, NULL },
    { "hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager:withCoTouchlabAndroidThreadingTasksBaseTaskQueue:withIOSClassArray:", "hasTasksOfType", "Z", 0x89, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const char *inner_classes[] = {"Lco.touchlab.android.threading.tasks.utils.TaskQueueHelper$ClassesQuery;"};
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper = { 2, "TaskQueueHelper", "co.touchlab.android.threading.tasks.utils", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper;
}

@end

jboolean CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_withIOSClassArray_(CoTouchlabAndroidThreadingTasksBaseTaskQueue *taskQueueActual, IOSObjectArray *classes) {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_initialize();
  return CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withCoTouchlabAndroidThreadingTasksBaseTaskQueue_withIOSClassArray_(nil, taskQueueActual, classes);
}

jboolean CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_hasTasksOfTypeWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withCoTouchlabAndroidThreadingTasksBaseTaskQueue_withIOSClassArray_(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *stickyTaskManager, CoTouchlabAndroidThreadingTasksBaseTaskQueue *taskQueueActual, IOSObjectArray *classes) {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_initialize();
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery *queueQuery = new_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withIOSClassArray_(stickyTaskManager, classes);
  [((CoTouchlabAndroidThreadingTasksBaseTaskQueue *) nil_chk(taskQueueActual)) queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery:queueQuery];
  return queueQuery->found_;
}

void CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_init(CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper *self) {
  NSObject_init(self);
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper *new_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_init() {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper *self = [CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper alloc];
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_init(self);
  return self;
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper *create_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_init() {
  return new_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper)

@implementation CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery

- (instancetype)initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager:(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *)stickyTaskManager
                                                             withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withIOSClassArray_(self, stickyTaskManager, classes);
  return self;
}

- (void)queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                      withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  {
    IOSObjectArray *a__ = classes_;
    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *aClass = *b__++;
      if ([[((CoTouchlabAndroidThreadingTasksTask *) nil_chk(task)) getClass] isEqual:aClass]) {
        if (stickyTaskManager_ != nil && [task isKindOfClass:[CoTouchlabAndroidThreadingTasksStickyStickyTask class]]) {
          CoTouchlabAndroidThreadingTasksStickyStickyTask *stickyTask = (CoTouchlabAndroidThreadingTasksStickyStickyTask *) cast_chk(task, [CoTouchlabAndroidThreadingTasksStickyStickyTask class]);
          if ([stickyTaskManager_ isTaskForMeWithCoTouchlabAndroidThreadingTasksStickyStickyTask:stickyTask]) {
            found_ = true;
            break;
          }
        }
        else {
          found_ = true;
          break;
        }
      }
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager:withIOSClassArray:", "ClassesQuery", NULL, 0x0, NULL, NULL },
    { "queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:withCoTouchlabAndroidThreadingTasksTask:", "query", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "found_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "classes_", NULL, 0x0, "[Ljava.lang.Class;", NULL, NULL, .constantValue.asLong = 0 },
    { "stickyTaskManager_", NULL, 0x0, "Lco.touchlab.android.threading.tasks.sticky.StickyTaskManager;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery = { 2, "ClassesQuery", "co.touchlab.android.threading.tasks.utils", "TaskQueueHelper", 0x8, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery;
}

@end

void CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withIOSClassArray_(CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery *self, CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *stickyTaskManager, IOSObjectArray *classes) {
  NSObject_init(self);
  self->found_ = false;
  self->stickyTaskManager_ = stickyTaskManager;
  self->classes_ = classes;
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery *new_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withIOSClassArray_(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *stickyTaskManager, IOSObjectArray *classes) {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery *self = [CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery alloc];
  CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withIOSClassArray_(self, stickyTaskManager, classes);
  return self;
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery *create_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withIOSClassArray_(CoTouchlabAndroidThreadingTasksStickyStickyTaskManager *stickyTaskManager, IOSObjectArray *classes) {
  return new_CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery_initWithCoTouchlabAndroidThreadingTasksStickyStickyTaskManager_withIOSClassArray_(stickyTaskManager, classes);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksUtilsTaskQueueHelper_ClassesQuery)
