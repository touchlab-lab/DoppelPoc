//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/persisted/ConfigException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabAndroidThreadingTasksPersistedConfigException_INCLUDE_ALL")
#ifdef CoTouchlabAndroidThreadingTasksPersistedConfigException_RESTRICT
#define CoTouchlabAndroidThreadingTasksPersistedConfigException_INCLUDE_ALL 0
#else
#define CoTouchlabAndroidThreadingTasksPersistedConfigException_INCLUDE_ALL 1
#endif
#undef CoTouchlabAndroidThreadingTasksPersistedConfigException_RESTRICT

#if !defined (CoTouchlabAndroidThreadingTasksPersistedConfigException_) && (CoTouchlabAndroidThreadingTasksPersistedConfigException_INCLUDE_ALL || defined(CoTouchlabAndroidThreadingTasksPersistedConfigException_INCLUDE))
#define CoTouchlabAndroidThreadingTasksPersistedConfigException_

#define JavaLangException_RESTRICT 1
#define JavaLangException_INCLUDE 1
#include "java/lang/Exception.h"

@interface CoTouchlabAndroidThreadingTasksPersistedConfigException : JavaLangException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)detailMessage;

- (instancetype)initWithNSString:(NSString *)detailMessage
                 withNSException:(NSException *)throwable;
#ifdef J2OBJC_RENAME_ALIASES
#define withJavaLangThrowable withNSException
#endif // J2OBJC_RENAME_ALIASES

- (instancetype)initWithNSException:(NSException *)throwable;
#ifdef J2OBJC_RENAME_ALIASES
#define initWithJavaLangThrowable initWithNSException
#endif // J2OBJC_RENAME_ALIASES

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedConfigException)

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksPersistedConfigException_init(CoTouchlabAndroidThreadingTasksPersistedConfigException *self);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_init();

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(CoTouchlabAndroidThreadingTasksPersistedConfigException *self, NSString *detailMessage);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(NSString *detailMessage) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(NSString *detailMessage);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_withNSException_(CoTouchlabAndroidThreadingTasksPersistedConfigException *self, NSString *detailMessage, NSException *throwable);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_withNSException_(NSString *detailMessage, NSException *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_withNSException_(NSString *detailMessage, NSException *throwable);

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSException_(CoTouchlabAndroidThreadingTasksPersistedConfigException *self, NSException *throwable);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *new_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSException_(NSException *throwable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksPersistedConfigException *create_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSException_(NSException *throwable);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedConfigException)

#endif

#pragma pop_macro("CoTouchlabAndroidThreadingTasksPersistedConfigException_INCLUDE_ALL")
