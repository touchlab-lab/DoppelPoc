//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/utils/TaskQueryTasksOfType.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "co/touchlab/android/threading/tasks/BaseTaskQueue.h"
#include "co/touchlab/android/threading/tasks/Task.h"
#include "co/touchlab/android/threading/tasks/utils/TaskQueryTasksOfType.h"

@interface CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType () {
 @public
  IOSClass *cls_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType, cls_, IOSClass *)

@implementation CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType

- (instancetype)initWithIOSClass:(IOSClass *)cls {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(self, cls);
  return self;
}

- (void)queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                      withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task {
  if ([[((CoTouchlabAndroidThreadingTasksTask *) nil_chk(task)) getClass] isEqual:cls_]) {
    found_ = true;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithIOSClass:", "TaskQueryTasksOfType", NULL, 0x1, NULL, NULL },
    { "queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:withCoTouchlabAndroidThreadingTasksTask:", "query", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "found_", NULL, 0x1, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "cls_", NULL, 0x2, "Ljava.lang.Class;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType = { 2, "TaskQueryTasksOfType", "co.touchlab.android.threading.tasks.utils", NULL, 0x1, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType;
}

@end

void CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *self, IOSClass *cls) {
  NSObject_init(self);
  self->cls_ = cls;
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *new_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(IOSClass *cls) {
  CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *self = [CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType alloc];
  CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(self, cls);
  return self;
}

CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *create_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(IOSClass *cls) {
  return new_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(cls);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType)
