//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/BaseFieldConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldBaseFieldConverter_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldBaseFieldConverter_RESTRICT
#define CoTouchlabSqueakyFieldBaseFieldConverter_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldBaseFieldConverter_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldBaseFieldConverter_RESTRICT

#if !defined (CoTouchlabSqueakyFieldBaseFieldConverter_) && (CoTouchlabSqueakyFieldBaseFieldConverter_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldBaseFieldConverter_INCLUDE))
#define CoTouchlabSqueakyFieldBaseFieldConverter_

#define CoTouchlabSqueakyFieldFieldConverter_RESTRICT 1
#define CoTouchlabSqueakyFieldFieldConverter_INCLUDE 1
#include "co/touchlab/squeaky/field/FieldConverter.h"

@class CoTouchlabSqueakyFieldFieldType;

@interface CoTouchlabSqueakyFieldBaseFieldConverter : NSObject < CoTouchlabSqueakyFieldFieldConverter >

#pragma mark Public

- (instancetype)init;

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)javaObject;

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldBaseFieldConverter)

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldBaseFieldConverter_init(CoTouchlabSqueakyFieldBaseFieldConverter *self);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldBaseFieldConverter)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldBaseFieldConverter_INCLUDE_ALL")
