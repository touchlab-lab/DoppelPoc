//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/OrmLiteHelper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "co/touchlab/squeaky/field/OrmLiteHelper.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"

@implementation CoTouchlabSqueakyFieldOrmLiteHelper

+ (id)safeConvertWithIOSClass:(IOSClass *)type
                       withId:(id)arg {
  return CoTouchlabSqueakyFieldOrmLiteHelper_safeConvertWithIOSClass_withId_(type, arg);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldOrmLiteHelper_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "safeConvertWithIOSClass:withId:", "safeConvert", "Ljava.lang.Object;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldOrmLiteHelper = { 2, "OrmLiteHelper", "co.touchlab.squeaky.field", NULL, 0x11, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldOrmLiteHelper;
}

@end

id CoTouchlabSqueakyFieldOrmLiteHelper_safeConvertWithIOSClass_withId_(IOSClass *type, id arg) {
  CoTouchlabSqueakyFieldOrmLiteHelper_initialize();
  if ([[IOSClass intClass] isEqual:type] || [JavaLangInteger_class_() isEqual:type]) {
    return JavaLangInteger_valueOfWithInt_([((NSNumber *) nil_chk(((NSNumber *) cast_chk(arg, [NSNumber class])))) intValue]);
  }
  else if ([[IOSClass longClass] isEqual:type] || [JavaLangLong_class_() isEqual:type]) {
    return JavaLangLong_valueOfWithLong_([((NSNumber *) nil_chk(((NSNumber *) cast_chk(arg, [NSNumber class])))) longLongValue]);
  }
  else if ([[IOSClass shortClass] isEqual:type] || [JavaLangShort_class_() isEqual:type]) {
    return JavaLangShort_valueOfWithShort_([((NSNumber *) nil_chk(((NSNumber *) cast_chk(arg, [NSNumber class])))) shortValue]);
  }
  else {
    return arg;
  }
}

void CoTouchlabSqueakyFieldOrmLiteHelper_init(CoTouchlabSqueakyFieldOrmLiteHelper *self) {
  NSObject_init(self);
}

CoTouchlabSqueakyFieldOrmLiteHelper *new_CoTouchlabSqueakyFieldOrmLiteHelper_init() {
  CoTouchlabSqueakyFieldOrmLiteHelper *self = [CoTouchlabSqueakyFieldOrmLiteHelper alloc];
  CoTouchlabSqueakyFieldOrmLiteHelper_init(self);
  return self;
}

CoTouchlabSqueakyFieldOrmLiteHelper *create_CoTouchlabSqueakyFieldOrmLiteHelper_init() {
  return new_CoTouchlabSqueakyFieldOrmLiteHelper_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldOrmLiteHelper)
