//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/IntegerObjectType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/database/Cursor.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/BaseDataType.h"
#include "co/touchlab/squeaky/field/types/IntegerObjectType.h"
#include "java/lang/Integer.h"
#include "java/sql/SQLException.h"

@interface CoTouchlabSqueakyFieldTypesIntegerObjectType ()

- (instancetype)init;

@end

inline CoTouchlabSqueakyFieldTypesIntegerObjectType *CoTouchlabSqueakyFieldTypesIntegerObjectType_get_singleTon();
static CoTouchlabSqueakyFieldTypesIntegerObjectType *CoTouchlabSqueakyFieldTypesIntegerObjectType_singleTon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesIntegerObjectType, singleTon, CoTouchlabSqueakyFieldTypesIntegerObjectType *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesIntegerObjectType_init(CoTouchlabSqueakyFieldTypesIntegerObjectType *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesIntegerObjectType *new_CoTouchlabSqueakyFieldTypesIntegerObjectType_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesIntegerObjectType *create_CoTouchlabSqueakyFieldTypesIntegerObjectType_init();

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesIntegerObjectType)

@implementation CoTouchlabSqueakyFieldTypesIntegerObjectType

+ (CoTouchlabSqueakyFieldTypesIntegerObjectType *)getSingleton {
  return CoTouchlabSqueakyFieldTypesIntegerObjectType_getSingleton();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesIntegerObjectType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr {
  return JavaLangInteger_valueOfWithInt_(JavaLangInteger_parseIntWithNSString_(defaultStr));
}

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos {
  return JavaLangInteger_valueOfWithInt_([((id<AndroidDatabaseCursor>) nil_chk(results)) getIntWithInt:columnPos]);
}

- (jboolean)isEscapedValue {
  return false;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesIntegerObjectType class]) {
    CoTouchlabSqueakyFieldTypesIntegerObjectType_singleTon = new_CoTouchlabSqueakyFieldTypesIntegerObjectType_init();
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesIntegerObjectType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSingleton", NULL, "Lco.touchlab.squeaky.field.types.IntegerObjectType;", 0x9, NULL, NULL },
    { "init", "IntegerObjectType", NULL, 0x2, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:", "IntegerObjectType", NULL, 0x4, NULL, NULL },
    { "parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:withNSString:", "parseDefaultString", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:withAndroidDatabaseCursor:withInt:", "resultToSqlArg", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "isEscapedValue", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "singleTon", "singleTon", 0x1a, "Lco.touchlab.squeaky.field.types.IntegerObjectType;", &CoTouchlabSqueakyFieldTypesIntegerObjectType_singleTon, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesIntegerObjectType = { 2, "IntegerObjectType", "co.touchlab.squeaky.field.types", NULL, 0x1, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesIntegerObjectType;
}

@end

CoTouchlabSqueakyFieldTypesIntegerObjectType *CoTouchlabSqueakyFieldTypesIntegerObjectType_getSingleton() {
  CoTouchlabSqueakyFieldTypesIntegerObjectType_initialize();
  return CoTouchlabSqueakyFieldTypesIntegerObjectType_singleTon;
}

void CoTouchlabSqueakyFieldTypesIntegerObjectType_init(CoTouchlabSqueakyFieldTypesIntegerObjectType *self) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, JreLoadEnum(CoTouchlabSqueakyFieldSqlType, INTEGER), [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_class_() } count:1 type:IOSClass_class_()]);
}

CoTouchlabSqueakyFieldTypesIntegerObjectType *new_CoTouchlabSqueakyFieldTypesIntegerObjectType_init() {
  CoTouchlabSqueakyFieldTypesIntegerObjectType *self = [CoTouchlabSqueakyFieldTypesIntegerObjectType alloc];
  CoTouchlabSqueakyFieldTypesIntegerObjectType_init(self);
  return self;
}

CoTouchlabSqueakyFieldTypesIntegerObjectType *create_CoTouchlabSqueakyFieldTypesIntegerObjectType_init() {
  return new_CoTouchlabSqueakyFieldTypesIntegerObjectType_init();
}

void CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesIntegerObjectType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

CoTouchlabSqueakyFieldTypesIntegerObjectType *new_CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesIntegerObjectType *self = [CoTouchlabSqueakyFieldTypesIntegerObjectType alloc];
  CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

CoTouchlabSqueakyFieldTypesIntegerObjectType *create_CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  return new_CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(sqlType, classes);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesIntegerObjectType)
