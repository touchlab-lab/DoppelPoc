//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/DateType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesDateType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesDateType_RESTRICT
#define CoTouchlabSqueakyFieldTypesDateType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesDateType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesDateType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesDateType_) && (CoTouchlabSqueakyFieldTypesDateType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesDateType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesDateType_

#define CoTouchlabSqueakyFieldTypesBaseDateType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesBaseDateType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/BaseDateType.h"

@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyFieldSqlType;
@class CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;
@class IOSObjectArray;
@protocol AndroidDatabaseCursor;

@interface CoTouchlabSqueakyFieldTypesDateType : CoTouchlabSqueakyFieldTypesBaseDateType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesDateType *)getSingleton;

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)javaObject;

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr;

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos;

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

- (CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)getDefaultDateFormatConfig;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesDateType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateType *CoTouchlabSqueakyFieldTypesDateType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesDateType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateType *new_CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateType *create_CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesDateType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesDateType_INCLUDE_ALL")
