//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/BaseDateType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/BaseDataType.h"
#include "co/touchlab/squeaky/field/types/BaseDateType.h"
#include "java/lang/ThreadLocal.h"
#include "java/text/DateFormat.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"

@interface CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig () {
 @public
  JavaLangThreadLocal *threadLocal_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig, threadLocal_, JavaLangThreadLocal *)

@interface CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 : JavaLangThreadLocal {
 @public
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *this$0_;
}

- (JavaTextDateFormat *)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1, this$0_, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *self, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *create_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1)

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesBaseDateType)

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *CoTouchlabSqueakyFieldTypesBaseDateType_defaultDateFormatConfig;

@implementation CoTouchlabSqueakyFieldTypesBaseDateType

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType {
  CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_(self, sqlType);
  return self;
}

+ (CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                                            withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)defaultDateFormatConfig {
  return CoTouchlabSqueakyFieldTypesBaseDateType_convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(fieldType, defaultDateFormatConfig);
}

+ (JavaUtilDate *)parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)formatConfig
                                                                                       withNSString:(NSString *)dateStr {
  return CoTouchlabSqueakyFieldTypesBaseDateType_parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(formatConfig, dateStr);
}

+ (NSString *)normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)formatConfig
                                                                                       withNSString:(NSString *)dateStr {
  return CoTouchlabSqueakyFieldTypesBaseDateType_normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(formatConfig, dateStr);
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesBaseDateType class]) {
    CoTouchlabSqueakyFieldTypesBaseDateType_defaultDateFormatConfig = new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(@"yyyy-MM-dd HH:mm:ss.SSSSSS");
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesBaseDateType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:", "BaseDateType", NULL, 0x4, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:", "BaseDateType", NULL, 0x4, NULL, NULL },
    { "convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType:withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:", "convertDateStringConfig", "Lco.touchlab.squeaky.field.types.BaseDateType$DateStringFormatConfig;", 0xc, NULL, NULL },
    { "parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:withNSString:", "parseDateString", "Ljava.util.Date;", 0xc, "Ljava.text.ParseException;", NULL },
    { "normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:withNSString:", "normalizeDateString", "Ljava.lang.String;", 0xc, "Ljava.text.ParseException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "defaultDateFormatConfig", "defaultDateFormatConfig", 0x1c, "Lco.touchlab.squeaky.field.types.BaseDateType$DateStringFormatConfig;", &CoTouchlabSqueakyFieldTypesBaseDateType_defaultDateFormatConfig, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lco.touchlab.squeaky.field.types.BaseDateType$DateStringFormatConfig;"};
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseDateType = { 2, "BaseDateType", "co.touchlab.squeaky.field.types", NULL, 0x401, 5, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesBaseDateType;
}

@end

void CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesBaseDateType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

void CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldTypesBaseDateType *self, CoTouchlabSqueakyFieldSqlType *sqlType) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_(self, sqlType);
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *CoTouchlabSqueakyFieldTypesBaseDateType_convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldFieldType *fieldType, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *defaultDateFormatConfig) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initialize();
  if (fieldType == nil) {
    return defaultDateFormatConfig;
  }
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *configObj = (CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *) cast_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getDataTypeConfigObj], [CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig class]);
  if (configObj == nil) {
    return defaultDateFormatConfig;
  }
  else {
    return configObj;
  }
}

JavaUtilDate *CoTouchlabSqueakyFieldTypesBaseDateType_parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *formatConfig, NSString *dateStr) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initialize();
  JavaTextDateFormat *dateFormat = [((CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *) nil_chk(formatConfig)) getDateFormat];
  return [((JavaTextDateFormat *) nil_chk(dateFormat)) parseWithNSString:dateStr];
}

NSString *CoTouchlabSqueakyFieldTypesBaseDateType_normalizeDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *formatConfig, NSString *dateStr) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initialize();
  JavaTextDateFormat *dateFormat = [((CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *) nil_chk(formatConfig)) getDateFormat];
  JavaUtilDate *date = [((JavaTextDateFormat *) nil_chk(dateFormat)) parseWithNSString:dateStr];
  return [dateFormat formatWithJavaUtilDate:date];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBaseDateType)

@implementation CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig

- (instancetype)initWithNSString:(NSString *)dateFormatStr {
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(self, dateFormatStr);
  return self;
}

- (JavaTextDateFormat *)getDateFormat {
  return [((JavaLangThreadLocal *) nil_chk(threadLocal_)) get];
}

- (NSString *)description {
  return dateFormatStr_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "DateStringFormatConfig", NULL, 0x1, NULL, NULL },
    { "getDateFormat", NULL, "Ljava.text.DateFormat;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "threadLocal_", NULL, 0x12, "Ljava.lang.ThreadLocal;", NULL, "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;", .constantValue.asLong = 0 },
    { "dateFormatStr_", NULL, 0x10, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig = { 2, "DateStringFormatConfig", "co.touchlab.squeaky.field.types", "BaseDateType", 0xc, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig;
}

@end

void CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *self, NSString *dateFormatStr) {
  NSObject_init(self);
  self->threadLocal_ = new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(self);
  self->dateFormatStr_ = dateFormatStr;
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(NSString *dateFormatStr) {
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *self = [CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig alloc];
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(self, dateFormatStr);
  return self;
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *create_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(NSString *dateFormatStr) {
  return new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_initWithNSString_(dateFormatStr);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig)

@implementation CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1

- (JavaTextDateFormat *)initialValue {
  return new_JavaTextSimpleDateFormat_initWithNSString_(this$0_->dateFormatStr_);
}

- (instancetype)initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)outer$ {
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "Ljava.text.DateFormat;", 0x4, NULL, "()Ljava/text/DateFormat;" },
    { "initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.squeaky.field.types.BaseDateType$DateStringFormatConfig;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Ljava.text.DateFormat;"};
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 = { 2, "", "co.touchlab.squeaky.field.types", "BaseDateType$DateStringFormatConfig", 0x8008, 2, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;" };
  return &_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1;
}

@end

void CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *self, CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) {
  self->this$0_ = outer$;
  JavaLangThreadLocal_init(self);
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) {
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *self = [CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 alloc];
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(self, outer$);
  return self;
}

CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1 *create_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *outer$) {
  return new_CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1_initWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_$1)
