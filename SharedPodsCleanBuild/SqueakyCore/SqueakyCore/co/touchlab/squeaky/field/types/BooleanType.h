//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/BooleanType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesBooleanType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesBooleanType_RESTRICT
#define CoTouchlabSqueakyFieldTypesBooleanType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesBooleanType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesBooleanType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesBooleanType_) && (CoTouchlabSqueakyFieldTypesBooleanType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesBooleanType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesBooleanType_

#define CoTouchlabSqueakyFieldTypesBooleanObjectType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesBooleanObjectType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/BooleanObjectType.h"

@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;

@interface CoTouchlabSqueakyFieldTypesBooleanType : CoTouchlabSqueakyFieldTypesBooleanObjectType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesBooleanType *)getSingleton;

- (jboolean)isPrimitive;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType;

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesBooleanType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBooleanType *CoTouchlabSqueakyFieldTypesBooleanType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesBooleanType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBooleanType *new_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBooleanType *create_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldTypesBooleanType *self, CoTouchlabSqueakyFieldSqlType *sqlType);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBooleanType *new_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesBooleanType *create_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesBooleanType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesBooleanType_INCLUDE_ALL")
