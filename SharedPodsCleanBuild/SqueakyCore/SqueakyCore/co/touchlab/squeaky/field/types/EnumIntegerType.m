//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/EnumIntegerType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/database/Cursor.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/BaseEnumType.h"
#include "co/touchlab/squeaky/field/types/EnumIntegerType.h"
#include "java/lang/Enum.h"
#include "java/lang/Integer.h"
#include "java/sql/SQLException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface CoTouchlabSqueakyFieldTypesEnumIntegerType ()

- (instancetype)init;

@end

inline CoTouchlabSqueakyFieldTypesEnumIntegerType *CoTouchlabSqueakyFieldTypesEnumIntegerType_get_singleTon();
static CoTouchlabSqueakyFieldTypesEnumIntegerType *CoTouchlabSqueakyFieldTypesEnumIntegerType_singleTon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesEnumIntegerType, singleTon, CoTouchlabSqueakyFieldTypesEnumIntegerType *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesEnumIntegerType_init(CoTouchlabSqueakyFieldTypesEnumIntegerType *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesEnumIntegerType *new_CoTouchlabSqueakyFieldTypesEnumIntegerType_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesEnumIntegerType *create_CoTouchlabSqueakyFieldTypesEnumIntegerType_init();

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesEnumIntegerType)

@implementation CoTouchlabSqueakyFieldTypesEnumIntegerType

+ (CoTouchlabSqueakyFieldTypesEnumIntegerType *)getSingleton {
  return CoTouchlabSqueakyFieldTypesEnumIntegerType_getSingleton();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesEnumIntegerType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr {
  return JavaLangInteger_valueOfWithInt_(JavaLangInteger_parseIntWithNSString_(defaultStr));
}

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos {
  return JavaLangInteger_valueOfWithInt_([((id<AndroidDatabaseCursor>) nil_chk(results)) getIntWithInt:columnPos]);
}

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos {
  if (fieldType == nil) {
    return sqlArg;
  }
  JavaLangInteger *valInteger = (JavaLangInteger *) cast_chk(sqlArg, [JavaLangInteger class]);
  id<JavaUtilMap> enumIntMap = (id<JavaUtilMap>) cast_check([((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getDataTypeConfigObj], JavaUtilMap_class_());
  if (enumIntMap == nil) {
    return CoTouchlabSqueakyFieldTypesBaseEnumType_enumValWithCoTouchlabSqueakyFieldFieldType_withId_withJavaLangEnum_(fieldType, valInteger, nil);
  }
  else {
    return CoTouchlabSqueakyFieldTypesBaseEnumType_enumValWithCoTouchlabSqueakyFieldFieldType_withId_withJavaLangEnum_(fieldType, valInteger, [enumIntMap getWithId:valInteger]);
  }
}

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)obj {
  JavaLangEnum *enumVal = (JavaLangEnum *) cast_chk(obj, [JavaLangEnum class]);
  return JavaLangInteger_valueOfWithInt_([((JavaLangEnum *) nil_chk(enumVal)) ordinal]);
}

- (jboolean)isEscapedValue {
  return false;
}

- (id)makeConfigObjectWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType {
  id<JavaUtilMap> enumIntMap = new_JavaUtilHashMap_init();
  IOSObjectArray *constants = (IOSObjectArray *) cast_check([((IOSClass *) nil_chk([((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getFieldType])) getEnumConstants], IOSClass_arrayType(JavaLangEnum_class_(), 1));
  if (constants == nil) {
    @throw new_JavaSqlSQLException_initWithNSString_(JreStrcat("$@$@", @"Field ", fieldType, @" improperly configured as type ", self));
  }
  {
    IOSObjectArray *a__ = constants;
    JavaLangEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangEnum *enumVal = *b__++;
      (void) [enumIntMap putWithId:JavaLangInteger_valueOfWithInt_([((JavaLangEnum *) nil_chk(enumVal)) ordinal]) withId:enumVal];
    }
  }
  return enumIntMap;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesEnumIntegerType class]) {
    CoTouchlabSqueakyFieldTypesEnumIntegerType_singleTon = new_CoTouchlabSqueakyFieldTypesEnumIntegerType_init();
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesEnumIntegerType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSingleton", NULL, "Lco.touchlab.squeaky.field.types.EnumIntegerType;", 0x9, NULL, NULL },
    { "init", "EnumIntegerType", NULL, 0x2, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:", "EnumIntegerType", NULL, 0x4, NULL, NULL },
    { "parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:withNSString:", "parseDefaultString", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:withAndroidDatabaseCursor:withInt:", "resultToSqlArg", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:withId:withInt:", "sqlArgToJava", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:withId:", "javaToSqlArg", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "isEscapedValue", NULL, "Z", 0x1, NULL, NULL },
    { "makeConfigObjectWithCoTouchlabSqueakyFieldFieldType:", "makeConfigObject", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "singleTon", "singleTon", 0x1a, "Lco.touchlab.squeaky.field.types.EnumIntegerType;", &CoTouchlabSqueakyFieldTypesEnumIntegerType_singleTon, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesEnumIntegerType = { 2, "EnumIntegerType", "co.touchlab.squeaky.field.types", NULL, 0x1, 9, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesEnumIntegerType;
}

@end

CoTouchlabSqueakyFieldTypesEnumIntegerType *CoTouchlabSqueakyFieldTypesEnumIntegerType_getSingleton() {
  CoTouchlabSqueakyFieldTypesEnumIntegerType_initialize();
  return CoTouchlabSqueakyFieldTypesEnumIntegerType_singleTon;
}

void CoTouchlabSqueakyFieldTypesEnumIntegerType_init(CoTouchlabSqueakyFieldTypesEnumIntegerType *self) {
  CoTouchlabSqueakyFieldTypesBaseEnumType_initWithCoTouchlabSqueakyFieldSqlType_(self, JreLoadEnum(CoTouchlabSqueakyFieldSqlType, INTEGER));
}

CoTouchlabSqueakyFieldTypesEnumIntegerType *new_CoTouchlabSqueakyFieldTypesEnumIntegerType_init() {
  CoTouchlabSqueakyFieldTypesEnumIntegerType *self = [CoTouchlabSqueakyFieldTypesEnumIntegerType alloc];
  CoTouchlabSqueakyFieldTypesEnumIntegerType_init(self);
  return self;
}

CoTouchlabSqueakyFieldTypesEnumIntegerType *create_CoTouchlabSqueakyFieldTypesEnumIntegerType_init() {
  return new_CoTouchlabSqueakyFieldTypesEnumIntegerType_init();
}

void CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesEnumIntegerType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBaseEnumType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

CoTouchlabSqueakyFieldTypesEnumIntegerType *new_CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesEnumIntegerType *self = [CoTouchlabSqueakyFieldTypesEnumIntegerType alloc];
  CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

CoTouchlabSqueakyFieldTypesEnumIntegerType *create_CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  return new_CoTouchlabSqueakyFieldTypesEnumIntegerType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(sqlType, classes);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesEnumIntegerType)
