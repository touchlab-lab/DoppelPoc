//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/ByteType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesByteType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesByteType_RESTRICT
#define CoTouchlabSqueakyFieldTypesByteType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesByteType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesByteType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesByteType_) && (CoTouchlabSqueakyFieldTypesByteType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesByteType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesByteType_

#define CoTouchlabSqueakyFieldTypesByteObjectType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesByteObjectType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/ByteObjectType.h"

@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;

@interface CoTouchlabSqueakyFieldTypesByteType : CoTouchlabSqueakyFieldTypesByteObjectType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesByteType *)getSingleton;

- (jboolean)isPrimitive;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesByteType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteType *CoTouchlabSqueakyFieldTypesByteType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesByteType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesByteType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteType *new_CoTouchlabSqueakyFieldTypesByteType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesByteType *create_CoTouchlabSqueakyFieldTypesByteType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesByteType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesByteType_INCLUDE_ALL")
