//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/IntegerObjectType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesIntegerObjectType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesIntegerObjectType_RESTRICT
#define CoTouchlabSqueakyFieldTypesIntegerObjectType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesIntegerObjectType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesIntegerObjectType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesIntegerObjectType_) && (CoTouchlabSqueakyFieldTypesIntegerObjectType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesIntegerObjectType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesIntegerObjectType_

#define CoTouchlabSqueakyFieldTypesBaseDataType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesBaseDataType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/BaseDataType.h"

@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;
@protocol AndroidDatabaseCursor;

@interface CoTouchlabSqueakyFieldTypesIntegerObjectType : CoTouchlabSqueakyFieldTypesBaseDataType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesIntegerObjectType *)getSingleton;

- (jboolean)isEscapedValue;

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr;

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesIntegerObjectType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesIntegerObjectType *CoTouchlabSqueakyFieldTypesIntegerObjectType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesIntegerObjectType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesIntegerObjectType *new_CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesIntegerObjectType *create_CoTouchlabSqueakyFieldTypesIntegerObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesIntegerObjectType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesIntegerObjectType_INCLUDE_ALL")
