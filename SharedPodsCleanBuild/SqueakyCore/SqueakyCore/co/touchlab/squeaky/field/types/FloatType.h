//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/FloatType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesFloatType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesFloatType_RESTRICT
#define CoTouchlabSqueakyFieldTypesFloatType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesFloatType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesFloatType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesFloatType_) && (CoTouchlabSqueakyFieldTypesFloatType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesFloatType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesFloatType_

#define CoTouchlabSqueakyFieldTypesFloatObjectType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesFloatObjectType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/FloatObjectType.h"

@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;

@interface CoTouchlabSqueakyFieldTypesFloatType : CoTouchlabSqueakyFieldTypesFloatObjectType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesFloatType *)getSingleton;

- (jboolean)isPrimitive;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesFloatType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesFloatType *CoTouchlabSqueakyFieldTypesFloatType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesFloatType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesFloatType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesFloatType *new_CoTouchlabSqueakyFieldTypesFloatType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesFloatType *create_CoTouchlabSqueakyFieldTypesFloatType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesFloatType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesFloatType_INCLUDE_ALL")
