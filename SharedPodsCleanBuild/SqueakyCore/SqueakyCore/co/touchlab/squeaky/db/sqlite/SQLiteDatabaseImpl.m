//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/db/sqlite/SQLiteDatabaseImpl.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/content/ContentValues.h"
#include "android/database/Cursor.h"
#include "android/database/DatabaseUtils.h"
#include "android/database/sqlite/SQLiteDatabase.h"
#include "android/database/sqlite/SQLiteException.h"
#include "android/database/sqlite/SQLiteStatement.h"
#include "co/touchlab/squeaky/dao/Query.h"
#include "co/touchlab/squeaky/db/SQLiteStatement.h"
#include "co/touchlab/squeaky/db/sqlite/SQLiteDatabaseImpl.h"
#include "co/touchlab/squeaky/db/sqlite/SQLiteStatementImpl.h"
#include "java/sql/SQLException.h"

@interface CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl () {
 @public
  AndroidDatabaseSqliteSQLiteDatabase *db_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl, db_, AndroidDatabaseSqliteSQLiteDatabase *)

@implementation CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db {
  CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(self, db);
  return self;
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)compileStatementWithNSString:(NSString *)sql {
  return new_CoTouchlabSqueakyDbSqliteSQLiteStatementImpl_initWithAndroidDatabaseSqliteSQLiteStatement_([((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql]);
}

- (id<AndroidDatabaseCursor>)rawQueryWithNSString:(NSString *)sql
                                withNSStringArray:(IOSObjectArray *)args {
  return [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) rawQueryWithNSString:sql withNSStringArray:args];
}

- (jint)updateWithNSString:(NSString *)tableName
withAndroidContentContentValues:(AndroidContentContentValues *)vals
              withNSString:(NSString *)where
         withNSStringArray:(IOSObjectArray *)args {
  return [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) updateWithNSString:tableName withAndroidContentContentValues:vals withNSString:where withNSStringArray:args];
}

- (jint)delete__WithNSString:(NSString *)tableName
                withNSString:(NSString *)where
           withNSStringArray:(IOSObjectArray *)args {
  return [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) delete__WithNSString:tableName withNSString:where withNSStringArray:args];
}

- (jlong)countOfWithNSString:(NSString *)tableName {
  return AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(db_, tableName);
}

- (jlong)countOfWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  return AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(db_, JreStrcat("$$$$", @"select count(*) from ", [((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getFromStatementWithBoolean:true], @" where ", [where getWhereStatementWithBoolean:true]), [where getParameters]);
}

- (jlong)longForQueryWithNSString:(NSString *)query
                withNSStringArray:(IOSObjectArray *)arguments {
  return AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(db_, query, arguments);
}

- (void)execSQLWithNSString:(NSString *)sql {
  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) execSQLWithNSString:sql];
}

- (void)beginTransaction {
  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) beginTransaction];
}

- (void)setTransactionSuccessful {
  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) setTransactionSuccessful];
}

- (void)endTransaction {
  [((AndroidDatabaseSqliteSQLiteDatabase *) nil_chk(db_)) endTransaction];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAndroidDatabaseSqliteSQLiteDatabase:", "SQLiteDatabaseImpl", NULL, 0x1, NULL, NULL },
    { "compileStatementWithNSString:", "compileStatement", "Lco.touchlab.squeaky.db.SQLiteStatement;", 0x1, "Landroid.database.sqlite.SQLiteException;", NULL },
    { "rawQueryWithNSString:withNSStringArray:", "rawQuery", "Landroid.database.Cursor;", 0x1, NULL, NULL },
    { "updateWithNSString:withAndroidContentContentValues:withNSString:withNSStringArray:", "update", "I", 0x1, "Landroid.database.sqlite.SQLiteException;", NULL },
    { "delete__WithNSString:withNSString:withNSStringArray:", "delete", "I", 0x1, NULL, NULL },
    { "countOfWithNSString:", "countOf", "J", 0x1, NULL, NULL },
    { "countOfWithCoTouchlabSqueakyDaoQuery:", "countOf", "J", 0x1, "Ljava.sql.SQLException;", NULL },
    { "longForQueryWithNSString:withNSStringArray:", "longForQuery", "J", 0x81, NULL, NULL },
    { "execSQLWithNSString:", "execSQL", "V", 0x1, NULL, NULL },
    { "beginTransaction", NULL, "V", 0x1, NULL, NULL },
    { "setTransactionSuccessful", NULL, "V", 0x1, NULL, NULL },
    { "endTransaction", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "db_", NULL, 0x12, "Landroid.database.sqlite.SQLiteDatabase;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl = { 2, "SQLiteDatabaseImpl", "co.touchlab.squeaky.db.sqlite", NULL, 0x1, 12, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl;
}

@end

void CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl *self, AndroidDatabaseSqliteSQLiteDatabase *db) {
  NSObject_init(self);
  self->db_ = db;
}

CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl *new_CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *db) {
  CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl *self = [CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl alloc];
  CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(self, db);
  return self;
}

CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl *create_CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *db) {
  return new_CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_(db);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl)
