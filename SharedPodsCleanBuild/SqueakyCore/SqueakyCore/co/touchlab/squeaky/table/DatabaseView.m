//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/table/DatabaseView.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "co/touchlab/squeaky/table/DatabaseView.h"
#include "java/lang/annotation/ElementType.h"
#include "java/lang/annotation/Retention.h"
#include "java/lang/annotation/RetentionPolicy.h"
#include "java/lang/annotation/Target.h"

@implementation CoTouchlabSqueakyTableDatabaseView

@synthesize viewName = viewName_;

- (instancetype)initWithViewName:(NSString *)viewName__ {
  if ((self = [super init])) {
    self->viewName_ = RETAIN_(viewName__);
  }
  return self;
}

+ (NSString *)viewNameDefault {
  return @"";
}

- (IOSClass *)annotationType {
  return CoTouchlabSqueakyTableDatabaseView_class_();
}

- (NSString *)description {
  return @"@co.touchlab.squeaky.table.DatabaseView()";
}

+ (IOSObjectArray *)__annotations {
  return [IOSObjectArray arrayWithObjects:(id[]) { [[JavaLangAnnotationTarget alloc] initWithValue:[IOSObjectArray arrayWithObjects:(id[]) { JavaLangAnnotationElementType_get_TYPE() } count:1 type:NSObject_class_()]], [[JavaLangAnnotationRetention alloc] initWithValue:JavaLangAnnotationRetentionPolicy_get_RUNTIME()] } count:2 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "viewName", "viewName", "Ljava.lang.String;", 0x401, NULL, NULL },
    { "viewNameDefault", "viewName", "Ljava.lang.String;", 0x100a, NULL, NULL },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyTableDatabaseView = { 2, "DatabaseView", "co.touchlab.squeaky.table", NULL, 0x2609, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyTableDatabaseView;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyTableDatabaseView)
