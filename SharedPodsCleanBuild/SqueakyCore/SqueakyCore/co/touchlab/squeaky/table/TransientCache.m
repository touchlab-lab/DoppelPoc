//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/table/TransientCache.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "co/touchlab/squeaky/table/TransientCache.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface CoTouchlabSqueakyTableTransientCache () {
 @public
  id<JavaUtilMap> cache_;
}

- (id<JavaUtilMap>)primeCacheWithIOSClass:(IOSClass *)c;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyTableTransientCache, cache_, id<JavaUtilMap>)

__attribute__((unused)) static id<JavaUtilMap> CoTouchlabSqueakyTableTransientCache_primeCacheWithIOSClass_(CoTouchlabSqueakyTableTransientCache *self, IOSClass *c);

@implementation CoTouchlabSqueakyTableTransientCache

- (void)putWithIOSClass:(IOSClass *)c
                 withId:(id)id_
                 withId:(id)data {
  id<JavaUtilMap> objectObjectMap = CoTouchlabSqueakyTableTransientCache_primeCacheWithIOSClass_(self, c);
  (void) [((id<JavaUtilMap>) nil_chk(objectObjectMap)) putWithId:id_ withId:data];
}

- (id)getWithIOSClass:(IOSClass *)c
               withId:(id)id_ {
  id<JavaUtilMap> objectObjectMap = CoTouchlabSqueakyTableTransientCache_primeCacheWithIOSClass_(self, c);
  return [((id<JavaUtilMap>) nil_chk(objectObjectMap)) getWithId:id_];
}

- (id<JavaUtilMap>)primeCacheWithIOSClass:(IOSClass *)c {
  return CoTouchlabSqueakyTableTransientCache_primeCacheWithIOSClass_(self, c);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyTableTransientCache_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "putWithIOSClass:withId:withId:", "put", "V", 0x1, NULL, NULL },
    { "getWithIOSClass:withId:", "get", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "primeCacheWithIOSClass:", "primeCache", "Ljava.util.Map;", 0x2, NULL, "(Ljava/lang/Class;)Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;" },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cache_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Class;Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyTableTransientCache = { 2, "TransientCache", "co.touchlab.squeaky.table", NULL, 0x1, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyTableTransientCache;
}

@end

id<JavaUtilMap> CoTouchlabSqueakyTableTransientCache_primeCacheWithIOSClass_(CoTouchlabSqueakyTableTransientCache *self, IOSClass *c) {
  id<JavaUtilMap> objectObjectMap = [((id<JavaUtilMap>) nil_chk(self->cache_)) getWithId:c];
  if (objectObjectMap == nil) {
    objectObjectMap = new_JavaUtilHashMap_init();
    (void) [self->cache_ putWithId:c withId:objectObjectMap];
  }
  return objectObjectMap;
}

void CoTouchlabSqueakyTableTransientCache_init(CoTouchlabSqueakyTableTransientCache *self) {
  NSObject_init(self);
  self->cache_ = new_JavaUtilHashMap_init();
}

CoTouchlabSqueakyTableTransientCache *new_CoTouchlabSqueakyTableTransientCache_init() {
  CoTouchlabSqueakyTableTransientCache *self = [CoTouchlabSqueakyTableTransientCache alloc];
  CoTouchlabSqueakyTableTransientCache_init(self);
  return self;
}

CoTouchlabSqueakyTableTransientCache *create_CoTouchlabSqueakyTableTransientCache_init() {
  return new_CoTouchlabSqueakyTableTransientCache_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyTableTransientCache)
