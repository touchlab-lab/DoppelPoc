//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/ResponseBody.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/MediaType.h"
#include "com/squareup/okhttp/ResponseBody.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/InputStreamReader.h"
#include "java/io/Reader.h"
#include "java/lang/Integer.h"
#include "java/lang/NullPointerException.h"
#include "java/nio/charset/Charset.h"
#include "okio/Buffer.h"
#include "okio/BufferedSource.h"

@interface ComSquareupOkhttpResponseBody () {
 @public
  JavaIoReader *reader_;
}

- (JavaNioCharsetCharset *)charset;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpResponseBody, reader_, JavaIoReader *)

__attribute__((unused)) static JavaIoInputStream *ComSquareupOkhttpResponseBody_byteStream(ComSquareupOkhttpResponseBody *self);

__attribute__((unused)) static IOSByteArray *ComSquareupOkhttpResponseBody_bytes(ComSquareupOkhttpResponseBody *self);

__attribute__((unused)) static JavaNioCharsetCharset *ComSquareupOkhttpResponseBody_charset(ComSquareupOkhttpResponseBody *self);

@interface ComSquareupOkhttpResponseBody_$1 : ComSquareupOkhttpResponseBody {
 @public
  ComSquareupOkhttpMediaType *val$contentType_;
  jlong val$contentLength_;
  id<OkioBufferedSource> val$content_;
}

- (ComSquareupOkhttpMediaType *)contentType;

- (jlong)contentLength;

- (id<OkioBufferedSource>)source;

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)capture$0
                                          withLong:(jlong)capture$1
                            withOkioBufferedSource:(id<OkioBufferedSource>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpResponseBody_$1)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpResponseBody_$1, val$contentType_, ComSquareupOkhttpMediaType *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpResponseBody_$1, val$content_, id<OkioBufferedSource>)

__attribute__((unused)) static void ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(ComSquareupOkhttpResponseBody_$1 *self, ComSquareupOkhttpMediaType *capture$0, jlong capture$1, id<OkioBufferedSource> capture$2);

__attribute__((unused)) static ComSquareupOkhttpResponseBody_$1 *new_ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(ComSquareupOkhttpMediaType *capture$0, jlong capture$1, id<OkioBufferedSource> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpResponseBody_$1 *create_ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(ComSquareupOkhttpMediaType *capture$0, jlong capture$1, id<OkioBufferedSource> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpResponseBody_$1)

@implementation ComSquareupOkhttpResponseBody

- (ComSquareupOkhttpMediaType *)contentType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)contentLength {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaIoInputStream *)byteStream {
  return ComSquareupOkhttpResponseBody_byteStream(self);
}

- (id<OkioBufferedSource>)source {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSByteArray *)bytes {
  return ComSquareupOkhttpResponseBody_bytes(self);
}

- (JavaIoReader *)charStream {
  JavaIoReader *r = reader_;
  return r != nil ? r : (reader_ = new_JavaIoInputStreamReader_initWithJavaIoInputStream_withJavaNioCharsetCharset_(ComSquareupOkhttpResponseBody_byteStream(self), ComSquareupOkhttpResponseBody_charset(self)));
}

- (NSString *)string {
  return [NSString stringWithBytes:ComSquareupOkhttpResponseBody_bytes(self) charsetName:[((JavaNioCharsetCharset *) nil_chk(ComSquareupOkhttpResponseBody_charset(self))) name]];
}

- (JavaNioCharsetCharset *)charset {
  return ComSquareupOkhttpResponseBody_charset(self);
}

- (void)close {
  [((id<OkioBufferedSource>) nil_chk([self source])) close];
}

+ (ComSquareupOkhttpResponseBody *)createWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)contentType
                                                           withNSString:(NSString *)content {
  return ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withNSString_(contentType, content);
}

+ (ComSquareupOkhttpResponseBody *)createWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)contentType
                                                          withByteArray:(IOSByteArray *)content {
  return ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withByteArray_(contentType, content);
}

+ (ComSquareupOkhttpResponseBody *)createWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)contentType
                                                               withLong:(jlong)contentLength
                                                 withOkioBufferedSource:(id<OkioBufferedSource>)content {
  return ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(contentType, contentLength, content);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpResponseBody_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "contentType", NULL, "Lcom.squareup.okhttp.MediaType;", 0x401, NULL, NULL },
    { "contentLength", NULL, "J", 0x401, NULL, NULL },
    { "byteStream", NULL, "Ljava.io.InputStream;", 0x11, NULL, NULL },
    { "source", NULL, "Lokio.BufferedSource;", 0x401, NULL, NULL },
    { "bytes", NULL, "[B", 0x11, "Ljava.io.IOException;", NULL },
    { "charStream", NULL, "Ljava.io.Reader;", 0x11, NULL, NULL },
    { "string", NULL, "Ljava.lang.String;", 0x11, "Ljava.io.IOException;", NULL },
    { "charset", NULL, "Ljava.nio.charset.Charset;", 0x2, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "createWithComSquareupOkhttpMediaType:withNSString:", "create", "Lcom.squareup.okhttp.ResponseBody;", 0x9, NULL, NULL },
    { "createWithComSquareupOkhttpMediaType:withByteArray:", "create", "Lcom.squareup.okhttp.ResponseBody;", 0x9, NULL, NULL },
    { "createWithComSquareupOkhttpMediaType:withLong:withOkioBufferedSource:", "create", "Lcom.squareup.okhttp.ResponseBody;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "reader_", NULL, 0x2, "Ljava.io.Reader;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpResponseBody = { 2, "ResponseBody", "com.squareup.okhttp", NULL, 0x401, 13, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpResponseBody;
}

@end

JavaIoInputStream *ComSquareupOkhttpResponseBody_byteStream(ComSquareupOkhttpResponseBody *self) {
  return [((id<OkioBufferedSource>) nil_chk([self source])) inputStream];
}

IOSByteArray *ComSquareupOkhttpResponseBody_bytes(ComSquareupOkhttpResponseBody *self) {
  jlong contentLength = [self contentLength];
  if (contentLength > JavaLangInteger_MAX_VALUE) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$J", @"Cannot buffer entire body for content length: ", contentLength));
  }
  id<OkioBufferedSource> source = [self source];
  IOSByteArray *bytes;
  @try {
    bytes = [((id<OkioBufferedSource>) nil_chk(source)) readByteArray];
  }
  @finally {
    ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaIoCloseable_(source);
  }
  if (contentLength != -1 && contentLength != ((IOSByteArray *) nil_chk(bytes))->size_) {
    @throw new_JavaIoIOException_initWithNSString_(@"Content-Length and stream length disagree");
  }
  return bytes;
}

JavaNioCharsetCharset *ComSquareupOkhttpResponseBody_charset(ComSquareupOkhttpResponseBody *self) {
  ComSquareupOkhttpMediaType *contentType = [self contentType];
  return contentType != nil ? [contentType charsetWithJavaNioCharsetCharset:JreLoadStatic(ComSquareupOkhttpInternalUtil, UTF_8)] : JreLoadStatic(ComSquareupOkhttpInternalUtil, UTF_8);
}

ComSquareupOkhttpResponseBody *ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withNSString_(ComSquareupOkhttpMediaType *contentType, NSString *content) {
  ComSquareupOkhttpResponseBody_initialize();
  JavaNioCharsetCharset *charset = JreLoadStatic(ComSquareupOkhttpInternalUtil, UTF_8);
  if (contentType != nil) {
    charset = [contentType charset];
    if (charset == nil) {
      charset = JreLoadStatic(ComSquareupOkhttpInternalUtil, UTF_8);
      contentType = ComSquareupOkhttpMediaType_parseWithNSString_(JreStrcat("@$", contentType, @"; charset=utf-8"));
    }
  }
  OkioBuffer *buffer = [new_OkioBuffer_init() writeStringWithNSString:content withJavaNioCharsetCharset:charset];
  return ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(contentType, [((OkioBuffer *) nil_chk(buffer)) size], buffer);
}

ComSquareupOkhttpResponseBody *ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpMediaType *contentType, IOSByteArray *content) {
  ComSquareupOkhttpResponseBody_initialize();
  OkioBuffer *buffer = [new_OkioBuffer_init() writeWithByteArray:content];
  return ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(contentType, ((IOSByteArray *) nil_chk(content))->size_, buffer);
}

ComSquareupOkhttpResponseBody *ComSquareupOkhttpResponseBody_createWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(ComSquareupOkhttpMediaType *contentType, jlong contentLength, id<OkioBufferedSource> content) {
  ComSquareupOkhttpResponseBody_initialize();
  if (content == nil) @throw new_JavaLangNullPointerException_initWithNSString_(@"source == null");
  return new_ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(contentType, contentLength, content);
}

void ComSquareupOkhttpResponseBody_init(ComSquareupOkhttpResponseBody *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpResponseBody)

@implementation ComSquareupOkhttpResponseBody_$1

- (ComSquareupOkhttpMediaType *)contentType {
  return val$contentType_;
}

- (jlong)contentLength {
  return val$contentLength_;
}

- (id<OkioBufferedSource>)source {
  return val$content_;
}

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)capture$0
                                          withLong:(jlong)capture$1
                            withOkioBufferedSource:(id<OkioBufferedSource>)capture$2 {
  ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "contentType", NULL, "Lcom.squareup.okhttp.MediaType;", 0x1, NULL, NULL },
    { "contentLength", NULL, "J", 0x1, NULL, NULL },
    { "source", NULL, "Lokio.BufferedSource;", 0x1, NULL, NULL },
    { "initWithComSquareupOkhttpMediaType:withLong:withOkioBufferedSource:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$contentType_", NULL, 0x1012, "Lcom.squareup.okhttp.MediaType;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$contentLength_", NULL, 0x1012, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "val$content_", NULL, 0x1012, "Lokio.BufferedSource;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpResponseBody", "createWithComSquareupOkhttpMediaType:withLong:withOkioBufferedSource:" };
  static const J2ObjcClassInfo _ComSquareupOkhttpResponseBody_$1 = { 2, "", "com.squareup.okhttp", "ResponseBody", 0x8008, 4, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComSquareupOkhttpResponseBody_$1;
}

@end

void ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(ComSquareupOkhttpResponseBody_$1 *self, ComSquareupOkhttpMediaType *capture$0, jlong capture$1, id<OkioBufferedSource> capture$2) {
  self->val$contentType_ = capture$0;
  self->val$contentLength_ = capture$1;
  self->val$content_ = capture$2;
  ComSquareupOkhttpResponseBody_init(self);
}

ComSquareupOkhttpResponseBody_$1 *new_ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(ComSquareupOkhttpMediaType *capture$0, jlong capture$1, id<OkioBufferedSource> capture$2) {
  ComSquareupOkhttpResponseBody_$1 *self = [ComSquareupOkhttpResponseBody_$1 alloc];
  ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(self, capture$0, capture$1, capture$2);
  return self;
}

ComSquareupOkhttpResponseBody_$1 *create_ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(ComSquareupOkhttpMediaType *capture$0, jlong capture$1, id<OkioBufferedSource> capture$2) {
  return new_ComSquareupOkhttpResponseBody_$1_initWithComSquareupOkhttpMediaType_withLong_withOkioBufferedSource_(capture$0, capture$1, capture$2);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpResponseBody_$1)
