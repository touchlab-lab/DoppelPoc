//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/ConnectionSpec.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComSquareupOkhttpConnectionSpec_INCLUDE_ALL")
#ifdef ComSquareupOkhttpConnectionSpec_RESTRICT
#define ComSquareupOkhttpConnectionSpec_INCLUDE_ALL 0
#else
#define ComSquareupOkhttpConnectionSpec_INCLUDE_ALL 1
#endif
#undef ComSquareupOkhttpConnectionSpec_RESTRICT

#if !defined (ComSquareupOkhttpConnectionSpec_) && (ComSquareupOkhttpConnectionSpec_INCLUDE_ALL || defined(ComSquareupOkhttpConnectionSpec_INCLUDE))
#define ComSquareupOkhttpConnectionSpec_

@class ComSquareupOkhttpRoute;
@class JavaxNetSslSSLSocket;
@protocol JavaUtilList;

@interface ComSquareupOkhttpConnectionSpec : NSObject {
 @public
  jboolean tls_;
  jboolean supportsTlsExtensions_;
}

#pragma mark Public

- (id<JavaUtilList>)cipherSuites;

- (jboolean)isEqual:(id)other;

- (NSUInteger)hash;

- (jboolean)isTls;

- (jboolean)supportsTlsExtensions;

- (id<JavaUtilList>)tlsVersions;

- (NSString *)description;

#pragma mark Package-Private

- (void)applyWithJavaxNetSslSSLSocket:(JavaxNetSslSSLSocket *)sslSocket
           withComSquareupOkhttpRoute:(ComSquareupOkhttpRoute *)route;

@end

J2OBJC_STATIC_INIT(ComSquareupOkhttpConnectionSpec)

inline ComSquareupOkhttpConnectionSpec *ComSquareupOkhttpConnectionSpec_get_MODERN_TLS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComSquareupOkhttpConnectionSpec *ComSquareupOkhttpConnectionSpec_MODERN_TLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpConnectionSpec, MODERN_TLS, ComSquareupOkhttpConnectionSpec *)

inline ComSquareupOkhttpConnectionSpec *ComSquareupOkhttpConnectionSpec_get_COMPATIBLE_TLS();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComSquareupOkhttpConnectionSpec *ComSquareupOkhttpConnectionSpec_COMPATIBLE_TLS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpConnectionSpec, COMPATIBLE_TLS, ComSquareupOkhttpConnectionSpec *)

inline ComSquareupOkhttpConnectionSpec *ComSquareupOkhttpConnectionSpec_get_CLEARTEXT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComSquareupOkhttpConnectionSpec *ComSquareupOkhttpConnectionSpec_CLEARTEXT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpConnectionSpec, CLEARTEXT, ComSquareupOkhttpConnectionSpec *)

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpConnectionSpec)

#endif

#if !defined (ComSquareupOkhttpConnectionSpec_Builder_) && (ComSquareupOkhttpConnectionSpec_INCLUDE_ALL || defined(ComSquareupOkhttpConnectionSpec_Builder_INCLUDE))
#define ComSquareupOkhttpConnectionSpec_Builder_

@class ComSquareupOkhttpConnectionSpec;
@class IOSObjectArray;

@interface ComSquareupOkhttpConnectionSpec_Builder : NSObject

#pragma mark Public

- (instancetype)initWithComSquareupOkhttpConnectionSpec:(ComSquareupOkhttpConnectionSpec *)connectionSpec;

- (ComSquareupOkhttpConnectionSpec *)build;

- (ComSquareupOkhttpConnectionSpec_Builder *)cipherSuitesWithComSquareupOkhttpCipherSuiteArray:(IOSObjectArray *)cipherSuites;

- (ComSquareupOkhttpConnectionSpec_Builder *)supportsTlsExtensionsWithBoolean:(jboolean)supportsTlsExtensions;

- (ComSquareupOkhttpConnectionSpec_Builder *)tlsVersionsWithComSquareupOkhttpTlsVersionArray:(IOSObjectArray *)tlsVersions;

#pragma mark Package-Private

- (ComSquareupOkhttpConnectionSpec_Builder *)cipherSuitesWithNSStringArray:(IOSObjectArray *)cipherSuites;

- (ComSquareupOkhttpConnectionSpec_Builder *)tlsVersionsWithNSStringArray:(IOSObjectArray *)tlsVersions;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpConnectionSpec_Builder)

FOUNDATION_EXPORT void ComSquareupOkhttpConnectionSpec_Builder_initWithComSquareupOkhttpConnectionSpec_(ComSquareupOkhttpConnectionSpec_Builder *self, ComSquareupOkhttpConnectionSpec *connectionSpec);

FOUNDATION_EXPORT ComSquareupOkhttpConnectionSpec_Builder *new_ComSquareupOkhttpConnectionSpec_Builder_initWithComSquareupOkhttpConnectionSpec_(ComSquareupOkhttpConnectionSpec *connectionSpec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSquareupOkhttpConnectionSpec_Builder *create_ComSquareupOkhttpConnectionSpec_Builder_initWithComSquareupOkhttpConnectionSpec_(ComSquareupOkhttpConnectionSpec *connectionSpec);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpConnectionSpec_Builder)

#endif

#pragma pop_macro("ComSquareupOkhttpConnectionSpec_INCLUDE_ALL")
