//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/Headers.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Headers.h"
#include "com/squareup/okhttp/internal/http/HttpDate.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/Date.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "java/util/TreeSet.h"

@interface ComSquareupOkhttpHeaders () {
 @public
  IOSObjectArray *namesAndValues_;
}

- (instancetype)initWithComSquareupOkhttpHeaders_Builder:(ComSquareupOkhttpHeaders_Builder *)builder;

- (instancetype)initWithNSStringArray:(IOSObjectArray *)namesAndValues;

+ (NSString *)getWithNSStringArray:(IOSObjectArray *)namesAndValues
                      withNSString:(NSString *)name;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpHeaders, namesAndValues_, IOSObjectArray *)

__attribute__((unused)) static void ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(ComSquareupOkhttpHeaders *self, ComSquareupOkhttpHeaders_Builder *builder);

__attribute__((unused)) static ComSquareupOkhttpHeaders *new_ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(ComSquareupOkhttpHeaders_Builder *builder) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpHeaders *create_ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(ComSquareupOkhttpHeaders_Builder *builder);

__attribute__((unused)) static void ComSquareupOkhttpHeaders_initWithNSStringArray_(ComSquareupOkhttpHeaders *self, IOSObjectArray *namesAndValues);

__attribute__((unused)) static ComSquareupOkhttpHeaders *new_ComSquareupOkhttpHeaders_initWithNSStringArray_(IOSObjectArray *namesAndValues) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpHeaders *create_ComSquareupOkhttpHeaders_initWithNSStringArray_(IOSObjectArray *namesAndValues);

__attribute__((unused)) static NSString *ComSquareupOkhttpHeaders_getWithNSStringArray_withNSString_(IOSObjectArray *namesAndValues, NSString *name);

@interface ComSquareupOkhttpHeaders_Builder () {
 @public
  id<JavaUtilList> namesAndValues_;
}

- (ComSquareupOkhttpHeaders_Builder *)addLenientWithNSString:(NSString *)name
                                                withNSString:(NSString *)value;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpHeaders_Builder, namesAndValues_, id<JavaUtilList>)

__attribute__((unused)) static ComSquareupOkhttpHeaders_Builder *ComSquareupOkhttpHeaders_Builder_addLenientWithNSString_withNSString_(ComSquareupOkhttpHeaders_Builder *self, NSString *name, NSString *value);

@implementation ComSquareupOkhttpHeaders

- (instancetype)initWithComSquareupOkhttpHeaders_Builder:(ComSquareupOkhttpHeaders_Builder *)builder {
  ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(self, builder);
  return self;
}

- (instancetype)initWithNSStringArray:(IOSObjectArray *)namesAndValues {
  ComSquareupOkhttpHeaders_initWithNSStringArray_(self, namesAndValues);
  return self;
}

- (NSString *)getWithNSString:(NSString *)name {
  return ComSquareupOkhttpHeaders_getWithNSStringArray_withNSString_(namesAndValues_, name);
}

- (JavaUtilDate *)getDateWithNSString:(NSString *)name {
  NSString *value = [self getWithNSString:name];
  return value != nil ? ComSquareupOkhttpInternalHttpHttpDate_parseWithNSString_(value) : nil;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(namesAndValues_))->size_ / 2;
}

- (NSString *)nameWithInt:(jint)index {
  jint nameIndex = index * 2;
  if (nameIndex < 0 || nameIndex >= ((IOSObjectArray *) nil_chk(namesAndValues_))->size_) {
    return nil;
  }
  return IOSObjectArray_Get(nil_chk(namesAndValues_), nameIndex);
}

- (NSString *)valueWithInt:(jint)index {
  jint valueIndex = index * 2 + 1;
  if (valueIndex < 0 || valueIndex >= ((IOSObjectArray *) nil_chk(namesAndValues_))->size_) {
    return nil;
  }
  return IOSObjectArray_Get(nil_chk(namesAndValues_), valueIndex);
}

- (id<JavaUtilSet>)names {
  JavaUtilTreeSet *result = new_JavaUtilTreeSet_initWithJavaUtilComparator_(JreLoadStatic(NSString, CASE_INSENSITIVE_ORDER));
  for (jint i = 0, size = [self size]; i < size; i++) {
    [result addWithId:[self nameWithInt:i]];
  }
  return JavaUtilCollections_unmodifiableSetWithJavaUtilSet_(result);
}

- (id<JavaUtilList>)valuesWithNSString:(NSString *)name {
  id<JavaUtilList> result = nil;
  for (jint i = 0, size = [self size]; i < size; i++) {
    if ([((NSString *) nil_chk(name)) equalsIgnoreCase:[self nameWithInt:i]]) {
      if (result == nil) result = new_JavaUtilArrayList_initWithInt_(2);
      [((id<JavaUtilList>) nil_chk(result)) addWithId:[self valueWithInt:i]];
    }
  }
  return result != nil ? JavaUtilCollections_unmodifiableListWithJavaUtilList_(result) : JavaUtilCollections_emptyList();
}

- (ComSquareupOkhttpHeaders_Builder *)newBuilder {
  ComSquareupOkhttpHeaders_Builder *result = new_ComSquareupOkhttpHeaders_Builder_init();
  [((id<JavaUtilList>) nil_chk(result->namesAndValues_)) addAllWithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(namesAndValues_)];
  return result;
}

- (NSString *)description {
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_init();
  for (jint i = 0, size = [self size]; i < size; i++) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([result appendWithNSString:[self nameWithInt:i]])) appendWithNSString:@": "])) appendWithNSString:[self valueWithInt:i]])) appendWithNSString:@"\n"];
  }
  return [result description];
}

+ (NSString *)getWithNSStringArray:(IOSObjectArray *)namesAndValues
                      withNSString:(NSString *)name {
  return ComSquareupOkhttpHeaders_getWithNSStringArray_withNSString_(namesAndValues, name);
}

+ (ComSquareupOkhttpHeaders *)ofWithNSStringArray:(IOSObjectArray *)namesAndValues {
  return ComSquareupOkhttpHeaders_ofWithNSStringArray_(namesAndValues);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpHeaders_Builder:", "Headers", NULL, 0x2, NULL, NULL },
    { "initWithNSStringArray:", "Headers", NULL, 0x2, NULL, NULL },
    { "getWithNSString:", "get", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDateWithNSString:", "getDate", "Ljava.util.Date;", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "nameWithInt:", "name", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "valueWithInt:", "value", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "names", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set<Ljava/lang/String;>;" },
    { "valuesWithNSString:", "values", "Ljava.util.List;", 0x1, NULL, "(Ljava/lang/String;)Ljava/util/List<Ljava/lang/String;>;" },
    { "newBuilder", NULL, "Lcom.squareup.okhttp.Headers$Builder;", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getWithNSStringArray:withNSString:", "get", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "ofWithNSStringArray:", "of", "Lcom.squareup.okhttp.Headers;", 0x89, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "namesAndValues_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.Headers$Builder;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpHeaders = { 2, "Headers", "com.squareup.okhttp", NULL, 0x11, 13, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpHeaders;
}

@end

void ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(ComSquareupOkhttpHeaders *self, ComSquareupOkhttpHeaders_Builder *builder) {
  NSObject_init(self);
  self->namesAndValues_ = [((ComSquareupOkhttpHeaders_Builder *) nil_chk(builder))->namesAndValues_ toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[((id<JavaUtilList>) nil_chk(builder->namesAndValues_)) size] type:NSString_class_()]];
}

ComSquareupOkhttpHeaders *new_ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(ComSquareupOkhttpHeaders_Builder *builder) {
  ComSquareupOkhttpHeaders *self = [ComSquareupOkhttpHeaders alloc];
  ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(self, builder);
  return self;
}

ComSquareupOkhttpHeaders *create_ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(ComSquareupOkhttpHeaders_Builder *builder) {
  return new_ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(builder);
}

void ComSquareupOkhttpHeaders_initWithNSStringArray_(ComSquareupOkhttpHeaders *self, IOSObjectArray *namesAndValues) {
  NSObject_init(self);
  self->namesAndValues_ = namesAndValues;
}

ComSquareupOkhttpHeaders *new_ComSquareupOkhttpHeaders_initWithNSStringArray_(IOSObjectArray *namesAndValues) {
  ComSquareupOkhttpHeaders *self = [ComSquareupOkhttpHeaders alloc];
  ComSquareupOkhttpHeaders_initWithNSStringArray_(self, namesAndValues);
  return self;
}

ComSquareupOkhttpHeaders *create_ComSquareupOkhttpHeaders_initWithNSStringArray_(IOSObjectArray *namesAndValues) {
  return new_ComSquareupOkhttpHeaders_initWithNSStringArray_(namesAndValues);
}

NSString *ComSquareupOkhttpHeaders_getWithNSStringArray_withNSString_(IOSObjectArray *namesAndValues, NSString *name) {
  ComSquareupOkhttpHeaders_initialize();
  for (jint i = ((IOSObjectArray *) nil_chk(namesAndValues))->size_ - 2; i >= 0; i -= 2) {
    if ([((NSString *) nil_chk(name)) equalsIgnoreCase:IOSObjectArray_Get(namesAndValues, i)]) {
      return IOSObjectArray_Get(namesAndValues, i + 1);
    }
  }
  return nil;
}

ComSquareupOkhttpHeaders *ComSquareupOkhttpHeaders_ofWithNSStringArray_(IOSObjectArray *namesAndValues) {
  ComSquareupOkhttpHeaders_initialize();
  if (namesAndValues == nil || namesAndValues->size_ % 2 != 0) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Expected alternating header names and values");
  }
  namesAndValues = [((IOSObjectArray *) nil_chk(namesAndValues)) clone];
  for (jint i = 0; i < ((IOSObjectArray *) nil_chk(namesAndValues))->size_; i++) {
    if (IOSObjectArray_Get(namesAndValues, i) == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Headers cannot be null");
    (void) IOSObjectArray_Set(namesAndValues, i, [((NSString *) nil_chk(IOSObjectArray_Get(namesAndValues, i))) trim]);
  }
  for (jint i = 0; i < namesAndValues->size_; i += 2) {
    NSString *name = IOSObjectArray_Get(namesAndValues, i);
    NSString *value = IOSObjectArray_Get(namesAndValues, i + 1);
    if (((jint) [((NSString *) nil_chk(name)) length]) == 0 || [name indexOf:0x0000] != -1 || [((NSString *) nil_chk(value)) indexOf:0x0000] != -1) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$", @"Unexpected header: ", name, @": ", value));
    }
  }
  return new_ComSquareupOkhttpHeaders_initWithNSStringArray_(namesAndValues);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpHeaders)

@implementation ComSquareupOkhttpHeaders_Builder

- (ComSquareupOkhttpHeaders_Builder *)addLineWithNSString:(NSString *)line {
  jint index = [((NSString *) nil_chk(line)) indexOfString:@":" fromIndex:1];
  if (index != -1) {
    return ComSquareupOkhttpHeaders_Builder_addLenientWithNSString_withNSString_(self, [line substring:0 endIndex:index], [line substring:index + 1]);
  }
  else if ([line hasPrefix:@":"]) {
    return ComSquareupOkhttpHeaders_Builder_addLenientWithNSString_withNSString_(self, @"", [line substring:1]);
  }
  else {
    return ComSquareupOkhttpHeaders_Builder_addLenientWithNSString_withNSString_(self, @"", line);
  }
}

- (ComSquareupOkhttpHeaders_Builder *)addWithNSString:(NSString *)name
                                         withNSString:(NSString *)value {
  if (name == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"name == null");
  if (value == nil) @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"value == null");
  if (((jint) [((NSString *) nil_chk(name)) length]) == 0 || [name indexOf:0x0000] != -1 || [((NSString *) nil_chk(value)) indexOf:0x0000] != -1) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$", @"Unexpected header: ", name, @": ", value));
  }
  return ComSquareupOkhttpHeaders_Builder_addLenientWithNSString_withNSString_(self, name, value);
}

- (ComSquareupOkhttpHeaders_Builder *)addLenientWithNSString:(NSString *)name
                                                withNSString:(NSString *)value {
  return ComSquareupOkhttpHeaders_Builder_addLenientWithNSString_withNSString_(self, name, value);
}

- (ComSquareupOkhttpHeaders_Builder *)removeAllWithNSString:(NSString *)name {
  for (jint i = 0; i < [((id<JavaUtilList>) nil_chk(namesAndValues_)) size]; i += 2) {
    if ([((NSString *) nil_chk(name)) equalsIgnoreCase:[namesAndValues_ getWithInt:i]]) {
      (void) [namesAndValues_ removeWithInt:i];
      (void) [namesAndValues_ removeWithInt:i];
      i -= 2;
    }
  }
  return self;
}

- (ComSquareupOkhttpHeaders_Builder *)setWithNSString:(NSString *)name
                                         withNSString:(NSString *)value {
  (void) [self removeAllWithNSString:name];
  (void) [self addWithNSString:name withNSString:value];
  return self;
}

- (NSString *)getWithNSString:(NSString *)name {
  for (jint i = [((id<JavaUtilList>) nil_chk(namesAndValues_)) size] - 2; i >= 0; i -= 2) {
    if ([((NSString *) nil_chk(name)) equalsIgnoreCase:[namesAndValues_ getWithInt:i]]) {
      return [namesAndValues_ getWithInt:i + 1];
    }
  }
  return nil;
}

- (ComSquareupOkhttpHeaders *)build {
  return new_ComSquareupOkhttpHeaders_initWithComSquareupOkhttpHeaders_Builder_(self);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpHeaders_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addLineWithNSString:", "addLine", "Lcom.squareup.okhttp.Headers$Builder;", 0x0, NULL, NULL },
    { "addWithNSString:withNSString:", "add", "Lcom.squareup.okhttp.Headers$Builder;", 0x1, NULL, NULL },
    { "addLenientWithNSString:withNSString:", "addLenient", "Lcom.squareup.okhttp.Headers$Builder;", 0x2, NULL, NULL },
    { "removeAllWithNSString:", "removeAll", "Lcom.squareup.okhttp.Headers$Builder;", 0x1, NULL, NULL },
    { "setWithNSString:withNSString:", "set", "Lcom.squareup.okhttp.Headers$Builder;", 0x1, NULL, NULL },
    { "getWithNSString:", "get", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "build", NULL, "Lcom.squareup.okhttp.Headers;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "namesAndValues_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/String;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpHeaders_Builder = { 2, "Builder", "com.squareup.okhttp", "Headers", 0x19, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpHeaders_Builder;
}

@end

ComSquareupOkhttpHeaders_Builder *ComSquareupOkhttpHeaders_Builder_addLenientWithNSString_withNSString_(ComSquareupOkhttpHeaders_Builder *self, NSString *name, NSString *value) {
  [((id<JavaUtilList>) nil_chk(self->namesAndValues_)) addWithId:name];
  [self->namesAndValues_ addWithId:[((NSString *) nil_chk(value)) trim]];
  return self;
}

void ComSquareupOkhttpHeaders_Builder_init(ComSquareupOkhttpHeaders_Builder *self) {
  NSObject_init(self);
  self->namesAndValues_ = new_JavaUtilArrayList_initWithInt_(20);
}

ComSquareupOkhttpHeaders_Builder *new_ComSquareupOkhttpHeaders_Builder_init() {
  ComSquareupOkhttpHeaders_Builder *self = [ComSquareupOkhttpHeaders_Builder alloc];
  ComSquareupOkhttpHeaders_Builder_init(self);
  return self;
}

ComSquareupOkhttpHeaders_Builder *create_ComSquareupOkhttpHeaders_Builder_init() {
  return new_ComSquareupOkhttpHeaders_Builder_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpHeaders_Builder)
