//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/Call.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComSquareupOkhttpCall_INCLUDE_ALL")
#ifdef ComSquareupOkhttpCall_RESTRICT
#define ComSquareupOkhttpCall_INCLUDE_ALL 0
#else
#define ComSquareupOkhttpCall_INCLUDE_ALL 1
#endif
#undef ComSquareupOkhttpCall_RESTRICT

#if !defined (ComSquareupOkhttpCall_) && (ComSquareupOkhttpCall_INCLUDE_ALL || defined(ComSquareupOkhttpCall_INCLUDE))
#define ComSquareupOkhttpCall_

@class ComSquareupOkhttpInternalHttpHttpEngine;
@class ComSquareupOkhttpOkHttpClient;
@class ComSquareupOkhttpRequest;
@class ComSquareupOkhttpResponse;
@protocol ComSquareupOkhttpCallback;

@interface ComSquareupOkhttpCall : NSObject {
 @public
  volatile_jboolean canceled_;
  ComSquareupOkhttpRequest *originalRequest_;
  ComSquareupOkhttpInternalHttpHttpEngine *engine_;
}

#pragma mark Public

- (void)cancel;

- (void)enqueueWithComSquareupOkhttpCallback:(id<ComSquareupOkhttpCallback>)responseCallback;

- (ComSquareupOkhttpResponse *)execute;

- (jboolean)isCanceled;

#pragma mark Protected

- (instancetype)initWithComSquareupOkhttpOkHttpClient:(ComSquareupOkhttpOkHttpClient *)client
                         withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)originalRequest;

#pragma mark Package-Private

- (ComSquareupOkhttpResponse *)getResponseWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
                                                           withBoolean:(jboolean)forWebSocket;

- (id)tag;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCall)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCall, originalRequest_, ComSquareupOkhttpRequest *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCall, engine_, ComSquareupOkhttpInternalHttpHttpEngine *)

FOUNDATION_EXPORT void ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall *self, ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *originalRequest);

FOUNDATION_EXPORT ComSquareupOkhttpCall *new_ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *originalRequest) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSquareupOkhttpCall *create_ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *originalRequest);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCall)

#endif

#if !defined (ComSquareupOkhttpCall_AsyncCall_) && (ComSquareupOkhttpCall_INCLUDE_ALL || defined(ComSquareupOkhttpCall_AsyncCall_INCLUDE))
#define ComSquareupOkhttpCall_AsyncCall_

#define ComSquareupOkhttpInternalNamedRunnable_RESTRICT 1
#define ComSquareupOkhttpInternalNamedRunnable_INCLUDE 1
#include "com/squareup/okhttp/internal/NamedRunnable.h"

@class ComSquareupOkhttpCall;
@class ComSquareupOkhttpRequest;

@interface ComSquareupOkhttpCall_AsyncCall : ComSquareupOkhttpInternalNamedRunnable

#pragma mark Protected

- (void)execute;

#pragma mark Package-Private

- (void)cancel;

- (ComSquareupOkhttpCall *)get;

- (NSString *)host;

- (ComSquareupOkhttpRequest *)request;

- (id)tag;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCall_AsyncCall)

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCall_AsyncCall)

#endif

#if !defined (ComSquareupOkhttpCall_ApplicationInterceptorChain_) && (ComSquareupOkhttpCall_INCLUDE_ALL || defined(ComSquareupOkhttpCall_ApplicationInterceptorChain_INCLUDE))
#define ComSquareupOkhttpCall_ApplicationInterceptorChain_

#define ComSquareupOkhttpInterceptor_RESTRICT 1
#define ComSquareupOkhttpInterceptor_Chain_INCLUDE 1
#include "com/squareup/okhttp/Interceptor.h"

@class ComSquareupOkhttpCall;
@class ComSquareupOkhttpConnection;
@class ComSquareupOkhttpRequest;
@class ComSquareupOkhttpResponse;

@interface ComSquareupOkhttpCall_ApplicationInterceptorChain : NSObject < ComSquareupOkhttpInterceptor_Chain >

#pragma mark Public

- (ComSquareupOkhttpConnection *)connection;

- (ComSquareupOkhttpResponse *)proceedWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request;

- (ComSquareupOkhttpRequest *)request;

#pragma mark Package-Private

- (instancetype)initWithComSquareupOkhttpCall:(ComSquareupOkhttpCall *)outer$
                                      withInt:(jint)index
                 withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCall_ApplicationInterceptorChain)

FOUNDATION_EXPORT void ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall_ApplicationInterceptorChain *self, ComSquareupOkhttpCall *outer$, jint index, ComSquareupOkhttpRequest *request);

FOUNDATION_EXPORT ComSquareupOkhttpCall_ApplicationInterceptorChain *new_ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall *outer$, jint index, ComSquareupOkhttpRequest *request) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSquareupOkhttpCall_ApplicationInterceptorChain *create_ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall *outer$, jint index, ComSquareupOkhttpRequest *request);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCall_ApplicationInterceptorChain)

#endif

#pragma pop_macro("ComSquareupOkhttpCall_INCLUDE_ALL")
