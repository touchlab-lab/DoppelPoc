//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/CacheControl.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComSquareupOkhttpCacheControl_INCLUDE_ALL")
#ifdef ComSquareupOkhttpCacheControl_RESTRICT
#define ComSquareupOkhttpCacheControl_INCLUDE_ALL 0
#else
#define ComSquareupOkhttpCacheControl_INCLUDE_ALL 1
#endif
#undef ComSquareupOkhttpCacheControl_RESTRICT

#if !defined (ComSquareupOkhttpCacheControl_) && (ComSquareupOkhttpCacheControl_INCLUDE_ALL || defined(ComSquareupOkhttpCacheControl_INCLUDE))
#define ComSquareupOkhttpCacheControl_

@class ComSquareupOkhttpHeaders;

@interface ComSquareupOkhttpCacheControl : NSObject

#pragma mark Public

- (jboolean)isPublic;

- (jint)maxAgeSeconds;

- (jint)maxStaleSeconds;

- (jint)minFreshSeconds;

- (jboolean)mustRevalidate;

- (jboolean)noCache;

- (jboolean)noStore;

- (jboolean)noTransform;

- (jboolean)onlyIfCached;

+ (ComSquareupOkhttpCacheControl *)parseWithComSquareupOkhttpHeaders:(ComSquareupOkhttpHeaders *)headers;

- (jint)sMaxAgeSeconds;

- (NSString *)description;

@end

J2OBJC_STATIC_INIT(ComSquareupOkhttpCacheControl)

inline ComSquareupOkhttpCacheControl *ComSquareupOkhttpCacheControl_get_FORCE_NETWORK();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComSquareupOkhttpCacheControl *ComSquareupOkhttpCacheControl_FORCE_NETWORK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpCacheControl, FORCE_NETWORK, ComSquareupOkhttpCacheControl *)

inline ComSquareupOkhttpCacheControl *ComSquareupOkhttpCacheControl_get_FORCE_CACHE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComSquareupOkhttpCacheControl *ComSquareupOkhttpCacheControl_FORCE_CACHE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpCacheControl, FORCE_CACHE, ComSquareupOkhttpCacheControl *)

FOUNDATION_EXPORT ComSquareupOkhttpCacheControl *ComSquareupOkhttpCacheControl_parseWithComSquareupOkhttpHeaders_(ComSquareupOkhttpHeaders *headers);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCacheControl)

#endif

#if !defined (ComSquareupOkhttpCacheControl_Builder_) && (ComSquareupOkhttpCacheControl_INCLUDE_ALL || defined(ComSquareupOkhttpCacheControl_Builder_INCLUDE))
#define ComSquareupOkhttpCacheControl_Builder_

@class ComSquareupOkhttpCacheControl;
@class JavaUtilConcurrentTimeUnit;

@interface ComSquareupOkhttpCacheControl_Builder : NSObject {
 @public
  jboolean noCache_;
  jboolean noStore_;
  jint maxAgeSeconds_;
  jint maxStaleSeconds_;
  jint minFreshSeconds_;
  jboolean onlyIfCached_;
  jboolean noTransform_;
}

#pragma mark Public

- (instancetype)init;

- (ComSquareupOkhttpCacheControl *)build;

- (ComSquareupOkhttpCacheControl_Builder *)maxAgeWithInt:(jint)maxAge
                          withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

- (ComSquareupOkhttpCacheControl_Builder *)maxStaleWithInt:(jint)maxStale
                            withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

- (ComSquareupOkhttpCacheControl_Builder *)minFreshWithInt:(jint)minFresh
                            withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

- (ComSquareupOkhttpCacheControl_Builder *)noCache;

- (ComSquareupOkhttpCacheControl_Builder *)noStore;

- (ComSquareupOkhttpCacheControl_Builder *)noTransform;

- (ComSquareupOkhttpCacheControl_Builder *)onlyIfCached;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCacheControl_Builder)

FOUNDATION_EXPORT void ComSquareupOkhttpCacheControl_Builder_init(ComSquareupOkhttpCacheControl_Builder *self);

FOUNDATION_EXPORT ComSquareupOkhttpCacheControl_Builder *new_ComSquareupOkhttpCacheControl_Builder_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSquareupOkhttpCacheControl_Builder *create_ComSquareupOkhttpCacheControl_Builder_init();

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCacheControl_Builder)

#endif

#pragma pop_macro("ComSquareupOkhttpCacheControl_INCLUDE_ALL")
