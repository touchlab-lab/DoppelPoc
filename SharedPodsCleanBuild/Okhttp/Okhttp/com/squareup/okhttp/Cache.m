//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/Cache.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Cache.h"
#include "com/squareup/okhttp/Handshake.h"
#include "com/squareup/okhttp/Headers.h"
#include "com/squareup/okhttp/MediaType.h"
#include "com/squareup/okhttp/Protocol.h"
#include "com/squareup/okhttp/Request.h"
#include "com/squareup/okhttp/Response.h"
#include "com/squareup/okhttp/ResponseBody.h"
#include "com/squareup/okhttp/internal/DiskLruCache.h"
#include "com/squareup/okhttp/internal/InternalCache.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "com/squareup/okhttp/internal/http/CacheRequest.h"
#include "com/squareup/okhttp/internal/http/CacheStrategy.h"
#include "com/squareup/okhttp/internal/http/HttpMethod.h"
#include "com/squareup/okhttp/internal/http/OkHeaders.h"
#include "com/squareup/okhttp/internal/http/StatusLine.h"
#include "java/io/ByteArrayInputStream.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/security/cert/Certificate.h"
#include "java/security/cert/CertificateEncodingException.h"
#include "java/security/cert/CertificateException.h"
#include "java/security/cert/CertificateFactory.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/NoSuchElementException.h"
#include "okio/BufferedSink.h"
#include "okio/BufferedSource.h"
#include "okio/ByteString.h"
#include "okio/ForwardingSink.h"
#include "okio/ForwardingSource.h"
#include "okio/Okio.h"
#include "okio/Sink.h"
#include "okio/Source.h"

@interface ComSquareupOkhttpCache () {
 @public
  ComSquareupOkhttpInternalDiskLruCache *cache_;
  jint writeSuccessCount_;
  jint writeAbortCount_;
  jint networkCount_;
  jint hitCount_;
  jint requestCount_;
}

+ (NSString *)urlToKeyWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request;

- (id<ComSquareupOkhttpInternalHttpCacheRequest>)putWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response;

- (void)removeWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request;

- (void)updateWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cached
              withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)network;

- (void)abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)editor;

- (void)trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy:(ComSquareupOkhttpInternalHttpCacheStrategy *)cacheStrategy;

- (void)trackConditionalCacheHit;

+ (jint)readIntWithOkioBufferedSource:(id<OkioBufferedSource>)source;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache, cache_, ComSquareupOkhttpInternalDiskLruCache *)

inline jint ComSquareupOkhttpCache_get_VERSION();
#define ComSquareupOkhttpCache_VERSION 201105
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpCache, VERSION, jint)

inline jint ComSquareupOkhttpCache_get_ENTRY_METADATA();
#define ComSquareupOkhttpCache_ENTRY_METADATA 0
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpCache, ENTRY_METADATA, jint)

inline jint ComSquareupOkhttpCache_get_ENTRY_BODY();
#define ComSquareupOkhttpCache_ENTRY_BODY 1
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpCache, ENTRY_BODY, jint)

inline jint ComSquareupOkhttpCache_get_ENTRY_COUNT();
#define ComSquareupOkhttpCache_ENTRY_COUNT 2
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpCache, ENTRY_COUNT, jint)

__attribute__((unused)) static NSString *ComSquareupOkhttpCache_urlToKeyWithComSquareupOkhttpRequest_(ComSquareupOkhttpRequest *request);

__attribute__((unused)) static id<ComSquareupOkhttpInternalHttpCacheRequest> ComSquareupOkhttpCache_putWithComSquareupOkhttpResponse_(ComSquareupOkhttpCache *self, ComSquareupOkhttpResponse *response);

__attribute__((unused)) static void ComSquareupOkhttpCache_removeWithComSquareupOkhttpRequest_(ComSquareupOkhttpCache *self, ComSquareupOkhttpRequest *request);

__attribute__((unused)) static void ComSquareupOkhttpCache_updateWithComSquareupOkhttpResponse_withComSquareupOkhttpResponse_(ComSquareupOkhttpCache *self, ComSquareupOkhttpResponse *cached, ComSquareupOkhttpResponse *network);

__attribute__((unused)) static void ComSquareupOkhttpCache_abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache *self, ComSquareupOkhttpInternalDiskLruCache_Editor *editor);

__attribute__((unused)) static void ComSquareupOkhttpCache_trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy_(ComSquareupOkhttpCache *self, ComSquareupOkhttpInternalHttpCacheStrategy *cacheStrategy);

__attribute__((unused)) static void ComSquareupOkhttpCache_trackConditionalCacheHit(ComSquareupOkhttpCache *self);

__attribute__((unused)) static jint ComSquareupOkhttpCache_readIntWithOkioBufferedSource_(id<OkioBufferedSource> source);

@interface ComSquareupOkhttpCache_CacheRequestImpl : NSObject < ComSquareupOkhttpInternalHttpCacheRequest > {
 @public
  ComSquareupOkhttpCache *this$0_;
  ComSquareupOkhttpInternalDiskLruCache_Editor *editor_;
  id<OkioSink> cacheOut_;
  jboolean done_;
  id<OkioSink> body_;
}

- (instancetype)initWithComSquareupOkhttpCache:(ComSquareupOkhttpCache *)outer$
withComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)editor;

- (void)abort;

- (id<OkioSink>)body;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCache_CacheRequestImpl)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheRequestImpl, this$0_, ComSquareupOkhttpCache *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheRequestImpl, editor_, ComSquareupOkhttpInternalDiskLruCache_Editor *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheRequestImpl, cacheOut_, id<OkioSink>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheRequestImpl, body_, id<OkioSink>)

__attribute__((unused)) static void ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache_CacheRequestImpl *self, ComSquareupOkhttpCache *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *editor);

__attribute__((unused)) static ComSquareupOkhttpCache_CacheRequestImpl *new_ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *editor) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_CacheRequestImpl *create_ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *editor);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCache_CacheRequestImpl)

@interface ComSquareupOkhttpCache_CacheRequestImpl_$1 : OkioForwardingSink {
 @public
  ComSquareupOkhttpCache_CacheRequestImpl *this$0_;
  ComSquareupOkhttpInternalDiskLruCache_Editor *val$editor_;
}

- (void)close;

- (instancetype)initWithComSquareupOkhttpCache_CacheRequestImpl:(ComSquareupOkhttpCache_CacheRequestImpl *)outer$
               withComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)capture$0
                                                   withOkioSink:(id<OkioSink>)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCache_CacheRequestImpl_$1)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheRequestImpl_$1, this$0_, ComSquareupOkhttpCache_CacheRequestImpl *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheRequestImpl_$1, val$editor_, ComSquareupOkhttpInternalDiskLruCache_Editor *)

__attribute__((unused)) static void ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(ComSquareupOkhttpCache_CacheRequestImpl_$1 *self, ComSquareupOkhttpCache_CacheRequestImpl *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *capture$0, id<OkioSink> arg$0);

__attribute__((unused)) static ComSquareupOkhttpCache_CacheRequestImpl_$1 *new_ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(ComSquareupOkhttpCache_CacheRequestImpl *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *capture$0, id<OkioSink> arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_CacheRequestImpl_$1 *create_ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(ComSquareupOkhttpCache_CacheRequestImpl *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *capture$0, id<OkioSink> arg$0);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCache_CacheRequestImpl_$1)

@interface ComSquareupOkhttpCache_Entry : NSObject {
 @public
  NSString *url_;
  ComSquareupOkhttpHeaders *varyHeaders_;
  NSString *requestMethod_;
  ComSquareupOkhttpProtocol *protocol_;
  jint code_;
  NSString *message_;
  ComSquareupOkhttpHeaders *responseHeaders_;
  ComSquareupOkhttpHandshake *handshake_;
}

- (instancetype)initWithOkioSource:(id<OkioSource>)inArg;

- (instancetype)initWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response;

- (void)writeToWithComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)editor;

- (jboolean)isHttps;

- (id<JavaUtilList>)readCertificateListWithOkioBufferedSource:(id<OkioBufferedSource>)source;

- (void)writeCertArrayWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                          withJavaUtilList:(id<JavaUtilList>)certificates;

- (jboolean)matchesWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
                  withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response;

- (ComSquareupOkhttpResponse *)responseWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
                 withComSquareupOkhttpInternalDiskLruCache_Snapshot:(ComSquareupOkhttpInternalDiskLruCache_Snapshot *)snapshot;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCache_Entry)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_Entry, url_, NSString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_Entry, varyHeaders_, ComSquareupOkhttpHeaders *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_Entry, requestMethod_, NSString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_Entry, protocol_, ComSquareupOkhttpProtocol *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_Entry, message_, NSString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_Entry, responseHeaders_, ComSquareupOkhttpHeaders *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_Entry, handshake_, ComSquareupOkhttpHandshake *)

__attribute__((unused)) static void ComSquareupOkhttpCache_Entry_initWithOkioSource_(ComSquareupOkhttpCache_Entry *self, id<OkioSource> inArg);

__attribute__((unused)) static ComSquareupOkhttpCache_Entry *new_ComSquareupOkhttpCache_Entry_initWithOkioSource_(id<OkioSource> inArg) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_Entry *create_ComSquareupOkhttpCache_Entry_initWithOkioSource_(id<OkioSource> inArg);

__attribute__((unused)) static void ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(ComSquareupOkhttpCache_Entry *self, ComSquareupOkhttpResponse *response);

__attribute__((unused)) static ComSquareupOkhttpCache_Entry *new_ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_Entry *create_ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response);

__attribute__((unused)) static jboolean ComSquareupOkhttpCache_Entry_isHttps(ComSquareupOkhttpCache_Entry *self);

__attribute__((unused)) static id<JavaUtilList> ComSquareupOkhttpCache_Entry_readCertificateListWithOkioBufferedSource_(ComSquareupOkhttpCache_Entry *self, id<OkioBufferedSource> source);

__attribute__((unused)) static void ComSquareupOkhttpCache_Entry_writeCertArrayWithOkioBufferedSink_withJavaUtilList_(ComSquareupOkhttpCache_Entry *self, id<OkioBufferedSink> sink, id<JavaUtilList> certificates);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCache_Entry)

@interface ComSquareupOkhttpCache_CacheResponseBody : ComSquareupOkhttpResponseBody {
 @public
  ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot_;
  id<OkioBufferedSource> bodySource_;
  NSString *contentType_;
  NSString *contentLength_;
}

- (instancetype)initWithComSquareupOkhttpInternalDiskLruCache_Snapshot:(ComSquareupOkhttpInternalDiskLruCache_Snapshot *)snapshot
                                                          withNSString:(NSString *)contentType
                                                          withNSString:(NSString *)contentLength;

- (ComSquareupOkhttpMediaType *)contentType;

- (jlong)contentLength;

- (id<OkioBufferedSource>)source;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCache_CacheResponseBody)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheResponseBody, snapshot_, ComSquareupOkhttpInternalDiskLruCache_Snapshot *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheResponseBody, bodySource_, id<OkioBufferedSource>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheResponseBody, contentType_, NSString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheResponseBody, contentLength_, NSString *)

__attribute__((unused)) static void ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(ComSquareupOkhttpCache_CacheResponseBody *self, ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot, NSString *contentType, NSString *contentLength);

__attribute__((unused)) static ComSquareupOkhttpCache_CacheResponseBody *new_ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot, NSString *contentType, NSString *contentLength) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_CacheResponseBody *create_ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot, NSString *contentType, NSString *contentLength);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCache_CacheResponseBody)

@interface ComSquareupOkhttpCache_CacheResponseBody_$1 : OkioForwardingSource {
 @public
  ComSquareupOkhttpInternalDiskLruCache_Snapshot *val$snapshot_;
}

- (void)close;

- (instancetype)initWithComSquareupOkhttpInternalDiskLruCache_Snapshot:(ComSquareupOkhttpInternalDiskLruCache_Snapshot *)capture$0
                                                        withOkioSource:(id<OkioSource>)arg$0;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCache_CacheResponseBody_$1)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_CacheResponseBody_$1, val$snapshot_, ComSquareupOkhttpInternalDiskLruCache_Snapshot *)

__attribute__((unused)) static void ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(ComSquareupOkhttpCache_CacheResponseBody_$1 *self, ComSquareupOkhttpInternalDiskLruCache_Snapshot *capture$0, id<OkioSource> arg$0);

__attribute__((unused)) static ComSquareupOkhttpCache_CacheResponseBody_$1 *new_ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *capture$0, id<OkioSource> arg$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_CacheResponseBody_$1 *create_ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *capture$0, id<OkioSource> arg$0);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCache_CacheResponseBody_$1)

@interface ComSquareupOkhttpCache_$1 : NSObject < ComSquareupOkhttpInternalInternalCache > {
 @public
  ComSquareupOkhttpCache *this$0_;
}

- (ComSquareupOkhttpResponse *)getWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request;

- (id<ComSquareupOkhttpInternalHttpCacheRequest>)putWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response;

- (void)removeWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request;

- (void)updateWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cached
              withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)network;

- (void)trackConditionalCacheHit;

- (void)trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy:(ComSquareupOkhttpInternalHttpCacheStrategy *)cacheStrategy;

- (instancetype)initWithComSquareupOkhttpCache:(ComSquareupOkhttpCache *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCache_$1)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_$1, this$0_, ComSquareupOkhttpCache *)

__attribute__((unused)) static void ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache_$1 *self, ComSquareupOkhttpCache *outer$);

__attribute__((unused)) static ComSquareupOkhttpCache_$1 *new_ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_$1 *create_ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCache_$1)

@interface ComSquareupOkhttpCache_$2 : NSObject < JavaUtilIterator > {
 @public
  id<JavaUtilIterator> delegate_;
  NSString *nextUrl_;
  jboolean canRemove_;
}

- (jboolean)hasNext;

- (NSString *)next;

- (void)remove;

- (instancetype)initWithComSquareupOkhttpCache:(ComSquareupOkhttpCache *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpCache_$2)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_$2, delegate_, id<JavaUtilIterator>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCache_$2, nextUrl_, NSString *)

__attribute__((unused)) static void ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache_$2 *self, ComSquareupOkhttpCache *outer$);

__attribute__((unused)) static ComSquareupOkhttpCache_$2 *new_ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCache_$2 *create_ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpCache_$2)

@implementation ComSquareupOkhttpCache

- (instancetype)initWithJavaIoFile:(JavaIoFile *)directory
                          withLong:(jlong)maxSize {
  ComSquareupOkhttpCache_initWithJavaIoFile_withLong_(self, directory, maxSize);
  return self;
}

+ (NSString *)urlToKeyWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  return ComSquareupOkhttpCache_urlToKeyWithComSquareupOkhttpRequest_(request);
}

- (ComSquareupOkhttpResponse *)getWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  NSString *key = ComSquareupOkhttpCache_urlToKeyWithComSquareupOkhttpRequest_(request);
  ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot;
  ComSquareupOkhttpCache_Entry *entry_;
  @try {
    snapshot = [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) getWithNSString:key];
    if (snapshot == nil) {
      return nil;
    }
  }
  @catch (JavaIoIOException *e) {
    return nil;
  }
  @try {
    entry_ = new_ComSquareupOkhttpCache_Entry_initWithOkioSource_([((ComSquareupOkhttpInternalDiskLruCache_Snapshot *) nil_chk(snapshot)) getSourceWithInt:ComSquareupOkhttpCache_ENTRY_METADATA]);
  }
  @catch (JavaIoIOException *e) {
    ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaIoCloseable_(snapshot);
    return nil;
  }
  ComSquareupOkhttpResponse *response = [((ComSquareupOkhttpCache_Entry *) nil_chk(entry_)) responseWithComSquareupOkhttpRequest:request withComSquareupOkhttpInternalDiskLruCache_Snapshot:snapshot];
  if (![entry_ matchesWithComSquareupOkhttpRequest:request withComSquareupOkhttpResponse:response]) {
    ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaIoCloseable_([((ComSquareupOkhttpResponse *) nil_chk(response)) body]);
    return nil;
  }
  return response;
}

- (id<ComSquareupOkhttpInternalHttpCacheRequest>)putWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return ComSquareupOkhttpCache_putWithComSquareupOkhttpResponse_(self, response);
}

- (void)removeWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  ComSquareupOkhttpCache_removeWithComSquareupOkhttpRequest_(self, request);
}

- (void)updateWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cached
              withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)network {
  ComSquareupOkhttpCache_updateWithComSquareupOkhttpResponse_withComSquareupOkhttpResponse_(self, cached, network);
}

- (void)abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)editor {
  ComSquareupOkhttpCache_abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor_(self, editor);
}

- (void)delete__ {
  [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) delete__];
}

- (void)evictAll {
  [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) evictAll];
}

- (id<JavaUtilIterator>)urls {
  return new_ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(self);
}

- (jint)getWriteAbortCount {
  @synchronized(self) {
    return writeAbortCount_;
  }
}

- (jint)getWriteSuccessCount {
  @synchronized(self) {
    return writeSuccessCount_;
  }
}

- (jlong)getSize {
  return [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) size];
}

- (jlong)getMaxSize {
  return [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) getMaxSize];
}

- (void)flush {
  [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) flush];
}

- (void)close {
  [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) close];
}

- (JavaIoFile *)getDirectory {
  return [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) getDirectory];
}

- (jboolean)isClosed {
  return [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(cache_)) isClosed];
}

- (void)trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy:(ComSquareupOkhttpInternalHttpCacheStrategy *)cacheStrategy {
  ComSquareupOkhttpCache_trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy_(self, cacheStrategy);
}

- (void)trackConditionalCacheHit {
  ComSquareupOkhttpCache_trackConditionalCacheHit(self);
}

- (jint)getNetworkCount {
  @synchronized(self) {
    return networkCount_;
  }
}

- (jint)getHitCount {
  @synchronized(self) {
    return hitCount_;
  }
}

- (jint)getRequestCount {
  @synchronized(self) {
    return requestCount_;
  }
}

+ (jint)readIntWithOkioBufferedSource:(id<OkioBufferedSource>)source {
  return ComSquareupOkhttpCache_readIntWithOkioBufferedSource_(source);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoFile:withLong:", "Cache", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "urlToKeyWithComSquareupOkhttpRequest:", "urlToKey", "Ljava.lang.String;", 0xa, NULL, NULL },
    { "getWithComSquareupOkhttpRequest:", "get", "Lcom.squareup.okhttp.Response;", 0x0, NULL, NULL },
    { "putWithComSquareupOkhttpResponse:", "put", "Lcom.squareup.okhttp.internal.http.CacheRequest;", 0x2, "Ljava.io.IOException;", NULL },
    { "removeWithComSquareupOkhttpRequest:", "remove", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "updateWithComSquareupOkhttpResponse:withComSquareupOkhttpResponse:", "update", "V", 0x2, NULL, NULL },
    { "abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor:", "abortQuietly", "V", 0x2, NULL, NULL },
    { "delete__", "delete", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "evictAll", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "urls", NULL, "Ljava.util.Iterator;", 0x1, NULL, "()Ljava/util/Iterator<Ljava/lang/String;>;" },
    { "getWriteAbortCount", NULL, "I", 0x21, NULL, NULL },
    { "getWriteSuccessCount", NULL, "I", 0x21, NULL, NULL },
    { "getSize", NULL, "J", 0x1, NULL, NULL },
    { "getMaxSize", NULL, "J", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "getDirectory", NULL, "Ljava.io.File;", 0x1, NULL, NULL },
    { "isClosed", NULL, "Z", 0x1, NULL, NULL },
    { "trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy:", "trackResponse", "V", 0x22, NULL, NULL },
    { "trackConditionalCacheHit", NULL, "V", 0x22, NULL, NULL },
    { "getNetworkCount", NULL, "I", 0x21, NULL, NULL },
    { "getHitCount", NULL, "I", 0x21, NULL, NULL },
    { "getRequestCount", NULL, "I", 0x21, NULL, NULL },
    { "readIntWithOkioBufferedSource:", "readInt", "I", 0xa, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "VERSION", "VERSION", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpCache_VERSION },
    { "ENTRY_METADATA", "ENTRY_METADATA", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpCache_ENTRY_METADATA },
    { "ENTRY_BODY", "ENTRY_BODY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpCache_ENTRY_BODY },
    { "ENTRY_COUNT", "ENTRY_COUNT", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpCache_ENTRY_COUNT },
    { "internalCache_", NULL, 0x10, "Lcom.squareup.okhttp.internal.InternalCache;", NULL, NULL, .constantValue.asLong = 0 },
    { "cache_", NULL, 0x12, "Lcom.squareup.okhttp.internal.DiskLruCache;", NULL, NULL, .constantValue.asLong = 0 },
    { "writeSuccessCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "writeAbortCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "networkCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "hitCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "requestCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.Cache$CacheRequestImpl;", "Lcom.squareup.okhttp.Cache$Entry;", "Lcom.squareup.okhttp.Cache$CacheResponseBody;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpCache = { 2, "Cache", "com.squareup.okhttp", NULL, 0x11, 24, methods, 11, fields, 0, NULL, 3, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpCache;
}

@end

void ComSquareupOkhttpCache_initWithJavaIoFile_withLong_(ComSquareupOkhttpCache *self, JavaIoFile *directory, jlong maxSize) {
  NSObject_init(self);
  self->internalCache_ = new_ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(self);
  self->cache_ = ComSquareupOkhttpInternalDiskLruCache_openWithJavaIoFile_withInt_withInt_withLong_(directory, ComSquareupOkhttpCache_VERSION, ComSquareupOkhttpCache_ENTRY_COUNT, maxSize);
}

ComSquareupOkhttpCache *new_ComSquareupOkhttpCache_initWithJavaIoFile_withLong_(JavaIoFile *directory, jlong maxSize) {
  ComSquareupOkhttpCache *self = [ComSquareupOkhttpCache alloc];
  ComSquareupOkhttpCache_initWithJavaIoFile_withLong_(self, directory, maxSize);
  return self;
}

ComSquareupOkhttpCache *create_ComSquareupOkhttpCache_initWithJavaIoFile_withLong_(JavaIoFile *directory, jlong maxSize) {
  return new_ComSquareupOkhttpCache_initWithJavaIoFile_withLong_(directory, maxSize);
}

NSString *ComSquareupOkhttpCache_urlToKeyWithComSquareupOkhttpRequest_(ComSquareupOkhttpRequest *request) {
  ComSquareupOkhttpCache_initialize();
  return ComSquareupOkhttpInternalUtil_md5HexWithNSString_([((ComSquareupOkhttpRequest *) nil_chk(request)) urlString]);
}

id<ComSquareupOkhttpInternalHttpCacheRequest> ComSquareupOkhttpCache_putWithComSquareupOkhttpResponse_(ComSquareupOkhttpCache *self, ComSquareupOkhttpResponse *response) {
  NSString *requestMethod = [((ComSquareupOkhttpRequest *) nil_chk([((ComSquareupOkhttpResponse *) nil_chk(response)) request])) method];
  if (ComSquareupOkhttpInternalHttpHttpMethod_invalidatesCacheWithNSString_([((ComSquareupOkhttpRequest *) nil_chk([response request])) method])) {
    @try {
      ComSquareupOkhttpCache_removeWithComSquareupOkhttpRequest_(self, [response request]);
    }
    @catch (JavaIoIOException *ignored) {
    }
    return nil;
  }
  if (![((NSString *) nil_chk(requestMethod)) isEqual:@"GET"]) {
    return nil;
  }
  if (ComSquareupOkhttpInternalHttpOkHeaders_hasVaryAllWithComSquareupOkhttpResponse_(response)) {
    return nil;
  }
  ComSquareupOkhttpCache_Entry *entry_ = new_ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(response);
  ComSquareupOkhttpInternalDiskLruCache_Editor *editor = nil;
  @try {
    editor = [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(self->cache_)) editWithNSString:ComSquareupOkhttpCache_urlToKeyWithComSquareupOkhttpRequest_([response request])];
    if (editor == nil) {
      return nil;
    }
    [entry_ writeToWithComSquareupOkhttpInternalDiskLruCache_Editor:editor];
    return new_ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(self, editor);
  }
  @catch (JavaIoIOException *e) {
    ComSquareupOkhttpCache_abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor_(self, editor);
    return nil;
  }
}

void ComSquareupOkhttpCache_removeWithComSquareupOkhttpRequest_(ComSquareupOkhttpCache *self, ComSquareupOkhttpRequest *request) {
  [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(self->cache_)) removeWithNSString:ComSquareupOkhttpCache_urlToKeyWithComSquareupOkhttpRequest_(request)];
}

void ComSquareupOkhttpCache_updateWithComSquareupOkhttpResponse_withComSquareupOkhttpResponse_(ComSquareupOkhttpCache *self, ComSquareupOkhttpResponse *cached, ComSquareupOkhttpResponse *network) {
  ComSquareupOkhttpCache_Entry *entry_ = new_ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(network);
  ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot = ((ComSquareupOkhttpCache_CacheResponseBody *) nil_chk(((ComSquareupOkhttpCache_CacheResponseBody *) cast_chk([((ComSquareupOkhttpResponse *) nil_chk(cached)) body], [ComSquareupOkhttpCache_CacheResponseBody class]))))->snapshot_;
  ComSquareupOkhttpInternalDiskLruCache_Editor *editor = nil;
  @try {
    editor = [((ComSquareupOkhttpInternalDiskLruCache_Snapshot *) nil_chk(snapshot)) edit];
    if (editor != nil) {
      [entry_ writeToWithComSquareupOkhttpInternalDiskLruCache_Editor:editor];
      [editor commit];
    }
  }
  @catch (JavaIoIOException *e) {
    ComSquareupOkhttpCache_abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor_(self, editor);
  }
}

void ComSquareupOkhttpCache_abortQuietlyWithComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache *self, ComSquareupOkhttpInternalDiskLruCache_Editor *editor) {
  @try {
    if (editor != nil) {
      [editor abort];
    }
  }
  @catch (JavaIoIOException *ignored) {
  }
}

void ComSquareupOkhttpCache_trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy_(ComSquareupOkhttpCache *self, ComSquareupOkhttpInternalHttpCacheStrategy *cacheStrategy) {
  @synchronized(self) {
    self->requestCount_++;
    if (((ComSquareupOkhttpInternalHttpCacheStrategy *) nil_chk(cacheStrategy))->networkRequest_ != nil) {
      self->networkCount_++;
    }
    else if (cacheStrategy->cacheResponse_ != nil) {
      self->hitCount_++;
    }
  }
}

void ComSquareupOkhttpCache_trackConditionalCacheHit(ComSquareupOkhttpCache *self) {
  @synchronized(self) {
    self->hitCount_++;
  }
}

jint ComSquareupOkhttpCache_readIntWithOkioBufferedSource_(id<OkioBufferedSource> source) {
  ComSquareupOkhttpCache_initialize();
  NSString *line = [((id<OkioBufferedSource>) nil_chk(source)) readUtf8LineStrict];
  @try {
    return JavaLangInteger_parseIntWithNSString_(line);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$C", @"Expected an integer but was \"", line, '"'));
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache)

@implementation ComSquareupOkhttpCache_CacheRequestImpl

- (instancetype)initWithComSquareupOkhttpCache:(ComSquareupOkhttpCache *)outer$
withComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)editor {
  ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(self, outer$, editor);
  return self;
}

- (void)abort {
  @synchronized(this$0_) {
    if (done_) {
      return;
    }
    done_ = true;
    this$0_->writeAbortCount_++;
  }
  ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaIoCloseable_(cacheOut_);
  @try {
    [((ComSquareupOkhttpInternalDiskLruCache_Editor *) nil_chk(editor_)) abort];
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (id<OkioSink>)body {
  return body_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpCache:withComSquareupOkhttpInternalDiskLruCache_Editor:", "CacheRequestImpl", NULL, 0x1, NULL, NULL },
    { "abort", NULL, "V", 0x1, NULL, NULL },
    { "body", NULL, "Lokio.Sink;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.Cache;", NULL, NULL, .constantValue.asLong = 0 },
    { "editor_", NULL, 0x12, "Lcom.squareup.okhttp.internal.DiskLruCache$Editor;", NULL, NULL, .constantValue.asLong = 0 },
    { "cacheOut_", NULL, 0x2, "Lokio.Sink;", NULL, NULL, .constantValue.asLong = 0 },
    { "done_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "body_", NULL, 0x2, "Lokio.Sink;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpCache_CacheRequestImpl = { 2, "CacheRequestImpl", "com.squareup.okhttp", "Cache", 0x12, 3, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpCache_CacheRequestImpl;
}

@end

void ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache_CacheRequestImpl *self, ComSquareupOkhttpCache *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *editor) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->editor_ = editor;
  self->cacheOut_ = [((ComSquareupOkhttpInternalDiskLruCache_Editor *) nil_chk(editor)) newSinkWithInt:ComSquareupOkhttpCache_ENTRY_BODY];
  self->body_ = new_ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(self, editor, self->cacheOut_);
}

ComSquareupOkhttpCache_CacheRequestImpl *new_ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *editor) {
  ComSquareupOkhttpCache_CacheRequestImpl *self = [ComSquareupOkhttpCache_CacheRequestImpl alloc];
  ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(self, outer$, editor);
  return self;
}

ComSquareupOkhttpCache_CacheRequestImpl *create_ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(ComSquareupOkhttpCache *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *editor) {
  return new_ComSquareupOkhttpCache_CacheRequestImpl_initWithComSquareupOkhttpCache_withComSquareupOkhttpInternalDiskLruCache_Editor_(outer$, editor);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache_CacheRequestImpl)

@implementation ComSquareupOkhttpCache_CacheRequestImpl_$1

- (void)close {
  @synchronized(this$0_->this$0_) {
    if (this$0_->done_) {
      return;
    }
    this$0_->done_ = true;
    this$0_->this$0_->writeSuccessCount_++;
  }
  [super close];
  [((ComSquareupOkhttpInternalDiskLruCache_Editor *) nil_chk(val$editor_)) commit];
}

- (instancetype)initWithComSquareupOkhttpCache_CacheRequestImpl:(ComSquareupOkhttpCache_CacheRequestImpl *)outer$
               withComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)capture$0
                                                   withOkioSink:(id<OkioSink>)arg$0 {
  ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(self, outer$, capture$0, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpCache_CacheRequestImpl:withComSquareupOkhttpInternalDiskLruCache_Editor:withOkioSink:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.Cache$CacheRequestImpl;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$editor_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.DiskLruCache$Editor;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpCache_CacheRequestImpl", "initWithComSquareupOkhttpInternalDiskLruCache_Editor:" };
  static const J2ObjcClassInfo _ComSquareupOkhttpCache_CacheRequestImpl_$1 = { 2, "", "com.squareup.okhttp", "Cache$CacheRequestImpl", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComSquareupOkhttpCache_CacheRequestImpl_$1;
}

@end

void ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(ComSquareupOkhttpCache_CacheRequestImpl_$1 *self, ComSquareupOkhttpCache_CacheRequestImpl *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *capture$0, id<OkioSink> arg$0) {
  self->this$0_ = outer$;
  self->val$editor_ = capture$0;
  OkioForwardingSink_initWithOkioSink_(self, arg$0);
}

ComSquareupOkhttpCache_CacheRequestImpl_$1 *new_ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(ComSquareupOkhttpCache_CacheRequestImpl *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *capture$0, id<OkioSink> arg$0) {
  ComSquareupOkhttpCache_CacheRequestImpl_$1 *self = [ComSquareupOkhttpCache_CacheRequestImpl_$1 alloc];
  ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(self, outer$, capture$0, arg$0);
  return self;
}

ComSquareupOkhttpCache_CacheRequestImpl_$1 *create_ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(ComSquareupOkhttpCache_CacheRequestImpl *outer$, ComSquareupOkhttpInternalDiskLruCache_Editor *capture$0, id<OkioSink> arg$0) {
  return new_ComSquareupOkhttpCache_CacheRequestImpl_$1_initWithComSquareupOkhttpCache_CacheRequestImpl_withComSquareupOkhttpInternalDiskLruCache_Editor_withOkioSink_(outer$, capture$0, arg$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache_CacheRequestImpl_$1)

@implementation ComSquareupOkhttpCache_Entry

- (instancetype)initWithOkioSource:(id<OkioSource>)inArg {
  ComSquareupOkhttpCache_Entry_initWithOkioSource_(self, inArg);
  return self;
}

- (instancetype)initWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(self, response);
  return self;
}

- (void)writeToWithComSquareupOkhttpInternalDiskLruCache_Editor:(ComSquareupOkhttpInternalDiskLruCache_Editor *)editor {
  id<OkioBufferedSink> sink = OkioOkio_bufferWithOkioSink_([((ComSquareupOkhttpInternalDiskLruCache_Editor *) nil_chk(editor)) newSinkWithInt:ComSquareupOkhttpCache_ENTRY_METADATA]);
  (void) [((id<OkioBufferedSink>) nil_chk(sink)) writeUtf8WithNSString:url_];
  (void) [sink writeByteWithInt:0x000a];
  (void) [sink writeUtf8WithNSString:requestMethod_];
  (void) [sink writeByteWithInt:0x000a];
  (void) [sink writeUtf8WithNSString:JavaLangInteger_toStringWithInt_([((ComSquareupOkhttpHeaders *) nil_chk(varyHeaders_)) size])];
  (void) [sink writeByteWithInt:0x000a];
  for (jint i = 0, size = [varyHeaders_ size]; i < size; i++) {
    (void) [sink writeUtf8WithNSString:[varyHeaders_ nameWithInt:i]];
    (void) [sink writeUtf8WithNSString:@": "];
    (void) [sink writeUtf8WithNSString:[varyHeaders_ valueWithInt:i]];
    (void) [sink writeByteWithInt:0x000a];
  }
  (void) [sink writeUtf8WithNSString:[new_ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(protocol_, code_, message_) description]];
  (void) [sink writeByteWithInt:0x000a];
  (void) [sink writeUtf8WithNSString:JavaLangInteger_toStringWithInt_([((ComSquareupOkhttpHeaders *) nil_chk(responseHeaders_)) size])];
  (void) [sink writeByteWithInt:0x000a];
  for (jint i = 0, size = [responseHeaders_ size]; i < size; i++) {
    (void) [sink writeUtf8WithNSString:[responseHeaders_ nameWithInt:i]];
    (void) [sink writeUtf8WithNSString:@": "];
    (void) [sink writeUtf8WithNSString:[responseHeaders_ valueWithInt:i]];
    (void) [sink writeByteWithInt:0x000a];
  }
  if (ComSquareupOkhttpCache_Entry_isHttps(self)) {
    (void) [sink writeByteWithInt:0x000a];
    (void) [sink writeUtf8WithNSString:[((ComSquareupOkhttpHandshake *) nil_chk(handshake_)) cipherSuite]];
    (void) [sink writeByteWithInt:0x000a];
    ComSquareupOkhttpCache_Entry_writeCertArrayWithOkioBufferedSink_withJavaUtilList_(self, sink, [handshake_ peerCertificates]);
    ComSquareupOkhttpCache_Entry_writeCertArrayWithOkioBufferedSink_withJavaUtilList_(self, sink, [handshake_ localCertificates]);
  }
  [sink close];
}

- (jboolean)isHttps {
  return ComSquareupOkhttpCache_Entry_isHttps(self);
}

- (id<JavaUtilList>)readCertificateListWithOkioBufferedSource:(id<OkioBufferedSource>)source {
  return ComSquareupOkhttpCache_Entry_readCertificateListWithOkioBufferedSource_(self, source);
}

- (void)writeCertArrayWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                          withJavaUtilList:(id<JavaUtilList>)certificates {
  ComSquareupOkhttpCache_Entry_writeCertArrayWithOkioBufferedSink_withJavaUtilList_(self, sink, certificates);
}

- (jboolean)matchesWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
                  withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return [((NSString *) nil_chk(url_)) isEqual:[((ComSquareupOkhttpRequest *) nil_chk(request)) urlString]] && [((NSString *) nil_chk(requestMethod_)) isEqual:[request method]] && ComSquareupOkhttpInternalHttpOkHeaders_varyMatchesWithComSquareupOkhttpResponse_withComSquareupOkhttpHeaders_withComSquareupOkhttpRequest_(response, varyHeaders_, request);
}

- (ComSquareupOkhttpResponse *)responseWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
                 withComSquareupOkhttpInternalDiskLruCache_Snapshot:(ComSquareupOkhttpInternalDiskLruCache_Snapshot *)snapshot {
  NSString *contentType = [((ComSquareupOkhttpHeaders *) nil_chk(responseHeaders_)) getWithNSString:@"Content-Type"];
  NSString *contentLength = [responseHeaders_ getWithNSString:@"Content-Length"];
  ComSquareupOkhttpRequest *cacheRequest = [((ComSquareupOkhttpRequest_Builder *) nil_chk([((ComSquareupOkhttpRequest_Builder *) nil_chk([((ComSquareupOkhttpRequest_Builder *) nil_chk([new_ComSquareupOkhttpRequest_Builder_init() urlWithNSString:url_])) methodWithNSString:requestMethod_ withComSquareupOkhttpRequestBody:nil])) headersWithComSquareupOkhttpHeaders:varyHeaders_])) build];
  return [((ComSquareupOkhttpResponse_Builder *) nil_chk([((ComSquareupOkhttpResponse_Builder *) nil_chk([((ComSquareupOkhttpResponse_Builder *) nil_chk([((ComSquareupOkhttpResponse_Builder *) nil_chk([((ComSquareupOkhttpResponse_Builder *) nil_chk([((ComSquareupOkhttpResponse_Builder *) nil_chk([((ComSquareupOkhttpResponse_Builder *) nil_chk([new_ComSquareupOkhttpResponse_Builder_init() requestWithComSquareupOkhttpRequest:cacheRequest])) protocolWithComSquareupOkhttpProtocol:protocol_])) codeWithInt:code_])) messageWithNSString:message_])) headersWithComSquareupOkhttpHeaders:responseHeaders_])) bodyWithComSquareupOkhttpResponseBody:new_ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(snapshot, contentType, contentLength)])) handshakeWithComSquareupOkhttpHandshake:handshake_])) build];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOkioSource:", "Entry", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpResponse:", "Entry", NULL, 0x1, NULL, NULL },
    { "writeToWithComSquareupOkhttpInternalDiskLruCache_Editor:", "writeTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "isHttps", NULL, "Z", 0x2, NULL, NULL },
    { "readCertificateListWithOkioBufferedSource:", "readCertificateList", "Ljava.util.List;", 0x2, "Ljava.io.IOException;", "(Lokio/BufferedSource;)Ljava/util/List<Ljava/security/cert/Certificate;>;" },
    { "writeCertArrayWithOkioBufferedSink:withJavaUtilList:", "writeCertArray", "V", 0x2, "Ljava.io.IOException;", "(Lokio/BufferedSink;Ljava/util/List<Ljava/security/cert/Certificate;>;)V" },
    { "matchesWithComSquareupOkhttpRequest:withComSquareupOkhttpResponse:", "matches", "Z", 0x1, NULL, NULL },
    { "responseWithComSquareupOkhttpRequest:withComSquareupOkhttpInternalDiskLruCache_Snapshot:", "response", "Lcom.squareup.okhttp.Response;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "url_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "varyHeaders_", NULL, 0x12, "Lcom.squareup.okhttp.Headers;", NULL, NULL, .constantValue.asLong = 0 },
    { "requestMethod_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "protocol_", NULL, 0x12, "Lcom.squareup.okhttp.Protocol;", NULL, NULL, .constantValue.asLong = 0 },
    { "code_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "message_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "responseHeaders_", NULL, 0x12, "Lcom.squareup.okhttp.Headers;", NULL, NULL, .constantValue.asLong = 0 },
    { "handshake_", NULL, 0x12, "Lcom.squareup.okhttp.Handshake;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpCache_Entry = { 2, "Entry", "com.squareup.okhttp", "Cache", 0x1a, 8, methods, 8, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpCache_Entry;
}

@end

void ComSquareupOkhttpCache_Entry_initWithOkioSource_(ComSquareupOkhttpCache_Entry *self, id<OkioSource> inArg) {
  NSObject_init(self);
  @try {
    id<OkioBufferedSource> source = OkioOkio_bufferWithOkioSource_(inArg);
    self->url_ = [((id<OkioBufferedSource>) nil_chk(source)) readUtf8LineStrict];
    self->requestMethod_ = [source readUtf8LineStrict];
    ComSquareupOkhttpHeaders_Builder *varyHeadersBuilder = new_ComSquareupOkhttpHeaders_Builder_init();
    jint varyRequestHeaderLineCount = ComSquareupOkhttpCache_readIntWithOkioBufferedSource_(source);
    for (jint i = 0; i < varyRequestHeaderLineCount; i++) {
      (void) [varyHeadersBuilder addLineWithNSString:[source readUtf8LineStrict]];
    }
    self->varyHeaders_ = [varyHeadersBuilder build];
    ComSquareupOkhttpInternalHttpStatusLine *statusLine = ComSquareupOkhttpInternalHttpStatusLine_parseWithNSString_([source readUtf8LineStrict]);
    self->protocol_ = ((ComSquareupOkhttpInternalHttpStatusLine *) nil_chk(statusLine))->protocol_;
    self->code_ = statusLine->code_;
    self->message_ = statusLine->message_;
    ComSquareupOkhttpHeaders_Builder *responseHeadersBuilder = new_ComSquareupOkhttpHeaders_Builder_init();
    jint responseHeaderLineCount = ComSquareupOkhttpCache_readIntWithOkioBufferedSource_(source);
    for (jint i = 0; i < responseHeaderLineCount; i++) {
      (void) [responseHeadersBuilder addLineWithNSString:[source readUtf8LineStrict]];
    }
    self->responseHeaders_ = [responseHeadersBuilder build];
    if (ComSquareupOkhttpCache_Entry_isHttps(self)) {
      NSString *blank = [source readUtf8LineStrict];
      if (((jint) [((NSString *) nil_chk(blank)) length]) > 0) {
        @throw new_JavaIoIOException_initWithNSString_(JreStrcat("$$C", @"expected \"\" but was \"", blank, '"'));
      }
      NSString *cipherSuite = [source readUtf8LineStrict];
      id<JavaUtilList> peerCertificates = ComSquareupOkhttpCache_Entry_readCertificateListWithOkioBufferedSource_(self, source);
      id<JavaUtilList> localCertificates = ComSquareupOkhttpCache_Entry_readCertificateListWithOkioBufferedSource_(self, source);
      self->handshake_ = ComSquareupOkhttpHandshake_getWithNSString_withJavaUtilList_withJavaUtilList_(cipherSuite, peerCertificates, localCertificates);
    }
    else {
      self->handshake_ = nil;
    }
  }
  @finally {
    [((id<OkioSource>) nil_chk(inArg)) close];
  }
}

ComSquareupOkhttpCache_Entry *new_ComSquareupOkhttpCache_Entry_initWithOkioSource_(id<OkioSource> inArg) {
  ComSquareupOkhttpCache_Entry *self = [ComSquareupOkhttpCache_Entry alloc];
  ComSquareupOkhttpCache_Entry_initWithOkioSource_(self, inArg);
  return self;
}

ComSquareupOkhttpCache_Entry *create_ComSquareupOkhttpCache_Entry_initWithOkioSource_(id<OkioSource> inArg) {
  return new_ComSquareupOkhttpCache_Entry_initWithOkioSource_(inArg);
}

void ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(ComSquareupOkhttpCache_Entry *self, ComSquareupOkhttpResponse *response) {
  NSObject_init(self);
  self->url_ = [((ComSquareupOkhttpRequest *) nil_chk([((ComSquareupOkhttpResponse *) nil_chk(response)) request])) urlString];
  self->varyHeaders_ = ComSquareupOkhttpInternalHttpOkHeaders_varyHeadersWithComSquareupOkhttpResponse_(response);
  self->requestMethod_ = [((ComSquareupOkhttpRequest *) nil_chk([response request])) method];
  self->protocol_ = [response protocol];
  self->code_ = [response code];
  self->message_ = [response message];
  self->responseHeaders_ = [response headers];
  self->handshake_ = [response handshake];
}

ComSquareupOkhttpCache_Entry *new_ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) {
  ComSquareupOkhttpCache_Entry *self = [ComSquareupOkhttpCache_Entry alloc];
  ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(self, response);
  return self;
}

ComSquareupOkhttpCache_Entry *create_ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) {
  return new_ComSquareupOkhttpCache_Entry_initWithComSquareupOkhttpResponse_(response);
}

jboolean ComSquareupOkhttpCache_Entry_isHttps(ComSquareupOkhttpCache_Entry *self) {
  return [((NSString *) nil_chk(self->url_)) hasPrefix:@"https://"];
}

id<JavaUtilList> ComSquareupOkhttpCache_Entry_readCertificateListWithOkioBufferedSource_(ComSquareupOkhttpCache_Entry *self, id<OkioBufferedSource> source) {
  jint length = ComSquareupOkhttpCache_readIntWithOkioBufferedSource_(source);
  if (length == -1) return JavaUtilCollections_emptyList();
  @try {
    JavaSecurityCertCertificateFactory *certificateFactory = JavaSecurityCertCertificateFactory_getInstanceWithNSString_(@"X.509");
    id<JavaUtilList> result = new_JavaUtilArrayList_initWithInt_(length);
    for (jint i = 0; i < length; i++) {
      NSString *line = [((id<OkioBufferedSource>) nil_chk(source)) readUtf8LineStrict];
      IOSByteArray *bytes = [((OkioByteString *) nil_chk(OkioByteString_decodeBase64WithNSString_(line))) toByteArray];
      [result addWithId:[((JavaSecurityCertCertificateFactory *) nil_chk(certificateFactory)) generateCertificateWithJavaIoInputStream:new_JavaIoByteArrayInputStream_initWithByteArray_(bytes)]];
    }
    return result;
  }
  @catch (JavaSecurityCertCertificateException *e) {
    @throw new_JavaIoIOException_initWithNSString_([((JavaSecurityCertCertificateException *) nil_chk(e)) getMessage]);
  }
}

void ComSquareupOkhttpCache_Entry_writeCertArrayWithOkioBufferedSink_withJavaUtilList_(ComSquareupOkhttpCache_Entry *self, id<OkioBufferedSink> sink, id<JavaUtilList> certificates) {
  @try {
    (void) [((id<OkioBufferedSink>) nil_chk(sink)) writeUtf8WithNSString:JavaLangInteger_toStringWithInt_([((id<JavaUtilList>) nil_chk(certificates)) size])];
    (void) [sink writeByteWithInt:0x000a];
    for (jint i = 0, size = [certificates size]; i < size; i++) {
      IOSByteArray *bytes = [((JavaSecurityCertCertificate *) nil_chk([certificates getWithInt:i])) getEncoded];
      NSString *line = [((OkioByteString *) nil_chk(OkioByteString_ofWithByteArray_(bytes))) base64];
      (void) [sink writeUtf8WithNSString:line];
      (void) [sink writeByteWithInt:0x000a];
    }
  }
  @catch (JavaSecurityCertCertificateEncodingException *e) {
    @throw new_JavaIoIOException_initWithNSString_([((JavaSecurityCertCertificateEncodingException *) nil_chk(e)) getMessage]);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache_Entry)

@implementation ComSquareupOkhttpCache_CacheResponseBody

- (instancetype)initWithComSquareupOkhttpInternalDiskLruCache_Snapshot:(ComSquareupOkhttpInternalDiskLruCache_Snapshot *)snapshot
                                                          withNSString:(NSString *)contentType
                                                          withNSString:(NSString *)contentLength {
  ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(self, snapshot, contentType, contentLength);
  return self;
}

- (ComSquareupOkhttpMediaType *)contentType {
  return contentType_ != nil ? ComSquareupOkhttpMediaType_parseWithNSString_(contentType_) : nil;
}

- (jlong)contentLength {
  @try {
    return contentLength_ != nil ? JavaLangLong_parseLongWithNSString_(contentLength_) : -1;
  }
  @catch (JavaLangNumberFormatException *e) {
    return -1;
  }
}

- (id<OkioBufferedSource>)source {
  return bodySource_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpInternalDiskLruCache_Snapshot:withNSString:withNSString:", "CacheResponseBody", NULL, 0x1, NULL, NULL },
    { "contentType", NULL, "Lcom.squareup.okhttp.MediaType;", 0x1, NULL, NULL },
    { "contentLength", NULL, "J", 0x1, NULL, NULL },
    { "source", NULL, "Lokio.BufferedSource;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "snapshot_", NULL, 0x12, "Lcom.squareup.okhttp.internal.DiskLruCache$Snapshot;", NULL, NULL, .constantValue.asLong = 0 },
    { "bodySource_", NULL, 0x12, "Lokio.BufferedSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "contentType_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "contentLength_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpCache_CacheResponseBody = { 2, "CacheResponseBody", "com.squareup.okhttp", "Cache", 0xa, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpCache_CacheResponseBody;
}

@end

void ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(ComSquareupOkhttpCache_CacheResponseBody *self, ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot, NSString *contentType, NSString *contentLength) {
  ComSquareupOkhttpResponseBody_init(self);
  self->snapshot_ = snapshot;
  self->contentType_ = contentType;
  self->contentLength_ = contentLength;
  id<OkioSource> source = [((ComSquareupOkhttpInternalDiskLruCache_Snapshot *) nil_chk(snapshot)) getSourceWithInt:ComSquareupOkhttpCache_ENTRY_BODY];
  self->bodySource_ = OkioOkio_bufferWithOkioSource_(new_ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(snapshot, source));
}

ComSquareupOkhttpCache_CacheResponseBody *new_ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot, NSString *contentType, NSString *contentLength) {
  ComSquareupOkhttpCache_CacheResponseBody *self = [ComSquareupOkhttpCache_CacheResponseBody alloc];
  ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(self, snapshot, contentType, contentLength);
  return self;
}

ComSquareupOkhttpCache_CacheResponseBody *create_ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot, NSString *contentType, NSString *contentLength) {
  return new_ComSquareupOkhttpCache_CacheResponseBody_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withNSString_withNSString_(snapshot, contentType, contentLength);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache_CacheResponseBody)

@implementation ComSquareupOkhttpCache_CacheResponseBody_$1

- (void)close {
  [((ComSquareupOkhttpInternalDiskLruCache_Snapshot *) nil_chk(val$snapshot_)) close];
  [super close];
}

- (instancetype)initWithComSquareupOkhttpInternalDiskLruCache_Snapshot:(ComSquareupOkhttpInternalDiskLruCache_Snapshot *)capture$0
                                                        withOkioSource:(id<OkioSource>)arg$0 {
  ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(self, capture$0, arg$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpInternalDiskLruCache_Snapshot:withOkioSource:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$snapshot_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.DiskLruCache$Snapshot;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpCache_CacheResponseBody", "initWithComSquareupOkhttpInternalDiskLruCache_Snapshot:withNSString:withNSString:" };
  static const J2ObjcClassInfo _ComSquareupOkhttpCache_CacheResponseBody_$1 = { 2, "", "com.squareup.okhttp", "Cache$CacheResponseBody", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComSquareupOkhttpCache_CacheResponseBody_$1;
}

@end

void ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(ComSquareupOkhttpCache_CacheResponseBody_$1 *self, ComSquareupOkhttpInternalDiskLruCache_Snapshot *capture$0, id<OkioSource> arg$0) {
  self->val$snapshot_ = capture$0;
  OkioForwardingSource_initWithOkioSource_(self, arg$0);
}

ComSquareupOkhttpCache_CacheResponseBody_$1 *new_ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *capture$0, id<OkioSource> arg$0) {
  ComSquareupOkhttpCache_CacheResponseBody_$1 *self = [ComSquareupOkhttpCache_CacheResponseBody_$1 alloc];
  ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(self, capture$0, arg$0);
  return self;
}

ComSquareupOkhttpCache_CacheResponseBody_$1 *create_ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(ComSquareupOkhttpInternalDiskLruCache_Snapshot *capture$0, id<OkioSource> arg$0) {
  return new_ComSquareupOkhttpCache_CacheResponseBody_$1_initWithComSquareupOkhttpInternalDiskLruCache_Snapshot_withOkioSource_(capture$0, arg$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache_CacheResponseBody_$1)

@implementation ComSquareupOkhttpCache_$1

- (ComSquareupOkhttpResponse *)getWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  return [this$0_ getWithComSquareupOkhttpRequest:request];
}

- (id<ComSquareupOkhttpInternalHttpCacheRequest>)putWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return ComSquareupOkhttpCache_putWithComSquareupOkhttpResponse_(this$0_, response);
}

- (void)removeWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  ComSquareupOkhttpCache_removeWithComSquareupOkhttpRequest_(this$0_, request);
}

- (void)updateWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cached
              withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)network {
  ComSquareupOkhttpCache_updateWithComSquareupOkhttpResponse_withComSquareupOkhttpResponse_(this$0_, cached, network);
}

- (void)trackConditionalCacheHit {
  ComSquareupOkhttpCache_trackConditionalCacheHit(this$0_);
}

- (void)trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy:(ComSquareupOkhttpInternalHttpCacheStrategy *)cacheStrategy {
  ComSquareupOkhttpCache_trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy_(this$0_, cacheStrategy);
}

- (instancetype)initWithComSquareupOkhttpCache:(ComSquareupOkhttpCache *)outer$ {
  ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWithComSquareupOkhttpRequest:", "get", "Lcom.squareup.okhttp.Response;", 0x1, "Ljava.io.IOException;", NULL },
    { "putWithComSquareupOkhttpResponse:", "put", "Lcom.squareup.okhttp.internal.http.CacheRequest;", 0x1, "Ljava.io.IOException;", NULL },
    { "removeWithComSquareupOkhttpRequest:", "remove", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "updateWithComSquareupOkhttpResponse:withComSquareupOkhttpResponse:", "update", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "trackConditionalCacheHit", NULL, "V", 0x1, NULL, NULL },
    { "trackResponseWithComSquareupOkhttpInternalHttpCacheStrategy:", "trackResponse", "V", 0x1, NULL, NULL },
    { "initWithComSquareupOkhttpCache:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.Cache;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpCache_$1 = { 2, "", "com.squareup.okhttp", "Cache", 0x8008, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpCache_$1;
}

@end

void ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache_$1 *self, ComSquareupOkhttpCache *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

ComSquareupOkhttpCache_$1 *new_ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$) {
  ComSquareupOkhttpCache_$1 *self = [ComSquareupOkhttpCache_$1 alloc];
  ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(self, outer$);
  return self;
}

ComSquareupOkhttpCache_$1 *create_ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$) {
  return new_ComSquareupOkhttpCache_$1_initWithComSquareupOkhttpCache_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache_$1)

@implementation ComSquareupOkhttpCache_$2

- (jboolean)hasNext {
  if (nextUrl_ != nil) return true;
  canRemove_ = false;
  while ([((id<JavaUtilIterator>) nil_chk(delegate_)) hasNext]) {
    ComSquareupOkhttpInternalDiskLruCache_Snapshot *snapshot = [delegate_ next];
    @try {
      id<OkioBufferedSource> metadata = OkioOkio_bufferWithOkioSource_([((ComSquareupOkhttpInternalDiskLruCache_Snapshot *) nil_chk(snapshot)) getSourceWithInt:ComSquareupOkhttpCache_ENTRY_METADATA]);
      nextUrl_ = [((id<OkioBufferedSource>) nil_chk(metadata)) readUtf8LineStrict];
      return true;
    }
    @catch (JavaIoIOException *ignored) {
    }
    @finally {
      [((ComSquareupOkhttpInternalDiskLruCache_Snapshot *) nil_chk(snapshot)) close];
    }
  }
  return false;
}

- (NSString *)next {
  if (![self hasNext]) @throw new_JavaUtilNoSuchElementException_init();
  NSString *result = nextUrl_;
  nextUrl_ = nil;
  canRemove_ = true;
  return result;
}

- (void)remove {
  if (!canRemove_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"remove() before next()");
  [((id<JavaUtilIterator>) nil_chk(delegate_)) remove];
}

- (instancetype)initWithComSquareupOkhttpCache:(ComSquareupOkhttpCache *)outer$ {
  ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "initWithComSquareupOkhttpCache:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "delegate_", NULL, 0x10, "Ljava.util.Iterator;", NULL, "Ljava/util/Iterator<Lcom/squareup/okhttp/internal/DiskLruCache$Snapshot;>;", .constantValue.asLong = 0 },
    { "nextUrl_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "canRemove_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpCache", "urls" };
  static const J2ObjcClassInfo _ComSquareupOkhttpCache_$2 = { 2, "", "com.squareup.okhttp", "Cache", 0x8008, 4, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Ljava/util/Iterator<Ljava/lang/String;>;" };
  return &_ComSquareupOkhttpCache_$2;
}

@end

void ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache_$2 *self, ComSquareupOkhttpCache *outer$) {
  NSObject_init(self);
  self->delegate_ = [((ComSquareupOkhttpInternalDiskLruCache *) nil_chk(outer$->cache_)) snapshots];
}

ComSquareupOkhttpCache_$2 *new_ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$) {
  ComSquareupOkhttpCache_$2 *self = [ComSquareupOkhttpCache_$2 alloc];
  ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(self, outer$);
  return self;
}

ComSquareupOkhttpCache_$2 *create_ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(ComSquareupOkhttpCache *outer$) {
  return new_ComSquareupOkhttpCache_$2_initWithComSquareupOkhttpCache_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCache_$2)
