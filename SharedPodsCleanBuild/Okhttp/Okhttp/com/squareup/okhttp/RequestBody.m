//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/RequestBody.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/MediaType.h"
#include "com/squareup/okhttp/RequestBody.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "java/io/File.h"
#include "java/io/IOException.h"
#include "java/lang/NullPointerException.h"
#include "java/nio/charset/Charset.h"
#include "okio/BufferedSink.h"
#include "okio/Okio.h"
#include "okio/Source.h"

@interface ComSquareupOkhttpRequestBody_$1 : ComSquareupOkhttpRequestBody {
 @public
  ComSquareupOkhttpMediaType *val$contentType_;
  IOSByteArray *val$content_;
}

- (ComSquareupOkhttpMediaType *)contentType;

- (jlong)contentLength;

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink;

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)capture$0
                                     withByteArray:(IOSByteArray *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpRequestBody_$1)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpRequestBody_$1, val$contentType_, ComSquareupOkhttpMediaType *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpRequestBody_$1, val$content_, IOSByteArray *)

__attribute__((unused)) static void ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpRequestBody_$1 *self, ComSquareupOkhttpMediaType *capture$0, IOSByteArray *capture$1);

__attribute__((unused)) static ComSquareupOkhttpRequestBody_$1 *new_ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpMediaType *capture$0, IOSByteArray *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpRequestBody_$1 *create_ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpMediaType *capture$0, IOSByteArray *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpRequestBody_$1)

@interface ComSquareupOkhttpRequestBody_$2 : ComSquareupOkhttpRequestBody {
 @public
  ComSquareupOkhttpMediaType *val$contentType_;
  JavaIoFile *val$file_;
}

- (ComSquareupOkhttpMediaType *)contentType;

- (jlong)contentLength;

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink;

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)capture$0
                                    withJavaIoFile:(JavaIoFile *)capture$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpRequestBody_$2)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpRequestBody_$2, val$contentType_, ComSquareupOkhttpMediaType *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpRequestBody_$2, val$file_, JavaIoFile *)

__attribute__((unused)) static void ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(ComSquareupOkhttpRequestBody_$2 *self, ComSquareupOkhttpMediaType *capture$0, JavaIoFile *capture$1);

__attribute__((unused)) static ComSquareupOkhttpRequestBody_$2 *new_ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(ComSquareupOkhttpMediaType *capture$0, JavaIoFile *capture$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpRequestBody_$2 *create_ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(ComSquareupOkhttpMediaType *capture$0, JavaIoFile *capture$1);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpRequestBody_$2)

@implementation ComSquareupOkhttpRequestBody

- (ComSquareupOkhttpMediaType *)contentType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jlong)contentLength {
  return -1;
}

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

+ (ComSquareupOkhttpRequestBody *)createWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)contentType
                                                          withNSString:(NSString *)content {
  return ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withNSString_(contentType, content);
}

+ (ComSquareupOkhttpRequestBody *)createWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)contentType
                                                         withByteArray:(IOSByteArray *)content {
  return ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withByteArray_(contentType, content);
}

+ (ComSquareupOkhttpRequestBody *)createWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)contentType
                                                        withJavaIoFile:(JavaIoFile *)file {
  return ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withJavaIoFile_(contentType, file);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpRequestBody_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "contentType", NULL, "Lcom.squareup.okhttp.MediaType;", 0x401, NULL, NULL },
    { "contentLength", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "writeToWithOkioBufferedSink:", "writeTo", "V", 0x401, "Ljava.io.IOException;", NULL },
    { "createWithComSquareupOkhttpMediaType:withNSString:", "create", "Lcom.squareup.okhttp.RequestBody;", 0x9, NULL, NULL },
    { "createWithComSquareupOkhttpMediaType:withByteArray:", "create", "Lcom.squareup.okhttp.RequestBody;", 0x9, NULL, NULL },
    { "createWithComSquareupOkhttpMediaType:withJavaIoFile:", "create", "Lcom.squareup.okhttp.RequestBody;", 0x9, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpRequestBody = { 2, "RequestBody", "com.squareup.okhttp", NULL, 0x401, 7, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpRequestBody;
}

@end

ComSquareupOkhttpRequestBody *ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withNSString_(ComSquareupOkhttpMediaType *contentType, NSString *content) {
  ComSquareupOkhttpRequestBody_initialize();
  JavaNioCharsetCharset *charset = JreLoadStatic(ComSquareupOkhttpInternalUtil, UTF_8);
  if (contentType != nil) {
    charset = [contentType charset];
    if (charset == nil) {
      charset = JreLoadStatic(ComSquareupOkhttpInternalUtil, UTF_8);
      contentType = ComSquareupOkhttpMediaType_parseWithNSString_(JreStrcat("@$", contentType, @"; charset=utf-8"));
    }
  }
  IOSByteArray *bytes = [((NSString *) nil_chk(content)) getBytesWithCharset:charset];
  return ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withByteArray_(contentType, bytes);
}

ComSquareupOkhttpRequestBody *ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpMediaType *contentType, IOSByteArray *content) {
  ComSquareupOkhttpRequestBody_initialize();
  if (content == nil) @throw new_JavaLangNullPointerException_initWithNSString_(@"content == null");
  return new_ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(contentType, content);
}

ComSquareupOkhttpRequestBody *ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withJavaIoFile_(ComSquareupOkhttpMediaType *contentType, JavaIoFile *file) {
  ComSquareupOkhttpRequestBody_initialize();
  if (file == nil) @throw new_JavaLangNullPointerException_initWithNSString_(@"content == null");
  return new_ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(contentType, file);
}

void ComSquareupOkhttpRequestBody_init(ComSquareupOkhttpRequestBody *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpRequestBody)

@implementation ComSquareupOkhttpRequestBody_$1

- (ComSquareupOkhttpMediaType *)contentType {
  return val$contentType_;
}

- (jlong)contentLength {
  return ((IOSByteArray *) nil_chk(val$content_))->size_;
}

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink {
  (void) [((id<OkioBufferedSink>) nil_chk(sink)) writeWithByteArray:val$content_];
}

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)capture$0
                                     withByteArray:(IOSByteArray *)capture$1 {
  ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "contentType", NULL, "Lcom.squareup.okhttp.MediaType;", 0x1, NULL, NULL },
    { "contentLength", NULL, "J", 0x1, NULL, NULL },
    { "writeToWithOkioBufferedSink:", "writeTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpMediaType:withByteArray:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$contentType_", NULL, 0x1012, "Lcom.squareup.okhttp.MediaType;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$content_", NULL, 0x1012, "[B", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpRequestBody", "createWithComSquareupOkhttpMediaType:withByteArray:" };
  static const J2ObjcClassInfo _ComSquareupOkhttpRequestBody_$1 = { 2, "", "com.squareup.okhttp", "RequestBody", 0x8008, 4, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComSquareupOkhttpRequestBody_$1;
}

@end

void ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpRequestBody_$1 *self, ComSquareupOkhttpMediaType *capture$0, IOSByteArray *capture$1) {
  self->val$contentType_ = capture$0;
  self->val$content_ = capture$1;
  ComSquareupOkhttpRequestBody_init(self);
}

ComSquareupOkhttpRequestBody_$1 *new_ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpMediaType *capture$0, IOSByteArray *capture$1) {
  ComSquareupOkhttpRequestBody_$1 *self = [ComSquareupOkhttpRequestBody_$1 alloc];
  ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(self, capture$0, capture$1);
  return self;
}

ComSquareupOkhttpRequestBody_$1 *create_ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpMediaType *capture$0, IOSByteArray *capture$1) {
  return new_ComSquareupOkhttpRequestBody_$1_initWithComSquareupOkhttpMediaType_withByteArray_(capture$0, capture$1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpRequestBody_$1)

@implementation ComSquareupOkhttpRequestBody_$2

- (ComSquareupOkhttpMediaType *)contentType {
  return val$contentType_;
}

- (jlong)contentLength {
  return [((JavaIoFile *) nil_chk(val$file_)) length];
}

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink {
  id<OkioSource> source = nil;
  @try {
    source = OkioOkio_sourceWithJavaIoFile_(val$file_);
    [((id<OkioBufferedSink>) nil_chk(sink)) writeAllWithOkioSource:source];
  }
  @finally {
    ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaIoCloseable_(source);
  }
}

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)capture$0
                                    withJavaIoFile:(JavaIoFile *)capture$1 {
  ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(self, capture$0, capture$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "contentType", NULL, "Lcom.squareup.okhttp.MediaType;", 0x1, NULL, NULL },
    { "contentLength", NULL, "J", 0x1, NULL, NULL },
    { "writeToWithOkioBufferedSink:", "writeTo", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpMediaType:withJavaIoFile:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$contentType_", NULL, 0x1012, "Lcom.squareup.okhttp.MediaType;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$file_", NULL, 0x1012, "Ljava.io.File;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpRequestBody", "createWithComSquareupOkhttpMediaType:withJavaIoFile:" };
  static const J2ObjcClassInfo _ComSquareupOkhttpRequestBody_$2 = { 2, "", "com.squareup.okhttp", "RequestBody", 0x8008, 4, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComSquareupOkhttpRequestBody_$2;
}

@end

void ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(ComSquareupOkhttpRequestBody_$2 *self, ComSquareupOkhttpMediaType *capture$0, JavaIoFile *capture$1) {
  self->val$contentType_ = capture$0;
  self->val$file_ = capture$1;
  ComSquareupOkhttpRequestBody_init(self);
}

ComSquareupOkhttpRequestBody_$2 *new_ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(ComSquareupOkhttpMediaType *capture$0, JavaIoFile *capture$1) {
  ComSquareupOkhttpRequestBody_$2 *self = [ComSquareupOkhttpRequestBody_$2 alloc];
  ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(self, capture$0, capture$1);
  return self;
}

ComSquareupOkhttpRequestBody_$2 *create_ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(ComSquareupOkhttpMediaType *capture$0, JavaIoFile *capture$1) {
  return new_ComSquareupOkhttpRequestBody_$2_initWithComSquareupOkhttpMediaType_withJavaIoFile_(capture$0, capture$1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpRequestBody_$2)
