//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Settings.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/internal/spdy/Settings.h"
#include "java/lang/Integer.h"
#include "java/util/Arrays.h"

@interface ComSquareupOkhttpInternalSpdySettings () {
 @public
  jint set_;
  jint persistValue_;
  jint persisted_;
  IOSIntArray *values_;
}

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalSpdySettings, values_, IOSIntArray *)

@implementation ComSquareupOkhttpInternalSpdySettings

- (void)clear {
  set_ = persistValue_ = persisted_ = 0;
  JavaUtilArrays_fillWithIntArray_withInt_(values_, 0);
}

- (ComSquareupOkhttpInternalSpdySettings *)setWithInt:(jint)id_
                                              withInt:(jint)idFlags
                                              withInt:(jint)value {
  if (id_ >= ((IOSIntArray *) nil_chk(values_))->size_) {
    return self;
  }
  jint bit = JreLShift32(1, id_);
  set_ |= bit;
  if ((idFlags & ComSquareupOkhttpInternalSpdySettings_PERSIST_VALUE) != 0) {
    persistValue_ |= bit;
  }
  else {
    persistValue_ &= ~bit;
  }
  if ((idFlags & ComSquareupOkhttpInternalSpdySettings_PERSISTED) != 0) {
    persisted_ |= bit;
  }
  else {
    persisted_ &= ~bit;
  }
  *IOSIntArray_GetRef(values_, id_) = value;
  return self;
}

- (jboolean)isSetWithInt:(jint)id_ {
  jint bit = JreLShift32(1, id_);
  return (set_ & bit) != 0;
}

- (jint)getWithInt:(jint)id_ {
  return IOSIntArray_Get(nil_chk(values_), id_);
}

- (jint)flagsWithInt:(jint)id_ {
  jint result = 0;
  if ([self isPersistedWithInt:id_]) result |= ComSquareupOkhttpInternalSpdySettings_PERSISTED;
  if ([self persistValueWithInt:id_]) result |= ComSquareupOkhttpInternalSpdySettings_PERSIST_VALUE;
  return result;
}

- (jint)size {
  return JavaLangInteger_bitCountWithInt_(set_);
}

- (jint)getUploadBandwidthWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_UPLOAD_BANDWIDTH);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_UPLOAD_BANDWIDTH) : defaultValue;
}

- (jint)getHeaderTableSize {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_HEADER_TABLE_SIZE);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_HEADER_TABLE_SIZE) : -1;
}

- (jint)getDownloadBandwidthWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_DOWNLOAD_BANDWIDTH);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_DOWNLOAD_BANDWIDTH) : defaultValue;
}

- (jboolean)getEnablePushWithBoolean:(jboolean)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_ENABLE_PUSH);
  return ((bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_ENABLE_PUSH) : defaultValue ? 1 : 0) == 1;
}

- (jint)getRoundTripTimeWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_ROUND_TRIP_TIME);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_ROUND_TRIP_TIME) : defaultValue;
}

- (jint)getMaxConcurrentStreamsWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_MAX_CONCURRENT_STREAMS);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_MAX_CONCURRENT_STREAMS) : defaultValue;
}

- (jint)getCurrentCwndWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_CURRENT_CWND);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_CURRENT_CWND) : defaultValue;
}

- (jint)getMaxFrameSizeWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_MAX_FRAME_SIZE);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_MAX_FRAME_SIZE) : defaultValue;
}

- (jint)getDownloadRetransRateWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_DOWNLOAD_RETRANS_RATE);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_DOWNLOAD_RETRANS_RATE) : defaultValue;
}

- (jint)getMaxHeaderListSizeWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_MAX_HEADER_LIST_SIZE);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_MAX_HEADER_LIST_SIZE) : defaultValue;
}

- (jint)getInitialWindowSizeWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_INITIAL_WINDOW_SIZE);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_INITIAL_WINDOW_SIZE) : defaultValue;
}

- (jint)getClientCertificateVectorSizeWithInt:(jint)defaultValue {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_CLIENT_CERTIFICATE_VECTOR_SIZE);
  return (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_CLIENT_CERTIFICATE_VECTOR_SIZE) : defaultValue;
}

- (jboolean)isFlowControlDisabled {
  jint bit = JreLShift32(1, ComSquareupOkhttpInternalSpdySettings_FLOW_CONTROL_OPTIONS);
  jint value = (bit & set_) != 0 ? IOSIntArray_Get(nil_chk(values_), ComSquareupOkhttpInternalSpdySettings_FLOW_CONTROL_OPTIONS) : 0;
  return (value & ComSquareupOkhttpInternalSpdySettings_FLOW_CONTROL_OPTIONS_DISABLED) != 0;
}

- (jboolean)persistValueWithInt:(jint)id_ {
  jint bit = JreLShift32(1, id_);
  return (persistValue_ & bit) != 0;
}

- (jboolean)isPersistedWithInt:(jint)id_ {
  jint bit = JreLShift32(1, id_);
  return (persisted_ & bit) != 0;
}

- (void)mergeWithComSquareupOkhttpInternalSpdySettings:(ComSquareupOkhttpInternalSpdySettings *)other {
  for (jint i = 0; i < ComSquareupOkhttpInternalSpdySettings_COUNT; i++) {
    if (![((ComSquareupOkhttpInternalSpdySettings *) nil_chk(other)) isSetWithInt:i]) continue;
    (void) [self setWithInt:i withInt:[other flagsWithInt:i] withInt:[other getWithInt:i]];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalSpdySettings_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "clear", NULL, "V", 0x0, NULL, NULL },
    { "setWithInt:withInt:withInt:", "set", "Lcom.squareup.okhttp.internal.spdy.Settings;", 0x0, NULL, NULL },
    { "isSetWithInt:", "isSet", "Z", 0x0, NULL, NULL },
    { "getWithInt:", "get", "I", 0x0, NULL, NULL },
    { "flagsWithInt:", "flags", "I", 0x0, NULL, NULL },
    { "size", NULL, "I", 0x0, NULL, NULL },
    { "getUploadBandwidthWithInt:", "getUploadBandwidth", "I", 0x0, NULL, NULL },
    { "getHeaderTableSize", NULL, "I", 0x0, NULL, NULL },
    { "getDownloadBandwidthWithInt:", "getDownloadBandwidth", "I", 0x0, NULL, NULL },
    { "getEnablePushWithBoolean:", "getEnablePush", "Z", 0x0, NULL, NULL },
    { "getRoundTripTimeWithInt:", "getRoundTripTime", "I", 0x0, NULL, NULL },
    { "getMaxConcurrentStreamsWithInt:", "getMaxConcurrentStreams", "I", 0x0, NULL, NULL },
    { "getCurrentCwndWithInt:", "getCurrentCwnd", "I", 0x0, NULL, NULL },
    { "getMaxFrameSizeWithInt:", "getMaxFrameSize", "I", 0x0, NULL, NULL },
    { "getDownloadRetransRateWithInt:", "getDownloadRetransRate", "I", 0x0, NULL, NULL },
    { "getMaxHeaderListSizeWithInt:", "getMaxHeaderListSize", "I", 0x0, NULL, NULL },
    { "getInitialWindowSizeWithInt:", "getInitialWindowSize", "I", 0x0, NULL, NULL },
    { "getClientCertificateVectorSizeWithInt:", "getClientCertificateVectorSize", "I", 0x0, NULL, NULL },
    { "isFlowControlDisabled", NULL, "Z", 0x0, NULL, NULL },
    { "persistValueWithInt:", "persistValue", "Z", 0x0, NULL, NULL },
    { "isPersistedWithInt:", "isPersisted", "Z", 0x0, NULL, NULL },
    { "mergeWithComSquareupOkhttpInternalSpdySettings:", "merge", "V", 0x0, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_INITIAL_WINDOW_SIZE", "DEFAULT_INITIAL_WINDOW_SIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_DEFAULT_INITIAL_WINDOW_SIZE },
    { "FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS", "FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_FLAG_CLEAR_PREVIOUSLY_PERSISTED_SETTINGS },
    { "PERSIST_VALUE", "PERSIST_VALUE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_PERSIST_VALUE },
    { "PERSISTED", "PERSISTED", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_PERSISTED },
    { "UPLOAD_BANDWIDTH", "UPLOAD_BANDWIDTH", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_UPLOAD_BANDWIDTH },
    { "HEADER_TABLE_SIZE", "HEADER_TABLE_SIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_HEADER_TABLE_SIZE },
    { "DOWNLOAD_BANDWIDTH", "DOWNLOAD_BANDWIDTH", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_DOWNLOAD_BANDWIDTH },
    { "ENABLE_PUSH", "ENABLE_PUSH", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_ENABLE_PUSH },
    { "ROUND_TRIP_TIME", "ROUND_TRIP_TIME", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_ROUND_TRIP_TIME },
    { "MAX_CONCURRENT_STREAMS", "MAX_CONCURRENT_STREAMS", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_MAX_CONCURRENT_STREAMS },
    { "CURRENT_CWND", "CURRENT_CWND", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_CURRENT_CWND },
    { "MAX_FRAME_SIZE", "MAX_FRAME_SIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_MAX_FRAME_SIZE },
    { "DOWNLOAD_RETRANS_RATE", "DOWNLOAD_RETRANS_RATE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_DOWNLOAD_RETRANS_RATE },
    { "MAX_HEADER_LIST_SIZE", "MAX_HEADER_LIST_SIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_MAX_HEADER_LIST_SIZE },
    { "INITIAL_WINDOW_SIZE", "INITIAL_WINDOW_SIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_INITIAL_WINDOW_SIZE },
    { "CLIENT_CERTIFICATE_VECTOR_SIZE", "CLIENT_CERTIFICATE_VECTOR_SIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_CLIENT_CERTIFICATE_VECTOR_SIZE },
    { "FLOW_CONTROL_OPTIONS", "FLOW_CONTROL_OPTIONS", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_FLOW_CONTROL_OPTIONS },
    { "COUNT", "COUNT", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_COUNT },
    { "FLOW_CONTROL_OPTIONS_DISABLED", "FLOW_CONTROL_OPTIONS_DISABLED", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdySettings_FLOW_CONTROL_OPTIONS_DISABLED },
    { "set_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "persistValue_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "persisted_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "values_", NULL, 0x12, "[I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalSpdySettings = { 2, "Settings", "com.squareup.okhttp.internal.spdy", NULL, 0x11, 23, methods, 23, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalSpdySettings;
}

@end

void ComSquareupOkhttpInternalSpdySettings_init(ComSquareupOkhttpInternalSpdySettings *self) {
  NSObject_init(self);
  self->values_ = [IOSIntArray newArrayWithLength:ComSquareupOkhttpInternalSpdySettings_COUNT];
}

ComSquareupOkhttpInternalSpdySettings *new_ComSquareupOkhttpInternalSpdySettings_init() {
  ComSquareupOkhttpInternalSpdySettings *self = [ComSquareupOkhttpInternalSpdySettings alloc];
  ComSquareupOkhttpInternalSpdySettings_init(self);
  return self;
}

ComSquareupOkhttpInternalSpdySettings *create_ComSquareupOkhttpInternalSpdySettings_init() {
  return new_ComSquareupOkhttpInternalSpdySettings_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalSpdySettings)
