//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/Http20Draft16.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Protocol.h"
#include "com/squareup/okhttp/internal/spdy/ErrorCode.h"
#include "com/squareup/okhttp/internal/spdy/FrameReader.h"
#include "com/squareup/okhttp/internal/spdy/FrameWriter.h"
#include "com/squareup/okhttp/internal/spdy/HeadersMode.h"
#include "com/squareup/okhttp/internal/spdy/HpackDraft10.h"
#include "com/squareup/okhttp/internal/spdy/Http20Draft16.h"
#include "com/squareup/okhttp/internal/spdy/Settings.h"
#include "java/io/IOException.h"
#include "java/lang/Byte.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/Short.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/util/List.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"
#include "okio/Buffer.h"
#include "okio/BufferedSink.h"
#include "okio/BufferedSource.h"
#include "okio/ByteString.h"
#include "okio/Timeout.h"

@interface ComSquareupOkhttpInternalSpdyHttp20Draft16 ()

+ (JavaLangIllegalArgumentException *)illegalArgumentWithNSString:(NSString *)message
                                                withNSObjectArray:(IOSObjectArray *)args;

+ (JavaIoIOException *)ioExceptionWithNSString:(NSString *)message
                             withNSObjectArray:(IOSObjectArray *)args;

+ (jint)lengthWithoutPaddingWithInt:(jint)length
                           withByte:(jbyte)flags
                          withShort:(jshort)padding;

+ (jint)readMediumWithOkioBufferedSource:(id<OkioBufferedSource>)source;

+ (void)writeMediumWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                                withInt:(jint)i;

@end

inline JavaUtilLoggingLogger *ComSquareupOkhttpInternalSpdyHttp20Draft16_get_logger();
static JavaUtilLoggingLogger *ComSquareupOkhttpInternalSpdyHttp20Draft16_logger;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger, JavaUtilLoggingLogger *)

inline OkioByteString *ComSquareupOkhttpInternalSpdyHttp20Draft16_get_CONNECTION_PREFACE();
static OkioByteString *ComSquareupOkhttpInternalSpdyHttp20Draft16_CONNECTION_PREFACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalSpdyHttp20Draft16, CONNECTION_PREFACE, OkioByteString *)

__attribute__((unused)) static JavaLangIllegalArgumentException *ComSquareupOkhttpInternalSpdyHttp20Draft16_illegalArgumentWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args);

__attribute__((unused)) static JavaIoIOException *ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args);

__attribute__((unused)) static jint ComSquareupOkhttpInternalSpdyHttp20Draft16_lengthWithoutPaddingWithInt_withByte_withShort_(jint length, jbyte flags, jshort padding);

__attribute__((unused)) static jint ComSquareupOkhttpInternalSpdyHttp20Draft16_readMediumWithOkioBufferedSource_(id<OkioBufferedSource> source);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_writeMediumWithOkioBufferedSink_withInt_(id<OkioBufferedSink> sink, jint i);

@interface ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader () {
 @public
  id<OkioBufferedSource> source_;
  ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *continuation_;
  jboolean client_;
}

- (void)readHeadersWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                withInt:(jint)length
                                                               withByte:(jbyte)flags
                                                                withInt:(jint)streamId;

- (id<JavaUtilList>)readHeaderBlockWithInt:(jint)length
                                 withShort:(jshort)padding
                                  withByte:(jbyte)flags
                                   withInt:(jint)streamId;

- (void)readDataWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                             withInt:(jint)length
                                                            withByte:(jbyte)flags
                                                             withInt:(jint)streamId;

- (void)readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                 withInt:(jint)length
                                                                withByte:(jbyte)flags
                                                                 withInt:(jint)streamId;

- (void)readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                 withInt:(jint)streamId;

- (void)readRstStreamWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                  withInt:(jint)length
                                                                 withByte:(jbyte)flags
                                                                  withInt:(jint)streamId;

- (void)readSettingsWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                 withInt:(jint)length
                                                                withByte:(jbyte)flags
                                                                 withInt:(jint)streamId;

- (void)readPushPromiseWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                    withInt:(jint)length
                                                                   withByte:(jbyte)flags
                                                                    withInt:(jint)streamId;

- (void)readPingWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                             withInt:(jint)length
                                                            withByte:(jbyte)flags
                                                             withInt:(jint)streamId;

- (void)readGoAwayWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                               withInt:(jint)length
                                                              withByte:(jbyte)flags
                                                               withInt:(jint)streamId;

- (void)readWindowUpdateWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                     withInt:(jint)length
                                                                    withByte:(jbyte)flags
                                                                     withInt:(jint)streamId;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader, source_, id<OkioBufferedSource>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader, continuation_, ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *)

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeadersWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static id<JavaUtilList> ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeaderBlockWithInt_withShort_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, jint length, jshort padding, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readDataWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readRstStreamWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readSettingsWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPushPromiseWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPingWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readGoAwayWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readWindowUpdateWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId);

@interface ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer () {
 @public
  id<OkioBufferedSink> sink_;
  jboolean client_;
  OkioBuffer *hpackBuffer_;
  ComSquareupOkhttpInternalSpdyHpackDraft10_Writer *hpackWriter_;
  jint maxFrameSize_;
  jboolean closed_;
}

- (void)writeContinuationFramesWithInt:(jint)streamId
                              withLong:(jlong)byteCount;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer, sink_, id<OkioBufferedSink>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer, hpackBuffer_, OkioBuffer *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer, hpackWriter_, ComSquareupOkhttpInternalSpdyHpackDraft10_Writer *)

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_writeContinuationFramesWithInt_withLong_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer *self, jint streamId, jlong byteCount);

@interface ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource () {
 @public
  id<OkioBufferedSource> source_;
}

- (void)readContinuationHeader;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource, source_, id<OkioBufferedSource>)

__attribute__((unused)) static void ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_readContinuationHeader(ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *self);

inline IOSObjectArray *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_get_TYPES();
static IOSObjectArray *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger, TYPES, IOSObjectArray *)

inline IOSObjectArray *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_get_FLAGS();
static IOSObjectArray *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger, FLAGS, IOSObjectArray *)

inline IOSObjectArray *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_get_BINARY();
static IOSObjectArray *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger, BINARY, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpInternalSpdyHttp20Draft16)

@implementation ComSquareupOkhttpInternalSpdyHttp20Draft16

- (ComSquareupOkhttpProtocol *)getProtocol {
  return JreLoadEnum(ComSquareupOkhttpProtocol, HTTP_2);
}

- (id<ComSquareupOkhttpInternalSpdyFrameReader>)newReaderWithOkioBufferedSource:(id<OkioBufferedSource>)source
                                                                    withBoolean:(jboolean)client {
  return new_ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_initWithOkioBufferedSource_withInt_withBoolean_(source, 4096, client);
}

- (id<ComSquareupOkhttpInternalSpdyFrameWriter>)newWriterWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                                                                  withBoolean:(jboolean)client {
  return new_ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_initWithOkioBufferedSink_withBoolean_(sink, client);
}

+ (JavaLangIllegalArgumentException *)illegalArgumentWithNSString:(NSString *)message
                                                withNSObjectArray:(IOSObjectArray *)args {
  return ComSquareupOkhttpInternalSpdyHttp20Draft16_illegalArgumentWithNSString_withNSObjectArray_(message, args);
}

+ (JavaIoIOException *)ioExceptionWithNSString:(NSString *)message
                             withNSObjectArray:(IOSObjectArray *)args {
  return ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(message, args);
}

+ (jint)lengthWithoutPaddingWithInt:(jint)length
                           withByte:(jbyte)flags
                          withShort:(jshort)padding {
  return ComSquareupOkhttpInternalSpdyHttp20Draft16_lengthWithoutPaddingWithInt_withByte_withShort_(length, flags, padding);
}

+ (jint)readMediumWithOkioBufferedSource:(id<OkioBufferedSource>)source {
  return ComSquareupOkhttpInternalSpdyHttp20Draft16_readMediumWithOkioBufferedSource_(source);
}

+ (void)writeMediumWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                                withInt:(jint)i {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_writeMediumWithOkioBufferedSink_withInt_(sink, i);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ComSquareupOkhttpInternalSpdyHttp20Draft16 class]) {
    ComSquareupOkhttpInternalSpdyHttp20Draft16_logger = JavaUtilLoggingLogger_getLoggerWithNSString_([ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_class_() getName]);
    ComSquareupOkhttpInternalSpdyHttp20Draft16_CONNECTION_PREFACE = OkioByteString_encodeUtf8WithNSString_(@"PRI * HTTP/2.0\x0d\n\x0d\nSM\x0d\n\x0d\n");
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpInternalSpdyHttp20Draft16)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getProtocol", NULL, "Lcom.squareup.okhttp.Protocol;", 0x1, NULL, NULL },
    { "newReaderWithOkioBufferedSource:withBoolean:", "newReader", "Lcom.squareup.okhttp.internal.spdy.FrameReader;", 0x1, NULL, NULL },
    { "newWriterWithOkioBufferedSink:withBoolean:", "newWriter", "Lcom.squareup.okhttp.internal.spdy.FrameWriter;", 0x1, NULL, NULL },
    { "illegalArgumentWithNSString:withNSObjectArray:", "illegalArgument", "Ljava.lang.IllegalArgumentException;", 0x8a, NULL, NULL },
    { "ioExceptionWithNSString:withNSObjectArray:", "ioException", "Ljava.io.IOException;", 0x8a, "Ljava.io.IOException;", NULL },
    { "lengthWithoutPaddingWithInt:withByte:withShort:", "lengthWithoutPadding", "I", 0xa, "Ljava.io.IOException;", NULL },
    { "readMediumWithOkioBufferedSource:", "readMedium", "I", 0xa, "Ljava.io.IOException;", NULL },
    { "writeMediumWithOkioBufferedSink:withInt:", "writeMedium", "V", 0xa, "Ljava.io.IOException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "logger", "logger", 0x1a, "Ljava.util.logging.Logger;", &ComSquareupOkhttpInternalSpdyHttp20Draft16_logger, NULL, .constantValue.asLong = 0 },
    { "CONNECTION_PREFACE", "CONNECTION_PREFACE", 0x1a, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdyHttp20Draft16_CONNECTION_PREFACE, NULL, .constantValue.asLong = 0 },
    { "INITIAL_MAX_FRAME_SIZE", "INITIAL_MAX_FRAME_SIZE", 0x18, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalSpdyHttp20Draft16_INITIAL_MAX_FRAME_SIZE },
    { "TYPE_DATA", "TYPE_DATA", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_DATA },
    { "TYPE_HEADERS", "TYPE_HEADERS", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_HEADERS },
    { "TYPE_PRIORITY", "TYPE_PRIORITY", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PRIORITY },
    { "TYPE_RST_STREAM", "TYPE_RST_STREAM", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_RST_STREAM },
    { "TYPE_SETTINGS", "TYPE_SETTINGS", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_SETTINGS },
    { "TYPE_PUSH_PROMISE", "TYPE_PUSH_PROMISE", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PUSH_PROMISE },
    { "TYPE_PING", "TYPE_PING", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PING },
    { "TYPE_GOAWAY", "TYPE_GOAWAY", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_GOAWAY },
    { "TYPE_WINDOW_UPDATE", "TYPE_WINDOW_UPDATE", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_WINDOW_UPDATE },
    { "TYPE_CONTINUATION", "TYPE_CONTINUATION", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_CONTINUATION },
    { "FLAG_NONE", "FLAG_NONE", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE },
    { "FLAG_ACK", "FLAG_ACK", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_ACK },
    { "FLAG_END_STREAM", "FLAG_END_STREAM", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_STREAM },
    { "FLAG_END_HEADERS", "FLAG_END_HEADERS", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS },
    { "FLAG_END_PUSH_PROMISE", "FLAG_END_PUSH_PROMISE", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_PUSH_PROMISE },
    { "FLAG_PADDED", "FLAG_PADDED", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED },
    { "FLAG_PRIORITY", "FLAG_PRIORITY", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PRIORITY },
    { "FLAG_COMPRESSED", "FLAG_COMPRESSED", 0x18, "B", NULL, NULL, .constantValue.asChar = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_COMPRESSED },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.internal.spdy.Http20Draft16$Reader;", "Lcom.squareup.okhttp.internal.spdy.Http20Draft16$Writer;", "Lcom.squareup.okhttp.internal.spdy.Http20Draft16$ContinuationSource;", "Lcom.squareup.okhttp.internal.spdy.Http20Draft16$FrameLogger;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalSpdyHttp20Draft16 = { 2, "Http20Draft16", "com.squareup.okhttp.internal.spdy", NULL, 0x11, 9, methods, 21, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpInternalSpdyHttp20Draft16;
}

@end

JavaLangIllegalArgumentException *ComSquareupOkhttpInternalSpdyHttp20Draft16_illegalArgumentWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_initialize();
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(NSString_formatWithNSString_withNSObjectArray_(message, args));
}

JavaIoIOException *ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(NSString *message, IOSObjectArray *args) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_initialize();
  @throw new_JavaIoIOException_initWithNSString_(NSString_formatWithNSString_withNSObjectArray_(message, args));
}

jint ComSquareupOkhttpInternalSpdyHttp20Draft16_lengthWithoutPaddingWithInt_withByte_withShort_(jint length, jbyte flags, jshort padding) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_initialize();
  if ((flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED) != 0) length--;
  if (padding > length) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR padding %s > remaining length %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangShort_valueOfWithShort_(padding), JavaLangInteger_valueOfWithInt_(length) } count:2 type:NSObject_class_()]);
  }
  return (jshort) (length - padding);
}

jint ComSquareupOkhttpInternalSpdyHttp20Draft16_readMediumWithOkioBufferedSource_(id<OkioBufferedSource> source) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_initialize();
  return (JreLShift32(([((id<OkioBufferedSource>) nil_chk(source)) readByte] & (jint) 0xff), 16)) | (JreLShift32(([source readByte] & (jint) 0xff), 8)) | ([source readByte] & (jint) 0xff);
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_writeMediumWithOkioBufferedSink_withInt_(id<OkioBufferedSink> sink, jint i) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_initialize();
  (void) [((id<OkioBufferedSink>) nil_chk(sink)) writeByteWithInt:(JreURShift32(i, 16)) & (jint) 0xff];
  (void) [sink writeByteWithInt:(JreURShift32(i, 8)) & (jint) 0xff];
  (void) [sink writeByteWithInt:i & (jint) 0xff];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_init(ComSquareupOkhttpInternalSpdyHttp20Draft16 *self) {
  NSObject_init(self);
}

ComSquareupOkhttpInternalSpdyHttp20Draft16 *new_ComSquareupOkhttpInternalSpdyHttp20Draft16_init() {
  ComSquareupOkhttpInternalSpdyHttp20Draft16 *self = [ComSquareupOkhttpInternalSpdyHttp20Draft16 alloc];
  ComSquareupOkhttpInternalSpdyHttp20Draft16_init(self);
  return self;
}

ComSquareupOkhttpInternalSpdyHttp20Draft16 *create_ComSquareupOkhttpInternalSpdyHttp20Draft16_init() {
  return new_ComSquareupOkhttpInternalSpdyHttp20Draft16_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalSpdyHttp20Draft16)

@implementation ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader

- (instancetype)initWithOkioBufferedSource:(id<OkioBufferedSource>)source
                                   withInt:(jint)headerTableSize
                               withBoolean:(jboolean)client {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_initWithOkioBufferedSource_withInt_withBoolean_(self, source, headerTableSize, client);
  return self;
}

- (void)readConnectionPreface {
  if (client_) return;
  OkioByteString *connectionPreface = [((id<OkioBufferedSource>) nil_chk(source_)) readByteStringWithLong:[((OkioByteString *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, CONNECTION_PREFACE))) size]];
  if ([((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger))) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE)]) [JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger) fineWithNSString:NSString_formatWithNSString_withNSObjectArray_(@"<< CONNECTION %s", [IOSObjectArray newArrayWithObjects:(id[]){ [((OkioByteString *) nil_chk(connectionPreface)) hex] } count:1 type:NSObject_class_()])];
  if (![JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, CONNECTION_PREFACE) isEqual:connectionPreface]) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"Expected a connection header but was %s", [IOSObjectArray newArrayWithObjects:(id[]){ [((OkioByteString *) nil_chk(connectionPreface)) utf8] } count:1 type:NSObject_class_()]);
  }
}

- (jboolean)nextFrameWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler {
  @try {
    [((id<OkioBufferedSource>) nil_chk(source_)) requireWithLong:9];
  }
  @catch (JavaIoIOException *e) {
    return false;
  }
  jint length = ComSquareupOkhttpInternalSpdyHttp20Draft16_readMediumWithOkioBufferedSource_(source_);
  if (length < 0 || length > ComSquareupOkhttpInternalSpdyHttp20Draft16_INITIAL_MAX_FRAME_SIZE) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"FRAME_SIZE_ERROR: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length) } count:1 type:NSObject_class_()]);
  }
  jbyte type = (jbyte) ([((id<OkioBufferedSource>) nil_chk(source_)) readByte] & (jint) 0xff);
  jbyte flags = (jbyte) ([source_ readByte] & (jint) 0xff);
  jint streamId = ([source_ readInt] & (jint) 0x7fffffff);
  if ([((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger))) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE)]) [JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger) fineWithNSString:ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatHeaderWithBoolean_withInt_withInt_withByte_withByte_(true, streamId, length, type, flags)];
  switch (type) {
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_DATA:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readDataWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_HEADERS:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeadersWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PRIORITY:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_RST_STREAM:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readRstStreamWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_SETTINGS:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readSettingsWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PUSH_PROMISE:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPushPromiseWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PING:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPingWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_GOAWAY:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readGoAwayWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_WINDOW_UPDATE:
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readWindowUpdateWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
    break;
    default:
    [source_ skipWithLong:length];
  }
  return true;
}

- (void)readHeadersWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                withInt:(jint)length
                                                               withByte:(jbyte)flags
                                                                withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeadersWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (id<JavaUtilList>)readHeaderBlockWithInt:(jint)length
                                 withShort:(jshort)padding
                                  withByte:(jbyte)flags
                                   withInt:(jint)streamId {
  return ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeaderBlockWithInt_withShort_withByte_withInt_(self, length, padding, flags, streamId);
}

- (void)readDataWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                             withInt:(jint)length
                                                            withByte:(jbyte)flags
                                                             withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readDataWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                 withInt:(jint)length
                                                                withByte:(jbyte)flags
                                                                 withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                 withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_(self, handler, streamId);
}

- (void)readRstStreamWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                  withInt:(jint)length
                                                                 withByte:(jbyte)flags
                                                                  withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readRstStreamWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)readSettingsWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                 withInt:(jint)length
                                                                withByte:(jbyte)flags
                                                                 withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readSettingsWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)readPushPromiseWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                    withInt:(jint)length
                                                                   withByte:(jbyte)flags
                                                                    withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPushPromiseWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)readPingWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                             withInt:(jint)length
                                                            withByte:(jbyte)flags
                                                             withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPingWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)readGoAwayWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                               withInt:(jint)length
                                                              withByte:(jbyte)flags
                                                               withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readGoAwayWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)readWindowUpdateWithComSquareupOkhttpInternalSpdyFrameReader_Handler:(id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>)handler
                                                                     withInt:(jint)length
                                                                    withByte:(jbyte)flags
                                                                     withInt:(jint)streamId {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readWindowUpdateWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(self, handler, length, flags, streamId);
}

- (void)close {
  [((id<OkioBufferedSource>) nil_chk(source_)) close];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOkioBufferedSource:withInt:withBoolean:", "Reader", NULL, 0x0, NULL, NULL },
    { "readConnectionPreface", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "nextFrameWithComSquareupOkhttpInternalSpdyFrameReader_Handler:", "nextFrame", "Z", 0x1, "Ljava.io.IOException;", NULL },
    { "readHeadersWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readHeaders", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readHeaderBlockWithInt:withShort:withByte:withInt:", "readHeaderBlock", "Ljava.util.List;", 0x2, "Ljava.io.IOException;", "(ISBI)Ljava/util/List<Lcom/squareup/okhttp/internal/spdy/SpdyHeader;>;" },
    { "readDataWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readData", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readPriority", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:", "readPriority", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readRstStreamWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readRstStream", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readSettingsWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readSettings", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readPushPromiseWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readPushPromise", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readPingWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readPing", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readGoAwayWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readGoAway", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readWindowUpdateWithComSquareupOkhttpInternalSpdyFrameReader_Handler:withInt:withByte:withInt:", "readWindowUpdate", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "source_", NULL, 0x12, "Lokio.BufferedSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "continuation_", NULL, 0x12, "Lcom.squareup.okhttp.internal.spdy.Http20Draft16$ContinuationSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "client_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hpackReader_", NULL, 0x10, "Lcom.squareup.okhttp.internal.spdy.HpackDraft10$Reader;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader = { 2, "Reader", "com.squareup.okhttp.internal.spdy", "Http20Draft16", 0x18, 15, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader;
}

@end

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_initWithOkioBufferedSource_withInt_withBoolean_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<OkioBufferedSource> source, jint headerTableSize, jboolean client) {
  NSObject_init(self);
  self->source_ = source;
  self->client_ = client;
  self->continuation_ = new_ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_initWithOkioBufferedSource_(self->source_);
  self->hpackReader_ = new_ComSquareupOkhttpInternalSpdyHpackDraft10_Reader_initWithInt_withOkioSource_(headerTableSize, self->continuation_);
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *new_ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_initWithOkioBufferedSource_withInt_withBoolean_(id<OkioBufferedSource> source, jint headerTableSize, jboolean client) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self = [ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader alloc];
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_initWithOkioBufferedSource_withInt_withBoolean_(self, source, headerTableSize, client);
  return self;
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *create_ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_initWithOkioBufferedSource_withInt_withBoolean_(id<OkioBufferedSource> source, jint headerTableSize, jboolean client) {
  return new_ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_initWithOkioBufferedSource_withInt_withBoolean_(source, headerTableSize, client);
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeadersWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (streamId == 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR: TYPE_HEADERS streamId == 0", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  jboolean endStream = (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_STREAM) != 0;
  jshort padding = (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED) != 0 ? (jshort) ([((id<OkioBufferedSource>) nil_chk(self->source_)) readByte] & (jint) 0xff) : 0;
  if ((flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PRIORITY) != 0) {
    ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_(self, handler, streamId);
    length -= 5;
  }
  length = ComSquareupOkhttpInternalSpdyHttp20Draft16_lengthWithoutPaddingWithInt_withByte_withShort_(length, flags, padding);
  id<JavaUtilList> headerBlock = ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeaderBlockWithInt_withShort_withByte_withInt_(self, length, padding, flags, streamId);
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) headersWithBoolean:false withBoolean:endStream withInt:streamId withInt:-1 withJavaUtilList:headerBlock withComSquareupOkhttpInternalSpdyHeadersMode:JreLoadEnum(ComSquareupOkhttpInternalSpdyHeadersMode, HTTP_20_HEADERS)];
}

id<JavaUtilList> ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeaderBlockWithInt_withShort_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, jint length, jshort padding, jbyte flags, jint streamId) {
  ((ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *) nil_chk(self->continuation_))->length_ = self->continuation_->left_ = length;
  self->continuation_->padding_ = padding;
  self->continuation_->flags_ = flags;
  self->continuation_->streamId_ = streamId;
  [((ComSquareupOkhttpInternalSpdyHpackDraft10_Reader *) nil_chk(self->hpackReader_)) readHeaders];
  return [self->hpackReader_ getAndResetHeaderList];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readDataWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  jboolean inFinished = (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_STREAM) != 0;
  jboolean gzipped = (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_COMPRESSED) != 0;
  if (gzipped) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR: FLAG_COMPRESSED without SETTINGS_COMPRESS_DATA", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  }
  jshort padding = (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED) != 0 ? (jshort) ([((id<OkioBufferedSource>) nil_chk(self->source_)) readByte] & (jint) 0xff) : 0;
  length = ComSquareupOkhttpInternalSpdyHttp20Draft16_lengthWithoutPaddingWithInt_withByte_withShort_(length, flags, padding);
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) dataWithBoolean:inFinished withInt:streamId withOkioBufferedSource:self->source_ withInt:length];
  [((id<OkioBufferedSource>) nil_chk(self->source_)) skipWithLong:padding];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (length != 5) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_PRIORITY length: %d != 5", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length) } count:1 type:NSObject_class_()]);
  if (streamId == 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_PRIORITY streamId == 0", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_(self, handler, streamId);
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPriorityWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint streamId) {
  jint w1 = [((id<OkioBufferedSource>) nil_chk(self->source_)) readInt];
  jboolean exclusive = (w1 & -0x7fffffff - 1) != 0;
  jint streamDependency = (w1 & (jint) 0x7fffffff);
  jint weight = ([self->source_ readByte] & (jint) 0xff) + 1;
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) priorityWithInt:streamId withInt:streamDependency withInt:weight withBoolean:exclusive];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readRstStreamWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (length != 4) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_RST_STREAM length: %d != 4", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length) } count:1 type:NSObject_class_()]);
  if (streamId == 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_RST_STREAM streamId == 0", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  jint errorCodeInt = [((id<OkioBufferedSource>) nil_chk(self->source_)) readInt];
  ComSquareupOkhttpInternalSpdyErrorCode *errorCode = ComSquareupOkhttpInternalSpdyErrorCode_fromHttp2WithInt_(errorCodeInt);
  if (errorCode == nil) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_RST_STREAM unexpected error code: %d", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(errorCodeInt) } count:1 type:NSObject_class_()]);
  }
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) rstStreamWithInt:streamId withComSquareupOkhttpInternalSpdyErrorCode:errorCode];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readSettingsWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (streamId != 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_SETTINGS streamId != 0", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  if ((flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_ACK) != 0) {
    if (length != 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"FRAME_SIZE_ERROR ack frame should be empty!", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
    [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) ackSettings];
    return;
  }
  if (length % 6 != 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_SETTINGS length %% 6 != 0: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length) } count:1 type:NSObject_class_()]);
  ComSquareupOkhttpInternalSpdySettings *settings = new_ComSquareupOkhttpInternalSpdySettings_init();
  for (jint i = 0; i < length; i += 6) {
    jshort id_ = [((id<OkioBufferedSource>) nil_chk(self->source_)) readShort];
    jint value = [self->source_ readInt];
    switch (id_) {
      case 1:
      break;
      case 2:
      if (value != 0 && value != 1) {
        @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR SETTINGS_ENABLE_PUSH != 0 or 1", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
      }
      break;
      case 3:
      id_ = 4;
      break;
      case 4:
      id_ = 7;
      if (value < 0) {
        @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR SETTINGS_INITIAL_WINDOW_SIZE > 2^31 - 1", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
      }
      break;
      case 5:
      if (value < ComSquareupOkhttpInternalSpdyHttp20Draft16_INITIAL_MAX_FRAME_SIZE || value > 16777215) {
        @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR SETTINGS_MAX_FRAME_SIZE: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(value) } count:1 type:NSObject_class_()]);
      }
      break;
      case 6:
      break;
      default:
      @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR invalid settings id: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangShort_valueOfWithShort_(id_) } count:1 type:NSObject_class_()]);
    }
    (void) [settings setWithInt:id_ withInt:0 withInt:value];
  }
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) settingsWithBoolean:false withComSquareupOkhttpInternalSpdySettings:settings];
  if ([settings getHeaderTableSize] >= 0) {
    [((ComSquareupOkhttpInternalSpdyHpackDraft10_Reader *) nil_chk(self->hpackReader_)) headerTableSizeSettingWithInt:[settings getHeaderTableSize]];
  }
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPushPromiseWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (streamId == 0) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"PROTOCOL_ERROR: TYPE_PUSH_PROMISE streamId == 0", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  }
  jshort padding = (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED) != 0 ? (jshort) ([((id<OkioBufferedSource>) nil_chk(self->source_)) readByte] & (jint) 0xff) : 0;
  jint promisedStreamId = [((id<OkioBufferedSource>) nil_chk(self->source_)) readInt] & (jint) 0x7fffffff;
  length -= 4;
  length = ComSquareupOkhttpInternalSpdyHttp20Draft16_lengthWithoutPaddingWithInt_withByte_withShort_(length, flags, padding);
  id<JavaUtilList> headerBlock = ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readHeaderBlockWithInt_withShort_withByte_withInt_(self, length, padding, flags, streamId);
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) pushPromiseWithInt:streamId withInt:promisedStreamId withJavaUtilList:headerBlock];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readPingWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (length != 8) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_PING length != 8: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length) } count:1 type:NSObject_class_()]);
  if (streamId != 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_PING streamId != 0", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  jint payload1 = [((id<OkioBufferedSource>) nil_chk(self->source_)) readInt];
  jint payload2 = [self->source_ readInt];
  jboolean ack = (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_ACK) != 0;
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) pingWithBoolean:ack withInt:payload1 withInt:payload2];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readGoAwayWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (length < 8) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_GOAWAY length < 8: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length) } count:1 type:NSObject_class_()]);
  if (streamId != 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_GOAWAY streamId != 0", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  jint lastStreamId = [((id<OkioBufferedSource>) nil_chk(self->source_)) readInt];
  jint errorCodeInt = [self->source_ readInt];
  jint opaqueDataLength = length - 8;
  ComSquareupOkhttpInternalSpdyErrorCode *errorCode = ComSquareupOkhttpInternalSpdyErrorCode_fromHttp2WithInt_(errorCodeInt);
  if (errorCode == nil) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_GOAWAY unexpected error code: %d", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(errorCodeInt) } count:1 type:NSObject_class_()]);
  }
  OkioByteString *debugData = JreLoadStatic(OkioByteString, EMPTY);
  if (opaqueDataLength > 0) {
    debugData = [self->source_ readByteStringWithLong:opaqueDataLength];
  }
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) goAwayWithInt:lastStreamId withComSquareupOkhttpInternalSpdyErrorCode:errorCode withOkioByteString:debugData];
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader_readWindowUpdateWithComSquareupOkhttpInternalSpdyFrameReader_Handler_withInt_withByte_withInt_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader *self, id<ComSquareupOkhttpInternalSpdyFrameReader_Handler> handler, jint length, jbyte flags, jint streamId) {
  if (length != 4) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_WINDOW_UPDATE length !=4: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(length) } count:1 type:NSObject_class_()]);
  jlong increment = ([((id<OkioBufferedSource>) nil_chk(self->source_)) readInt] & (jlong) 0x7fffffffLL);
  if (increment == 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"windowSizeIncrement was 0", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(increment) } count:1 type:NSObject_class_()]);
  [((id<ComSquareupOkhttpInternalSpdyFrameReader_Handler>) nil_chk(handler)) windowUpdateWithInt:streamId withLong:increment];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalSpdyHttp20Draft16_Reader)

@implementation ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer

- (instancetype)initWithOkioBufferedSink:(id<OkioBufferedSink>)sink
                             withBoolean:(jboolean)client {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_initWithOkioBufferedSink_withBoolean_(self, sink, client);
  return self;
}

- (void)flush {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    [((id<OkioBufferedSink>) nil_chk(sink_)) flush];
  }
}

- (void)ackSettingsWithComSquareupOkhttpInternalSpdySettings:(ComSquareupOkhttpInternalSpdySettings *)peerSettings {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    self->maxFrameSize_ = [((ComSquareupOkhttpInternalSpdySettings *) nil_chk(peerSettings)) getMaxFrameSizeWithInt:maxFrameSize_];
    jint length = 0;
    jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_SETTINGS;
    jbyte flags = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_ACK;
    jint streamId = 0;
    [self frameHeaderWithInt:streamId withInt:length withByte:type withByte:flags];
    [((id<OkioBufferedSink>) nil_chk(sink_)) flush];
  }
}

- (void)connectionPreface {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    if (!client_) return;
    if ([((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger))) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE)]) {
      [JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger) fineWithNSString:NSString_formatWithNSString_withNSObjectArray_(@">> CONNECTION %s", [IOSObjectArray newArrayWithObjects:(id[]){ [((OkioByteString *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, CONNECTION_PREFACE))) hex] } count:1 type:NSObject_class_()])];
    }
    (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeWithByteArray:[((OkioByteString *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, CONNECTION_PREFACE))) toByteArray]];
    [sink_ flush];
  }
}

- (void)synStreamWithBoolean:(jboolean)outFinished
                 withBoolean:(jboolean)inFinished
                     withInt:(jint)streamId
                     withInt:(jint)associatedStreamId
            withJavaUtilList:(id<JavaUtilList>)headerBlock {
  @synchronized(self) {
    if (inFinished) @throw new_JavaLangUnsupportedOperationException_init();
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    [self headersWithBoolean:outFinished withInt:streamId withJavaUtilList:headerBlock];
  }
}

- (void)synReplyWithBoolean:(jboolean)outFinished
                    withInt:(jint)streamId
           withJavaUtilList:(id<JavaUtilList>)headerBlock {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    [self headersWithBoolean:outFinished withInt:streamId withJavaUtilList:headerBlock];
  }
}

- (void)headersWithInt:(jint)streamId
      withJavaUtilList:(id<JavaUtilList>)headerBlock {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    [self headersWithBoolean:false withInt:streamId withJavaUtilList:headerBlock];
  }
}

- (void)pushPromiseWithInt:(jint)streamId
                   withInt:(jint)promisedStreamId
          withJavaUtilList:(id<JavaUtilList>)requestHeaders {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    if ([((OkioBuffer *) nil_chk(hpackBuffer_)) size] != 0) @throw new_JavaLangIllegalStateException_init();
    [((ComSquareupOkhttpInternalSpdyHpackDraft10_Writer *) nil_chk(hpackWriter_)) writeHeadersWithJavaUtilList:requestHeaders];
    jlong byteCount = [hpackBuffer_ size];
    jint length = (jint) JavaLangMath_minWithLong_withLong_(maxFrameSize_ - 4, byteCount);
    jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PUSH_PROMISE;
    jbyte flags = byteCount == length ? ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS : 0;
    [self frameHeaderWithInt:streamId withInt:length + 4 withByte:type withByte:flags];
    (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeIntWithInt:promisedStreamId & (jint) 0x7fffffff];
    [sink_ writeWithOkioBuffer:hpackBuffer_ withLong:length];
    if (byteCount > length) ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_writeContinuationFramesWithInt_withLong_(self, streamId, byteCount - length);
  }
}

- (void)headersWithBoolean:(jboolean)outFinished
                   withInt:(jint)streamId
          withJavaUtilList:(id<JavaUtilList>)headerBlock {
  if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
  if ([((OkioBuffer *) nil_chk(hpackBuffer_)) size] != 0) @throw new_JavaLangIllegalStateException_init();
  [((ComSquareupOkhttpInternalSpdyHpackDraft10_Writer *) nil_chk(hpackWriter_)) writeHeadersWithJavaUtilList:headerBlock];
  jlong byteCount = [hpackBuffer_ size];
  jint length = (jint) JavaLangMath_minWithLong_withLong_(maxFrameSize_, byteCount);
  jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_HEADERS;
  jbyte flags = byteCount == length ? ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS : 0;
  if (outFinished) flags |= ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_STREAM;
  [self frameHeaderWithInt:streamId withInt:length withByte:type withByte:flags];
  [((id<OkioBufferedSink>) nil_chk(sink_)) writeWithOkioBuffer:hpackBuffer_ withLong:length];
  if (byteCount > length) ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_writeContinuationFramesWithInt_withLong_(self, streamId, byteCount - length);
}

- (void)writeContinuationFramesWithInt:(jint)streamId
                              withLong:(jlong)byteCount {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_writeContinuationFramesWithInt_withLong_(self, streamId, byteCount);
}

- (void)rstStreamWithInt:(jint)streamId
withComSquareupOkhttpInternalSpdyErrorCode:(ComSquareupOkhttpInternalSpdyErrorCode *)errorCode {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    if (((ComSquareupOkhttpInternalSpdyErrorCode *) nil_chk(errorCode))->spdyRstCode_ == -1) @throw new_JavaLangIllegalArgumentException_init();
    jint length = 4;
    jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_RST_STREAM;
    jbyte flags = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE;
    [self frameHeaderWithInt:streamId withInt:length withByte:type withByte:flags];
    (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeIntWithInt:errorCode->httpCode_];
    [sink_ flush];
  }
}

- (jint)maxDataLength {
  return maxFrameSize_;
}

- (void)dataWithBoolean:(jboolean)outFinished
                withInt:(jint)streamId
         withOkioBuffer:(OkioBuffer *)source
                withInt:(jint)byteCount {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    jbyte flags = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE;
    if (outFinished) flags |= ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_STREAM;
    [self dataFrameWithInt:streamId withByte:flags withOkioBuffer:source withInt:byteCount];
  }
}

- (void)dataFrameWithInt:(jint)streamId
                withByte:(jbyte)flags
          withOkioBuffer:(OkioBuffer *)buffer
                 withInt:(jint)byteCount {
  jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_DATA;
  [self frameHeaderWithInt:streamId withInt:byteCount withByte:type withByte:flags];
  if (byteCount > 0) {
    [((id<OkioBufferedSink>) nil_chk(sink_)) writeWithOkioBuffer:buffer withLong:byteCount];
  }
}

- (void)settingsWithComSquareupOkhttpInternalSpdySettings:(ComSquareupOkhttpInternalSpdySettings *)settings {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    jint length = [((ComSquareupOkhttpInternalSpdySettings *) nil_chk(settings)) size] * 6;
    jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_SETTINGS;
    jbyte flags = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE;
    jint streamId = 0;
    [self frameHeaderWithInt:streamId withInt:length withByte:type withByte:flags];
    for (jint i = 0; i < ComSquareupOkhttpInternalSpdySettings_COUNT; i++) {
      if (![settings isSetWithInt:i]) continue;
      jint id_ = i;
      if (id_ == 4) id_ = 3;
      else if (id_ == 7) id_ = 4;
      (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeShortWithInt:id_];
      (void) [sink_ writeIntWithInt:[settings getWithInt:i]];
    }
    [((id<OkioBufferedSink>) nil_chk(sink_)) flush];
  }
}

- (void)pingWithBoolean:(jboolean)ack
                withInt:(jint)payload1
                withInt:(jint)payload2 {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    jint length = 8;
    jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PING;
    jbyte flags = ack ? ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_ACK : ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE;
    jint streamId = 0;
    [self frameHeaderWithInt:streamId withInt:length withByte:type withByte:flags];
    (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeIntWithInt:payload1];
    (void) [sink_ writeIntWithInt:payload2];
    [sink_ flush];
  }
}

- (void)goAwayWithInt:(jint)lastGoodStreamId
withComSquareupOkhttpInternalSpdyErrorCode:(ComSquareupOkhttpInternalSpdyErrorCode *)errorCode
        withByteArray:(IOSByteArray *)debugData {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    if (((ComSquareupOkhttpInternalSpdyErrorCode *) nil_chk(errorCode))->httpCode_ == -1) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_illegalArgumentWithNSString_withNSObjectArray_(@"errorCode.httpCode == -1", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
    jint length = 8 + ((IOSByteArray *) nil_chk(debugData))->size_;
    jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_GOAWAY;
    jbyte flags = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE;
    jint streamId = 0;
    [self frameHeaderWithInt:streamId withInt:length withByte:type withByte:flags];
    (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeIntWithInt:lastGoodStreamId];
    (void) [sink_ writeIntWithInt:errorCode->httpCode_];
    if (debugData->size_ > 0) {
      (void) [sink_ writeWithByteArray:debugData];
    }
    [sink_ flush];
  }
}

- (void)windowUpdateWithInt:(jint)streamId
                   withLong:(jlong)windowSizeIncrement {
  @synchronized(self) {
    if (closed_) @throw new_JavaIoIOException_initWithNSString_(@"closed");
    if (windowSizeIncrement == 0 || windowSizeIncrement > (jlong) 0x7fffffffLL) {
      @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_illegalArgumentWithNSString_withNSObjectArray_(@"windowSizeIncrement == 0 || windowSizeIncrement > 0x7fffffffL: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangLong_valueOfWithLong_(windowSizeIncrement) } count:1 type:NSObject_class_()]);
    }
    jint length = 4;
    jbyte type = ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_WINDOW_UPDATE;
    jbyte flags = ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE;
    [self frameHeaderWithInt:streamId withInt:length withByte:type withByte:flags];
    (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeIntWithInt:(jint) windowSizeIncrement];
    [sink_ flush];
  }
}

- (void)close {
  @synchronized(self) {
    closed_ = true;
    [((id<OkioBufferedSink>) nil_chk(sink_)) close];
  }
}

- (void)frameHeaderWithInt:(jint)streamId
                   withInt:(jint)length
                  withByte:(jbyte)type
                  withByte:(jbyte)flags {
  if ([((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger))) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE)]) [JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger) fineWithNSString:ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatHeaderWithBoolean_withInt_withInt_withByte_withByte_(false, streamId, length, type, flags)];
  if (length > maxFrameSize_) {
    @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_illegalArgumentWithNSString_withNSObjectArray_(@"FRAME_SIZE_ERROR length > %d: %d", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(maxFrameSize_), JavaLangInteger_valueOfWithInt_(length) } count:2 type:NSObject_class_()]);
  }
  if ((streamId & -0x7fffffff - 1) != 0) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_illegalArgumentWithNSString_withNSObjectArray_(@"reserved bit set: %s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_(streamId) } count:1 type:NSObject_class_()]);
  ComSquareupOkhttpInternalSpdyHttp20Draft16_writeMediumWithOkioBufferedSink_withInt_(sink_, length);
  (void) [((id<OkioBufferedSink>) nil_chk(sink_)) writeByteWithInt:type & (jint) 0xff];
  (void) [sink_ writeByteWithInt:flags & (jint) 0xff];
  (void) [sink_ writeIntWithInt:streamId & (jint) 0x7fffffff];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOkioBufferedSink:withBoolean:", "Writer", NULL, 0x0, NULL, NULL },
    { "flush", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "ackSettingsWithComSquareupOkhttpInternalSpdySettings:", "ackSettings", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "connectionPreface", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "synStreamWithBoolean:withBoolean:withInt:withInt:withJavaUtilList:", "synStream", "V", 0x21, "Ljava.io.IOException;", "(ZZIILjava/util/List<Lcom/squareup/okhttp/internal/spdy/SpdyHeader;>;)V" },
    { "synReplyWithBoolean:withInt:withJavaUtilList:", "synReply", "V", 0x21, "Ljava.io.IOException;", "(ZILjava/util/List<Lcom/squareup/okhttp/internal/spdy/SpdyHeader;>;)V" },
    { "headersWithInt:withJavaUtilList:", "headers", "V", 0x21, "Ljava.io.IOException;", "(ILjava/util/List<Lcom/squareup/okhttp/internal/spdy/SpdyHeader;>;)V" },
    { "pushPromiseWithInt:withInt:withJavaUtilList:", "pushPromise", "V", 0x21, "Ljava.io.IOException;", "(IILjava/util/List<Lcom/squareup/okhttp/internal/spdy/SpdyHeader;>;)V" },
    { "headersWithBoolean:withInt:withJavaUtilList:", "headers", "V", 0x0, "Ljava.io.IOException;", "(ZILjava/util/List<Lcom/squareup/okhttp/internal/spdy/SpdyHeader;>;)V" },
    { "writeContinuationFramesWithInt:withLong:", "writeContinuationFrames", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "rstStreamWithInt:withComSquareupOkhttpInternalSpdyErrorCode:", "rstStream", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "maxDataLength", NULL, "I", 0x1, NULL, NULL },
    { "dataWithBoolean:withInt:withOkioBuffer:withInt:", "data", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "dataFrameWithInt:withByte:withOkioBuffer:withInt:", "dataFrame", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "settingsWithComSquareupOkhttpInternalSpdySettings:", "settings", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "pingWithBoolean:withInt:withInt:", "ping", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "goAwayWithInt:withComSquareupOkhttpInternalSpdyErrorCode:withByteArray:", "goAway", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "windowUpdateWithInt:withLong:", "windowUpdate", "V", 0x21, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "frameHeaderWithInt:withInt:withByte:withByte:", "frameHeader", "V", 0x0, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sink_", NULL, 0x12, "Lokio.BufferedSink;", NULL, NULL, .constantValue.asLong = 0 },
    { "client_", NULL, 0x12, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "hpackBuffer_", NULL, 0x12, "Lokio.Buffer;", NULL, NULL, .constantValue.asLong = 0 },
    { "hpackWriter_", NULL, 0x12, "Lcom.squareup.okhttp.internal.spdy.HpackDraft10$Writer;", NULL, NULL, .constantValue.asLong = 0 },
    { "maxFrameSize_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "closed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer = { 2, "Writer", "com.squareup.okhttp.internal.spdy", "Http20Draft16", 0x18, 20, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer;
}

@end

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_initWithOkioBufferedSink_withBoolean_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer *self, id<OkioBufferedSink> sink, jboolean client) {
  NSObject_init(self);
  self->sink_ = sink;
  self->client_ = client;
  self->hpackBuffer_ = new_OkioBuffer_init();
  self->hpackWriter_ = new_ComSquareupOkhttpInternalSpdyHpackDraft10_Writer_initWithOkioBuffer_(self->hpackBuffer_);
  self->maxFrameSize_ = ComSquareupOkhttpInternalSpdyHttp20Draft16_INITIAL_MAX_FRAME_SIZE;
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer *new_ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer *self = [ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer alloc];
  ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_initWithOkioBufferedSink_withBoolean_(self, sink, client);
  return self;
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer *create_ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_initWithOkioBufferedSink_withBoolean_(id<OkioBufferedSink> sink, jboolean client) {
  return new_ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_initWithOkioBufferedSink_withBoolean_(sink, client);
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer_writeContinuationFramesWithInt_withLong_(ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer *self, jint streamId, jlong byteCount) {
  while (byteCount > 0) {
    jint length = (jint) JavaLangMath_minWithLong_withLong_(self->maxFrameSize_, byteCount);
    byteCount -= length;
    [self frameHeaderWithInt:streamId withInt:length withByte:ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_CONTINUATION withByte:byteCount == 0 ? ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS : 0];
    [((id<OkioBufferedSink>) nil_chk(self->sink_)) writeWithOkioBuffer:self->hpackBuffer_ withLong:length];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalSpdyHttp20Draft16_Writer)

@implementation ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource

- (instancetype)initWithOkioBufferedSource:(id<OkioBufferedSource>)source {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_initWithOkioBufferedSource_(self, source);
  return self;
}

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount {
  while (left_ == 0) {
    [((id<OkioBufferedSource>) nil_chk(source_)) skipWithLong:padding_];
    padding_ = 0;
    if ((flags_ & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS) != 0) return -1;
    ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_readContinuationHeader(self);
  }
  jlong read = [((id<OkioBufferedSource>) nil_chk(source_)) readWithOkioBuffer:sink withLong:JavaLangMath_minWithLong_withLong_(byteCount, left_)];
  if (read == -1) return -1;
  left_ -= read;
  return read;
}

- (OkioTimeout *)timeout {
  return [((id<OkioBufferedSource>) nil_chk(source_)) timeout];
}

- (void)close {
}

- (void)readContinuationHeader {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_readContinuationHeader(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithOkioBufferedSource:", "ContinuationSource", NULL, 0x1, NULL, NULL },
    { "readWithOkioBuffer:withLong:", "read", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "timeout", NULL, "Lokio.Timeout;", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "readContinuationHeader", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "source_", NULL, 0x12, "Lokio.BufferedSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "length_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "flags_", NULL, 0x0, "B", NULL, NULL, .constantValue.asLong = 0 },
    { "streamId_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "left_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "padding_", NULL, 0x0, "S", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource = { 2, "ContinuationSource", "com.squareup.okhttp.internal.spdy", "Http20Draft16", 0x18, 5, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource;
}

@end

void ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_initWithOkioBufferedSource_(ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *self, id<OkioBufferedSource> source) {
  NSObject_init(self);
  self->source_ = source;
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *new_ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_initWithOkioBufferedSource_(id<OkioBufferedSource> source) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *self = [ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource alloc];
  ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_initWithOkioBufferedSource_(self, source);
  return self;
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *create_ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_initWithOkioBufferedSource_(id<OkioBufferedSource> source) {
  return new_ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_initWithOkioBufferedSource_(source);
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource_readContinuationHeader(ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource *self) {
  jint previousStreamId = self->streamId_;
  self->length_ = self->left_ = ComSquareupOkhttpInternalSpdyHttp20Draft16_readMediumWithOkioBufferedSource_(self->source_);
  jbyte type = (jbyte) ([((id<OkioBufferedSource>) nil_chk(self->source_)) readByte] & (jint) 0xff);
  self->flags_ = (jbyte) ([self->source_ readByte] & (jint) 0xff);
  if ([((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger))) isLoggableWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, FINE)]) [JreLoadStatic(ComSquareupOkhttpInternalSpdyHttp20Draft16, logger) fineWithNSString:ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatHeaderWithBoolean_withInt_withInt_withByte_withByte_(true, self->streamId_, self->length_, type, self->flags_)];
  self->streamId_ = ([self->source_ readInt] & (jint) 0x7fffffff);
  if (type != ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_CONTINUATION) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"%s != TYPE_CONTINUATION", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangByte_valueOfWithByte_(type) } count:1 type:NSObject_class_()]);
  if (self->streamId_ != previousStreamId) @throw ComSquareupOkhttpInternalSpdyHttp20Draft16_ioExceptionWithNSString_withNSObjectArray_(@"TYPE_CONTINUATION streamId changed", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalSpdyHttp20Draft16_ContinuationSource)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger)

@implementation ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger

+ (NSString *)formatHeaderWithBoolean:(jboolean)inbound
                              withInt:(jint)streamId
                              withInt:(jint)length
                             withByte:(jbyte)type
                             withByte:(jbyte)flags {
  return ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatHeaderWithBoolean_withInt_withInt_withByte_withByte_(inbound, streamId, length, type, flags);
}

+ (NSString *)formatFlagsWithByte:(jbyte)type
                         withByte:(jbyte)flags {
  return ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatFlagsWithByte_withByte_(type, flags);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger class]) {
    ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_TYPES = [IOSObjectArray newArrayWithObjects:(id[]){ @"DATA", @"HEADERS", @"PRIORITY", @"RST_STREAM", @"SETTINGS", @"PUSH_PROMISE", @"PING", @"GOAWAY", @"WINDOW_UPDATE", @"CONTINUATION" } count:10 type:NSString_class_()];
    ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS = [IOSObjectArray newArrayWithLength:(jint) 0x40 type:NSString_class_()];
    ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY = [IOSObjectArray newArrayWithLength:256 type:NSString_class_()];
    {
      for (jint i = 0; i < ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY->size_; i++) {
        (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY, i, [((NSString *) nil_chk(NSString_formatWithNSString_withNSObjectArray_(@"%8s", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangInteger_toBinaryStringWithInt_(i) } count:1 type:NSObject_class_()]))) replace:' ' withChar:'0']);
      }
      (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_NONE, @"");
      (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_STREAM, @"END_STREAM");
      IOSIntArray *prefixFlags = [IOSIntArray newArrayWithInts:(jint[]){ ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_STREAM } count:1];
      (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED, @"PADDED");
      {
        IOSIntArray *a__ = prefixFlags;
        jint const *b__ = a__->buffer_;
        jint const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          jint prefixFlag = *b__++;
          (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, prefixFlag | ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED, JreStrcat("$$", IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, prefixFlag), @"|PADDED"));
        }
      }
      (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS, @"END_HEADERS");
      (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PRIORITY, @"PRIORITY");
      (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS | ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PRIORITY, @"END_HEADERS|PRIORITY");
      IOSIntArray *frameFlags = [IOSIntArray newArrayWithInts:(jint[]){ ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PRIORITY, ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_HEADERS | ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PRIORITY } count:3];
      {
        IOSIntArray *a__ = frameFlags;
        jint const *b__ = a__->buffer_;
        jint const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          jint frameFlag = *b__++;
          {
            IOSIntArray *a__ = prefixFlags;
            jint const *b__ = a__->buffer_;
            jint const *e__ = b__ + a__->size_;
            while (b__ < e__) {
              jint prefixFlag = *b__++;
              (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, prefixFlag | frameFlag, JreStrcat("$C$", IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, prefixFlag), '|', IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, frameFlag)));
              (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, prefixFlag | frameFlag | ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_PADDED, JreStrcat("$C$$", IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, prefixFlag), '|', IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, frameFlag), @"|PADDED"));
            }
          }
        }
      }
      for (jint i = 0; i < ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS->size_; i++) {
        if (IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, i) == nil) (void) IOSObjectArray_Set(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, i, IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY, i));
      }
    }
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "formatHeaderWithBoolean:withInt:withInt:withByte:withByte:", "formatHeader", "Ljava.lang.String;", 0x8, NULL, NULL },
    { "formatFlagsWithByte:withByte:", "formatFlags", "Ljava.lang.String;", 0x8, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TYPES", "TYPES", 0x1a, "[Ljava.lang.String;", &ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_TYPES, NULL, .constantValue.asLong = 0 },
    { "FLAGS", "FLAGS", 0x1a, "[Ljava.lang.String;", &ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, NULL, .constantValue.asLong = 0 },
    { "BINARY", "BINARY", 0x1a, "[Ljava.lang.String;", &ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger = { 2, "FrameLogger", "com.squareup.okhttp.internal.spdy", "Http20Draft16", 0x18, 3, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger;
}

@end

NSString *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatHeaderWithBoolean_withInt_withInt_withByte_withByte_(jboolean inbound, jint streamId, jint length, jbyte type, jbyte flags) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_initialize();
  NSString *formattedType = type < ((IOSObjectArray *) nil_chk(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_TYPES))->size_ ? IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_TYPES, type) : NSString_formatWithNSString_withNSObjectArray_(@"0x%02x", [IOSObjectArray newArrayWithObjects:(id[]){ JavaLangByte_valueOfWithByte_(type) } count:1 type:NSObject_class_()]);
  NSString *formattedFlags = ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatFlagsWithByte_withByte_(type, flags);
  return NSString_formatWithNSString_withNSObjectArray_(@"%s 0x%08x %5d %-13s %s", [IOSObjectArray newArrayWithObjects:(id[]){ inbound ? @"<<" : @">>", JavaLangInteger_valueOfWithInt_(streamId), JavaLangInteger_valueOfWithInt_(length), formattedType, formattedFlags } count:5 type:NSObject_class_()]);
}

NSString *ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_formatFlagsWithByte_withByte_(jbyte type, jbyte flags) {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_initialize();
  if (flags == 0) return @"";
  switch (type) {
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_SETTINGS:
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PING:
    return flags == ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_ACK ? @"ACK" : IOSObjectArray_Get(nil_chk(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY), flags);
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PRIORITY:
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_RST_STREAM:
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_GOAWAY:
    case ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_WINDOW_UPDATE:
    return IOSObjectArray_Get(nil_chk(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY), flags);
  }
  NSString *result = flags < ((IOSObjectArray *) nil_chk(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS))->size_ ? IOSObjectArray_Get(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_FLAGS, flags) : IOSObjectArray_Get(nil_chk(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_BINARY), flags);
  if (type == ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_PUSH_PROMISE && (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_END_PUSH_PROMISE) != 0) {
    return [result replace:@"HEADERS" withSequence:@"PUSH_PROMISE"];
  }
  else if (type == ComSquareupOkhttpInternalSpdyHttp20Draft16_TYPE_DATA && (flags & ComSquareupOkhttpInternalSpdyHttp20Draft16_FLAG_COMPRESSED) != 0) {
    return [result replace:@"PRIORITY" withSequence:@"COMPRESSED"];
  }
  return result;
}

void ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_init(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger *self) {
  NSObject_init(self);
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger *new_ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_init() {
  ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger *self = [ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger alloc];
  ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_init(self);
  return self;
}

ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger *create_ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_init() {
  return new_ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalSpdyHttp20Draft16_FrameLogger)
