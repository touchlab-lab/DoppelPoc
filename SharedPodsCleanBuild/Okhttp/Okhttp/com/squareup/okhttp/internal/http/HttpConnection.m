//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpConnection.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Connection.h"
#include "com/squareup/okhttp/ConnectionPool.h"
#include "com/squareup/okhttp/Headers.h"
#include "com/squareup/okhttp/Protocol.h"
#include "com/squareup/okhttp/Response.h"
#include "com/squareup/okhttp/internal/Internal.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "com/squareup/okhttp/internal/http/HttpConnection.h"
#include "com/squareup/okhttp/internal/http/HttpEngine.h"
#include "com/squareup/okhttp/internal/http/OkHeaders.h"
#include "com/squareup/okhttp/internal/http/RetryableSink.h"
#include "com/squareup/okhttp/internal/http/StatusLine.h"
#include "com/squareup/okhttp/internal/http/Transport.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Math.h"
#include "java/lang/NumberFormatException.h"
#include "java/net/ProtocolException.h"
#include "java/net/Socket.h"
#include "java/net/SocketTimeoutException.h"
#include "java/util/concurrent/TimeUnit.h"
#include "okio/Buffer.h"
#include "okio/BufferedSink.h"
#include "okio/BufferedSource.h"
#include "okio/Okio.h"
#include "okio/Sink.h"
#include "okio/Source.h"
#include "okio/Timeout.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface ComSquareupOkhttpInternalHttpHttpConnection () {
 @public
  ComSquareupOkhttpConnectionPool *pool_;
  ComSquareupOkhttpConnection *connection_;
  JavaNetSocket *socket_;
  id<OkioBufferedSource> source_;
  id<OkioBufferedSink> sink_;
  jint state_;
  jint onIdle_;
}

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection, pool_, ComSquareupOkhttpConnectionPool *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection, connection_, ComSquareupOkhttpConnection *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection, socket_, JavaNetSocket *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection, source_, id<OkioBufferedSource>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection, sink_, id<OkioBufferedSink>)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_STATE_IDLE();
#define ComSquareupOkhttpInternalHttpHttpConnection_STATE_IDLE 0
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, STATE_IDLE, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_STATE_OPEN_REQUEST_BODY();
#define ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_REQUEST_BODY 1
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, STATE_OPEN_REQUEST_BODY, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_STATE_WRITING_REQUEST_BODY();
#define ComSquareupOkhttpInternalHttpHttpConnection_STATE_WRITING_REQUEST_BODY 2
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, STATE_WRITING_REQUEST_BODY, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_STATE_READ_RESPONSE_HEADERS();
#define ComSquareupOkhttpInternalHttpHttpConnection_STATE_READ_RESPONSE_HEADERS 3
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, STATE_READ_RESPONSE_HEADERS, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_STATE_OPEN_RESPONSE_BODY();
#define ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_RESPONSE_BODY 4
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, STATE_OPEN_RESPONSE_BODY, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_STATE_READING_RESPONSE_BODY();
#define ComSquareupOkhttpInternalHttpHttpConnection_STATE_READING_RESPONSE_BODY 5
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, STATE_READING_RESPONSE_BODY, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_STATE_CLOSED();
#define ComSquareupOkhttpInternalHttpHttpConnection_STATE_CLOSED 6
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, STATE_CLOSED, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_ON_IDLE_HOLD();
#define ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_HOLD 0
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, ON_IDLE_HOLD, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_ON_IDLE_POOL();
#define ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_POOL 1
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, ON_IDLE_POOL, jint)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_get_ON_IDLE_CLOSE();
#define ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_CLOSE 2
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection, ON_IDLE_CLOSE, jint)

inline IOSByteArray *ComSquareupOkhttpInternalHttpHttpConnection_get_CRLF();
static IOSByteArray *ComSquareupOkhttpInternalHttpHttpConnection_CRLF;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpHttpConnection, CRLF, IOSByteArray *)

inline IOSByteArray *ComSquareupOkhttpInternalHttpHttpConnection_get_HEX_DIGITS();
static IOSByteArray *ComSquareupOkhttpInternalHttpHttpConnection_HEX_DIGITS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpHttpConnection, HEX_DIGITS, IOSByteArray *)

inline IOSByteArray *ComSquareupOkhttpInternalHttpHttpConnection_get_FINAL_CHUNK();
static IOSByteArray *ComSquareupOkhttpInternalHttpHttpConnection_FINAL_CHUNK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpHttpConnection, FINAL_CHUNK, IOSByteArray *)

@interface ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink : NSObject < OkioSink > {
 @public
  ComSquareupOkhttpInternalHttpHttpConnection *this$0_;
  jboolean closed_;
  jlong bytesRemaining_;
}

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$
                                                           withLong:(jlong)bytesRemaining;

- (OkioTimeout *)timeout;

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount;

- (void)flush;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink, this$0_, ComSquareupOkhttpInternalHttpHttpConnection *)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong bytesRemaining);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink *new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong bytesRemaining) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink *create_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong bytesRemaining);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink)

@interface ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink : NSObject < OkioSink > {
 @public
  ComSquareupOkhttpInternalHttpHttpConnection *this$0_;
  IOSByteArray *hex_;
  jboolean closed_;
}

- (OkioTimeout *)timeout;

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount;

- (void)flush;

- (void)close;

- (void)writeHexWithLong:(jlong)i;

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink, this$0_, ComSquareupOkhttpInternalHttpHttpConnection *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink, hex_, IOSByteArray *)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_writeHexWithLong_(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *self, jlong i);

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *create_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink)

@interface ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource : NSObject < OkioSource > {
 @public
  ComSquareupOkhttpInternalHttpHttpConnection *this$0_;
  jboolean closed_;
}

- (OkioTimeout *)timeout;

- (void)endOfInputWithBoolean:(jboolean)recyclable;

- (void)unexpectedEndOfInput;

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource, this$0_, ComSquareupOkhttpInternalHttpHttpConnection *)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_endOfInputWithBoolean_(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource *self, jboolean recyclable);

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource *self);

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource)

@interface ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource : ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource {
 @public
  ComSquareupOkhttpInternalHttpHttpConnection *this$1_;
  jlong bytesRemaining_;
}

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$
                                                           withLong:(jlong)length;

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource, this$1_, ComSquareupOkhttpInternalHttpHttpConnection *)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong length);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource *new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong length) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource *create_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong length);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource)

@interface ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource : ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource {
 @public
  ComSquareupOkhttpInternalHttpHttpConnection *this$1_;
  jint bytesRemainingInChunk_;
  jboolean hasMoreChunks_;
  ComSquareupOkhttpInternalHttpHttpEngine *httpEngine_;
}

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$
                        withComSquareupOkhttpInternalHttpHttpEngine:(ComSquareupOkhttpInternalHttpHttpEngine *)httpEngine;

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount;

- (void)readChunkSize;

- (void)close;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource, this$1_, ComSquareupOkhttpInternalHttpHttpConnection *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource, httpEngine_, ComSquareupOkhttpInternalHttpHttpEngine *)

inline jint ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_get_NO_CHUNK_YET();
#define ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_NO_CHUNK_YET -1
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource, NO_CHUNK_YET, jint)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$, ComSquareupOkhttpInternalHttpHttpEngine *httpEngine);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, ComSquareupOkhttpInternalHttpHttpEngine *httpEngine) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *create_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, ComSquareupOkhttpInternalHttpHttpEngine *httpEngine);

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_readChunkSize(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *self);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource)

@interface ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource : ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource {
 @public
  ComSquareupOkhttpInternalHttpHttpConnection *this$1_;
  jboolean inputExhausted_;
}

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount;

- (void)close;

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource, this$1_, ComSquareupOkhttpInternalHttpHttpConnection *)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource *new_ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource *create_ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpInternalHttpHttpConnection)

@implementation ComSquareupOkhttpInternalHttpHttpConnection

- (instancetype)initWithComSquareupOkhttpConnectionPool:(ComSquareupOkhttpConnectionPool *)pool
                        withComSquareupOkhttpConnection:(ComSquareupOkhttpConnection *)connection
                                      withJavaNetSocket:(JavaNetSocket *)socket {
  ComSquareupOkhttpInternalHttpHttpConnection_initWithComSquareupOkhttpConnectionPool_withComSquareupOkhttpConnection_withJavaNetSocket_(self, pool, connection, socket);
  return self;
}

- (void)setTimeoutsWithInt:(jint)readTimeoutMillis
                   withInt:(jint)writeTimeoutMillis {
  if (readTimeoutMillis != 0) {
    (void) [((OkioTimeout *) nil_chk([((id<OkioBufferedSource>) nil_chk(source_)) timeout])) timeoutWithLong:readTimeoutMillis withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  }
  if (writeTimeoutMillis != 0) {
    (void) [((OkioTimeout *) nil_chk([((id<OkioBufferedSink>) nil_chk(sink_)) timeout])) timeoutWithLong:writeTimeoutMillis withJavaUtilConcurrentTimeUnit:JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS)];
  }
}

- (void)poolOnIdle {
  onIdle_ = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_POOL;
  if (state_ == ComSquareupOkhttpInternalHttpHttpConnection_STATE_IDLE) {
    onIdle_ = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_HOLD;
    [((ComSquareupOkhttpInternalInternal *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalInternal, instance))) recycleWithComSquareupOkhttpConnectionPool:pool_ withComSquareupOkhttpConnection:connection_];
  }
}

- (void)closeOnIdle {
  onIdle_ = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_CLOSE;
  if (state_ == ComSquareupOkhttpInternalHttpHttpConnection_STATE_IDLE) {
    state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_CLOSED;
    [((JavaNetSocket *) nil_chk([((ComSquareupOkhttpConnection *) nil_chk(connection_)) getSocket])) close];
  }
}

- (jboolean)isClosed {
  return state_ == ComSquareupOkhttpInternalHttpHttpConnection_STATE_CLOSED;
}

- (void)closeIfOwnedByWithId:(id)owner {
  [((ComSquareupOkhttpInternalInternal *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalInternal, instance))) closeIfOwnedByWithComSquareupOkhttpConnection:connection_ withId:owner];
}

- (void)flush {
  [((id<OkioBufferedSink>) nil_chk(sink_)) flush];
}

- (jlong)bufferSize {
  return [((OkioBuffer *) nil_chk([((id<OkioBufferedSource>) nil_chk(source_)) buffer])) size];
}

- (jboolean)isReadable {
  @try {
    jint readTimeout = [((JavaNetSocket *) nil_chk(socket_)) getSoTimeout];
    @try {
      [socket_ setSoTimeoutWithInt:1];
      if ([((id<OkioBufferedSource>) nil_chk(source_)) exhausted]) {
        return false;
      }
      return true;
    }
    @finally {
      [socket_ setSoTimeoutWithInt:readTimeout];
    }
  }
  @catch (JavaNetSocketTimeoutException *ignored) {
    return true;
  }
  @catch (JavaIoIOException *e) {
    return false;
  }
}

- (void)writeRequestWithComSquareupOkhttpHeaders:(ComSquareupOkhttpHeaders *)headers
                                    withNSString:(NSString *)requestLine {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_IDLE) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  (void) [((id<OkioBufferedSink>) nil_chk([((id<OkioBufferedSink>) nil_chk(sink_)) writeUtf8WithNSString:requestLine])) writeUtf8WithNSString:@"\x0d\n"];
  for (jint i = 0, size = [((ComSquareupOkhttpHeaders *) nil_chk(headers)) size]; i < size; i++) {
    (void) [((id<OkioBufferedSink>) nil_chk([((id<OkioBufferedSink>) nil_chk([((id<OkioBufferedSink>) nil_chk([sink_ writeUtf8WithNSString:[headers nameWithInt:i]])) writeUtf8WithNSString:@": "])) writeUtf8WithNSString:[headers valueWithInt:i]])) writeUtf8WithNSString:@"\x0d\n"];
  }
  (void) [sink_ writeUtf8WithNSString:@"\x0d\n"];
  state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_REQUEST_BODY;
}

- (ComSquareupOkhttpResponse_Builder *)readResponse {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_REQUEST_BODY && state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_READ_RESPONSE_HEADERS) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  }
  while (true) {
    ComSquareupOkhttpInternalHttpStatusLine *statusLine = ComSquareupOkhttpInternalHttpStatusLine_parseWithNSString_([((id<OkioBufferedSource>) nil_chk(source_)) readUtf8LineStrict]);
    ComSquareupOkhttpResponse_Builder *responseBuilder = [((ComSquareupOkhttpResponse_Builder *) nil_chk([((ComSquareupOkhttpResponse_Builder *) nil_chk([new_ComSquareupOkhttpResponse_Builder_init() protocolWithComSquareupOkhttpProtocol:((ComSquareupOkhttpInternalHttpStatusLine *) nil_chk(statusLine))->protocol_])) codeWithInt:statusLine->code_])) messageWithNSString:statusLine->message_];
    ComSquareupOkhttpHeaders_Builder *headersBuilder = new_ComSquareupOkhttpHeaders_Builder_init();
    [self readHeadersWithComSquareupOkhttpHeaders_Builder:headersBuilder];
    (void) [headersBuilder addWithNSString:JreLoadStatic(ComSquareupOkhttpInternalHttpOkHeaders, SELECTED_PROTOCOL) withNSString:[((ComSquareupOkhttpProtocol *) nil_chk(statusLine->protocol_)) description]];
    (void) [((ComSquareupOkhttpResponse_Builder *) nil_chk(responseBuilder)) headersWithComSquareupOkhttpHeaders:[headersBuilder build]];
    if (statusLine->code_ != ComSquareupOkhttpInternalHttpStatusLine_HTTP_CONTINUE) {
      state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_RESPONSE_BODY;
      return responseBuilder;
    }
  }
}

- (void)readHeadersWithComSquareupOkhttpHeaders_Builder:(ComSquareupOkhttpHeaders_Builder *)builder {
  for (NSString *line; ((jint) [(line = [((id<OkioBufferedSource>) nil_chk(source_)) readUtf8LineStrict]) length]) != 0; ) {
    [((ComSquareupOkhttpInternalInternal *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalInternal, instance))) addLineWithComSquareupOkhttpHeaders_Builder:builder withNSString:line];
  }
}

- (id<OkioSink>)newChunkedSink {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_REQUEST_BODY) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_WRITING_REQUEST_BODY;
  return new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(self);
}

- (id<OkioSink>)newFixedLengthSinkWithLong:(jlong)contentLength {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_REQUEST_BODY) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_WRITING_REQUEST_BODY;
  return new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(self, contentLength);
}

- (void)writeRequestBodyWithComSquareupOkhttpInternalHttpRetryableSink:(ComSquareupOkhttpInternalHttpRetryableSink *)requestBody {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_REQUEST_BODY) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READ_RESPONSE_HEADERS;
  [((ComSquareupOkhttpInternalHttpRetryableSink *) nil_chk(requestBody)) writeToSocketWithOkioSink:sink_];
}

- (id<OkioSource>)newFixedLengthSourceWithLong:(jlong)length {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_RESPONSE_BODY) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READING_RESPONSE_BODY;
  return new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(self, length);
}

- (void)emptyResponseBody {
  (void) [self newFixedLengthSourceWithLong:0LL];
}

- (id<OkioSource>)newChunkedSourceWithComSquareupOkhttpInternalHttpHttpEngine:(ComSquareupOkhttpInternalHttpHttpEngine *)httpEngine {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_RESPONSE_BODY) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READING_RESPONSE_BODY;
  return new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(self, httpEngine);
}

- (id<OkioSource>)newUnknownLengthSource {
  if (state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_RESPONSE_BODY) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", state_));
  state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READING_RESPONSE_BODY;
  return new_ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(self);
}

+ (void)initialize {
  if (self == [ComSquareupOkhttpInternalHttpHttpConnection class]) {
    ComSquareupOkhttpInternalHttpHttpConnection_CRLF = [IOSByteArray newArrayWithBytes:(jbyte[]){ 0x000d, 0x000a } count:2];
    ComSquareupOkhttpInternalHttpHttpConnection_HEX_DIGITS = [IOSByteArray newArrayWithBytes:(jbyte[]){ '0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f' } count:16];
    ComSquareupOkhttpInternalHttpHttpConnection_FINAL_CHUNK = [IOSByteArray newArrayWithBytes:(jbyte[]){ '0', 0x000d, 0x000a, 0x000d, 0x000a } count:5];
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpInternalHttpHttpConnection)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpConnectionPool:withComSquareupOkhttpConnection:withJavaNetSocket:", "HttpConnection", NULL, 0x1, "Ljava.io.IOException;", NULL },
    { "setTimeoutsWithInt:withInt:", "setTimeouts", "V", 0x1, NULL, NULL },
    { "poolOnIdle", NULL, "V", 0x1, NULL, NULL },
    { "closeOnIdle", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "isClosed", NULL, "Z", 0x1, NULL, NULL },
    { "closeIfOwnedByWithId:", "closeIfOwnedBy", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "bufferSize", NULL, "J", 0x1, NULL, NULL },
    { "isReadable", NULL, "Z", 0x1, NULL, NULL },
    { "writeRequestWithComSquareupOkhttpHeaders:withNSString:", "writeRequest", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "readResponse", NULL, "Lcom.squareup.okhttp.Response$Builder;", 0x1, "Ljava.io.IOException;", NULL },
    { "readHeadersWithComSquareupOkhttpHeaders_Builder:", "readHeaders", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "newChunkedSink", NULL, "Lokio.Sink;", 0x1, NULL, NULL },
    { "newFixedLengthSinkWithLong:", "newFixedLengthSink", "Lokio.Sink;", 0x1, NULL, NULL },
    { "writeRequestBodyWithComSquareupOkhttpInternalHttpRetryableSink:", "writeRequestBody", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "newFixedLengthSourceWithLong:", "newFixedLengthSource", "Lokio.Source;", 0x1, "Ljava.io.IOException;", NULL },
    { "emptyResponseBody", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "newChunkedSourceWithComSquareupOkhttpInternalHttpHttpEngine:", "newChunkedSource", "Lokio.Source;", 0x1, "Ljava.io.IOException;", NULL },
    { "newUnknownLengthSource", NULL, "Lokio.Source;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STATE_IDLE", "STATE_IDLE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_STATE_IDLE },
    { "STATE_OPEN_REQUEST_BODY", "STATE_OPEN_REQUEST_BODY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_REQUEST_BODY },
    { "STATE_WRITING_REQUEST_BODY", "STATE_WRITING_REQUEST_BODY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_STATE_WRITING_REQUEST_BODY },
    { "STATE_READ_RESPONSE_HEADERS", "STATE_READ_RESPONSE_HEADERS", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READ_RESPONSE_HEADERS },
    { "STATE_OPEN_RESPONSE_BODY", "STATE_OPEN_RESPONSE_BODY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_STATE_OPEN_RESPONSE_BODY },
    { "STATE_READING_RESPONSE_BODY", "STATE_READING_RESPONSE_BODY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READING_RESPONSE_BODY },
    { "STATE_CLOSED", "STATE_CLOSED", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_STATE_CLOSED },
    { "ON_IDLE_HOLD", "ON_IDLE_HOLD", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_HOLD },
    { "ON_IDLE_POOL", "ON_IDLE_POOL", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_POOL },
    { "ON_IDLE_CLOSE", "ON_IDLE_CLOSE", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_CLOSE },
    { "pool_", NULL, 0x12, "Lcom.squareup.okhttp.ConnectionPool;", NULL, NULL, .constantValue.asLong = 0 },
    { "connection_", NULL, 0x12, "Lcom.squareup.okhttp.Connection;", NULL, NULL, .constantValue.asLong = 0 },
    { "socket_", NULL, 0x12, "Ljava.net.Socket;", NULL, NULL, .constantValue.asLong = 0 },
    { "source_", NULL, 0x12, "Lokio.BufferedSource;", NULL, NULL, .constantValue.asLong = 0 },
    { "sink_", NULL, 0x12, "Lokio.BufferedSink;", NULL, NULL, .constantValue.asLong = 0 },
    { "state_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "onIdle_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "CRLF", "CRLF", 0x1a, "[B", &ComSquareupOkhttpInternalHttpHttpConnection_CRLF, NULL, .constantValue.asLong = 0 },
    { "HEX_DIGITS", "HEX_DIGITS", 0x1a, "[B", &ComSquareupOkhttpInternalHttpHttpConnection_HEX_DIGITS, NULL, .constantValue.asLong = 0 },
    { "FINAL_CHUNK", "FINAL_CHUNK", 0x1a, "[B", &ComSquareupOkhttpInternalHttpHttpConnection_FINAL_CHUNK, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.internal.http.HttpConnection$FixedLengthSink;", "Lcom.squareup.okhttp.internal.http.HttpConnection$ChunkedSink;", "Lcom.squareup.okhttp.internal.http.HttpConnection$AbstractSource;", "Lcom.squareup.okhttp.internal.http.HttpConnection$FixedLengthSource;", "Lcom.squareup.okhttp.internal.http.HttpConnection$ChunkedSource;", "Lcom.squareup.okhttp.internal.http.HttpConnection$UnknownLengthSource;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpConnection = { 2, "HttpConnection", "com.squareup.okhttp.internal.http", NULL, 0x11, 19, methods, 20, fields, 0, NULL, 6, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpConnection;
}

@end

void ComSquareupOkhttpInternalHttpHttpConnection_initWithComSquareupOkhttpConnectionPool_withComSquareupOkhttpConnection_withJavaNetSocket_(ComSquareupOkhttpInternalHttpHttpConnection *self, ComSquareupOkhttpConnectionPool *pool, ComSquareupOkhttpConnection *connection, JavaNetSocket *socket) {
  NSObject_init(self);
  self->state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_IDLE;
  self->onIdle_ = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_HOLD;
  self->pool_ = pool;
  self->connection_ = connection;
  self->socket_ = socket;
  self->source_ = OkioOkio_bufferWithOkioSource_(OkioOkio_sourceWithJavaNetSocket_(socket));
  self->sink_ = OkioOkio_bufferWithOkioSink_(OkioOkio_sinkWithJavaNetSocket_(socket));
}

ComSquareupOkhttpInternalHttpHttpConnection *new_ComSquareupOkhttpInternalHttpHttpConnection_initWithComSquareupOkhttpConnectionPool_withComSquareupOkhttpConnection_withJavaNetSocket_(ComSquareupOkhttpConnectionPool *pool, ComSquareupOkhttpConnection *connection, JavaNetSocket *socket) {
  ComSquareupOkhttpInternalHttpHttpConnection *self = [ComSquareupOkhttpInternalHttpHttpConnection alloc];
  ComSquareupOkhttpInternalHttpHttpConnection_initWithComSquareupOkhttpConnectionPool_withComSquareupOkhttpConnection_withJavaNetSocket_(self, pool, connection, socket);
  return self;
}

ComSquareupOkhttpInternalHttpHttpConnection *create_ComSquareupOkhttpInternalHttpHttpConnection_initWithComSquareupOkhttpConnectionPool_withComSquareupOkhttpConnection_withJavaNetSocket_(ComSquareupOkhttpConnectionPool *pool, ComSquareupOkhttpConnection *connection, JavaNetSocket *socket) {
  return new_ComSquareupOkhttpInternalHttpHttpConnection_initWithComSquareupOkhttpConnectionPool_withComSquareupOkhttpConnection_withJavaNetSocket_(pool, connection, socket);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpConnection)

@implementation ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$
                                                           withLong:(jlong)bytesRemaining {
  ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(self, outer$, bytesRemaining);
  return self;
}

- (OkioTimeout *)timeout {
  return [((id<OkioBufferedSink>) nil_chk(this$0_->sink_)) timeout];
}

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount {
  if (closed_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"closed");
  ComSquareupOkhttpInternalUtil_checkOffsetAndCountWithLong_withLong_withLong_([((OkioBuffer *) nil_chk(source)) size], 0, byteCount);
  if (byteCount > bytesRemaining_) {
    @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$J$J", @"expected ", bytesRemaining_, @" bytes but received ", byteCount));
  }
  [((id<OkioBufferedSink>) nil_chk(this$0_->sink_)) writeWithOkioBuffer:source withLong:byteCount];
  bytesRemaining_ -= byteCount;
}

- (void)flush {
  if (closed_) return;
  [((id<OkioBufferedSink>) nil_chk(this$0_->sink_)) flush];
}

- (void)close {
  if (closed_) return;
  closed_ = true;
  if (bytesRemaining_ > 0) @throw new_JavaNetProtocolException_initWithNSString_(@"unexpected end of stream");
  this$0_->state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READ_RESPONSE_HEADERS;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpInternalHttpHttpConnection:withLong:", "FixedLengthSink", NULL, 0x2, NULL, NULL },
    { "timeout", NULL, "Lokio.Timeout;", 0x1, NULL, NULL },
    { "writeWithOkioBuffer:withLong:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.http.HttpConnection;", NULL, NULL, .constantValue.asLong = 0 },
    { "closed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "bytesRemaining_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink = { 2, "FixedLengthSink", "com.squareup.okhttp.internal.http", "HttpConnection", 0x12, 5, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink;
}

@end

void ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong bytesRemaining) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->bytesRemaining_ = bytesRemaining;
}

ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink *new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong bytesRemaining) {
  ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink *self = [ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink alloc];
  ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(self, outer$, bytesRemaining);
  return self;
}

ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink *create_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong bytesRemaining) {
  return new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(outer$, bytesRemaining);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSink)

@implementation ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink

- (OkioTimeout *)timeout {
  return [((id<OkioBufferedSink>) nil_chk(this$0_->sink_)) timeout];
}

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount {
  if (closed_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"closed");
  if (byteCount == 0) return;
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_writeHexWithLong_(self, byteCount);
  [((id<OkioBufferedSink>) nil_chk(this$0_->sink_)) writeWithOkioBuffer:source withLong:byteCount];
  (void) [this$0_->sink_ writeWithByteArray:JreLoadStatic(ComSquareupOkhttpInternalHttpHttpConnection, CRLF)];
}

- (void)flush {
  @synchronized(self) {
    if (closed_) return;
    [((id<OkioBufferedSink>) nil_chk(this$0_->sink_)) flush];
  }
}

- (void)close {
  @synchronized(self) {
    if (closed_) return;
    closed_ = true;
    (void) [((id<OkioBufferedSink>) nil_chk(this$0_->sink_)) writeWithByteArray:JreLoadStatic(ComSquareupOkhttpInternalHttpHttpConnection, FINAL_CHUNK)];
    this$0_->state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_READ_RESPONSE_HEADERS;
  }
}

- (void)writeHexWithLong:(jlong)i {
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_writeHexWithLong_(self, i);
}

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$ {
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "timeout", NULL, "Lokio.Timeout;", 0x1, NULL, NULL },
    { "writeWithOkioBuffer:withLong:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x21, "Ljava.io.IOException;", NULL },
    { "writeHexWithLong:", "writeHex", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpInternalHttpHttpConnection:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.http.HttpConnection;", NULL, NULL, .constantValue.asLong = 0 },
    { "hex_", NULL, 0x12, "[B", NULL, NULL, .constantValue.asLong = 0 },
    { "closed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink = { 2, "ChunkedSink", "com.squareup.okhttp.internal.http", "HttpConnection", 0x12, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink;
}

@end

void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_writeHexWithLong_(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *self, jlong i) {
  jint cursor = 16;
  do {
    *IOSByteArray_GetRef(nil_chk(self->hex_), --cursor) = IOSByteArray_Get(nil_chk(JreLoadStatic(ComSquareupOkhttpInternalHttpHttpConnection, HEX_DIGITS)), ((jint) (i & (jint) 0xf)));
  }
  while ((JreURShiftAssignLong(&i, 4)) != 0);
  (void) [((id<OkioBufferedSink>) nil_chk(self->this$0_->sink_)) writeWithByteArray:self->hex_ withInt:cursor withInt:((IOSByteArray *) nil_chk(self->hex_))->size_ - cursor];
}

void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->hex_ = [IOSByteArray newArrayWithBytes:(jbyte[]){ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0x000d, 0x000a } count:18];
}

ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$) {
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *self = [ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink alloc];
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
  return self;
}

ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink *create_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$) {
  return new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink_initWithComSquareupOkhttpInternalHttpHttpConnection_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSink)

@implementation ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource

- (OkioTimeout *)timeout {
  return [((id<OkioBufferedSource>) nil_chk(this$0_->source_)) timeout];
}

- (void)endOfInputWithBoolean:(jboolean)recyclable {
  ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_endOfInputWithBoolean_(self, recyclable);
}

- (void)unexpectedEndOfInput {
  ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(self);
}

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$ {
  ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "timeout", NULL, "Lokio.Timeout;", 0x1, NULL, NULL },
    { "endOfInputWithBoolean:", "endOfInput", "V", 0x14, "Ljava.io.IOException;", NULL },
    { "unexpectedEndOfInput", NULL, "V", 0x14, NULL, NULL },
    { "initWithComSquareupOkhttpInternalHttpHttpConnection:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.http.HttpConnection;", NULL, NULL, .constantValue.asLong = 0 },
    { "closed_", NULL, 0x4, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource = { 2, "AbstractSource", "com.squareup.okhttp.internal.http", "HttpConnection", 0x402, 4, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource;
}

@end

void ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_endOfInputWithBoolean_(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource *self, jboolean recyclable) {
  if (self->this$0_->state_ != ComSquareupOkhttpInternalHttpHttpConnection_STATE_READING_RESPONSE_BODY) @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$I", @"state: ", self->this$0_->state_));
  self->this$0_->state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_IDLE;
  if (recyclable && self->this$0_->onIdle_ == ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_POOL) {
    self->this$0_->onIdle_ = ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_HOLD;
    [((ComSquareupOkhttpInternalInternal *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalInternal, instance))) recycleWithComSquareupOkhttpConnectionPool:self->this$0_->pool_ withComSquareupOkhttpConnection:self->this$0_->connection_];
  }
  else if (self->this$0_->onIdle_ == ComSquareupOkhttpInternalHttpHttpConnection_ON_IDLE_CLOSE) {
    self->this$0_->state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_CLOSED;
    [((JavaNetSocket *) nil_chk([((ComSquareupOkhttpConnection *) nil_chk(self->this$0_->connection_)) getSocket])) close];
  }
}

void ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource *self) {
  ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaNetSocket_([((ComSquareupOkhttpConnection *) nil_chk(self->this$0_->connection_)) getSocket]);
  self->this$0_->state_ = ComSquareupOkhttpInternalHttpHttpConnection_STATE_CLOSED;
}

void ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource)

@implementation ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$
                                                           withLong:(jlong)length {
  ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(self, outer$, length);
  return self;
}

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount {
  if (byteCount < 0) @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"byteCount < 0: ", byteCount));
  if (closed_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"closed");
  if (bytesRemaining_ == 0) return -1;
  jlong read = [((id<OkioBufferedSource>) nil_chk(this$1_->source_)) readWithOkioBuffer:sink withLong:JavaLangMath_minWithLong_withLong_(bytesRemaining_, byteCount)];
  if (read == -1) {
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(self);
    @throw new_JavaNetProtocolException_initWithNSString_(@"unexpected end of stream");
  }
  bytesRemaining_ -= read;
  if (bytesRemaining_ == 0) {
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_endOfInputWithBoolean_(self, true);
  }
  return read;
}

- (void)close {
  if (closed_) return;
  if (bytesRemaining_ != 0 && !ComSquareupOkhttpInternalUtil_discardWithOkioSource_withInt_withJavaUtilConcurrentTimeUnit_(self, ComSquareupOkhttpInternalHttpTransport_DISCARD_STREAM_TIMEOUT_MILLIS, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS))) {
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(self);
  }
  closed_ = true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpInternalHttpHttpConnection:withLong:", "FixedLengthSource", NULL, 0x1, NULL, NULL },
    { "readWithOkioBuffer:withLong:", "read", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.http.HttpConnection;", NULL, NULL, .constantValue.asLong = 0 },
    { "bytesRemaining_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource = { 2, "FixedLengthSource", "com.squareup.okhttp.internal.http", "HttpConnection", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource;
}

@end

void ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong length) {
  self->this$1_ = outer$;
  ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
  self->bytesRemaining_ = length;
  if (self->bytesRemaining_ == 0) {
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_endOfInputWithBoolean_(self, true);
  }
}

ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource *new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong length) {
  ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource *self = [ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource alloc];
  ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(self, outer$, length);
  return self;
}

ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource *create_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, jlong length) {
  return new_ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withLong_(outer$, length);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpConnection_FixedLengthSource)

@implementation ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$
                        withComSquareupOkhttpInternalHttpHttpEngine:(ComSquareupOkhttpInternalHttpHttpEngine *)httpEngine {
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(self, outer$, httpEngine);
  return self;
}

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount {
  if (byteCount < 0) @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"byteCount < 0: ", byteCount));
  if (closed_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"closed");
  if (!hasMoreChunks_) return -1;
  if (bytesRemainingInChunk_ == 0 || bytesRemainingInChunk_ == ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_NO_CHUNK_YET) {
    ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_readChunkSize(self);
    if (!hasMoreChunks_) return -1;
  }
  jlong read = [((id<OkioBufferedSource>) nil_chk(this$1_->source_)) readWithOkioBuffer:sink withLong:JavaLangMath_minWithLong_withLong_(byteCount, bytesRemainingInChunk_)];
  if (read == -1) {
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(self);
    @throw new_JavaIoIOException_initWithNSString_(@"unexpected end of stream");
  }
  bytesRemainingInChunk_ -= read;
  return read;
}

- (void)readChunkSize {
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_readChunkSize(self);
}

- (void)close {
  if (closed_) return;
  if (hasMoreChunks_ && !ComSquareupOkhttpInternalUtil_discardWithOkioSource_withInt_withJavaUtilConcurrentTimeUnit_(self, ComSquareupOkhttpInternalHttpTransport_DISCARD_STREAM_TIMEOUT_MILLIS, JreLoadEnum(JavaUtilConcurrentTimeUnit, MILLISECONDS))) {
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(self);
  }
  closed_ = true;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpInternalHttpHttpConnection:withComSquareupOkhttpInternalHttpHttpEngine:", "ChunkedSource", NULL, 0x0, NULL, NULL },
    { "readWithOkioBuffer:withLong:", "read", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "readChunkSize", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.http.HttpConnection;", NULL, NULL, .constantValue.asLong = 0 },
    { "NO_CHUNK_YET", "NO_CHUNK_YET", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_NO_CHUNK_YET },
    { "bytesRemainingInChunk_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "hasMoreChunks_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "httpEngine_", NULL, 0x12, "Lcom.squareup.okhttp.internal.http.HttpEngine;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource = { 2, "ChunkedSource", "com.squareup.okhttp.internal.http", "HttpConnection", 0x2, 4, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource;
}

@end

void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$, ComSquareupOkhttpInternalHttpHttpEngine *httpEngine) {
  self->this$1_ = outer$;
  ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
  self->bytesRemainingInChunk_ = ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_NO_CHUNK_YET;
  self->hasMoreChunks_ = true;
  self->httpEngine_ = httpEngine;
}

ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, ComSquareupOkhttpInternalHttpHttpEngine *httpEngine) {
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *self = [ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource alloc];
  ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(self, outer$, httpEngine);
  return self;
}

ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *create_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(ComSquareupOkhttpInternalHttpHttpConnection *outer$, ComSquareupOkhttpInternalHttpHttpEngine *httpEngine) {
  return new_ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_initWithComSquareupOkhttpInternalHttpHttpConnection_withComSquareupOkhttpInternalHttpHttpEngine_(outer$, httpEngine);
}

void ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_readChunkSize(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource *self) {
  if (self->bytesRemainingInChunk_ != ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource_NO_CHUNK_YET) {
    (void) [((id<OkioBufferedSource>) nil_chk(self->this$1_->source_)) readUtf8LineStrict];
  }
  NSString *chunkSizeString = [((id<OkioBufferedSource>) nil_chk(self->this$1_->source_)) readUtf8LineStrict];
  jint index = [((NSString *) nil_chk(chunkSizeString)) indexOfString:@";"];
  if (index != -1) {
    chunkSizeString = [chunkSizeString substring:0 endIndex:index];
  }
  @try {
    self->bytesRemainingInChunk_ = JavaLangInteger_parseIntWithNSString_withInt_([((NSString *) nil_chk(chunkSizeString)) trim], 16);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Expected a hex chunk size but was ", chunkSizeString));
  }
  if (self->bytesRemainingInChunk_ == 0) {
    self->hasMoreChunks_ = false;
    ComSquareupOkhttpHeaders_Builder *trailersBuilder = new_ComSquareupOkhttpHeaders_Builder_init();
    [self->this$1_ readHeadersWithComSquareupOkhttpHeaders_Builder:trailersBuilder];
    [((ComSquareupOkhttpInternalHttpHttpEngine *) nil_chk(self->httpEngine_)) receiveHeadersWithComSquareupOkhttpHeaders:[trailersBuilder build]];
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_endOfInputWithBoolean_(self, true);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpConnection_ChunkedSource)

@implementation ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource

- (jlong)readWithOkioBuffer:(OkioBuffer *)sink
                   withLong:(jlong)byteCount {
  if (byteCount < 0) @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$J", @"byteCount < 0: ", byteCount));
  if (closed_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"closed");
  if (inputExhausted_) return -1;
  jlong read = [((id<OkioBufferedSource>) nil_chk(this$1_->source_)) readWithOkioBuffer:sink withLong:byteCount];
  if (read == -1) {
    inputExhausted_ = true;
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_endOfInputWithBoolean_(self, false);
    return -1;
  }
  return read;
}

- (void)close {
  if (closed_) return;
  if (!inputExhausted_) {
    ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_unexpectedEndOfInput(self);
  }
  closed_ = true;
}

- (instancetype)initWithComSquareupOkhttpInternalHttpHttpConnection:(ComSquareupOkhttpInternalHttpHttpConnection *)outer$ {
  ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "readWithOkioBuffer:withLong:", "read", "J", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpInternalHttpHttpConnection:", "init", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$1_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.http.HttpConnection;", NULL, NULL, .constantValue.asLong = 0 },
    { "inputExhausted_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource = { 2, "UnknownLengthSource", "com.squareup.okhttp.internal.http", "HttpConnection", 0x2, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource;
}

@end

void ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource *self, ComSquareupOkhttpInternalHttpHttpConnection *outer$) {
  self->this$1_ = outer$;
  ComSquareupOkhttpInternalHttpHttpConnection_AbstractSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
}

ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource *new_ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$) {
  ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource *self = [ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource alloc];
  ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(self, outer$);
  return self;
}

ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource *create_ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(ComSquareupOkhttpInternalHttpHttpConnection *outer$) {
  return new_ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource_initWithComSquareupOkhttpInternalHttpHttpConnection_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpConnection_UnknownLengthSource)
