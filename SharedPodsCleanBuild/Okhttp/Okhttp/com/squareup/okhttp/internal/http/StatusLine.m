//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/http/StatusLine.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Protocol.h"
#include "com/squareup/okhttp/Response.h"
#include "com/squareup/okhttp/internal/http/StatusLine.h"
#include "java/io/IOException.h"
#include "java/lang/Integer.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/net/ProtocolException.h"

@implementation ComSquareupOkhttpInternalHttpStatusLine

- (instancetype)initWithComSquareupOkhttpProtocol:(ComSquareupOkhttpProtocol *)protocol
                                          withInt:(jint)code
                                     withNSString:(NSString *)message {
  ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(self, protocol, code, message);
  return self;
}

+ (ComSquareupOkhttpInternalHttpStatusLine *)getWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return ComSquareupOkhttpInternalHttpStatusLine_getWithComSquareupOkhttpResponse_(response);
}

+ (ComSquareupOkhttpInternalHttpStatusLine *)parseWithNSString:(NSString *)statusLine {
  return ComSquareupOkhttpInternalHttpStatusLine_parseWithNSString_(statusLine);
}

- (NSString *)description {
  JavaLangStringBuilder *result = new_JavaLangStringBuilder_init();
  (void) [result appendWithNSString:protocol_ == JreLoadEnum(ComSquareupOkhttpProtocol, HTTP_1_0) ? @"HTTP/1.0" : @"HTTP/1.1"];
  (void) [((JavaLangStringBuilder *) nil_chk([result appendWithChar:' '])) appendWithInt:code_];
  if (message_ != nil) {
    (void) [((JavaLangStringBuilder *) nil_chk([result appendWithChar:' '])) appendWithNSString:message_];
  }
  return [result description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpProtocol:withInt:withNSString:", "StatusLine", NULL, 0x1, NULL, NULL },
    { "getWithComSquareupOkhttpResponse:", "get", "Lcom.squareup.okhttp.internal.http.StatusLine;", 0x9, NULL, NULL },
    { "parseWithNSString:", "parse", "Lcom.squareup.okhttp.internal.http.StatusLine;", 0x9, "Ljava.io.IOException;", NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "HTTP_TEMP_REDIRECT", "HTTP_TEMP_REDIRECT", 0x19, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpStatusLine_HTTP_TEMP_REDIRECT },
    { "HTTP_PERM_REDIRECT", "HTTP_PERM_REDIRECT", 0x19, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpStatusLine_HTTP_PERM_REDIRECT },
    { "HTTP_CONTINUE", "HTTP_CONTINUE", 0x19, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalHttpStatusLine_HTTP_CONTINUE },
    { "protocol_", NULL, 0x11, "Lcom.squareup.okhttp.Protocol;", NULL, NULL, .constantValue.asLong = 0 },
    { "code_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "message_", NULL, 0x11, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpStatusLine = { 2, "StatusLine", "com.squareup.okhttp.internal.http", NULL, 0x11, 4, methods, 6, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpStatusLine;
}

@end

void ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(ComSquareupOkhttpInternalHttpStatusLine *self, ComSquareupOkhttpProtocol *protocol, jint code, NSString *message) {
  NSObject_init(self);
  self->protocol_ = protocol;
  self->code_ = code;
  self->message_ = message;
}

ComSquareupOkhttpInternalHttpStatusLine *new_ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(ComSquareupOkhttpProtocol *protocol, jint code, NSString *message) {
  ComSquareupOkhttpInternalHttpStatusLine *self = [ComSquareupOkhttpInternalHttpStatusLine alloc];
  ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(self, protocol, code, message);
  return self;
}

ComSquareupOkhttpInternalHttpStatusLine *create_ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(ComSquareupOkhttpProtocol *protocol, jint code, NSString *message) {
  return new_ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(protocol, code, message);
}

ComSquareupOkhttpInternalHttpStatusLine *ComSquareupOkhttpInternalHttpStatusLine_getWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) {
  ComSquareupOkhttpInternalHttpStatusLine_initialize();
  return new_ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_([((ComSquareupOkhttpResponse *) nil_chk(response)) protocol], [response code], [response message]);
}

ComSquareupOkhttpInternalHttpStatusLine *ComSquareupOkhttpInternalHttpStatusLine_parseWithNSString_(NSString *statusLine) {
  ComSquareupOkhttpInternalHttpStatusLine_initialize();
  jint codeStart;
  ComSquareupOkhttpProtocol *protocol;
  if ([((NSString *) nil_chk(statusLine)) hasPrefix:@"HTTP/1."]) {
    if (((jint) [statusLine length]) < 9 || [statusLine charAtWithInt:8] != ' ') {
      @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Unexpected status line: ", statusLine));
    }
    jint httpMinorVersion = [statusLine charAtWithInt:7] - '0';
    codeStart = 9;
    if (httpMinorVersion == 0) {
      protocol = JreLoadEnum(ComSquareupOkhttpProtocol, HTTP_1_0);
    }
    else if (httpMinorVersion == 1) {
      protocol = JreLoadEnum(ComSquareupOkhttpProtocol, HTTP_1_1);
    }
    else {
      @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Unexpected status line: ", statusLine));
    }
  }
  else if ([statusLine hasPrefix:@"ICY "]) {
    protocol = JreLoadEnum(ComSquareupOkhttpProtocol, HTTP_1_0);
    codeStart = 4;
  }
  else {
    @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Unexpected status line: ", statusLine));
  }
  if (((jint) [statusLine length]) < codeStart + 3) {
    @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Unexpected status line: ", statusLine));
  }
  jint code;
  @try {
    code = JavaLangInteger_parseIntWithNSString_([statusLine substring:codeStart endIndex:codeStart + 3]);
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Unexpected status line: ", statusLine));
  }
  NSString *message = @"";
  if (((jint) [statusLine length]) > codeStart + 3) {
    if ([statusLine charAtWithInt:codeStart + 3] != ' ') {
      @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Unexpected status line: ", statusLine));
    }
    message = [statusLine substring:codeStart + 4];
  }
  return new_ComSquareupOkhttpInternalHttpStatusLine_initWithComSquareupOkhttpProtocol_withInt_withNSString_(protocol, code, message);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpStatusLine)
