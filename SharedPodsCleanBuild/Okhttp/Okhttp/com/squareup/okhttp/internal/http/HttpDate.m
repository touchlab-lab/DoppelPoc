//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/http/HttpDate.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/internal/http/HttpDate.h"
#include "java/lang/ThreadLocal.h"
#include "java/text/DateFormat.h"
#include "java/text/ParsePosition.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

@interface ComSquareupOkhttpInternalHttpHttpDate ()

- (instancetype)init;

@end

inline JavaUtilTimeZone *ComSquareupOkhttpInternalHttpHttpDate_get_GMT();
static JavaUtilTimeZone *ComSquareupOkhttpInternalHttpHttpDate_GMT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpHttpDate, GMT, JavaUtilTimeZone *)

inline JavaLangThreadLocal *ComSquareupOkhttpInternalHttpHttpDate_get_STANDARD_DATE_FORMAT();
static JavaLangThreadLocal *ComSquareupOkhttpInternalHttpHttpDate_STANDARD_DATE_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpHttpDate, STANDARD_DATE_FORMAT, JavaLangThreadLocal *)

inline IOSObjectArray *ComSquareupOkhttpInternalHttpHttpDate_get_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS();
static IOSObjectArray *ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpHttpDate, BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS, IOSObjectArray *)

inline IOSObjectArray *ComSquareupOkhttpInternalHttpHttpDate_get_BROWSER_COMPATIBLE_DATE_FORMATS();
static IOSObjectArray *ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMATS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpHttpDate, BROWSER_COMPATIBLE_DATE_FORMATS, IOSObjectArray *)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpDate_init(ComSquareupOkhttpInternalHttpHttpDate *self);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpDate *new_ComSquareupOkhttpInternalHttpHttpDate_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpDate *create_ComSquareupOkhttpInternalHttpHttpDate_init();

@interface ComSquareupOkhttpInternalHttpHttpDate_$1 : JavaLangThreadLocal

- (JavaTextDateFormat *)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpHttpDate_$1)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHttpDate_$1_init(ComSquareupOkhttpInternalHttpHttpDate_$1 *self);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpDate_$1 *new_ComSquareupOkhttpInternalHttpHttpDate_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHttpDate_$1 *create_ComSquareupOkhttpInternalHttpHttpDate_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpHttpDate_$1)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpInternalHttpHttpDate)

@implementation ComSquareupOkhttpInternalHttpHttpDate

+ (JavaUtilDate *)parseWithNSString:(NSString *)value {
  return ComSquareupOkhttpInternalHttpHttpDate_parseWithNSString_(value);
}

+ (NSString *)formatWithJavaUtilDate:(JavaUtilDate *)value {
  return ComSquareupOkhttpInternalHttpHttpDate_formatWithJavaUtilDate_(value);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalHttpHttpDate_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ComSquareupOkhttpInternalHttpHttpDate class]) {
    ComSquareupOkhttpInternalHttpHttpDate_GMT = JavaUtilTimeZone_getTimeZoneWithNSString_(@"GMT");
    ComSquareupOkhttpInternalHttpHttpDate_STANDARD_DATE_FORMAT = new_ComSquareupOkhttpInternalHttpHttpDate_$1_init();
    ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS = [IOSObjectArray newArrayWithObjects:(id[]){ @"EEE, dd MMM yyyy HH:mm:ss zzz", @"EEEE, dd-MMM-yy HH:mm:ss zzz", @"EEE MMM d HH:mm:ss yyyy", @"EEE, dd-MMM-yyyy HH:mm:ss z", @"EEE, dd-MMM-yyyy HH-mm-ss z", @"EEE, dd MMM yy HH:mm:ss z", @"EEE dd-MMM-yyyy HH:mm:ss z", @"EEE dd MMM yyyy HH:mm:ss z", @"EEE dd-MMM-yyyy HH-mm-ss z", @"EEE dd-MMM-yy HH:mm:ss z", @"EEE dd MMM yy HH:mm:ss z", @"EEE,dd-MMM-yy HH:mm:ss z", @"EEE,dd-MMM-yyyy HH:mm:ss z", @"EEE, dd-MM-yyyy HH:mm:ss z", @"EEE MMM d yyyy HH:mm:ss z" } count:15 type:NSString_class_()];
    ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMATS = [IOSObjectArray newArrayWithLength:ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS->size_ type:JavaTextDateFormat_class_()];
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpInternalHttpHttpDate)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "parseWithNSString:", "parse", "Ljava.util.Date;", 0x9, NULL, NULL },
    { "formatWithJavaUtilDate:", "format", "Ljava.lang.String;", 0x9, NULL, NULL },
    { "init", "HttpDate", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "GMT", "GMT", 0x1a, "Ljava.util.TimeZone;", &ComSquareupOkhttpInternalHttpHttpDate_GMT, NULL, .constantValue.asLong = 0 },
    { "STANDARD_DATE_FORMAT", "STANDARD_DATE_FORMAT", 0x1a, "Ljava.lang.ThreadLocal;", &ComSquareupOkhttpInternalHttpHttpDate_STANDARD_DATE_FORMAT, "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;", .constantValue.asLong = 0 },
    { "BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS", "BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS", 0x1a, "[Ljava.lang.String;", &ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS, NULL, .constantValue.asLong = 0 },
    { "BROWSER_COMPATIBLE_DATE_FORMATS", "BROWSER_COMPATIBLE_DATE_FORMATS", 0x1a, "[Ljava.text.DateFormat;", &ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMATS, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpDate = { 2, "HttpDate", "com.squareup.okhttp.internal.http", NULL, 0x11, 3, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHttpDate;
}

@end

JavaUtilDate *ComSquareupOkhttpInternalHttpHttpDate_parseWithNSString_(NSString *value) {
  ComSquareupOkhttpInternalHttpHttpDate_initialize();
  if (((jint) [((NSString *) nil_chk(value)) length]) == 0) {
    return nil;
  }
  JavaTextParsePosition *position = new_JavaTextParsePosition_initWithInt_(0);
  JavaUtilDate *result = [((JavaTextDateFormat *) nil_chk([((JavaLangThreadLocal *) nil_chk(ComSquareupOkhttpInternalHttpHttpDate_STANDARD_DATE_FORMAT)) get])) parseWithNSString:value withJavaTextParsePosition:position];
  if ([position getIndex] == ((jint) [value length])) {
    return result;
  }
  @synchronized(ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS) {
    for (jint i = 0, count = ((IOSObjectArray *) nil_chk(ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS))->size_; i < count; i++) {
      JavaTextDateFormat *format = IOSObjectArray_Get(nil_chk(ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMATS), i);
      if (format == nil) {
        format = new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(IOSObjectArray_Get(ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMAT_STRINGS, i), JreLoadStatic(JavaUtilLocale, US));
        [format setTimeZoneWithJavaUtilTimeZone:ComSquareupOkhttpInternalHttpHttpDate_GMT];
        (void) IOSObjectArray_Set(ComSquareupOkhttpInternalHttpHttpDate_BROWSER_COMPATIBLE_DATE_FORMATS, i, format);
      }
      [position setIndexWithInt:0];
      result = [((JavaTextDateFormat *) nil_chk(format)) parseWithNSString:value withJavaTextParsePosition:position];
      if ([position getIndex] != 0) {
        return result;
      }
    }
  }
  return nil;
}

NSString *ComSquareupOkhttpInternalHttpHttpDate_formatWithJavaUtilDate_(JavaUtilDate *value) {
  ComSquareupOkhttpInternalHttpHttpDate_initialize();
  return [((JavaTextDateFormat *) nil_chk([((JavaLangThreadLocal *) nil_chk(ComSquareupOkhttpInternalHttpHttpDate_STANDARD_DATE_FORMAT)) get])) formatWithJavaUtilDate:value];
}

void ComSquareupOkhttpInternalHttpHttpDate_init(ComSquareupOkhttpInternalHttpHttpDate *self) {
  NSObject_init(self);
}

ComSquareupOkhttpInternalHttpHttpDate *new_ComSquareupOkhttpInternalHttpHttpDate_init() {
  ComSquareupOkhttpInternalHttpHttpDate *self = [ComSquareupOkhttpInternalHttpHttpDate alloc];
  ComSquareupOkhttpInternalHttpHttpDate_init(self);
  return self;
}

ComSquareupOkhttpInternalHttpHttpDate *create_ComSquareupOkhttpInternalHttpHttpDate_init() {
  return new_ComSquareupOkhttpInternalHttpHttpDate_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpDate)

@implementation ComSquareupOkhttpInternalHttpHttpDate_$1

- (JavaTextDateFormat *)initialValue {
  JavaTextDateFormat *rfc1123 = new_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(@"EEE, dd MMM yyyy HH:mm:ss 'GMT'", JreLoadStatic(JavaUtilLocale, US));
  [rfc1123 setLenientWithBoolean:false];
  [rfc1123 setTimeZoneWithJavaUtilTimeZone:JreLoadStatic(ComSquareupOkhttpInternalHttpHttpDate, GMT)];
  return rfc1123;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalHttpHttpDate_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "Ljava.text.DateFormat;", 0x4, NULL, "()Ljava/text/DateFormat;" },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Ljava.text.DateFormat;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHttpDate_$1 = { 2, "", "com.squareup.okhttp.internal.http", "HttpDate", 0x8008, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/ThreadLocal<Ljava/text/DateFormat;>;" };
  return &_ComSquareupOkhttpInternalHttpHttpDate_$1;
}

@end

void ComSquareupOkhttpInternalHttpHttpDate_$1_init(ComSquareupOkhttpInternalHttpHttpDate_$1 *self) {
  JavaLangThreadLocal_init(self);
}

ComSquareupOkhttpInternalHttpHttpDate_$1 *new_ComSquareupOkhttpInternalHttpHttpDate_$1_init() {
  ComSquareupOkhttpInternalHttpHttpDate_$1 *self = [ComSquareupOkhttpInternalHttpHttpDate_$1 alloc];
  ComSquareupOkhttpInternalHttpHttpDate_$1_init(self);
  return self;
}

ComSquareupOkhttpInternalHttpHttpDate_$1 *create_ComSquareupOkhttpInternalHttpHttpDate_$1_init() {
  return new_ComSquareupOkhttpInternalHttpHttpDate_$1_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHttpDate_$1)
