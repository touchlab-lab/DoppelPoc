//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/http/CacheStrategy.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/CacheControl.h"
#include "com/squareup/okhttp/Handshake.h"
#include "com/squareup/okhttp/Headers.h"
#include "com/squareup/okhttp/Request.h"
#include "com/squareup/okhttp/Response.h"
#include "com/squareup/okhttp/internal/http/CacheStrategy.h"
#include "com/squareup/okhttp/internal/http/HeaderParser.h"
#include "com/squareup/okhttp/internal/http/HttpDate.h"
#include "com/squareup/okhttp/internal/http/OkHeaders.h"
#include "com/squareup/okhttp/internal/http/StatusLine.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/URL.h"
#include "java/util/Date.h"
#include "java/util/concurrent/TimeUnit.h"

@interface ComSquareupOkhttpInternalHttpCacheStrategy ()

- (instancetype)initWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)networkRequest
                   withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cacheResponse;

@end

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(ComSquareupOkhttpInternalHttpCacheStrategy *self, ComSquareupOkhttpRequest *networkRequest, ComSquareupOkhttpResponse *cacheResponse);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpCacheStrategy *new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(ComSquareupOkhttpRequest *networkRequest, ComSquareupOkhttpResponse *cacheResponse) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpCacheStrategy *create_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(ComSquareupOkhttpRequest *networkRequest, ComSquareupOkhttpResponse *cacheResponse);

@interface ComSquareupOkhttpInternalHttpCacheStrategy_Factory () {
 @public
  JavaUtilDate *servedDate_;
  NSString *servedDateString_;
  JavaUtilDate *lastModified_;
  NSString *lastModifiedString_;
  JavaUtilDate *expires_;
  jlong sentRequestMillis_;
  jlong receivedResponseMillis_;
  NSString *etag_;
  jint ageSeconds_;
}

- (ComSquareupOkhttpInternalHttpCacheStrategy *)getCandidate;

- (jlong)computeFreshnessLifetime;

- (jlong)cacheResponseAge;

- (jboolean)isFreshnessLifetimeHeuristic;

+ (jboolean)hasConditionsWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpCacheStrategy_Factory, servedDate_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpCacheStrategy_Factory, servedDateString_, NSString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpCacheStrategy_Factory, lastModified_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpCacheStrategy_Factory, lastModifiedString_, NSString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpCacheStrategy_Factory, expires_, JavaUtilDate *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalHttpCacheStrategy_Factory, etag_, NSString *)

__attribute__((unused)) static ComSquareupOkhttpInternalHttpCacheStrategy *ComSquareupOkhttpInternalHttpCacheStrategy_Factory_getCandidate(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self);

__attribute__((unused)) static jlong ComSquareupOkhttpInternalHttpCacheStrategy_Factory_computeFreshnessLifetime(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self);

__attribute__((unused)) static jlong ComSquareupOkhttpInternalHttpCacheStrategy_Factory_cacheResponseAge(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self);

__attribute__((unused)) static jboolean ComSquareupOkhttpInternalHttpCacheStrategy_Factory_isFreshnessLifetimeHeuristic(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self);

__attribute__((unused)) static jboolean ComSquareupOkhttpInternalHttpCacheStrategy_Factory_hasConditionsWithComSquareupOkhttpRequest_(ComSquareupOkhttpRequest *request);

@implementation ComSquareupOkhttpInternalHttpCacheStrategy

- (instancetype)initWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)networkRequest
                   withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cacheResponse {
  ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self, networkRequest, cacheResponse);
  return self;
}

+ (jboolean)isCacheableWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response
                        withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  return ComSquareupOkhttpInternalHttpCacheStrategy_isCacheableWithComSquareupOkhttpResponse_withComSquareupOkhttpRequest_(response, request);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpRequest:withComSquareupOkhttpResponse:", "CacheStrategy", NULL, 0x2, NULL, NULL },
    { "isCacheableWithComSquareupOkhttpResponse:withComSquareupOkhttpRequest:", "isCacheable", "Z", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "networkRequest_", NULL, 0x11, "Lcom.squareup.okhttp.Request;", NULL, NULL, .constantValue.asLong = 0 },
    { "cacheResponse_", NULL, 0x11, "Lcom.squareup.okhttp.Response;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.internal.http.CacheStrategy$Factory;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpCacheStrategy = { 2, "CacheStrategy", "com.squareup.okhttp.internal.http", NULL, 0x11, 2, methods, 2, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpCacheStrategy;
}

@end

void ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(ComSquareupOkhttpInternalHttpCacheStrategy *self, ComSquareupOkhttpRequest *networkRequest, ComSquareupOkhttpResponse *cacheResponse) {
  NSObject_init(self);
  self->networkRequest_ = networkRequest;
  self->cacheResponse_ = cacheResponse;
}

ComSquareupOkhttpInternalHttpCacheStrategy *new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(ComSquareupOkhttpRequest *networkRequest, ComSquareupOkhttpResponse *cacheResponse) {
  ComSquareupOkhttpInternalHttpCacheStrategy *self = [ComSquareupOkhttpInternalHttpCacheStrategy alloc];
  ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self, networkRequest, cacheResponse);
  return self;
}

ComSquareupOkhttpInternalHttpCacheStrategy *create_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(ComSquareupOkhttpRequest *networkRequest, ComSquareupOkhttpResponse *cacheResponse) {
  return new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(networkRequest, cacheResponse);
}

jboolean ComSquareupOkhttpInternalHttpCacheStrategy_isCacheableWithComSquareupOkhttpResponse_withComSquareupOkhttpRequest_(ComSquareupOkhttpResponse *response, ComSquareupOkhttpRequest *request) {
  ComSquareupOkhttpInternalHttpCacheStrategy_initialize();
  switch ([((ComSquareupOkhttpResponse *) nil_chk(response)) code]) {
    case JavaNetHttpURLConnection_HTTP_OK:
    case JavaNetHttpURLConnection_HTTP_NOT_AUTHORITATIVE:
    case JavaNetHttpURLConnection_HTTP_MULT_CHOICE:
    case JavaNetHttpURLConnection_HTTP_MOVED_PERM:
    case JavaNetHttpURLConnection_HTTP_GONE:
    case ComSquareupOkhttpInternalHttpStatusLine_HTTP_PERM_REDIRECT:
    break;
    case JavaNetHttpURLConnection_HTTP_MOVED_TEMP:
    case ComSquareupOkhttpInternalHttpStatusLine_HTTP_TEMP_REDIRECT:
    if ([response headerWithNSString:@"Expires"] != nil || [((ComSquareupOkhttpCacheControl *) nil_chk([response cacheControl])) maxAgeSeconds] != -1 || [((ComSquareupOkhttpCacheControl *) nil_chk([response cacheControl])) sMaxAgeSeconds] != -1 || [((ComSquareupOkhttpCacheControl *) nil_chk([response cacheControl])) isPublic]) {
      break;
    }
    default:
    return false;
  }
  return ![((ComSquareupOkhttpCacheControl *) nil_chk([response cacheControl])) noStore] && ![((ComSquareupOkhttpCacheControl *) nil_chk([((ComSquareupOkhttpRequest *) nil_chk(request)) cacheControl])) noStore];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpCacheStrategy)

@implementation ComSquareupOkhttpInternalHttpCacheStrategy_Factory

- (instancetype)initWithLong:(jlong)nowMillis
withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cacheResponse {
  ComSquareupOkhttpInternalHttpCacheStrategy_Factory_initWithLong_withComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self, nowMillis, request, cacheResponse);
  return self;
}

- (ComSquareupOkhttpInternalHttpCacheStrategy *)get {
  ComSquareupOkhttpInternalHttpCacheStrategy *candidate = ComSquareupOkhttpInternalHttpCacheStrategy_Factory_getCandidate(self);
  if (((ComSquareupOkhttpInternalHttpCacheStrategy *) nil_chk(candidate))->networkRequest_ != nil && [((ComSquareupOkhttpCacheControl *) nil_chk([((ComSquareupOkhttpRequest *) nil_chk(request_)) cacheControl])) onlyIfCached]) {
    return new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(nil, nil);
  }
  return candidate;
}

- (ComSquareupOkhttpInternalHttpCacheStrategy *)getCandidate {
  return ComSquareupOkhttpInternalHttpCacheStrategy_Factory_getCandidate(self);
}

- (jlong)computeFreshnessLifetime {
  return ComSquareupOkhttpInternalHttpCacheStrategy_Factory_computeFreshnessLifetime(self);
}

- (jlong)cacheResponseAge {
  return ComSquareupOkhttpInternalHttpCacheStrategy_Factory_cacheResponseAge(self);
}

- (jboolean)isFreshnessLifetimeHeuristic {
  return ComSquareupOkhttpInternalHttpCacheStrategy_Factory_isFreshnessLifetimeHeuristic(self);
}

+ (jboolean)hasConditionsWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  return ComSquareupOkhttpInternalHttpCacheStrategy_Factory_hasConditionsWithComSquareupOkhttpRequest_(request);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithLong:withComSquareupOkhttpRequest:withComSquareupOkhttpResponse:", "Factory", NULL, 0x1, NULL, NULL },
    { "get", NULL, "Lcom.squareup.okhttp.internal.http.CacheStrategy;", 0x1, NULL, NULL },
    { "getCandidate", NULL, "Lcom.squareup.okhttp.internal.http.CacheStrategy;", 0x2, NULL, NULL },
    { "computeFreshnessLifetime", NULL, "J", 0x2, NULL, NULL },
    { "cacheResponseAge", NULL, "J", 0x2, NULL, NULL },
    { "isFreshnessLifetimeHeuristic", NULL, "Z", 0x2, NULL, NULL },
    { "hasConditionsWithComSquareupOkhttpRequest:", "hasConditions", "Z", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nowMillis_", NULL, 0x10, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "request_", NULL, 0x10, "Lcom.squareup.okhttp.Request;", NULL, NULL, .constantValue.asLong = 0 },
    { "cacheResponse_", NULL, 0x10, "Lcom.squareup.okhttp.Response;", NULL, NULL, .constantValue.asLong = 0 },
    { "servedDate_", NULL, 0x2, "Ljava.util.Date;", NULL, NULL, .constantValue.asLong = 0 },
    { "servedDateString_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastModified_", NULL, 0x2, "Ljava.util.Date;", NULL, NULL, .constantValue.asLong = 0 },
    { "lastModifiedString_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "expires_", NULL, 0x2, "Ljava.util.Date;", NULL, NULL, .constantValue.asLong = 0 },
    { "sentRequestMillis_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "receivedResponseMillis_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "etag_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "ageSeconds_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpCacheStrategy_Factory = { 2, "Factory", "com.squareup.okhttp.internal.http", "CacheStrategy", 0x9, 7, methods, 12, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpCacheStrategy_Factory;
}

@end

void ComSquareupOkhttpInternalHttpCacheStrategy_Factory_initWithLong_withComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self, jlong nowMillis, ComSquareupOkhttpRequest *request, ComSquareupOkhttpResponse *cacheResponse) {
  NSObject_init(self);
  self->ageSeconds_ = -1;
  self->nowMillis_ = nowMillis;
  self->request_ = request;
  self->cacheResponse_ = cacheResponse;
  if (cacheResponse != nil) {
    ComSquareupOkhttpHeaders *headers = [cacheResponse headers];
    for (jint i = 0, size = [((ComSquareupOkhttpHeaders *) nil_chk(headers)) size]; i < size; i++) {
      NSString *fieldName = [headers nameWithInt:i];
      NSString *value = [headers valueWithInt:i];
      if ([@"Date" equalsIgnoreCase:fieldName]) {
        self->servedDate_ = ComSquareupOkhttpInternalHttpHttpDate_parseWithNSString_(value);
        self->servedDateString_ = value;
      }
      else if ([@"Expires" equalsIgnoreCase:fieldName]) {
        self->expires_ = ComSquareupOkhttpInternalHttpHttpDate_parseWithNSString_(value);
      }
      else if ([@"Last-Modified" equalsIgnoreCase:fieldName]) {
        self->lastModified_ = ComSquareupOkhttpInternalHttpHttpDate_parseWithNSString_(value);
        self->lastModifiedString_ = value;
      }
      else if ([@"ETag" equalsIgnoreCase:fieldName]) {
        self->etag_ = value;
      }
      else if ([@"Age" equalsIgnoreCase:fieldName]) {
        self->ageSeconds_ = ComSquareupOkhttpInternalHttpHeaderParser_parseSecondsWithNSString_withInt_(value, -1);
      }
      else if ([((NSString *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalHttpOkHeaders, SENT_MILLIS))) equalsIgnoreCase:fieldName]) {
        self->sentRequestMillis_ = JavaLangLong_parseLongWithNSString_(value);
      }
      else if ([((NSString *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalHttpOkHeaders, RECEIVED_MILLIS))) equalsIgnoreCase:fieldName]) {
        self->receivedResponseMillis_ = JavaLangLong_parseLongWithNSString_(value);
      }
    }
  }
}

ComSquareupOkhttpInternalHttpCacheStrategy_Factory *new_ComSquareupOkhttpInternalHttpCacheStrategy_Factory_initWithLong_withComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(jlong nowMillis, ComSquareupOkhttpRequest *request, ComSquareupOkhttpResponse *cacheResponse) {
  ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self = [ComSquareupOkhttpInternalHttpCacheStrategy_Factory alloc];
  ComSquareupOkhttpInternalHttpCacheStrategy_Factory_initWithLong_withComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self, nowMillis, request, cacheResponse);
  return self;
}

ComSquareupOkhttpInternalHttpCacheStrategy_Factory *create_ComSquareupOkhttpInternalHttpCacheStrategy_Factory_initWithLong_withComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(jlong nowMillis, ComSquareupOkhttpRequest *request, ComSquareupOkhttpResponse *cacheResponse) {
  return new_ComSquareupOkhttpInternalHttpCacheStrategy_Factory_initWithLong_withComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(nowMillis, request, cacheResponse);
}

ComSquareupOkhttpInternalHttpCacheStrategy *ComSquareupOkhttpInternalHttpCacheStrategy_Factory_getCandidate(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self) {
  if (self->cacheResponse_ == nil) {
    return new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self->request_, nil);
  }
  if ([((ComSquareupOkhttpRequest *) nil_chk(self->request_)) isHttps] && [((ComSquareupOkhttpResponse *) nil_chk(self->cacheResponse_)) handshake] == nil) {
    return new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self->request_, nil);
  }
  if (!ComSquareupOkhttpInternalHttpCacheStrategy_isCacheableWithComSquareupOkhttpResponse_withComSquareupOkhttpRequest_(self->cacheResponse_, self->request_)) {
    return new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self->request_, nil);
  }
  ComSquareupOkhttpCacheControl *requestCaching = [self->request_ cacheControl];
  if ([((ComSquareupOkhttpCacheControl *) nil_chk(requestCaching)) noCache] || ComSquareupOkhttpInternalHttpCacheStrategy_Factory_hasConditionsWithComSquareupOkhttpRequest_(self->request_)) {
    return new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(self->request_, nil);
  }
  jlong ageMillis = ComSquareupOkhttpInternalHttpCacheStrategy_Factory_cacheResponseAge(self);
  jlong freshMillis = ComSquareupOkhttpInternalHttpCacheStrategy_Factory_computeFreshnessLifetime(self);
  if ([requestCaching maxAgeSeconds] != -1) {
    freshMillis = JavaLangMath_minWithLong_withLong_(freshMillis, [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS))) toMillisWithLong:[requestCaching maxAgeSeconds]]);
  }
  jlong minFreshMillis = 0;
  if ([requestCaching minFreshSeconds] != -1) {
    minFreshMillis = [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS))) toMillisWithLong:[requestCaching minFreshSeconds]];
  }
  jlong maxStaleMillis = 0;
  ComSquareupOkhttpCacheControl *responseCaching = [((ComSquareupOkhttpResponse *) nil_chk(self->cacheResponse_)) cacheControl];
  if (![((ComSquareupOkhttpCacheControl *) nil_chk(responseCaching)) mustRevalidate] && [requestCaching maxStaleSeconds] != -1) {
    maxStaleMillis = [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS))) toMillisWithLong:[requestCaching maxStaleSeconds]];
  }
  if (![responseCaching noCache] && ageMillis + minFreshMillis < freshMillis + maxStaleMillis) {
    ComSquareupOkhttpResponse_Builder *builder = [self->cacheResponse_ newBuilder];
    if (ageMillis + minFreshMillis >= freshMillis) {
      (void) [((ComSquareupOkhttpResponse_Builder *) nil_chk(builder)) addHeaderWithNSString:@"Warning" withNSString:@"110 HttpURLConnection \"Response is stale\""];
    }
    jlong oneDayMillis = 24 * 60 * 60 * 1000LL;
    if (ageMillis > oneDayMillis && ComSquareupOkhttpInternalHttpCacheStrategy_Factory_isFreshnessLifetimeHeuristic(self)) {
      (void) [((ComSquareupOkhttpResponse_Builder *) nil_chk(builder)) addHeaderWithNSString:@"Warning" withNSString:@"113 HttpURLConnection \"Heuristic expiration\""];
    }
    return new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(nil, [((ComSquareupOkhttpResponse_Builder *) nil_chk(builder)) build]);
  }
  ComSquareupOkhttpRequest_Builder *conditionalRequestBuilder = [self->request_ newBuilder];
  if (self->lastModified_ != nil) {
    (void) [((ComSquareupOkhttpRequest_Builder *) nil_chk(conditionalRequestBuilder)) headerWithNSString:@"If-Modified-Since" withNSString:self->lastModifiedString_];
  }
  else if (self->servedDate_ != nil) {
    (void) [((ComSquareupOkhttpRequest_Builder *) nil_chk(conditionalRequestBuilder)) headerWithNSString:@"If-Modified-Since" withNSString:self->servedDateString_];
  }
  if (self->etag_ != nil) {
    (void) [((ComSquareupOkhttpRequest_Builder *) nil_chk(conditionalRequestBuilder)) headerWithNSString:@"If-None-Match" withNSString:self->etag_];
  }
  ComSquareupOkhttpRequest *conditionalRequest = [((ComSquareupOkhttpRequest_Builder *) nil_chk(conditionalRequestBuilder)) build];
  return ComSquareupOkhttpInternalHttpCacheStrategy_Factory_hasConditionsWithComSquareupOkhttpRequest_(conditionalRequest) ? new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(conditionalRequest, self->cacheResponse_) : new_ComSquareupOkhttpInternalHttpCacheStrategy_initWithComSquareupOkhttpRequest_withComSquareupOkhttpResponse_(conditionalRequest, nil);
}

jlong ComSquareupOkhttpInternalHttpCacheStrategy_Factory_computeFreshnessLifetime(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self) {
  ComSquareupOkhttpCacheControl *responseCaching = [((ComSquareupOkhttpResponse *) nil_chk(self->cacheResponse_)) cacheControl];
  if ([((ComSquareupOkhttpCacheControl *) nil_chk(responseCaching)) maxAgeSeconds] != -1) {
    return [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS))) toMillisWithLong:[responseCaching maxAgeSeconds]];
  }
  else if (self->expires_ != nil) {
    jlong servedMillis = self->servedDate_ != nil ? [self->servedDate_ getTime] : self->receivedResponseMillis_;
    jlong delta = [self->expires_ getTime] - servedMillis;
    return delta > 0 ? delta : 0;
  }
  else if (self->lastModified_ != nil && [((JavaNetURL *) nil_chk([((ComSquareupOkhttpRequest *) nil_chk([self->cacheResponse_ request])) url])) getQuery] == nil) {
    jlong servedMillis = self->servedDate_ != nil ? [self->servedDate_ getTime] : self->sentRequestMillis_;
    jlong delta = servedMillis - [self->lastModified_ getTime];
    return delta > 0 ? (delta / 10) : 0;
  }
  return 0;
}

jlong ComSquareupOkhttpInternalHttpCacheStrategy_Factory_cacheResponseAge(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self) {
  jlong apparentReceivedAge = self->servedDate_ != nil ? JavaLangMath_maxWithLong_withLong_(0, self->receivedResponseMillis_ - [self->servedDate_ getTime]) : 0;
  jlong receivedAge = self->ageSeconds_ != -1 ? JavaLangMath_maxWithLong_withLong_(apparentReceivedAge, [((JavaUtilConcurrentTimeUnit *) nil_chk(JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS))) toMillisWithLong:self->ageSeconds_]) : apparentReceivedAge;
  jlong responseDuration = self->receivedResponseMillis_ - self->sentRequestMillis_;
  jlong residentDuration = self->nowMillis_ - self->receivedResponseMillis_;
  return receivedAge + responseDuration + residentDuration;
}

jboolean ComSquareupOkhttpInternalHttpCacheStrategy_Factory_isFreshnessLifetimeHeuristic(ComSquareupOkhttpInternalHttpCacheStrategy_Factory *self) {
  return [((ComSquareupOkhttpCacheControl *) nil_chk([((ComSquareupOkhttpResponse *) nil_chk(self->cacheResponse_)) cacheControl])) maxAgeSeconds] == -1 && self->expires_ == nil;
}

jboolean ComSquareupOkhttpInternalHttpCacheStrategy_Factory_hasConditionsWithComSquareupOkhttpRequest_(ComSquareupOkhttpRequest *request) {
  ComSquareupOkhttpInternalHttpCacheStrategy_Factory_initialize();
  return [((ComSquareupOkhttpRequest *) nil_chk(request)) headerWithNSString:@"If-Modified-Since"] != nil || [request headerWithNSString:@"If-None-Match"] != nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpCacheStrategy_Factory)
