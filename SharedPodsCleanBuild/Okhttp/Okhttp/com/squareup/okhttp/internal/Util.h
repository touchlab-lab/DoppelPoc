//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/Util.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComSquareupOkhttpInternalUtil_INCLUDE_ALL")
#ifdef ComSquareupOkhttpInternalUtil_RESTRICT
#define ComSquareupOkhttpInternalUtil_INCLUDE_ALL 0
#else
#define ComSquareupOkhttpInternalUtil_INCLUDE_ALL 1
#endif
#undef ComSquareupOkhttpInternalUtil_RESTRICT

#if !defined (ComSquareupOkhttpInternalUtil_) && (ComSquareupOkhttpInternalUtil_INCLUDE_ALL || defined(ComSquareupOkhttpInternalUtil_INCLUDE))
#define ComSquareupOkhttpInternalUtil_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoFile;
@class JavaNetServerSocket;
@class JavaNetSocket;
@class JavaNetURI;
@class JavaNetURL;
@class JavaNioCharsetCharset;
@class JavaUtilConcurrentTimeUnit;
@class OkioByteString;
@protocol JavaIoCloseable;
@protocol JavaUtilConcurrentThreadFactory;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol OkioSource;

@interface ComSquareupOkhttpInternalUtil : NSObject

#pragma mark Public

+ (void)checkOffsetAndCountWithLong:(jlong)arrayLength
                           withLong:(jlong)offset
                           withLong:(jlong)count;

+ (void)closeAllWithJavaIoCloseable:(id<JavaIoCloseable>)a
                withJavaIoCloseable:(id<JavaIoCloseable>)b;

+ (void)closeQuietlyWithJavaIoCloseable:(id<JavaIoCloseable>)closeable;

+ (void)closeQuietlyWithJavaNetServerSocket:(JavaNetServerSocket *)serverSocket;

+ (void)closeQuietlyWithJavaNetSocket:(JavaNetSocket *)socket;

+ (void)deleteContentsWithJavaIoFile:(JavaIoFile *)dir;

+ (jboolean)discardWithOkioSource:(id<OkioSource>)source
                          withInt:(jint)timeout
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

+ (jboolean)equalWithId:(id)a
                 withId:(id)b;

+ (jint)getDefaultPortWithNSString:(NSString *)protocol;

+ (jint)getEffectivePortWithJavaNetURI:(JavaNetURI *)uri;

+ (jint)getEffectivePortWithJavaNetURL:(JavaNetURL *)url;

+ (id<JavaUtilList>)immutableListWithJavaUtilList:(id<JavaUtilList>)list;

+ (id<JavaUtilList>)immutableListWithNSObjectArray:(IOSObjectArray *)elements;

+ (id<JavaUtilMap>)immutableMapWithJavaUtilMap:(id<JavaUtilMap>)map;

+ (id<JavaUtilList>)intersectWithNSObjectArray:(IOSObjectArray *)first
                             withNSObjectArray:(IOSObjectArray *)second;

+ (NSString *)md5HexWithNSString:(NSString *)s;

+ (OkioByteString *)sha1WithOkioByteString:(OkioByteString *)s;

+ (NSString *)shaBase64WithNSString:(NSString *)s;

+ (jboolean)skipAllWithOkioSource:(id<OkioSource>)source
                          withInt:(jint)duration
   withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit;

+ (id<JavaUtilConcurrentThreadFactory>)threadFactoryWithNSString:(NSString *)name
                                                     withBoolean:(jboolean)daemon;

@end

J2OBJC_STATIC_INIT(ComSquareupOkhttpInternalUtil)

inline IOSByteArray *ComSquareupOkhttpInternalUtil_get_EMPTY_BYTE_ARRAY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSByteArray *ComSquareupOkhttpInternalUtil_EMPTY_BYTE_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalUtil, EMPTY_BYTE_ARRAY, IOSByteArray *)

inline IOSObjectArray *ComSquareupOkhttpInternalUtil_get_EMPTY_STRING_ARRAY();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComSquareupOkhttpInternalUtil_EMPTY_STRING_ARRAY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalUtil, EMPTY_STRING_ARRAY, IOSObjectArray *)

inline JavaNioCharsetCharset *ComSquareupOkhttpInternalUtil_get_US_ASCII();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaNioCharsetCharset *ComSquareupOkhttpInternalUtil_US_ASCII;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalUtil, US_ASCII, JavaNioCharsetCharset *)

inline JavaNioCharsetCharset *ComSquareupOkhttpInternalUtil_get_UTF_8();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaNioCharsetCharset *ComSquareupOkhttpInternalUtil_UTF_8;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalUtil, UTF_8, JavaNioCharsetCharset *)

FOUNDATION_EXPORT jint ComSquareupOkhttpInternalUtil_getEffectivePortWithJavaNetURI_(JavaNetURI *uri);

FOUNDATION_EXPORT jint ComSquareupOkhttpInternalUtil_getEffectivePortWithJavaNetURL_(JavaNetURL *url);

FOUNDATION_EXPORT jint ComSquareupOkhttpInternalUtil_getDefaultPortWithNSString_(NSString *protocol);

FOUNDATION_EXPORT void ComSquareupOkhttpInternalUtil_checkOffsetAndCountWithLong_withLong_withLong_(jlong arrayLength, jlong offset, jlong count);

FOUNDATION_EXPORT jboolean ComSquareupOkhttpInternalUtil_equalWithId_withId_(id a, id b);

FOUNDATION_EXPORT void ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaIoCloseable_(id<JavaIoCloseable> closeable);

FOUNDATION_EXPORT void ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaNetSocket_(JavaNetSocket *socket);

FOUNDATION_EXPORT void ComSquareupOkhttpInternalUtil_closeQuietlyWithJavaNetServerSocket_(JavaNetServerSocket *serverSocket);

FOUNDATION_EXPORT void ComSquareupOkhttpInternalUtil_closeAllWithJavaIoCloseable_withJavaIoCloseable_(id<JavaIoCloseable> a, id<JavaIoCloseable> b);

FOUNDATION_EXPORT void ComSquareupOkhttpInternalUtil_deleteContentsWithJavaIoFile_(JavaIoFile *dir);

FOUNDATION_EXPORT jboolean ComSquareupOkhttpInternalUtil_discardWithOkioSource_withInt_withJavaUtilConcurrentTimeUnit_(id<OkioSource> source, jint timeout, JavaUtilConcurrentTimeUnit *timeUnit);

FOUNDATION_EXPORT jboolean ComSquareupOkhttpInternalUtil_skipAllWithOkioSource_withInt_withJavaUtilConcurrentTimeUnit_(id<OkioSource> source, jint duration, JavaUtilConcurrentTimeUnit *timeUnit);

FOUNDATION_EXPORT NSString *ComSquareupOkhttpInternalUtil_md5HexWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *ComSquareupOkhttpInternalUtil_shaBase64WithNSString_(NSString *s);

FOUNDATION_EXPORT OkioByteString *ComSquareupOkhttpInternalUtil_sha1WithOkioByteString_(OkioByteString *s);

FOUNDATION_EXPORT id<JavaUtilList> ComSquareupOkhttpInternalUtil_immutableListWithJavaUtilList_(id<JavaUtilList> list);

FOUNDATION_EXPORT id<JavaUtilList> ComSquareupOkhttpInternalUtil_immutableListWithNSObjectArray_(IOSObjectArray *elements);

FOUNDATION_EXPORT id<JavaUtilMap> ComSquareupOkhttpInternalUtil_immutableMapWithJavaUtilMap_(id<JavaUtilMap> map);

FOUNDATION_EXPORT id<JavaUtilConcurrentThreadFactory> ComSquareupOkhttpInternalUtil_threadFactoryWithNSString_withBoolean_(NSString *name, jboolean daemon);

FOUNDATION_EXPORT id<JavaUtilList> ComSquareupOkhttpInternalUtil_intersectWithNSObjectArray_withNSObjectArray_(IOSObjectArray *first, IOSObjectArray *second);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalUtil)

#endif

#pragma pop_macro("ComSquareupOkhttpInternalUtil_INCLUDE_ALL")
