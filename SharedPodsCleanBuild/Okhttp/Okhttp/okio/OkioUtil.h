//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/okio/OkioUtil.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OkioOkioUtil_INCLUDE_ALL")
#ifdef OkioOkioUtil_RESTRICT
#define OkioOkioUtil_INCLUDE_ALL 0
#else
#define OkioOkioUtil_INCLUDE_ALL 1
#endif
#undef OkioOkioUtil_RESTRICT

#if !defined (OkioOkioUtil_) && (OkioOkioUtil_INCLUDE_ALL || defined(OkioOkioUtil_INCLUDE))
#define OkioOkioUtil_

@class JavaNioCharsetCharset;

@interface OkioOkioUtil : NSObject

#pragma mark Public

+ (void)checkOffsetAndCountWithLong:(jlong)size
                           withLong:(jlong)offset
                           withLong:(jlong)byteCount;

+ (jint)reverseBytesIntWithInt:(jint)i;

+ (jlong)reverseBytesLongWithLong:(jlong)v;

+ (jshort)reverseBytesShortWithShort:(jshort)s;

+ (void)sneakyRethrowWithNSException:(NSException *)t;
#ifdef J2OBJC_RENAME_ALIASES
#define sneakyRethrowWithJavaLangThrowable sneakyRethrowWithNSException
#endif // J2OBJC_RENAME_ALIASES

@end

J2OBJC_STATIC_INIT(OkioOkioUtil)

inline JavaNioCharsetCharset *OkioOkioUtil_get_UTF_8();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaNioCharsetCharset *OkioOkioUtil_UTF_8;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OkioOkioUtil, UTF_8, JavaNioCharsetCharset *)

FOUNDATION_EXPORT void OkioOkioUtil_checkOffsetAndCountWithLong_withLong_withLong_(jlong size, jlong offset, jlong byteCount);

FOUNDATION_EXPORT jshort OkioOkioUtil_reverseBytesShortWithShort_(jshort s);

FOUNDATION_EXPORT jint OkioOkioUtil_reverseBytesIntWithInt_(jint i);

FOUNDATION_EXPORT jlong OkioOkioUtil_reverseBytesLongWithLong_(jlong v);

FOUNDATION_EXPORT void OkioOkioUtil_sneakyRethrowWithNSException_(NSException *t);

J2OBJC_TYPE_LITERAL_HEADER(OkioOkioUtil)

#endif

#pragma pop_macro("OkioOkioUtil_INCLUDE_ALL")
