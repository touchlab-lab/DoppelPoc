//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/okio/SegmentPool.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OkioSegmentPool_INCLUDE_ALL")
#ifdef OkioSegmentPool_RESTRICT
#define OkioSegmentPool_INCLUDE_ALL 0
#else
#define OkioSegmentPool_INCLUDE_ALL 1
#endif
#undef OkioSegmentPool_RESTRICT

#if !defined (OkioSegmentPool_) && (OkioSegmentPool_INCLUDE_ALL || defined(OkioSegmentPool_INCLUDE))
#define OkioSegmentPool_

@class OkioSegment;

@interface OkioSegmentPool : NSObject {
 @public
  jlong byteCount_;
}

#pragma mark Package-Private

- (void)recycleWithOkioSegment:(OkioSegment *)segment;

- (OkioSegment *)take;

@end

J2OBJC_STATIC_INIT(OkioSegmentPool)

inline OkioSegmentPool *OkioSegmentPool_get_INSTANCE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT OkioSegmentPool *OkioSegmentPool_INSTANCE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(OkioSegmentPool, INSTANCE, OkioSegmentPool *)

inline jlong OkioSegmentPool_get_MAX_SIZE();
#define OkioSegmentPool_MAX_SIZE 65536LL
J2OBJC_STATIC_FIELD_CONSTANT(OkioSegmentPool, MAX_SIZE, jlong)

J2OBJC_TYPE_LITERAL_HEADER(OkioSegmentPool)

#endif

#pragma pop_macro("OkioSegmentPool_INCLUDE_ALL")
