//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/CursorWindowAllocationException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("AndroidDatabaseCursorWindowAllocationException_INCLUDE_ALL")
#ifdef AndroidDatabaseCursorWindowAllocationException_RESTRICT
#define AndroidDatabaseCursorWindowAllocationException_INCLUDE_ALL 0
#else
#define AndroidDatabaseCursorWindowAllocationException_INCLUDE_ALL 1
#endif
#undef AndroidDatabaseCursorWindowAllocationException_RESTRICT

#if !defined (AndroidDatabaseCursorWindowAllocationException_) && (AndroidDatabaseCursorWindowAllocationException_INCLUDE_ALL || defined(AndroidDatabaseCursorWindowAllocationException_INCLUDE))
#define AndroidDatabaseCursorWindowAllocationException_

#define JavaLangRuntimeException_RESTRICT 1
#define JavaLangRuntimeException_INCLUDE 1
#include "java/lang/RuntimeException.h"

@interface AndroidDatabaseCursorWindowAllocationException : JavaLangRuntimeException

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)description_;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseCursorWindowAllocationException)

FOUNDATION_EXPORT void AndroidDatabaseCursorWindowAllocationException_initWithNSString_(AndroidDatabaseCursorWindowAllocationException *self, NSString *description_);

FOUNDATION_EXPORT AndroidDatabaseCursorWindowAllocationException *new_AndroidDatabaseCursorWindowAllocationException_initWithNSString_(NSString *description_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseCursorWindowAllocationException *create_AndroidDatabaseCursorWindowAllocationException_initWithNSString_(NSString *description_);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseCursorWindowAllocationException)

#endif

#pragma pop_macro("AndroidDatabaseCursorWindowAllocationException_INCLUDE_ALL")
