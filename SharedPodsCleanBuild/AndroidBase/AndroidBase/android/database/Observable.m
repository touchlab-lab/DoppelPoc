//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/Observable.java
//

#include "J2ObjC_source.h"
#include "android/database/Observable.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/ArrayList.h"

@implementation AndroidDatabaseObservable

- (void)registerObserverWithId:(id)observer {
  if (observer == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The observer is null.");
  }
  @synchronized(mObservers_) {
    if ([((JavaUtilArrayList *) nil_chk(mObservers_)) containsWithId:observer]) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$", @"Observer ", observer, @" is already registered."));
    }
    [mObservers_ addWithId:observer];
  }
}

- (void)unregisterObserverWithId:(id)observer {
  if (observer == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"The observer is null.");
  }
  @synchronized(mObservers_) {
    jint index = [((JavaUtilArrayList *) nil_chk(mObservers_)) indexOfWithId:observer];
    if (index == -1) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@$", @"Observer ", observer, @" was not registered."));
    }
    (void) [mObservers_ removeWithInt:index];
  }
}

- (void)unregisterAll {
  @synchronized(mObservers_) {
    [((JavaUtilArrayList *) nil_chk(mObservers_)) clear];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidDatabaseObservable_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "registerObserverWithId:", "registerObserver", "V", 0x1, NULL, "(TT;)V" },
    { "unregisterObserverWithId:", "unregisterObserver", "V", 0x1, NULL, "(TT;)V" },
    { "unregisterAll", NULL, "V", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mObservers_", NULL, 0x14, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _AndroidDatabaseObservable = { 2, "Observable", "android.database", NULL, 0x401, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  return &_AndroidDatabaseObservable;
}

@end

void AndroidDatabaseObservable_init(AndroidDatabaseObservable *self) {
  NSObject_init(self);
  self->mObservers_ = new_JavaUtilArrayList_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseObservable)
