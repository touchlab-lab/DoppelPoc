//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/sqlite/SQLiteQuery.java
//

#include "J2ObjC_header.h"

#pragma push_macro("AndroidDatabaseSqliteSQLiteQuery_INCLUDE_ALL")
#ifdef AndroidDatabaseSqliteSQLiteQuery_RESTRICT
#define AndroidDatabaseSqliteSQLiteQuery_INCLUDE_ALL 0
#else
#define AndroidDatabaseSqliteSQLiteQuery_INCLUDE_ALL 1
#endif
#undef AndroidDatabaseSqliteSQLiteQuery_RESTRICT

#if !defined (AndroidDatabaseSqliteSQLiteQuery_) && (AndroidDatabaseSqliteSQLiteQuery_INCLUDE_ALL || defined(AndroidDatabaseSqliteSQLiteQuery_INCLUDE))
#define AndroidDatabaseSqliteSQLiteQuery_

#define AndroidDatabaseSqliteSQLiteProgram_RESTRICT 1
#define AndroidDatabaseSqliteSQLiteProgram_INCLUDE 1
#include "android/database/sqlite/SQLiteProgram.h"

@class AndroidDatabaseCursorWindow;
@class AndroidDatabaseSqliteSQLiteDatabase;

@interface AndroidDatabaseSqliteSQLiteQuery : AndroidDatabaseSqliteSQLiteProgram

#pragma mark Public

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                               withNSString:(NSString *)query;

- (jint)fillWindowWithAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window
                                          withInt:(jint)startPos
                                          withInt:(jint)requiredPos
                                      withBoolean:(jboolean)countAllRows;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteQuery)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteQuery *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteQuery *new_AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteQuery *create_AndroidDatabaseSqliteSQLiteQuery_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteQuery)

#endif

#pragma pop_macro("AndroidDatabaseSqliteSQLiteQuery_INCLUDE_ALL")
