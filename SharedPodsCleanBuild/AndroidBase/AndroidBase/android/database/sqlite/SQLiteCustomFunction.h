//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/sqlite/SQLiteCustomFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("AndroidDatabaseSqliteSQLiteCustomFunction_INCLUDE_ALL")
#ifdef AndroidDatabaseSqliteSQLiteCustomFunction_RESTRICT
#define AndroidDatabaseSqliteSQLiteCustomFunction_INCLUDE_ALL 0
#else
#define AndroidDatabaseSqliteSQLiteCustomFunction_INCLUDE_ALL 1
#endif
#undef AndroidDatabaseSqliteSQLiteCustomFunction_RESTRICT

#if !defined (AndroidDatabaseSqliteSQLiteCustomFunction_) && (AndroidDatabaseSqliteSQLiteCustomFunction_INCLUDE_ALL || defined(AndroidDatabaseSqliteSQLiteCustomFunction_INCLUDE))
#define AndroidDatabaseSqliteSQLiteCustomFunction_

@protocol AndroidDatabaseSqliteSQLiteDatabase_CustomFunction;

@interface AndroidDatabaseSqliteSQLiteCustomFunction : NSObject {
 @public
  NSString *name_;
  jint numArgs_;
  id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback_;
}

#pragma mark Public

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)numArgs
withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:(id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)callback;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteCustomFunction)

J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCustomFunction, name_, NSString *)
J2OBJC_FIELD_SETTER(AndroidDatabaseSqliteSQLiteCustomFunction, callback_, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(AndroidDatabaseSqliteSQLiteCustomFunction *self, NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCustomFunction *new_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteCustomFunction *create_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteCustomFunction)

#endif

#pragma pop_macro("AndroidDatabaseSqliteSQLiteCustomFunction_INCLUDE_ALL")
