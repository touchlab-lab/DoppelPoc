//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/os/Message.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/os/Bundle.h"
#include "android/os/Handler.h"
#include "android/os/Message.h"
#include "android/os/SystemClock.h"
#include "android/util/TimeUtils.h"
#include "java/lang/Runnable.h"
#include "java/lang/StringBuilder.h"

inline id AndroidOsMessage_get_sPoolSync();
static id AndroidOsMessage_sPoolSync;
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsMessage, sPoolSync, id)

inline AndroidOsMessage *AndroidOsMessage_get_sPool();
inline AndroidOsMessage *AndroidOsMessage_set_sPool(AndroidOsMessage *value);
static AndroidOsMessage *AndroidOsMessage_sPool;
J2OBJC_STATIC_FIELD_OBJ(AndroidOsMessage, sPool, AndroidOsMessage *)

inline jint AndroidOsMessage_get_sPoolSize();
inline jint AndroidOsMessage_set_sPoolSize(jint value);
inline jint *AndroidOsMessage_getRef_sPoolSize();
static jint AndroidOsMessage_sPoolSize = 0;
J2OBJC_STATIC_FIELD_PRIMITIVE(AndroidOsMessage, sPoolSize, jint)

inline jint AndroidOsMessage_get_MAX_POOL_SIZE();
#define AndroidOsMessage_MAX_POOL_SIZE 10
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsMessage, MAX_POOL_SIZE, jint)

J2OBJC_INITIALIZED_DEFN(AndroidOsMessage)

@implementation AndroidOsMessage

+ (AndroidOsMessage *)obtain {
  return AndroidOsMessage_obtain();
}

+ (AndroidOsMessage *)obtainWithAndroidOsMessage:(AndroidOsMessage *)orig {
  return AndroidOsMessage_obtainWithAndroidOsMessage_(orig);
}

+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h {
  return AndroidOsMessage_obtainWithAndroidOsHandler_(h);
}

+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
                            withJavaLangRunnable:(id<JavaLangRunnable>)callback {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withJavaLangRunnable_(h, callback);
}

+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
                                         withInt:(jint)what {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_(h, what);
}

+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
                                         withInt:(jint)what
                                          withId:(id)obj {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withId_(h, what, obj);
}

+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
                                         withInt:(jint)what
                                         withInt:(jint)arg1
                                         withInt:(jint)arg2 {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_(h, what, arg1, arg2);
}

+ (AndroidOsMessage *)obtainWithAndroidOsHandler:(AndroidOsHandler *)h
                                         withInt:(jint)what
                                         withInt:(jint)arg1
                                         withInt:(jint)arg2
                                          withId:(id)obj {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_withId_(h, what, arg1, arg2, obj);
}

- (void)recycle {
  [self clearForRecycle];
  @synchronized(AndroidOsMessage_sPoolSync) {
    if (AndroidOsMessage_sPoolSize < AndroidOsMessage_MAX_POOL_SIZE) {
      next_ = AndroidOsMessage_sPool;
      AndroidOsMessage_sPool = self;
      AndroidOsMessage_sPoolSize++;
    }
  }
}

- (void)copyFromWithAndroidOsMessage:(AndroidOsMessage *)o {
  self->flags_ = ((AndroidOsMessage *) nil_chk(o))->flags_ & ~AndroidOsMessage_FLAGS_TO_CLEAR_ON_COPY_FROM;
  self->what_ = o->what_;
  self->arg1_ = o->arg1_;
  self->arg2_ = o->arg2_;
  self->obj_ = o->obj_;
  if (o->data_ != nil) {
    self->data_ = (AndroidOsBundle *) cast_chk([o->data_ clone], [AndroidOsBundle class]);
  }
  else {
    self->data_ = nil;
  }
}

- (jlong)getWhen {
  return when_;
}

- (void)setTargetWithAndroidOsHandler:(AndroidOsHandler *)target {
  self->target_ = target;
}

- (AndroidOsHandler *)getTarget {
  return target_;
}

- (id<JavaLangRunnable>)getCallback {
  return callback_;
}

- (AndroidOsBundle *)getData {
  if (data_ == nil) {
    data_ = new_AndroidOsBundle_init();
  }
  return data_;
}

- (AndroidOsBundle *)peekData {
  return data_;
}

- (void)setDataWithAndroidOsBundle:(AndroidOsBundle *)data {
  self->data_ = data;
}

- (void)sendToTarget {
  [((AndroidOsHandler *) nil_chk(target_)) sendMessageWithAndroidOsMessage:self];
}

- (void)clearForRecycle {
  flags_ = 0;
  what_ = 0;
  arg1_ = 0;
  arg2_ = 0;
  obj_ = nil;
  when_ = 0;
  target_ = nil;
  callback_ = nil;
  data_ = nil;
}

- (jboolean)isInUse {
  return (flags_ & AndroidOsMessage_FLAG_IN_USE) == AndroidOsMessage_FLAG_IN_USE;
}

- (void)markInUse {
  flags_ |= AndroidOsMessage_FLAG_IN_USE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidOsMessage_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)description {
  return [self toStringWithLong:AndroidOsSystemClock_uptimeMillis()];
}

- (NSString *)toStringWithLong:(jlong)now {
  JavaLangStringBuilder *b = new_JavaLangStringBuilder_init();
  (void) [b appendWithNSString:@"{ what="];
  (void) [b appendWithInt:what_];
  (void) [b appendWithNSString:@" when="];
  AndroidUtilTimeUtils_formatDurationWithLong_withJavaLangStringBuilder_(when_ - now, b);
  if (arg1_ != 0) {
    (void) [b appendWithNSString:@" arg1="];
    (void) [b appendWithInt:arg1_];
  }
  if (arg2_ != 0) {
    (void) [b appendWithNSString:@" arg2="];
    (void) [b appendWithInt:arg2_];
  }
  if (obj_ != nil) {
    (void) [b appendWithNSString:@" obj="];
    (void) [b appendWithId:obj_];
  }
  (void) [b appendWithNSString:@" }"];
  return [b description];
}

- (jint)describeContents {
  return 0;
}

+ (void)initialize {
  if (self == [AndroidOsMessage class]) {
    AndroidOsMessage_sPoolSync = new_NSObject_init();
    J2OBJC_SET_INITIALIZED(AndroidOsMessage)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "obtain", NULL, "Landroid.os.Message;", 0x9, NULL, NULL },
    { "obtainWithAndroidOsMessage:", "obtain", "Landroid.os.Message;", 0x9, NULL, NULL },
    { "obtainWithAndroidOsHandler:", "obtain", "Landroid.os.Message;", 0x9, NULL, NULL },
    { "obtainWithAndroidOsHandler:withJavaLangRunnable:", "obtain", "Landroid.os.Message;", 0x9, NULL, NULL },
    { "obtainWithAndroidOsHandler:withInt:", "obtain", "Landroid.os.Message;", 0x9, NULL, NULL },
    { "obtainWithAndroidOsHandler:withInt:withId:", "obtain", "Landroid.os.Message;", 0x9, NULL, NULL },
    { "obtainWithAndroidOsHandler:withInt:withInt:withInt:", "obtain", "Landroid.os.Message;", 0x9, NULL, NULL },
    { "obtainWithAndroidOsHandler:withInt:withInt:withInt:withId:", "obtain", "Landroid.os.Message;", 0x9, NULL, NULL },
    { "recycle", NULL, "V", 0x1, NULL, NULL },
    { "copyFromWithAndroidOsMessage:", "copyFrom", "V", 0x1, NULL, NULL },
    { "getWhen", NULL, "J", 0x1, NULL, NULL },
    { "setTargetWithAndroidOsHandler:", "setTarget", "V", 0x1, NULL, NULL },
    { "getTarget", NULL, "Landroid.os.Handler;", 0x1, NULL, NULL },
    { "getCallback", NULL, "Ljava.lang.Runnable;", 0x1, NULL, NULL },
    { "getData", NULL, "Landroid.os.Bundle;", 0x1, NULL, NULL },
    { "peekData", NULL, "Landroid.os.Bundle;", 0x1, NULL, NULL },
    { "setDataWithAndroidOsBundle:", "setData", "V", 0x1, NULL, NULL },
    { "sendToTarget", NULL, "V", 0x1, NULL, NULL },
    { "clearForRecycle", NULL, "V", 0x0, NULL, NULL },
    { "isInUse", NULL, "Z", 0x0, NULL, NULL },
    { "markInUse", NULL, "V", 0x0, NULL, NULL },
    { "init", "Message", NULL, 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toStringWithLong:", "toString", "Ljava.lang.String;", 0x0, NULL, NULL },
    { "describeContents", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "what_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "arg1_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "arg2_", NULL, 0x1, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "obj_", NULL, 0x1, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "FLAG_IN_USE", "FLAG_IN_USE", 0x18, "I", NULL, NULL, .constantValue.asInt = AndroidOsMessage_FLAG_IN_USE },
    { "FLAGS_RESERVED", "FLAGS_RESERVED", 0x18, "I", NULL, NULL, .constantValue.asInt = AndroidOsMessage_FLAGS_RESERVED },
    { "FLAGS_TO_CLEAR_ON_COPY_FROM", "FLAGS_TO_CLEAR_ON_COPY_FROM", 0x18, "I", NULL, NULL, .constantValue.asInt = AndroidOsMessage_FLAGS_TO_CLEAR_ON_COPY_FROM },
    { "flags_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "when_", NULL, 0x0, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "data_", NULL, 0x0, "Landroid.os.Bundle;", NULL, NULL, .constantValue.asLong = 0 },
    { "target_", NULL, 0x0, "Landroid.os.Handler;", NULL, NULL, .constantValue.asLong = 0 },
    { "callback_", NULL, 0x0, "Ljava.lang.Runnable;", NULL, NULL, .constantValue.asLong = 0 },
    { "next_", NULL, 0x0, "Landroid.os.Message;", NULL, NULL, .constantValue.asLong = 0 },
    { "sPoolSync", "sPoolSync", 0x1a, "Ljava.lang.Object;", &AndroidOsMessage_sPoolSync, NULL, .constantValue.asLong = 0 },
    { "sPool", "sPool", 0xa, "Landroid.os.Message;", &AndroidOsMessage_sPool, NULL, .constantValue.asLong = 0 },
    { "sPoolSize", "sPoolSize", 0xa, "I", &AndroidOsMessage_sPoolSize, NULL, .constantValue.asLong = 0 },
    { "MAX_POOL_SIZE", "MAX_POOL_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = AndroidOsMessage_MAX_POOL_SIZE },
  };
  static const J2ObjcClassInfo _AndroidOsMessage = { 2, "Message", "android.os", NULL, 0x11, 25, methods, 17, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidOsMessage;
}

@end

AndroidOsMessage *AndroidOsMessage_obtain() {
  AndroidOsMessage_initialize();
  @synchronized(AndroidOsMessage_sPoolSync) {
    if (AndroidOsMessage_sPool != nil) {
      AndroidOsMessage *m = AndroidOsMessage_sPool;
      AndroidOsMessage_sPool = m->next_;
      m->next_ = nil;
      AndroidOsMessage_sPoolSize--;
      return m;
    }
  }
  return new_AndroidOsMessage_init();
}

AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsMessage_(AndroidOsMessage *orig) {
  AndroidOsMessage_initialize();
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->what_ = ((AndroidOsMessage *) nil_chk(orig))->what_;
  m->arg1_ = orig->arg1_;
  m->arg2_ = orig->arg2_;
  m->obj_ = orig->obj_;
  if (orig->data_ != nil) {
    m->data_ = new_AndroidOsBundle_initWithAndroidOsBundle_(orig->data_);
  }
  m->target_ = orig->target_;
  m->callback_ = orig->callback_;
  return m;
}

AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_(AndroidOsHandler *h) {
  AndroidOsMessage_initialize();
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->target_ = h;
  return m;
}

AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withJavaLangRunnable_(AndroidOsHandler *h, id<JavaLangRunnable> callback) {
  AndroidOsMessage_initialize();
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->target_ = h;
  m->callback_ = callback;
  return m;
}

AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_(AndroidOsHandler *h, jint what) {
  AndroidOsMessage_initialize();
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->target_ = h;
  m->what_ = what;
  return m;
}

AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withId_(AndroidOsHandler *h, jint what, id obj) {
  AndroidOsMessage_initialize();
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->target_ = h;
  m->what_ = what;
  m->obj_ = obj;
  return m;
}

AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_(AndroidOsHandler *h, jint what, jint arg1, jint arg2) {
  AndroidOsMessage_initialize();
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->target_ = h;
  m->what_ = what;
  m->arg1_ = arg1;
  m->arg2_ = arg2;
  return m;
}

AndroidOsMessage *AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_withId_(AndroidOsHandler *h, jint what, jint arg1, jint arg2, id obj) {
  AndroidOsMessage_initialize();
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->target_ = h;
  m->what_ = what;
  m->arg1_ = arg1;
  m->arg2_ = arg2;
  m->obj_ = obj;
  return m;
}

void AndroidOsMessage_init(AndroidOsMessage *self) {
  NSObject_init(self);
}

AndroidOsMessage *new_AndroidOsMessage_init() {
  AndroidOsMessage *self = [AndroidOsMessage alloc];
  AndroidOsMessage_init(self);
  return self;
}

AndroidOsMessage *create_AndroidOsMessage_init() {
  return new_AndroidOsMessage_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsMessage)
