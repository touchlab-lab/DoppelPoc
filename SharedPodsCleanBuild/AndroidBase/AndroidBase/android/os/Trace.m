//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/os/Trace.java
//

#include "J2ObjC_source.h"
#include "android/os/Trace.h"
#include "java/lang/IllegalArgumentException.h"

@interface AndroidOsTrace ()

+ (jlong)nativeGetEnabledTags;

+ (void)nativeTraceCounterWithLong:(jlong)tag
                      withNSString:(NSString *)name
                           withInt:(jint)value;

+ (void)nativeTraceBeginWithLong:(jlong)tag
                    withNSString:(NSString *)name;

+ (void)nativeTraceEndWithLong:(jlong)tag;

+ (void)nativeAsyncTraceBeginWithLong:(jlong)tag
                         withNSString:(NSString *)name
                              withInt:(jint)cookie;

+ (void)nativeAsyncTraceEndWithLong:(jlong)tag
                       withNSString:(NSString *)name
                            withInt:(jint)cookie;

+ (void)nativeSetAppTracingAllowedWithBoolean:(jboolean)allowed;

+ (void)nativeSetTracingEnabledWithBoolean:(jboolean)allowed;

- (instancetype)init;

+ (jlong)cacheEnabledTags;

@end

inline NSString *AndroidOsTrace_get_TAG();
static NSString *AndroidOsTrace_TAG = @"Trace";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsTrace, TAG, NSString *)

inline jlong AndroidOsTrace_get_TRACE_TAG_NOT_READY();
#define AndroidOsTrace_TRACE_TAG_NOT_READY ((jlong) 0x8000000000000000LL)
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, TRACE_TAG_NOT_READY, jlong)

inline jint AndroidOsTrace_get_MAX_SECTION_NAME_LEN();
#define AndroidOsTrace_MAX_SECTION_NAME_LEN 127
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsTrace, MAX_SECTION_NAME_LEN, jint)

inline jlong AndroidOsTrace_get_sEnabledTags();
inline jlong AndroidOsTrace_set_sEnabledTags(jlong value);
static volatile_jlong AndroidOsTrace_sEnabledTags = ((jlong) 0x8000000000000000LL);
J2OBJC_STATIC_FIELD_PRIMITIVE_VOLATILE(AndroidOsTrace, sEnabledTags, jlong)

__attribute__((unused)) static jlong AndroidOsTrace_nativeGetEnabledTags();

__attribute__((unused)) static void AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(jlong tag, NSString *name, jint value);

__attribute__((unused)) static void AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(jlong tag, NSString *name);

__attribute__((unused)) static void AndroidOsTrace_nativeTraceEndWithLong_(jlong tag);

__attribute__((unused)) static void AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie);

__attribute__((unused)) static void AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie);

__attribute__((unused)) static void AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(jboolean allowed);

__attribute__((unused)) static void AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(jboolean allowed);

__attribute__((unused)) static void AndroidOsTrace_init(AndroidOsTrace *self);

__attribute__((unused)) static AndroidOsTrace *new_AndroidOsTrace_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidOsTrace *create_AndroidOsTrace_init();

__attribute__((unused)) static jlong AndroidOsTrace_cacheEnabledTags();

J2OBJC_INITIALIZED_DEFN(AndroidOsTrace)

@implementation AndroidOsTrace

+ (jlong)nativeGetEnabledTags {
  return AndroidOsTrace_nativeGetEnabledTags();
}

+ (void)nativeTraceCounterWithLong:(jlong)tag
                      withNSString:(NSString *)name
                           withInt:(jint)value {
  AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(tag, name, value);
}

+ (void)nativeTraceBeginWithLong:(jlong)tag
                    withNSString:(NSString *)name {
  AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(tag, name);
}

+ (void)nativeTraceEndWithLong:(jlong)tag {
  AndroidOsTrace_nativeTraceEndWithLong_(tag);
}

+ (void)nativeAsyncTraceBeginWithLong:(jlong)tag
                         withNSString:(NSString *)name
                              withInt:(jint)cookie {
  AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(tag, name, cookie);
}

+ (void)nativeAsyncTraceEndWithLong:(jlong)tag
                       withNSString:(NSString *)name
                            withInt:(jint)cookie {
  AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(tag, name, cookie);
}

+ (void)nativeSetAppTracingAllowedWithBoolean:(jboolean)allowed {
  AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(allowed);
}

+ (void)nativeSetTracingEnabledWithBoolean:(jboolean)allowed {
  AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(allowed);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidOsTrace_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jlong)cacheEnabledTags {
  return AndroidOsTrace_cacheEnabledTags();
}

+ (jboolean)isTagEnabledWithLong:(jlong)traceTag {
  return AndroidOsTrace_isTagEnabledWithLong_(traceTag);
}

+ (void)traceCounterWithLong:(jlong)traceTag
                withNSString:(NSString *)counterName
                     withInt:(jint)counterValue {
  AndroidOsTrace_traceCounterWithLong_withNSString_withInt_(traceTag, counterName, counterValue);
}

+ (void)setAppTracingAllowedWithBoolean:(jboolean)allowed {
  AndroidOsTrace_setAppTracingAllowedWithBoolean_(allowed);
}

+ (void)setTracingEnabledWithBoolean:(jboolean)enabled {
  AndroidOsTrace_setTracingEnabledWithBoolean_(enabled);
}

+ (void)traceBeginWithLong:(jlong)traceTag
              withNSString:(NSString *)methodName {
  AndroidOsTrace_traceBeginWithLong_withNSString_(traceTag, methodName);
}

+ (void)traceEndWithLong:(jlong)traceTag {
  AndroidOsTrace_traceEndWithLong_(traceTag);
}

+ (void)asyncTraceBeginWithLong:(jlong)traceTag
                   withNSString:(NSString *)methodName
                        withInt:(jint)cookie {
  AndroidOsTrace_asyncTraceBeginWithLong_withNSString_withInt_(traceTag, methodName, cookie);
}

+ (void)asyncTraceEndWithLong:(jlong)traceTag
                 withNSString:(NSString *)methodName
                      withInt:(jint)cookie {
  AndroidOsTrace_asyncTraceEndWithLong_withNSString_withInt_(traceTag, methodName, cookie);
}

+ (void)beginSectionWithNSString:(NSString *)sectionName {
  AndroidOsTrace_beginSectionWithNSString_(sectionName);
}

+ (void)endSection {
  AndroidOsTrace_endSection();
}

+ (void)initialize {
  if (self == [AndroidOsTrace class]) {
    {
    }
    J2OBJC_SET_INITIALIZED(AndroidOsTrace)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "nativeGetEnabledTags", NULL, "J", 0x10a, NULL, NULL },
    { "nativeTraceCounterWithLong:withNSString:withInt:", "nativeTraceCounter", "V", 0x10a, NULL, NULL },
    { "nativeTraceBeginWithLong:withNSString:", "nativeTraceBegin", "V", 0x10a, NULL, NULL },
    { "nativeTraceEndWithLong:", "nativeTraceEnd", "V", 0x10a, NULL, NULL },
    { "nativeAsyncTraceBeginWithLong:withNSString:withInt:", "nativeAsyncTraceBegin", "V", 0x10a, NULL, NULL },
    { "nativeAsyncTraceEndWithLong:withNSString:withInt:", "nativeAsyncTraceEnd", "V", 0x10a, NULL, NULL },
    { "nativeSetAppTracingAllowedWithBoolean:", "nativeSetAppTracingAllowed", "V", 0x10a, NULL, NULL },
    { "nativeSetTracingEnabledWithBoolean:", "nativeSetTracingEnabled", "V", 0x10a, NULL, NULL },
    { "init", "Trace", NULL, 0x2, NULL, NULL },
    { "cacheEnabledTags", NULL, "J", 0xa, NULL, NULL },
    { "isTagEnabledWithLong:", "isTagEnabled", "Z", 0x9, NULL, NULL },
    { "traceCounterWithLong:withNSString:withInt:", "traceCounter", "V", 0x9, NULL, NULL },
    { "setAppTracingAllowedWithBoolean:", "setAppTracingAllowed", "V", 0x9, NULL, NULL },
    { "setTracingEnabledWithBoolean:", "setTracingEnabled", "V", 0x9, NULL, NULL },
    { "traceBeginWithLong:withNSString:", "traceBegin", "V", 0x9, NULL, NULL },
    { "traceEndWithLong:", "traceEnd", "V", 0x9, NULL, NULL },
    { "asyncTraceBeginWithLong:withNSString:withInt:", "asyncTraceBegin", "V", 0x9, NULL, NULL },
    { "asyncTraceEndWithLong:withNSString:withInt:", "asyncTraceEnd", "V", 0x9, NULL, NULL },
    { "beginSectionWithNSString:", "beginSection", "V", 0x9, NULL, NULL },
    { "endSection", NULL, "V", 0x9, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "TAG", 0x1a, "Ljava.lang.String;", &AndroidOsTrace_TAG, NULL, .constantValue.asLong = 0 },
    { "TRACE_TAG_NEVER", "TRACE_TAG_NEVER", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_NEVER },
    { "TRACE_TAG_ALWAYS", "TRACE_TAG_ALWAYS", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_ALWAYS },
    { "TRACE_TAG_GRAPHICS", "TRACE_TAG_GRAPHICS", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_GRAPHICS },
    { "TRACE_TAG_INPUT", "TRACE_TAG_INPUT", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_INPUT },
    { "TRACE_TAG_VIEW", "TRACE_TAG_VIEW", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_VIEW },
    { "TRACE_TAG_WEBVIEW", "TRACE_TAG_WEBVIEW", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_WEBVIEW },
    { "TRACE_TAG_WINDOW_MANAGER", "TRACE_TAG_WINDOW_MANAGER", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_WINDOW_MANAGER },
    { "TRACE_TAG_ACTIVITY_MANAGER", "TRACE_TAG_ACTIVITY_MANAGER", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_ACTIVITY_MANAGER },
    { "TRACE_TAG_SYNC_MANAGER", "TRACE_TAG_SYNC_MANAGER", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_SYNC_MANAGER },
    { "TRACE_TAG_AUDIO", "TRACE_TAG_AUDIO", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_AUDIO },
    { "TRACE_TAG_VIDEO", "TRACE_TAG_VIDEO", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_VIDEO },
    { "TRACE_TAG_CAMERA", "TRACE_TAG_CAMERA", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_CAMERA },
    { "TRACE_TAG_HAL", "TRACE_TAG_HAL", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_HAL },
    { "TRACE_TAG_APP", "TRACE_TAG_APP", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_APP },
    { "TRACE_TAG_RESOURCES", "TRACE_TAG_RESOURCES", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_RESOURCES },
    { "TRACE_TAG_DALVIK", "TRACE_TAG_DALVIK", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_DALVIK },
    { "TRACE_TAG_RS", "TRACE_TAG_RS", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_RS },
    { "TRACE_TAG_BIONIC", "TRACE_TAG_BIONIC", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_BIONIC },
    { "TRACE_TAG_POWER", "TRACE_TAG_POWER", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_POWER },
    { "TRACE_TAG_PACKAGE_MANAGER", "TRACE_TAG_PACKAGE_MANAGER", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_PACKAGE_MANAGER },
    { "TRACE_TAG_SYSTEM_SERVER", "TRACE_TAG_SYSTEM_SERVER", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_SYSTEM_SERVER },
    { "TRACE_TAG_DATABASE", "TRACE_TAG_DATABASE", 0x19, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_DATABASE },
    { "TRACE_TAG_NOT_READY", "TRACE_TAG_NOT_READY", 0x1a, "J", NULL, NULL, .constantValue.asLong = AndroidOsTrace_TRACE_TAG_NOT_READY },
    { "MAX_SECTION_NAME_LEN", "MAX_SECTION_NAME_LEN", 0x1a, "I", NULL, NULL, .constantValue.asInt = AndroidOsTrace_MAX_SECTION_NAME_LEN },
    { "sEnabledTags", "sEnabledTags", 0x4a, "J", &AndroidOsTrace_sEnabledTags, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _AndroidOsTrace = { 2, "Trace", "android.os", NULL, 0x11, 20, methods, 26, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidOsTrace;
}

@end

jlong AndroidOsTrace_nativeGetEnabledTags() {
  AndroidOsTrace_initialize();
  return -1;
}

void AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(jlong tag, NSString *name, jint value) {
  AndroidOsTrace_initialize();
  
}

void AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(jlong tag, NSString *name) {
  AndroidOsTrace_initialize();
  
}

void AndroidOsTrace_nativeTraceEndWithLong_(jlong tag) {
  AndroidOsTrace_initialize();
  
}

void AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie) {
  AndroidOsTrace_initialize();
  
}

void AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(jlong tag, NSString *name, jint cookie) {
  AndroidOsTrace_initialize();
  
}

void AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(jboolean allowed) {
  AndroidOsTrace_initialize();
  
}

void AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(jboolean allowed) {
  AndroidOsTrace_initialize();
  
}

void AndroidOsTrace_init(AndroidOsTrace *self) {
  NSObject_init(self);
}

AndroidOsTrace *new_AndroidOsTrace_init() {
  AndroidOsTrace *self = [AndroidOsTrace alloc];
  AndroidOsTrace_init(self);
  return self;
}

AndroidOsTrace *create_AndroidOsTrace_init() {
  return new_AndroidOsTrace_init();
}

jlong AndroidOsTrace_cacheEnabledTags() {
  AndroidOsTrace_initialize();
  jlong tags = AndroidOsTrace_nativeGetEnabledTags();
  JreAssignVolatileLong(&AndroidOsTrace_sEnabledTags, tags);
  return tags;
}

jboolean AndroidOsTrace_isTagEnabledWithLong_(jlong traceTag) {
  AndroidOsTrace_initialize();
  jlong tags = JreLoadVolatileLong(&AndroidOsTrace_sEnabledTags);
  if (tags == AndroidOsTrace_TRACE_TAG_NOT_READY) {
    tags = AndroidOsTrace_cacheEnabledTags();
  }
  return (tags & traceTag) != 0;
}

void AndroidOsTrace_traceCounterWithLong_withNSString_withInt_(jlong traceTag, NSString *counterName, jint counterValue) {
  AndroidOsTrace_initialize();
  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
    AndroidOsTrace_nativeTraceCounterWithLong_withNSString_withInt_(traceTag, counterName, counterValue);
  }
}

void AndroidOsTrace_setAppTracingAllowedWithBoolean_(jboolean allowed) {
  AndroidOsTrace_initialize();
  AndroidOsTrace_nativeSetAppTracingAllowedWithBoolean_(allowed);
  AndroidOsTrace_cacheEnabledTags();
}

void AndroidOsTrace_setTracingEnabledWithBoolean_(jboolean enabled) {
  AndroidOsTrace_initialize();
  AndroidOsTrace_nativeSetTracingEnabledWithBoolean_(enabled);
  AndroidOsTrace_cacheEnabledTags();
}

void AndroidOsTrace_traceBeginWithLong_withNSString_(jlong traceTag, NSString *methodName) {
  AndroidOsTrace_initialize();
  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
    AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(traceTag, methodName);
  }
}

void AndroidOsTrace_traceEndWithLong_(jlong traceTag) {
  AndroidOsTrace_initialize();
  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
    AndroidOsTrace_nativeTraceEndWithLong_(traceTag);
  }
}

void AndroidOsTrace_asyncTraceBeginWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie) {
  AndroidOsTrace_initialize();
  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
    AndroidOsTrace_nativeAsyncTraceBeginWithLong_withNSString_withInt_(traceTag, methodName, cookie);
  }
}

void AndroidOsTrace_asyncTraceEndWithLong_withNSString_withInt_(jlong traceTag, NSString *methodName, jint cookie) {
  AndroidOsTrace_initialize();
  if (AndroidOsTrace_isTagEnabledWithLong_(traceTag)) {
    AndroidOsTrace_nativeAsyncTraceEndWithLong_withNSString_withInt_(traceTag, methodName, cookie);
  }
}

void AndroidOsTrace_beginSectionWithNSString_(NSString *sectionName) {
  AndroidOsTrace_initialize();
  if (AndroidOsTrace_isTagEnabledWithLong_(AndroidOsTrace_TRACE_TAG_APP)) {
    if (((jint) [((NSString *) nil_chk(sectionName)) length]) > AndroidOsTrace_MAX_SECTION_NAME_LEN) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"sectionName is too long");
    }
    AndroidOsTrace_nativeTraceBeginWithLong_withNSString_(AndroidOsTrace_TRACE_TAG_APP, sectionName);
  }
}

void AndroidOsTrace_endSection() {
  AndroidOsTrace_initialize();
  if (AndroidOsTrace_isTagEnabledWithLong_(AndroidOsTrace_TRACE_TAG_APP)) {
    AndroidOsTrace_nativeTraceEndWithLong_(AndroidOsTrace_TRACE_TAG_APP);
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsTrace)
