//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/os/Handler.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/os/Handler.h"
#include "android/os/Looper.h"
#include "android/os/Message.h"
#include "android/os/MessageQueue.h"
#include "android/os/SystemClock.h"
#include "android/util/Log.h"
#include "android/util/Printer.h"
#include "java/lang/Integer.h"
#include "java/lang/Runnable.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/System.h"

@interface AndroidOsHandler ()

- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r;

- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                                  withId:(id)token;

- (void)handleCallbackWithAndroidOsMessage:(AndroidOsMessage *)message;

@end

inline jboolean AndroidOsHandler_get_FIND_POTENTIAL_LEAKS();
#define AndroidOsHandler_FIND_POTENTIAL_LEAKS false
J2OBJC_STATIC_FIELD_CONSTANT(AndroidOsHandler, FIND_POTENTIAL_LEAKS, jboolean)

inline NSString *AndroidOsHandler_get_TAG();
static NSString *AndroidOsHandler_TAG = @"Handler";
J2OBJC_STATIC_FIELD_OBJ_FINAL(AndroidOsHandler, TAG, NSString *)

__attribute__((unused)) static jboolean AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(AndroidOsHandler *self, jint what, jlong delayMillis);

__attribute__((unused)) static jboolean AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(AndroidOsHandler *self, AndroidOsMessage *msg, jlong delayMillis);

__attribute__((unused)) static jboolean AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *msg);

__attribute__((unused)) static AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_(AndroidOsHandler *self, id<JavaLangRunnable> r);

__attribute__((unused)) static AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(AndroidOsHandler *self, id<JavaLangRunnable> r, id token);

__attribute__((unused)) static void AndroidOsHandler_handleCallbackWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *message);

@interface AndroidOsHandler_Callback : NSObject

@end

@implementation AndroidOsHandler

- (void)handleMessageWithAndroidOsMessage:(AndroidOsMessage *)msg {
}

- (void)dispatchMessageWithAndroidOsMessage:(AndroidOsMessage *)msg {
  if (((AndroidOsMessage *) nil_chk(msg))->callback_ != nil) {
    AndroidOsHandler_handleCallbackWithAndroidOsMessage_(self, msg);
  }
  else {
    if (mCallback_ != nil) {
      if ([mCallback_ handleMessageWithAndroidOsMessage:msg]) {
        return;
      }
    }
    [self handleMessageWithAndroidOsMessage:msg];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidOsHandler_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback {
  AndroidOsHandler_initWithAndroidOsHandler_Callback_(self, callback);
  return self;
}

- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper {
  AndroidOsHandler_initWithAndroidOsLooper_(self, looper);
  return self;
}

- (instancetype)initWithAndroidOsLooper:(AndroidOsLooper *)looper
          withAndroidOsHandler_Callback:(id<AndroidOsHandler_Callback>)callback {
  AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(self, looper, callback);
  return self;
}

- (NSString *)getMessageNameWithAndroidOsMessage:(AndroidOsMessage *)message {
  if (((AndroidOsMessage *) nil_chk(message))->callback_ != nil) {
    return [[message->callback_ getClass] getName];
  }
  return JreStrcat("$$", @"0x", JavaLangInteger_toHexStringWithInt_(message->what_));
}

- (AndroidOsMessage *)obtainMessage {
  return AndroidOsMessage_obtainWithAndroidOsHandler_(self);
}

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_(self, what);
}

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
                                    withId:(id)obj {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withId_(self, what, obj);
}

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
                                   withInt:(jint)arg1
                                   withInt:(jint)arg2 {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_(self, what, arg1, arg2);
}

- (AndroidOsMessage *)obtainMessageWithInt:(jint)what
                                   withInt:(jint)arg1
                                   withInt:(jint)arg2
                                    withId:(id)obj {
  return AndroidOsMessage_obtainWithAndroidOsHandler_withInt_withInt_withInt_withId_(self, what, arg1, arg2, obj);
}

- (jboolean)postWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r), 0);
}

- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                  withLong:(jlong)uptimeMillis {
  return [self sendMessageAtTimeWithAndroidOsMessage:AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r) withLong:uptimeMillis];
}

- (jboolean)postAtTimeWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                    withId:(id)token
                                  withLong:(jlong)uptimeMillis {
  return [self sendMessageAtTimeWithAndroidOsMessage:AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(self, r, token) withLong:uptimeMillis];
}

- (jboolean)postDelayedWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                   withLong:(jlong)delayMillis {
  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r), delayMillis);
}

- (jboolean)postAtFrontOfQueueWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  return AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(self, AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r));
}

- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withJavaLangRunnable:r withId:nil];
}

- (void)removeCallbacksWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                     withId:(id)token {
  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withJavaLangRunnable:r withId:token];
}

- (jboolean)sendMessageWithAndroidOsMessage:(AndroidOsMessage *)msg {
  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, msg, 0);
}

- (jboolean)sendEmptyMessageWithInt:(jint)what {
  return AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(self, what, 0);
}

- (jboolean)sendEmptyMessageDelayedWithInt:(jint)what
                                  withLong:(jlong)delayMillis {
  return AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(self, what, delayMillis);
}

- (jboolean)sendEmptyMessageAtTimeWithInt:(jint)what
                                 withLong:(jlong)uptimeMillis {
  AndroidOsMessage *msg = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(msg))->what_ = what;
  return [self sendMessageAtTimeWithAndroidOsMessage:msg withLong:uptimeMillis];
}

- (jboolean)sendMessageDelayedWithAndroidOsMessage:(AndroidOsMessage *)msg
                                          withLong:(jlong)delayMillis {
  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, msg, delayMillis);
}

- (jboolean)sendMessageAtTimeWithAndroidOsMessage:(AndroidOsMessage *)msg
                                         withLong:(jlong)uptimeMillis {
  jboolean sent = false;
  AndroidOsMessageQueue *queue = mQueue_;
  if (queue != nil) {
    ((AndroidOsMessage *) nil_chk(msg))->target_ = self;
    sent = [queue enqueueMessageWithAndroidOsMessage:msg withLong:uptimeMillis];
  }
  else {
    JavaLangRuntimeException *e = new_JavaLangRuntimeException_initWithNSString_(JreStrcat("@$", self, @" sendMessageAtTime() called with no mQueue"));
    AndroidUtilLog_wWithNSString_withNSString_withNSException_(@"Looper", [e getMessage], e);
  }
  return sent;
}

- (jboolean)sendMessageAtFrontOfQueueWithAndroidOsMessage:(AndroidOsMessage *)msg {
  return AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(self, msg);
}

- (void)removeMessagesWithInt:(jint)what {
  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:nil withBoolean:true];
}

- (void)removeMessagesWithInt:(jint)what
                       withId:(id)object {
  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:object withBoolean:true];
}

- (void)removeCallbacksAndMessagesWithId:(id)token {
  [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeCallbacksAndMessagesWithAndroidOsHandler:self withId:token];
}

- (jboolean)hasMessagesWithInt:(jint)what {
  return [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:nil withBoolean:false];
}

- (jboolean)hasMessagesWithInt:(jint)what
                        withId:(id)object {
  return [((AndroidOsMessageQueue *) nil_chk(mQueue_)) removeMessagesWithAndroidOsHandler:self withInt:what withId:object withBoolean:false];
}

- (AndroidOsLooper *)getLooper {
  return mLooper_;
}

- (void)dumpWithAndroidUtilPrinter:(id<AndroidUtilPrinter>)pw
                      withNSString:(NSString *)prefix {
  [((id<AndroidUtilPrinter>) nil_chk(pw)) printlnWithNSString:JreStrcat("$@$J", prefix, self, @" @ ", AndroidOsSystemClock_uptimeMillis())];
  if (mLooper_ == nil) {
    [pw printlnWithNSString:JreStrcat("$$", prefix, @"looper uninitialized")];
  }
  else {
    [mLooper_ dumpWithAndroidUtilPrinter:pw withNSString:JreStrcat("$$", prefix, @"  ")];
  }
}

- (NSString *)description {
  return JreStrcat("$$$$C", @"Handler (", [[self getClass] getName], @") {", JavaLangInteger_toHexStringWithInt_(JavaLangSystem_identityHashCodeWithId_(self)), '}');
}

- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r {
  return AndroidOsHandler_getPostMessageWithJavaLangRunnable_(self, r);
}

- (AndroidOsMessage *)getPostMessageWithJavaLangRunnable:(id<JavaLangRunnable>)r
                                                  withId:(id)token {
  return AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(self, r, token);
}

- (void)handleCallbackWithAndroidOsMessage:(AndroidOsMessage *)message {
  AndroidOsHandler_handleCallbackWithAndroidOsMessage_(self, message);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleMessageWithAndroidOsMessage:", "handleMessage", "V", 0x1, NULL, NULL },
    { "dispatchMessageWithAndroidOsMessage:", "dispatchMessage", "V", 0x1, NULL, NULL },
    { "init", "Handler", NULL, 0x1, NULL, NULL },
    { "initWithAndroidOsHandler_Callback:", "Handler", NULL, 0x1, NULL, NULL },
    { "initWithAndroidOsLooper:", "Handler", NULL, 0x1, NULL, NULL },
    { "initWithAndroidOsLooper:withAndroidOsHandler_Callback:", "Handler", NULL, 0x1, NULL, NULL },
    { "getMessageNameWithAndroidOsMessage:", "getMessageName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "obtainMessage", NULL, "Landroid.os.Message;", 0x11, NULL, NULL },
    { "obtainMessageWithInt:", "obtainMessage", "Landroid.os.Message;", 0x11, NULL, NULL },
    { "obtainMessageWithInt:withId:", "obtainMessage", "Landroid.os.Message;", 0x11, NULL, NULL },
    { "obtainMessageWithInt:withInt:withInt:", "obtainMessage", "Landroid.os.Message;", 0x11, NULL, NULL },
    { "obtainMessageWithInt:withInt:withInt:withId:", "obtainMessage", "Landroid.os.Message;", 0x11, NULL, NULL },
    { "postWithJavaLangRunnable:", "post", "Z", 0x11, NULL, NULL },
    { "postAtTimeWithJavaLangRunnable:withLong:", "postAtTime", "Z", 0x11, NULL, NULL },
    { "postAtTimeWithJavaLangRunnable:withId:withLong:", "postAtTime", "Z", 0x11, NULL, NULL },
    { "postDelayedWithJavaLangRunnable:withLong:", "postDelayed", "Z", 0x11, NULL, NULL },
    { "postAtFrontOfQueueWithJavaLangRunnable:", "postAtFrontOfQueue", "Z", 0x11, NULL, NULL },
    { "removeCallbacksWithJavaLangRunnable:", "removeCallbacks", "V", 0x11, NULL, NULL },
    { "removeCallbacksWithJavaLangRunnable:withId:", "removeCallbacks", "V", 0x11, NULL, NULL },
    { "sendMessageWithAndroidOsMessage:", "sendMessage", "Z", 0x11, NULL, NULL },
    { "sendEmptyMessageWithInt:", "sendEmptyMessage", "Z", 0x11, NULL, NULL },
    { "sendEmptyMessageDelayedWithInt:withLong:", "sendEmptyMessageDelayed", "Z", 0x11, NULL, NULL },
    { "sendEmptyMessageAtTimeWithInt:withLong:", "sendEmptyMessageAtTime", "Z", 0x11, NULL, NULL },
    { "sendMessageDelayedWithAndroidOsMessage:withLong:", "sendMessageDelayed", "Z", 0x11, NULL, NULL },
    { "sendMessageAtTimeWithAndroidOsMessage:withLong:", "sendMessageAtTime", "Z", 0x1, NULL, NULL },
    { "sendMessageAtFrontOfQueueWithAndroidOsMessage:", "sendMessageAtFrontOfQueue", "Z", 0x11, NULL, NULL },
    { "removeMessagesWithInt:", "removeMessages", "V", 0x11, NULL, NULL },
    { "removeMessagesWithInt:withId:", "removeMessages", "V", 0x11, NULL, NULL },
    { "removeCallbacksAndMessagesWithId:", "removeCallbacksAndMessages", "V", 0x11, NULL, NULL },
    { "hasMessagesWithInt:", "hasMessages", "Z", 0x11, NULL, NULL },
    { "hasMessagesWithInt:withId:", "hasMessages", "Z", 0x11, NULL, NULL },
    { "getLooper", NULL, "Landroid.os.Looper;", 0x11, NULL, NULL },
    { "dumpWithAndroidUtilPrinter:withNSString:", "dump", "V", 0x11, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getPostMessageWithJavaLangRunnable:", "getPostMessage", "Landroid.os.Message;", 0x12, NULL, NULL },
    { "getPostMessageWithJavaLangRunnable:withId:", "getPostMessage", "Landroid.os.Message;", 0x12, NULL, NULL },
    { "handleCallbackWithAndroidOsMessage:", "handleCallback", "V", 0x12, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FIND_POTENTIAL_LEAKS", "FIND_POTENTIAL_LEAKS", 0x1a, "Z", NULL, NULL, .constantValue.asBOOL = AndroidOsHandler_FIND_POTENTIAL_LEAKS },
    { "TAG", "TAG", 0x1a, "Ljava.lang.String;", &AndroidOsHandler_TAG, NULL, .constantValue.asLong = 0 },
    { "mQueue_", NULL, 0x10, "Landroid.os.MessageQueue;", NULL, NULL, .constantValue.asLong = 0 },
    { "mLooper_", NULL, 0x10, "Landroid.os.Looper;", NULL, NULL, .constantValue.asLong = 0 },
    { "mCallback_", NULL, 0x10, "Landroid.os.Handler$Callback;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Landroid.os.Handler$Callback;"};
  static const J2ObjcClassInfo _AndroidOsHandler = { 2, "Handler", "android.os", NULL, 0x1, 37, methods, 5, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_AndroidOsHandler;
}

@end

void AndroidOsHandler_init(AndroidOsHandler *self) {
  NSObject_init(self);
  self->mLooper_ = AndroidOsLooper_myLooper();
  if (self->mLooper_ == nil) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Can't create handler inside thread that has not called Looper.prepare()");
  }
  self->mQueue_ = self->mLooper_->mQueue_;
  self->mCallback_ = nil;
}

AndroidOsHandler *new_AndroidOsHandler_init() {
  J2OBJC_NEW_IMPL(AndroidOsHandler, init)
}

AndroidOsHandler *create_AndroidOsHandler_init() {
  J2OBJC_CREATE_IMPL(AndroidOsHandler, init)
}

void AndroidOsHandler_initWithAndroidOsHandler_Callback_(AndroidOsHandler *self, id<AndroidOsHandler_Callback> callback) {
  NSObject_init(self);
  self->mLooper_ = AndroidOsLooper_myLooper();
  if (self->mLooper_ == nil) {
    @throw new_JavaLangRuntimeException_initWithNSString_(@"Can't create handler inside thread that has not called Looper.prepare()");
  }
  self->mQueue_ = self->mLooper_->mQueue_;
  self->mCallback_ = callback;
}

AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback) {
  J2OBJC_NEW_IMPL(AndroidOsHandler, initWithAndroidOsHandler_Callback_, callback)
}

AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsHandler_Callback_(id<AndroidOsHandler_Callback> callback) {
  J2OBJC_CREATE_IMPL(AndroidOsHandler, initWithAndroidOsHandler_Callback_, callback)
}

void AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsHandler *self, AndroidOsLooper *looper) {
  NSObject_init(self);
  self->mLooper_ = looper;
  self->mQueue_ = ((AndroidOsLooper *) nil_chk(looper))->mQueue_;
  self->mCallback_ = nil;
}

AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper) {
  J2OBJC_NEW_IMPL(AndroidOsHandler, initWithAndroidOsLooper_, looper)
}

AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_(AndroidOsLooper *looper) {
  J2OBJC_CREATE_IMPL(AndroidOsHandler, initWithAndroidOsLooper_, looper)
}

void AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsHandler *self, AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) {
  NSObject_init(self);
  self->mLooper_ = looper;
  self->mQueue_ = ((AndroidOsLooper *) nil_chk(looper))->mQueue_;
  self->mCallback_ = callback;
}

AndroidOsHandler *new_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) {
  J2OBJC_NEW_IMPL(AndroidOsHandler, initWithAndroidOsLooper_withAndroidOsHandler_Callback_, looper, callback)
}

AndroidOsHandler *create_AndroidOsHandler_initWithAndroidOsLooper_withAndroidOsHandler_Callback_(AndroidOsLooper *looper, id<AndroidOsHandler_Callback> callback) {
  J2OBJC_CREATE_IMPL(AndroidOsHandler, initWithAndroidOsLooper_withAndroidOsHandler_Callback_, looper, callback)
}

jboolean AndroidOsHandler_sendEmptyMessageDelayedWithInt_withLong_(AndroidOsHandler *self, jint what, jlong delayMillis) {
  AndroidOsMessage *msg = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(msg))->what_ = what;
  return AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(self, msg, delayMillis);
}

jboolean AndroidOsHandler_sendMessageDelayedWithAndroidOsMessage_withLong_(AndroidOsHandler *self, AndroidOsMessage *msg, jlong delayMillis) {
  if (delayMillis < 0) {
    delayMillis = 0;
  }
  return [self sendMessageAtTimeWithAndroidOsMessage:msg withLong:AndroidOsSystemClock_uptimeMillis() + delayMillis];
}

jboolean AndroidOsHandler_sendMessageAtFrontOfQueueWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *msg) {
  jboolean sent = false;
  AndroidOsMessageQueue *queue = self->mQueue_;
  if (queue != nil) {
    ((AndroidOsMessage *) nil_chk(msg))->target_ = self;
    sent = [queue enqueueMessageWithAndroidOsMessage:msg withLong:0];
  }
  else {
    JavaLangRuntimeException *e = new_JavaLangRuntimeException_initWithNSString_(JreStrcat("@$", self, @" sendMessageAtTime() called with no mQueue"));
    AndroidUtilLog_wWithNSString_withNSString_withNSException_(@"Looper", [e getMessage], e);
  }
  return sent;
}

AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_(AndroidOsHandler *self, id<JavaLangRunnable> r) {
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->callback_ = r;
  return m;
}

AndroidOsMessage *AndroidOsHandler_getPostMessageWithJavaLangRunnable_withId_(AndroidOsHandler *self, id<JavaLangRunnable> r, id token) {
  AndroidOsMessage *m = AndroidOsMessage_obtain();
  ((AndroidOsMessage *) nil_chk(m))->obj_ = token;
  m->callback_ = r;
  return m;
}

void AndroidOsHandler_handleCallbackWithAndroidOsMessage_(AndroidOsHandler *self, AndroidOsMessage *message) {
  [((id<JavaLangRunnable>) nil_chk(((AndroidOsMessage *) nil_chk(message))->callback_)) run];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsHandler)

@implementation AndroidOsHandler_Callback

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "handleMessageWithAndroidOsMessage:", "handleMessage", "Z", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _AndroidOsHandler_Callback = { 2, "Callback", "android.os", "Handler", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidOsHandler_Callback;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(AndroidOsHandler_Callback)
