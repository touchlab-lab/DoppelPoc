//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/SQLException.java
//

#include "J2ObjC_source.h"
#include "android/database/SQLException.h"
#include "java/lang/RuntimeException.h"

@implementation AndroidDatabaseSQLException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidDatabaseSQLException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)error {
  AndroidDatabaseSQLException_initWithNSString_(self, error);
  return self;
}

- (instancetype)initWithNSString:(NSString *)error
                 withNSException:(NSException *)cause {
  AndroidDatabaseSQLException_initWithNSString_withNSException_(self, error, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SQLException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "SQLException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "SQLException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _AndroidDatabaseSQLException = { 2, "SQLException", "android.database", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidDatabaseSQLException;
}

@end

void AndroidDatabaseSQLException_init(AndroidDatabaseSQLException *self) {
  JavaLangRuntimeException_init(self);
}

AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_init() {
  J2OBJC_NEW_IMPL(AndroidDatabaseSQLException, init)
}

AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_init() {
  J2OBJC_CREATE_IMPL(AndroidDatabaseSQLException, init)
}

void AndroidDatabaseSQLException_initWithNSString_(AndroidDatabaseSQLException *self, NSString *error) {
  JavaLangRuntimeException_initWithNSString_(self, error);
}

AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_initWithNSString_(NSString *error) {
  J2OBJC_NEW_IMPL(AndroidDatabaseSQLException, initWithNSString_, error)
}

AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_initWithNSString_(NSString *error) {
  J2OBJC_CREATE_IMPL(AndroidDatabaseSQLException, initWithNSString_, error)
}

void AndroidDatabaseSQLException_initWithNSString_withNSException_(AndroidDatabaseSQLException *self, NSString *error, NSException *cause) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, error, cause);
}

AndroidDatabaseSQLException *new_AndroidDatabaseSQLException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
  J2OBJC_NEW_IMPL(AndroidDatabaseSQLException, initWithNSString_withNSException_, error, cause)
}

AndroidDatabaseSQLException *create_AndroidDatabaseSQLException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
  J2OBJC_CREATE_IMPL(AndroidDatabaseSQLException, initWithNSString_withNSException_, error, cause)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSQLException)
