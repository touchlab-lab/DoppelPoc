//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/CursorWrapper.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/database/CharArrayBuffer.h"
#include "android/database/Cursor.h"
#include "android/database/CursorWrapper.h"
#include "android/database/DataSetObserver.h"
#include "android/os/Bundle.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"

@implementation AndroidDatabaseCursorWrapper

- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor {
  AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(self, cursor);
  return self;
}

- (id<AndroidDatabaseCursor>)getWrappedCursor {
  return mCursor_;
}

- (void)close {
  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) close];
}

- (jboolean)isClosed {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isClosed];
}

- (jint)getCount {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getCount];
}

- (void)deactivate {
  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) deactivate];
}

- (jboolean)moveToFirst {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToFirst];
}

- (jint)getColumnCount {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnCount];
}

- (jint)getColumnIndexWithNSString:(NSString *)columnName {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnIndexWithNSString:columnName];
}

- (jint)getColumnIndexOrThrowWithNSString:(NSString *)columnName {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnIndexOrThrowWithNSString:columnName];
}

- (NSString *)getColumnNameWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnNameWithInt:columnIndex];
}

- (IOSObjectArray *)getColumnNames {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getColumnNames];
}

- (jdouble)getDoubleWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getDoubleWithInt:columnIndex];
}

- (void)setExtrasWithAndroidOsBundle:(AndroidOsBundle *)extras {
  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) setExtrasWithAndroidOsBundle:extras];
}

- (AndroidOsBundle *)getExtras {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getExtras];
}

- (jfloat)getFloatWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getFloatWithInt:columnIndex];
}

- (jint)getIntWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getIntWithInt:columnIndex];
}

- (jlong)getLongWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getLongWithInt:columnIndex];
}

- (jshort)getShortWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getShortWithInt:columnIndex];
}

- (NSString *)getStringWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getStringWithInt:columnIndex];
}

- (void)copyStringToBufferWithInt:(jint)columnIndex
withAndroidDatabaseCharArrayBuffer:(AndroidDatabaseCharArrayBuffer *)buffer {
  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) copyStringToBufferWithInt:columnIndex withAndroidDatabaseCharArrayBuffer:buffer];
}

- (IOSByteArray *)getBlobWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getBlobWithInt:columnIndex];
}

- (jboolean)getWantsAllOnMoveCalls {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getWantsAllOnMoveCalls];
}

- (jboolean)isAfterLast {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isAfterLast];
}

- (jboolean)isBeforeFirst {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isBeforeFirst];
}

- (jboolean)isFirst {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isFirst];
}

- (jboolean)isLast {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isLast];
}

- (jint)getTypeWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getTypeWithInt:columnIndex];
}

- (jboolean)isNullWithInt:(jint)columnIndex {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) isNullWithInt:columnIndex];
}

- (jboolean)moveToLast {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToLast];
}

- (jboolean)moveWithInt:(jint)offset {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveWithInt:offset];
}

- (jboolean)moveToPositionWithInt:(jint)position {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToPositionWithInt:position];
}

- (jboolean)moveToNext {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToNext];
}

- (jint)getPosition {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) getPosition];
}

- (jboolean)moveToPrevious {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) moveToPrevious];
}

- (void)registerDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) registerDataSetObserverWithAndroidDatabaseDataSetObserver:observer];
}

- (jboolean)requery {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) requery];
}

- (AndroidOsBundle *)respondWithAndroidOsBundle:(AndroidOsBundle *)extras {
  return [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) respondWithAndroidOsBundle:extras];
}

- (void)unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:(AndroidDatabaseDataSetObserver *)observer {
  [((id<AndroidDatabaseCursor>) nil_chk(mCursor_)) unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:observer];
}

+ (IOSObjectArray *)__annotations_deactivate {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_requery {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAndroidDatabaseCursor:", "CursorWrapper", NULL, 0x1, NULL, NULL },
    { "getWrappedCursor", NULL, "Landroid.database.Cursor;", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "isClosed", NULL, "Z", 0x1, NULL, NULL },
    { "getCount", NULL, "I", 0x1, NULL, NULL },
    { "deactivate", NULL, "V", 0x1, NULL, NULL },
    { "moveToFirst", NULL, "Z", 0x1, NULL, NULL },
    { "getColumnCount", NULL, "I", 0x1, NULL, NULL },
    { "getColumnIndexWithNSString:", "getColumnIndex", "I", 0x1, NULL, NULL },
    { "getColumnIndexOrThrowWithNSString:", "getColumnIndexOrThrow", "I", 0x1, "Ljava.lang.IllegalArgumentException;", NULL },
    { "getColumnNameWithInt:", "getColumnName", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getColumnNames", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDoubleWithInt:", "getDouble", "D", 0x1, NULL, NULL },
    { "setExtrasWithAndroidOsBundle:", "setExtras", "V", 0x1, NULL, NULL },
    { "getExtras", NULL, "Landroid.os.Bundle;", 0x1, NULL, NULL },
    { "getFloatWithInt:", "getFloat", "F", 0x1, NULL, NULL },
    { "getIntWithInt:", "getInt", "I", 0x1, NULL, NULL },
    { "getLongWithInt:", "getLong", "J", 0x1, NULL, NULL },
    { "getShortWithInt:", "getShort", "S", 0x1, NULL, NULL },
    { "getStringWithInt:", "getString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "copyStringToBufferWithInt:withAndroidDatabaseCharArrayBuffer:", "copyStringToBuffer", "V", 0x1, NULL, NULL },
    { "getBlobWithInt:", "getBlob", "[B", 0x1, NULL, NULL },
    { "getWantsAllOnMoveCalls", NULL, "Z", 0x1, NULL, NULL },
    { "isAfterLast", NULL, "Z", 0x1, NULL, NULL },
    { "isBeforeFirst", NULL, "Z", 0x1, NULL, NULL },
    { "isFirst", NULL, "Z", 0x1, NULL, NULL },
    { "isLast", NULL, "Z", 0x1, NULL, NULL },
    { "getTypeWithInt:", "getType", "I", 0x1, NULL, NULL },
    { "isNullWithInt:", "isNull", "Z", 0x1, NULL, NULL },
    { "moveToLast", NULL, "Z", 0x1, NULL, NULL },
    { "moveWithInt:", "move", "Z", 0x1, NULL, NULL },
    { "moveToPositionWithInt:", "moveToPosition", "Z", 0x1, NULL, NULL },
    { "moveToNext", NULL, "Z", 0x1, NULL, NULL },
    { "getPosition", NULL, "I", 0x1, NULL, NULL },
    { "moveToPrevious", NULL, "Z", 0x1, NULL, NULL },
    { "registerDataSetObserverWithAndroidDatabaseDataSetObserver:", "registerDataSetObserver", "V", 0x1, NULL, NULL },
    { "requery", NULL, "Z", 0x1, NULL, NULL },
    { "respondWithAndroidOsBundle:", "respond", "Landroid.os.Bundle;", 0x1, NULL, NULL },
    { "unregisterDataSetObserverWithAndroidDatabaseDataSetObserver:", "unregisterDataSetObserver", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mCursor_", NULL, 0x14, "Landroid.database.Cursor;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _AndroidDatabaseCursorWrapper = { 2, "CursorWrapper", "android.database", NULL, 0x1, 39, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidDatabaseCursorWrapper;
}

@end

void AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(AndroidDatabaseCursorWrapper *self, id<AndroidDatabaseCursor> cursor) {
  NSObject_init(self);
  self->mCursor_ = cursor;
}

AndroidDatabaseCursorWrapper *new_AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
  J2OBJC_NEW_IMPL(AndroidDatabaseCursorWrapper, initWithAndroidDatabaseCursor_, cursor)
}

AndroidDatabaseCursorWrapper *create_AndroidDatabaseCursorWrapper_initWithAndroidDatabaseCursor_(id<AndroidDatabaseCursor> cursor) {
  J2OBJC_CREATE_IMPL(AndroidDatabaseCursorWrapper, initWithAndroidDatabaseCursor_, cursor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseCursorWrapper)
