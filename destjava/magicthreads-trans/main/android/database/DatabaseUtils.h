//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/DatabaseUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_AndroidDatabaseDatabaseUtils")
#ifdef RESTRICT_AndroidDatabaseDatabaseUtils
#define INCLUDE_ALL_AndroidDatabaseDatabaseUtils 0
#else
#define INCLUDE_ALL_AndroidDatabaseDatabaseUtils 1
#endif
#undef RESTRICT_AndroidDatabaseDatabaseUtils

#if !defined (AndroidDatabaseDatabaseUtils_) && (INCLUDE_ALL_AndroidDatabaseDatabaseUtils || defined(INCLUDE_AndroidDatabaseDatabaseUtils))
#define AndroidDatabaseDatabaseUtils_

@class AndroidDatabaseCursorWindow;
@class AndroidDatabaseSqliteSQLiteDatabase;
@class AndroidDatabaseSqliteSQLiteProgram;
@class AndroidDatabaseSqliteSQLiteStatement;
@class IOSObjectArray;
@class JavaLangStringBuilder;
@protocol AndroidDatabaseCursor;

@interface AndroidDatabaseDatabaseUtils : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)appendEscapedSQLStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                           withNSString:(NSString *)sqlString;

+ (void)bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram:(AndroidDatabaseSqliteSQLiteProgram *)prog
                                                          withInt:(jint)index
                                                           withId:(id)value;

+ (void)cursorFillWindowWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
                                          withInt:(jint)position
                  withAndroidDatabaseCursorWindow:(AndroidDatabaseCursorWindow *)window;

+ (jint)cursorPickFillWindowStartPositionWithInt:(jint)cursorPosition
                                         withInt:(jint)cursorWindowCapacity;

+ (jint)findRowIdColumnIndexWithNSStringArray:(IOSObjectArray *)columnNames;

+ (jint)getSqlStatementTypeWithNSString:(NSString *)sql;

+ (jint)getTypeOfObjectWithId:(id)obj;

+ (jlong)longForQueryWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                                withNSString:(NSString *)query
                                           withNSStringArray:(IOSObjectArray *)selectionArgs;

+ (jlong)longForQueryWithAndroidDatabaseSqliteSQLiteStatement:(AndroidDatabaseSqliteSQLiteStatement *)prog
                                            withNSStringArray:(IOSObjectArray *)selectionArgs;

+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                                   withNSString:(NSString *)table;

+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                                   withNSString:(NSString *)table
                                                   withNSString:(NSString *)selection;

+ (jlong)queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                                   withNSString:(NSString *)table
                                                   withNSString:(NSString *)selection
                                              withNSStringArray:(IOSObjectArray *)selectionArgs;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseDatabaseUtils)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_SELECT();
#define AndroidDatabaseDatabaseUtils_STATEMENT_SELECT 1
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_SELECT, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_UPDATE();
#define AndroidDatabaseDatabaseUtils_STATEMENT_UPDATE 2
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_UPDATE, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_ATTACH();
#define AndroidDatabaseDatabaseUtils_STATEMENT_ATTACH 3
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_ATTACH, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_BEGIN();
#define AndroidDatabaseDatabaseUtils_STATEMENT_BEGIN 4
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_BEGIN, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_COMMIT();
#define AndroidDatabaseDatabaseUtils_STATEMENT_COMMIT 5
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_COMMIT, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_ABORT();
#define AndroidDatabaseDatabaseUtils_STATEMENT_ABORT 6
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_ABORT, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_PRAGMA();
#define AndroidDatabaseDatabaseUtils_STATEMENT_PRAGMA 7
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_PRAGMA, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_DDL();
#define AndroidDatabaseDatabaseUtils_STATEMENT_DDL 8
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_DDL, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_UNPREPARED();
#define AndroidDatabaseDatabaseUtils_STATEMENT_UNPREPARED 9
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_UNPREPARED, jint)

inline jint AndroidDatabaseDatabaseUtils_get_STATEMENT_OTHER();
#define AndroidDatabaseDatabaseUtils_STATEMENT_OTHER 99
J2OBJC_STATIC_FIELD_CONSTANT(AndroidDatabaseDatabaseUtils, STATEMENT_OTHER, jint)

FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_getSqlStatementTypeWithNSString_(NSString *sql);

FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_getTypeOfObjectWithId_(id obj);

FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_findRowIdColumnIndexWithNSStringArray_(IOSObjectArray *columnNames);

FOUNDATION_EXPORT jint AndroidDatabaseDatabaseUtils_cursorPickFillWindowStartPositionWithInt_withInt_(jint cursorPosition, jint cursorWindowCapacity);

FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_appendEscapedSQLStringWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *sb, NSString *sqlString);

FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *query, IOSObjectArray *selectionArgs);

FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_longForQueryWithAndroidDatabaseSqliteSQLiteStatement_withNSStringArray_(AndroidDatabaseSqliteSQLiteStatement *prog, IOSObjectArray *selectionArgs);

FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_cursorFillWindowWithAndroidDatabaseCursor_withInt_withAndroidDatabaseCursorWindow_(id<AndroidDatabaseCursor> cursor, jint position, AndroidDatabaseCursorWindow *window);

FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_bindObjectToProgramWithAndroidDatabaseSqliteSQLiteProgram_withInt_withId_(AndroidDatabaseSqliteSQLiteProgram *prog, jint index, id value);

FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table);

FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table, NSString *selection);

FOUNDATION_EXPORT jlong AndroidDatabaseDatabaseUtils_queryNumEntriesWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSString_withNSStringArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *table, NSString *selection, IOSObjectArray *selectionArgs);

FOUNDATION_EXPORT void AndroidDatabaseDatabaseUtils_init(AndroidDatabaseDatabaseUtils *self);

FOUNDATION_EXPORT AndroidDatabaseDatabaseUtils *new_AndroidDatabaseDatabaseUtils_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseDatabaseUtils *create_AndroidDatabaseDatabaseUtils_init();

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseDatabaseUtils)

#endif

#pragma pop_macro("INCLUDE_ALL_AndroidDatabaseDatabaseUtils")
