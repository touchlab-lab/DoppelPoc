//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/content/IOSContext.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/content/Context.h"
#include "android/content/IOSContext.h"
#include "android/database/DatabaseErrorHandler.h"
#include "android/database/sqlite/SQLiteDatabase.h"
#include "android/os/Looper.h"
#include "java/io/File.h"
#include "java/io/FileInputStream.h"
#include "java/io/FileNotFoundException.h"
#include "java/io/FileOutputStream.h"
#include "java/lang/UnsupportedOperationException.h"

@interface AndroidContentIOSContext ()

- (JavaIoFile *)findLocalFileWithNSString:(NSString *)name;

- (JavaIoFile *)getRootDir;

- (NSString *)getRootDirString;

@end

__attribute__((unused)) static JavaIoFile *AndroidContentIOSContext_findLocalFileWithNSString_(AndroidContentIOSContext *self, NSString *name);

__attribute__((unused)) static JavaIoFile *AndroidContentIOSContext_getRootDir(AndroidContentIOSContext *self);

__attribute__((unused)) static NSString *AndroidContentIOSContext_getRootDirString(AndroidContentIOSContext *self);

NSString *AndroidContentIOSContext_DATABASES = @"databases";

@implementation AndroidContentIOSContext

- (AndroidOsLooper *)getMainLooper {
  return AndroidOsLooper_getMainLooper();
}

- (JavaIoFileInputStream *)openFileInputWithNSString:(NSString *)name {
  return new_JavaIoFileInputStream_initWithJavaIoFile_(AndroidContentIOSContext_findLocalFileWithNSString_(self, name));
}

- (JavaIoFileOutputStream *)openFileOutputWithNSString:(NSString *)name
                                               withInt:(jint)mode {
  return new_JavaIoFileOutputStream_initWithJavaIoFile_(AndroidContentIOSContext_findLocalFileWithNSString_(self, name));
}

- (JavaIoFile *)findLocalFileWithNSString:(NSString *)name {
  return AndroidContentIOSContext_findLocalFileWithNSString_(self, name);
}

- (jboolean)deleteFileWithNSString:(NSString *)name {
  JavaIoFile *localFile = AndroidContentIOSContext_findLocalFileWithNSString_(self, name);
  return [((JavaIoFile *) nil_chk(localFile)) delete__];
}

- (JavaIoFile *)getFileStreamPathWithNSString:(NSString *)name {
  return AndroidContentIOSContext_findLocalFileWithNSString_(self, name);
}

- (JavaIoFile *)getFilesDir {
  return [self getDirWithNSString:@"files" withInt:AndroidContentContext_MODE_PRIVATE];
}

- (JavaIoFile *)getRootDir {
  return AndroidContentIOSContext_getRootDir(self);
}

- (NSString *)getRootDirString {
  return AndroidContentIOSContext_getRootDirString(self);
}

- (JavaIoFile *)getExternalFilesDirWithNSString:(NSString *)type {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (IOSObjectArray *)getExternalFilesDirsWithNSString:(NSString *)type {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (JavaIoFile *)getCacheDir {
  return [self getDirWithNSString:@"cache" withInt:AndroidContentContext_MODE_PRIVATE];
}

- (IOSObjectArray *)fileList {
  @throw new_JavaLangUnsupportedOperationException_init();
}

- (JavaIoFile *)getDirWithNSString:(NSString *)name
                           withInt:(jint)mode {
  JavaIoFile *rootDir = AndroidContentIOSContext_getRootDir(self);
  JavaIoFile *filesDir = new_JavaIoFile_initWithJavaIoFile_withNSString_(rootDir, name);
  [filesDir mkdirs];
  return filesDir;
}

- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
                                                                  withInt:(jint)mode
                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory {
  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithJavaIoFile_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_([self getDatabasePathWithNSString:name], factory);
}

- (AndroidDatabaseSqliteSQLiteDatabase *)openOrCreateDatabaseWithNSString:(NSString *)name
                                                                  withInt:(jint)mode
                    withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
                                  withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
  return AndroidDatabaseSqliteSQLiteDatabase_openOrCreateDatabaseWithNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withAndroidDatabaseDatabaseErrorHandler_([((JavaIoFile *) nil_chk([self getDatabasePathWithNSString:name])) getPath], factory, errorHandler);
}

- (jboolean)deleteDatabaseWithNSString:(NSString *)name {
  return [((JavaIoFile *) nil_chk([self getDatabasePathWithNSString:name])) delete__];
}

- (JavaIoFile *)getDatabasePathWithNSString:(NSString *)name {
  JavaIoFile *dbDir = [self getDirWithNSString:AndroidContentIOSContext_DATABASES withInt:AndroidContentContext_MODE_PRIVATE];
  JavaIoFile *file = new_JavaIoFile_initWithJavaIoFile_withNSString_(dbDir, name);
  return file;
}

- (IOSObjectArray *)databaseList {
  return [((JavaIoFile *) nil_chk([self getDirWithNSString:AndroidContentIOSContext_DATABASES withInt:AndroidContentContext_MODE_PRIVATE])) list];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidContentIOSContext_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getMainLooper", NULL, "Landroid.os.Looper;", 0x1, NULL, NULL },
    { "openFileInputWithNSString:", "openFileInput", "Ljava.io.FileInputStream;", 0x1, "Ljava.io.FileNotFoundException;", NULL },
    { "openFileOutputWithNSString:withInt:", "openFileOutput", "Ljava.io.FileOutputStream;", 0x1, "Ljava.io.FileNotFoundException;", NULL },
    { "findLocalFileWithNSString:", "findLocalFile", "Ljava.io.File;", 0x2, NULL, NULL },
    { "deleteFileWithNSString:", "deleteFile", "Z", 0x1, NULL, NULL },
    { "getFileStreamPathWithNSString:", "getFileStreamPath", "Ljava.io.File;", 0x1, NULL, NULL },
    { "getFilesDir", NULL, "Ljava.io.File;", 0x1, NULL, NULL },
    { "getRootDir", NULL, "Ljava.io.File;", 0x2, NULL, NULL },
    { "getRootDirString", NULL, "Ljava.lang.String;", 0x102, NULL, NULL },
    { "getExternalFilesDirWithNSString:", "getExternalFilesDir", "Ljava.io.File;", 0x1, NULL, NULL },
    { "getExternalFilesDirsWithNSString:", "getExternalFilesDirs", "[Ljava.io.File;", 0x1, NULL, NULL },
    { "getCacheDir", NULL, "Ljava.io.File;", 0x1, NULL, NULL },
    { "fileList", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "getDirWithNSString:withInt:", "getDir", "Ljava.io.File;", 0x1, NULL, NULL },
    { "openOrCreateDatabaseWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:", "openOrCreateDatabase", "Landroid.database.sqlite.SQLiteDatabase;", 0x1, NULL, NULL },
    { "openOrCreateDatabaseWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withAndroidDatabaseDatabaseErrorHandler:", "openOrCreateDatabase", "Landroid.database.sqlite.SQLiteDatabase;", 0x1, NULL, NULL },
    { "deleteDatabaseWithNSString:", "deleteDatabase", "Z", 0x1, NULL, NULL },
    { "getDatabasePathWithNSString:", "getDatabasePath", "Ljava.io.File;", 0x1, NULL, NULL },
    { "databaseList", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", "IOSContext", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DATABASES", "DATABASES", 0x19, "Ljava.lang.String;", &AndroidContentIOSContext_DATABASES, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _AndroidContentIOSContext = { 2, "IOSContext", "android.content", NULL, 0x1, 20, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidContentIOSContext;
}

@end

JavaIoFile *AndroidContentIOSContext_findLocalFileWithNSString_(AndroidContentIOSContext *self, NSString *name) {
  return new_JavaIoFile_initWithJavaIoFile_withNSString_([self getFilesDir], name);
}

JavaIoFile *AndroidContentIOSContext_getRootDir(AndroidContentIOSContext *self) {
  JavaIoFile *file = new_JavaIoFile_initWithNSString_(AndroidContentIOSContext_getRootDirString(self));
  [file mkdirs];
  return file;
}

NSString *AndroidContentIOSContext_getRootDirString(AndroidContentIOSContext *self) {
  NSArray *paths = NSSearchPathForDirectoriesInDomains(NSApplicationSupportDirectory, NSUserDomainMask, YES);
  
  NSString *documentsDirectory = [paths firstObject];
  
  return documentsDirectory;
}

void AndroidContentIOSContext_init(AndroidContentIOSContext *self) {
  AndroidContentContext_init(self);
}

AndroidContentIOSContext *new_AndroidContentIOSContext_init() {
  J2OBJC_NEW_IMPL(AndroidContentIOSContext, init)
}

AndroidContentIOSContext *create_AndroidContentIOSContext_init() {
  J2OBJC_CREATE_IMPL(AndroidContentIOSContext, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidContentIOSContext)
