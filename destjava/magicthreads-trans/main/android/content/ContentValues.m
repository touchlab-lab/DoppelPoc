//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/content/ContentValues.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/content/ContentValues.h"
#include "android/util/Log.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/CharSequence.h"
#include "java/lang/ClassCastException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/HashMap.h"
#include "java/util/Set.h"

@interface AndroidContentContentValues () {
 @public
  JavaUtilHashMap *mValues_;
}

- (instancetype)initWithJavaUtilHashMap:(JavaUtilHashMap *)values;

@end

J2OBJC_FIELD_SETTER(AndroidContentContentValues, mValues_, JavaUtilHashMap *)

__attribute__((unused)) static void AndroidContentContentValues_initWithJavaUtilHashMap_(AndroidContentContentValues *self, JavaUtilHashMap *values);

__attribute__((unused)) static AndroidContentContentValues *new_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values) NS_RETURNS_RETAINED;

__attribute__((unused)) static AndroidContentContentValues *create_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values);

NSString *AndroidContentContentValues_TAG = @"ContentValues";

@implementation AndroidContentContentValues

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidContentContentValues_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)size {
  AndroidContentContentValues_initWithInt_(self, size);
  return self;
}

- (instancetype)initWithAndroidContentContentValues:(AndroidContentContentValues *)from {
  AndroidContentContentValues_initWithAndroidContentContentValues_(self, from);
  return self;
}

- (instancetype)initWithJavaUtilHashMap:(JavaUtilHashMap *)values {
  AndroidContentContentValues_initWithJavaUtilHashMap_(self, values);
  return self;
}

- (jboolean)isEqual:(id)object {
  if (!([object isKindOfClass:[AndroidContentContentValues class]])) {
    return false;
  }
  return [((JavaUtilHashMap *) nil_chk(mValues_)) isEqual:((AndroidContentContentValues *) nil_chk(((AndroidContentContentValues *) cast_chk(object, [AndroidContentContentValues class]))))->mValues_];
}

- (NSUInteger)hash {
  return ((jint) [((JavaUtilHashMap *) nil_chk(mValues_)) hash]);
}

- (void)putWithNSString:(NSString *)key
           withNSString:(NSString *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putAllWithAndroidContentContentValues:(AndroidContentContentValues *)other {
  [((JavaUtilHashMap *) nil_chk(mValues_)) putAllWithJavaUtilMap:((AndroidContentContentValues *) nil_chk(other))->mValues_];
}

- (void)putWithNSString:(NSString *)key
       withJavaLangByte:(JavaLangByte *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putWithNSString:(NSString *)key
      withJavaLangShort:(JavaLangShort *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putWithNSString:(NSString *)key
    withJavaLangInteger:(JavaLangInteger *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putWithNSString:(NSString *)key
       withJavaLangLong:(JavaLangLong *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putWithNSString:(NSString *)key
      withJavaLangFloat:(JavaLangFloat *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putWithNSString:(NSString *)key
     withJavaLangDouble:(JavaLangDouble *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putWithNSString:(NSString *)key
    withJavaLangBoolean:(JavaLangBoolean *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putWithNSString:(NSString *)key
          withByteArray:(IOSByteArray *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (void)putNullWithNSString:(NSString *)key {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:nil];
}

- (jint)size {
  return [((JavaUtilHashMap *) nil_chk(mValues_)) size];
}

- (void)removeWithNSString:(NSString *)key {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) removeWithId:key];
}

- (void)clear {
  [((JavaUtilHashMap *) nil_chk(mValues_)) clear];
}

- (jboolean)containsKeyWithNSString:(NSString *)key {
  return [((JavaUtilHashMap *) nil_chk(mValues_)) containsKeyWithId:key];
}

- (id)getWithNSString:(NSString *)key {
  return [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
}

- (NSString *)getAsStringWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  return value != nil ? [value description] : nil;
}

- (JavaLangLong *)getAsLongWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  @try {
    return value != nil ? JavaLangLong_valueOfWithLong_([((NSNumber *) cast_chk(value, [NSNumber class])) longLongValue]) : nil;
  }
  @catch (JavaLangClassCastException *e) {
    if ([JavaLangCharSequence_class_() isInstance:value]) {
      @try {
        return JavaLangLong_valueOfWithNSString_([value description]);
      }
      @catch (JavaLangNumberFormatException *e2) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Long value for ", value, @" at key ", key));
        return nil;
      }
    }
    else {
      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Long: ", value), e);
      return nil;
    }
  }
}

- (JavaLangInteger *)getAsIntegerWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  @try {
    return value != nil ? JavaLangInteger_valueOfWithInt_([((NSNumber *) cast_chk(value, [NSNumber class])) intValue]) : nil;
  }
  @catch (JavaLangClassCastException *e) {
    if ([JavaLangCharSequence_class_() isInstance:value]) {
      @try {
        return JavaLangInteger_valueOfWithNSString_([value description]);
      }
      @catch (JavaLangNumberFormatException *e2) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Integer value for ", value, @" at key ", key));
        return nil;
      }
    }
    else {
      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Integer: ", value), e);
      return nil;
    }
  }
}

- (JavaLangShort *)getAsShortWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  @try {
    return value != nil ? JavaLangShort_valueOfWithShort_([((NSNumber *) cast_chk(value, [NSNumber class])) shortValue]) : nil;
  }
  @catch (JavaLangClassCastException *e) {
    if ([JavaLangCharSequence_class_() isInstance:value]) {
      @try {
        return JavaLangShort_valueOfWithNSString_([value description]);
      }
      @catch (JavaLangNumberFormatException *e2) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Short value for ", value, @" at key ", key));
        return nil;
      }
    }
    else {
      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Short: ", value), e);
      return nil;
    }
  }
}

- (JavaLangByte *)getAsByteWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  @try {
    return value != nil ? JavaLangByte_valueOfWithByte_([((NSNumber *) cast_chk(value, [NSNumber class])) charValue]) : nil;
  }
  @catch (JavaLangClassCastException *e) {
    if ([JavaLangCharSequence_class_() isInstance:value]) {
      @try {
        return JavaLangByte_valueOfWithNSString_([value description]);
      }
      @catch (JavaLangNumberFormatException *e2) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Byte value for ", value, @" at key ", key));
        return nil;
      }
    }
    else {
      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Byte: ", value), e);
      return nil;
    }
  }
}

- (JavaLangDouble *)getAsDoubleWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  @try {
    return value != nil ? JavaLangDouble_valueOfWithDouble_([((NSNumber *) cast_chk(value, [NSNumber class])) doubleValue]) : nil;
  }
  @catch (JavaLangClassCastException *e) {
    if ([JavaLangCharSequence_class_() isInstance:value]) {
      @try {
        return JavaLangDouble_valueOfWithNSString_([value description]);
      }
      @catch (JavaLangNumberFormatException *e2) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Double value for ", value, @" at key ", key));
        return nil;
      }
    }
    else {
      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Double: ", value), e);
      return nil;
    }
  }
}

- (JavaLangFloat *)getAsFloatWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  @try {
    return value != nil ? JavaLangFloat_valueOfWithFloat_([((NSNumber *) cast_chk(value, [NSNumber class])) floatValue]) : nil;
  }
  @catch (JavaLangClassCastException *e) {
    if ([JavaLangCharSequence_class_() isInstance:value]) {
      @try {
        return JavaLangFloat_valueOfWithNSString_([value description]);
      }
      @catch (JavaLangNumberFormatException *e2) {
        AndroidUtilLog_eWithNSString_withNSString_(AndroidContentContentValues_TAG, JreStrcat("$@$$", @"Cannot parse Float value for ", value, @" at key ", key));
        return nil;
      }
    }
    else {
      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Float: ", value), e);
      return nil;
    }
  }
}

- (JavaLangBoolean *)getAsBooleanWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  @try {
    return (JavaLangBoolean *) cast_chk(value, [JavaLangBoolean class]);
  }
  @catch (JavaLangClassCastException *e) {
    if ([JavaLangCharSequence_class_() isInstance:value]) {
      return JavaLangBoolean_valueOfWithNSString_([nil_chk(value) description]);
    }
    else if ([value isKindOfClass:[NSNumber class]]) {
      return JavaLangBoolean_valueOfWithBoolean_([((NSNumber *) nil_chk(((NSNumber *) cast_chk(value, [NSNumber class])))) intValue] != 0);
    }
    else {
      AndroidUtilLog_eWithNSString_withNSString_withNSException_(AndroidContentContentValues_TAG, JreStrcat("$$$@", @"Cannot cast value for ", key, @" to a Boolean: ", value), e);
      return nil;
    }
  }
}

- (IOSByteArray *)getAsByteArrayWithNSString:(NSString *)key {
  id value = [((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key];
  if ([value isKindOfClass:[IOSByteArray class]]) {
    return (IOSByteArray *) cast_chk(value, [IOSByteArray class]);
  }
  else {
    return nil;
  }
}

- (id<JavaUtilSet>)valueSet {
  return [((JavaUtilHashMap *) nil_chk(mValues_)) entrySet];
}

- (id<JavaUtilSet>)keySet {
  return [((JavaUtilHashMap *) nil_chk(mValues_)) keySet];
}

- (void)putStringArrayListWithNSString:(NSString *)key
                 withJavaUtilArrayList:(JavaUtilArrayList *)value {
  (void) [((JavaUtilHashMap *) nil_chk(mValues_)) putWithId:key withId:value];
}

- (JavaUtilArrayList *)getStringArrayListWithNSString:(NSString *)key {
  return (JavaUtilArrayList *) cast_chk([((JavaUtilHashMap *) nil_chk(mValues_)) getWithId:key], [JavaUtilArrayList class]);
}

- (NSString *)description {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (NSString * __strong name in nil_chk([((JavaUtilHashMap *) nil_chk(mValues_)) keySet])) {
    NSString *value = [self getAsStringWithNSString:name];
    if ([sb length] > 0) (void) [sb appendWithNSString:@" "];
    (void) [sb appendWithNSString:JreStrcat("$C$", name, '=', value)];
  }
  return [sb description];
}

+ (IOSObjectArray *)__annotations_putStringArrayListWithNSString_withJavaUtilArrayList_ {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (IOSObjectArray *)__annotations_getStringArrayListWithNSString_ {
  return [IOSObjectArray newArrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "ContentValues", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "ContentValues", NULL, 0x1, NULL, NULL },
    { "initWithAndroidContentContentValues:", "ContentValues", NULL, 0x1, NULL, NULL },
    { "initWithJavaUtilHashMap:", "ContentValues", NULL, 0x2, NULL, "(Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;)V" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "putWithNSString:withNSString:", "put", "V", 0x1, NULL, NULL },
    { "putAllWithAndroidContentContentValues:", "putAll", "V", 0x1, NULL, NULL },
    { "putWithNSString:withJavaLangByte:", "put", "V", 0x1, NULL, NULL },
    { "putWithNSString:withJavaLangShort:", "put", "V", 0x1, NULL, NULL },
    { "putWithNSString:withJavaLangInteger:", "put", "V", 0x1, NULL, NULL },
    { "putWithNSString:withJavaLangLong:", "put", "V", 0x1, NULL, NULL },
    { "putWithNSString:withJavaLangFloat:", "put", "V", 0x1, NULL, NULL },
    { "putWithNSString:withJavaLangDouble:", "put", "V", 0x1, NULL, NULL },
    { "putWithNSString:withJavaLangBoolean:", "put", "V", 0x1, NULL, NULL },
    { "putWithNSString:withByteArray:", "put", "V", 0x1, NULL, NULL },
    { "putNullWithNSString:", "putNull", "V", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "removeWithNSString:", "remove", "V", 0x1, NULL, NULL },
    { "clear", NULL, "V", 0x1, NULL, NULL },
    { "containsKeyWithNSString:", "containsKey", "Z", 0x1, NULL, NULL },
    { "getWithNSString:", "get", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getAsStringWithNSString:", "getAsString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAsLongWithNSString:", "getAsLong", "Ljava.lang.Long;", 0x1, NULL, NULL },
    { "getAsIntegerWithNSString:", "getAsInteger", "Ljava.lang.Integer;", 0x1, NULL, NULL },
    { "getAsShortWithNSString:", "getAsShort", "Ljava.lang.Short;", 0x1, NULL, NULL },
    { "getAsByteWithNSString:", "getAsByte", "Ljava.lang.Byte;", 0x1, NULL, NULL },
    { "getAsDoubleWithNSString:", "getAsDouble", "Ljava.lang.Double;", 0x1, NULL, NULL },
    { "getAsFloatWithNSString:", "getAsFloat", "Ljava.lang.Float;", 0x1, NULL, NULL },
    { "getAsBooleanWithNSString:", "getAsBoolean", "Ljava.lang.Boolean;", 0x1, NULL, NULL },
    { "getAsByteArrayWithNSString:", "getAsByteArray", "[B", 0x1, NULL, NULL },
    { "valueSet", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set<Ljava/util/Map$Entry<Ljava/lang/String;Ljava/lang/Object;>;>;" },
    { "keySet", NULL, "Ljava.util.Set;", 0x1, NULL, "()Ljava/util/Set<Ljava/lang/String;>;" },
    { "putStringArrayListWithNSString:withJavaUtilArrayList:", "putStringArrayList", "V", 0x1, NULL, "(Ljava/lang/String;Ljava/util/ArrayList<Ljava/lang/String;>;)V" },
    { "getStringArrayListWithNSString:", "getStringArrayList", "Ljava.util.ArrayList;", 0x1, NULL, "(Ljava/lang/String;)Ljava/util/ArrayList<Ljava/lang/String;>;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "TAG", 0x19, "Ljava.lang.String;", &AndroidContentContentValues_TAG, NULL, .constantValue.asLong = 0 },
    { "mValues_", NULL, 0x2, "Ljava.util.HashMap;", NULL, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Object;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _AndroidContentContentValues = { 2, "ContentValues", "android.content", NULL, 0x11, 36, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidContentContentValues;
}

@end

void AndroidContentContentValues_init(AndroidContentContentValues *self) {
  NSObject_init(self);
  self->mValues_ = new_JavaUtilHashMap_initWithInt_(8);
}

AndroidContentContentValues *new_AndroidContentContentValues_init() {
  J2OBJC_NEW_IMPL(AndroidContentContentValues, init)
}

AndroidContentContentValues *create_AndroidContentContentValues_init() {
  J2OBJC_CREATE_IMPL(AndroidContentContentValues, init)
}

void AndroidContentContentValues_initWithInt_(AndroidContentContentValues *self, jint size) {
  NSObject_init(self);
  self->mValues_ = new_JavaUtilHashMap_initWithInt_withFloat_(size, 1.0f);
}

AndroidContentContentValues *new_AndroidContentContentValues_initWithInt_(jint size) {
  J2OBJC_NEW_IMPL(AndroidContentContentValues, initWithInt_, size)
}

AndroidContentContentValues *create_AndroidContentContentValues_initWithInt_(jint size) {
  J2OBJC_CREATE_IMPL(AndroidContentContentValues, initWithInt_, size)
}

void AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *self, AndroidContentContentValues *from) {
  NSObject_init(self);
  self->mValues_ = new_JavaUtilHashMap_initWithJavaUtilMap_(((AndroidContentContentValues *) nil_chk(from))->mValues_);
}

AndroidContentContentValues *new_AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *from) {
  J2OBJC_NEW_IMPL(AndroidContentContentValues, initWithAndroidContentContentValues_, from)
}

AndroidContentContentValues *create_AndroidContentContentValues_initWithAndroidContentContentValues_(AndroidContentContentValues *from) {
  J2OBJC_CREATE_IMPL(AndroidContentContentValues, initWithAndroidContentContentValues_, from)
}

void AndroidContentContentValues_initWithJavaUtilHashMap_(AndroidContentContentValues *self, JavaUtilHashMap *values) {
  NSObject_init(self);
  self->mValues_ = values;
}

AndroidContentContentValues *new_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values) {
  J2OBJC_NEW_IMPL(AndroidContentContentValues, initWithJavaUtilHashMap_, values)
}

AndroidContentContentValues *create_AndroidContentContentValues_initWithJavaUtilHashMap_(JavaUtilHashMap *values) {
  J2OBJC_CREATE_IMPL(AndroidContentContentValues, initWithJavaUtilHashMap_, values)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidContentContentValues)
