//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/utils/TaskQueryTasksOfType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_INCLUDE_ALL")
#ifdef CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_RESTRICT
#define CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_INCLUDE_ALL 0
#else
#define CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_INCLUDE_ALL 1
#endif
#undef CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_RESTRICT

#if !defined (CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_) && (CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_INCLUDE_ALL || defined(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_INCLUDE))
#define CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_

#define CoTouchlabAndroidThreadingTasksBaseTaskQueue_RESTRICT 1
#define CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery_INCLUDE 1
#include "co/touchlab/android/threading/tasks/BaseTaskQueue.h"

@class CoTouchlabAndroidThreadingTasksBaseTaskQueue;
@class CoTouchlabAndroidThreadingTasksTask;
@class IOSClass;

@interface CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType : NSObject < CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueQuery > {
 @public
  jboolean found_;
}

#pragma mark Public

- (instancetype)initWithIOSClass:(IOSClass *)cls;

- (void)queryWithCoTouchlabAndroidThreadingTasksBaseTaskQueue:(CoTouchlabAndroidThreadingTasksBaseTaskQueue *)queue
                      withCoTouchlabAndroidThreadingTasksTask:(CoTouchlabAndroidThreadingTasksTask *)task;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType)

FOUNDATION_EXPORT void CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *self, IOSClass *cls);

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *new_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(IOSClass *cls) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType *create_CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_initWithIOSClass_(IOSClass *cls);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType)

#endif

#pragma pop_macro("CoTouchlabAndroidThreadingTasksUtilsTaskQueryTasksOfType_INCLUDE_ALL")
