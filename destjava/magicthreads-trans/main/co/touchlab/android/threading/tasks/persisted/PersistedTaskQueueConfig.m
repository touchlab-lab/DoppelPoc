//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/persisted/PersistedTaskQueueConfig.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/content/Context.h"
#include "android/database/sqlite/SQLiteDatabase.h"
#include "co/touchlab/android/threading/tasks/BaseTaskQueue.h"
#include "co/touchlab/android/threading/tasks/persisted/BusLog.h"
#include "co/touchlab/android/threading/tasks/persisted/BusLogImpl.h"
#include "co/touchlab/android/threading/tasks/persisted/CommandPersistenceProvider.h"
#include "co/touchlab/android/threading/tasks/persisted/CommandPurgePolicy.h"
#include "co/touchlab/android/threading/tasks/persisted/ConfigException.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTaskQueueConfig.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistenceProvider.h"
#include "co/touchlab/android/threading/tasks/persisted/TransientMethuselahCommandPurgePolicy.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/sqlite/ClearSQLiteDatabase.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/sqlite/SQLiteDatabaseFactory.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/sqlite/SQLiteDatabaseIntf.h"
#include "co/touchlab/android/threading/tasks/persisted/storage/sqlite/SimpleDatabaseHelper.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig () {
 @public
  id<JavaUtilList> eventListeners_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig, eventListeners_, id<JavaUtilList>)

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder ()

- (void)checkState;

@end

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *self);

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory : NSObject < CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory > {
 @public
  CoTouchlabAndroidThreadingTasksPersistedStorageSqliteClearSQLiteDatabase *sqLiteDatabase_;
}

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)database;

- (id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>)getDatabase;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory)

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory, sqLiteDatabase_, CoTouchlabAndroidThreadingTasksPersistedStorageSqliteClearSQLiteDatabase *)

__attribute__((unused)) static void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory *self, AndroidDatabaseSqliteSQLiteDatabase *database);

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *database) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *database);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory)

NSString *CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_PERSISTED_QUEUE = @"PERSISTED_QUEUE";

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig

- (id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)getLog {
  return log_;
}

- (id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy>)getCommandPurgePolicy {
  return commandPurgePolicy_;
}

- (id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>)getPersistenceProvider {
  return persistenceProvider_;
}

- (id<JavaUtilList>)getEventListeners {
  return eventListeners_;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getLog", NULL, "Lco.touchlab.android.threading.tasks.persisted.BusLog;", 0x1, NULL, NULL },
    { "getCommandPurgePolicy", NULL, "Lco.touchlab.android.threading.tasks.persisted.CommandPurgePolicy;", 0x1, NULL, NULL },
    { "getPersistenceProvider", NULL, "Lco.touchlab.android.threading.tasks.persisted.PersistenceProvider;", 0x1, NULL, NULL },
    { "getEventListeners", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Lco/touchlab/android/threading/tasks/BaseTaskQueue$QueueListener;>;" },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "PERSISTED_QUEUE", "PERSISTED_QUEUE", 0x19, "Ljava.lang.String;", &CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_PERSISTED_QUEUE, NULL, .constantValue.asLong = 0 },
    { "eventListeners_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lco/touchlab/android/threading/tasks/BaseTaskQueue$QueueListener;>;", .constantValue.asLong = 0 },
    { "log_", NULL, 0x0, "Lco.touchlab.android.threading.tasks.persisted.BusLog;", NULL, NULL, .constantValue.asLong = 0 },
    { "commandPurgePolicy_", NULL, 0x0, "Lco.touchlab.android.threading.tasks.persisted.CommandPurgePolicy;", NULL, NULL, .constantValue.asLong = 0 },
    { "persistenceProvider_", NULL, 0x0, "Lco.touchlab.android.threading.tasks.persisted.PersistenceProvider;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig$Builder;", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig$LocalDatabaseFactory;"};
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig = { 2, "PersistedTaskQueueConfig", "co.touchlab.android.threading.tasks.persisted", NULL, 0x1, 5, methods, 5, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_init(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *self) {
  NSObject_init(self);
  self->eventListeners_ = new_JavaUtilArrayList_init();
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_init() {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_init(self);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_init() {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder

- (void)checkState {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(self);
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *)addQueueListenerWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener:(id<CoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener>)eventListener {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(self);
  [((id<JavaUtilList>) nil_chk(((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config_))->eventListeners_)) addWithId:eventListener];
  return self;
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *)setLogWithCoTouchlabAndroidThreadingTasksPersistedBusLog:(id<CoTouchlabAndroidThreadingTasksPersistedBusLog>)l {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(self);
  ((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config_))->log_ = l;
  return self;
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *)setCommandPurgePolicyWithCoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy:(id<CoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy>)p {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(self);
  ((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config_))->commandPurgePolicy_ = p;
  return self;
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *)setPersistenceProviderWithCoTouchlabAndroidThreadingTasksPersistedPersistenceProvider:(id<CoTouchlabAndroidThreadingTasksPersistedPersistenceProvider>)p {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(self);
  ((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config_))->persistenceProvider_ = p;
  return self;
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *)setDatabaseWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)database {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(self);
  ((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config_))->persistenceProvider_ = new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(database));
  return self;
}

- (CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *)buildWithAndroidContentContext:(AndroidContentContext *)context {
  if (((CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *) nil_chk(config_))->log_ == nil) {
    config_->log_ = new_CoTouchlabAndroidThreadingTasksPersistedBusLogImpl_init();
  }
  if (config_->commandPurgePolicy_ == nil) {
    config_->commandPurgePolicy_ = new_CoTouchlabAndroidThreadingTasksPersistedTransientMethuselahCommandPurgePolicy_init();
  }
  if (config_->persistenceProvider_ == nil) {
    config_->persistenceProvider_ = new_CoTouchlabAndroidThreadingTasksPersistedCommandPersistenceProvider_initWithCoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseFactory_(new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_([((CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper *) nil_chk(CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSimpleDatabaseHelper_getInstanceWithAndroidContentContext_withNSString_(context, CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_PERSISTED_QUEUE))) getWritableDatabase]));
  }
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig *retConfig = config_;
  config_ = nil;
  return retConfig;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "checkState", NULL, "V", 0x2, "Lco.touchlab.android.threading.tasks.persisted.ConfigException;", NULL },
    { "addQueueListenerWithCoTouchlabAndroidThreadingTasksBaseTaskQueue_QueueListener:", "addQueueListener", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig$Builder;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.ConfigException;", NULL },
    { "setLogWithCoTouchlabAndroidThreadingTasksPersistedBusLog:", "setLog", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig$Builder;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.ConfigException;", NULL },
    { "setCommandPurgePolicyWithCoTouchlabAndroidThreadingTasksPersistedCommandPurgePolicy:", "setCommandPurgePolicy", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig$Builder;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.ConfigException;", NULL },
    { "setPersistenceProviderWithCoTouchlabAndroidThreadingTasksPersistedPersistenceProvider:", "setPersistenceProvider", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig$Builder;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.ConfigException;", NULL },
    { "setDatabaseWithAndroidDatabaseSqliteSQLiteDatabase:", "setDatabase", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig$Builder;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.ConfigException;", NULL },
    { "buildWithAndroidContentContext:", "build", "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig;", 0x1, "Lco.touchlab.android.threading.tasks.persisted.ConfigException;", NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "config_", NULL, 0x0, "Lco.touchlab.android.threading.tasks.persisted.PersistedTaskQueueConfig;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder = { 2, "Builder", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueueConfig", 0x9, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_checkState(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *self) {
  if (self->config_ == nil) {
    @throw new_CoTouchlabAndroidThreadingTasksPersistedConfigException_initWithNSString_(@"build already called");
  }
}

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_init(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *self) {
  NSObject_init(self);
  self->config_ = new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_init();
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_init() {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_init(self);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_init() {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_Builder)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)database {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(self, database);
  return self;
}

- (id<CoTouchlabAndroidThreadingTasksPersistedStorageSqliteSQLiteDatabaseIntf>)getDatabase {
  return sqLiteDatabase_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAndroidDatabaseSqliteSQLiteDatabase:", "LocalDatabaseFactory", NULL, 0x2, NULL, NULL },
    { "getDatabase", NULL, "Lco.touchlab.android.threading.tasks.persisted.storage.sqlite.SQLiteDatabaseIntf;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sqLiteDatabase_", NULL, 0x2, "Lco.touchlab.android.threading.tasks.persisted.storage.sqlite.ClearSQLiteDatabase;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory = { 2, "LocalDatabaseFactory", "co.touchlab.android.threading.tasks.persisted", "PersistedTaskQueueConfig", 0x1a, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory *self, AndroidDatabaseSqliteSQLiteDatabase *database) {
  NSObject_init(self);
  self->sqLiteDatabase_ = new_CoTouchlabAndroidThreadingTasksPersistedStorageSqliteClearSQLiteDatabase_initWithAndroidDatabaseSqliteSQLiteDatabase_(database);
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory *new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *database) {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory *self = [CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory alloc];
  CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(self, database);
  return self;
}

CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory *create_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(AndroidDatabaseSqliteSQLiteDatabase *database) {
  return new_CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory_initWithAndroidDatabaseSqliteSQLiteDatabase_(database);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTaskQueueConfig_LocalDatabaseFactory)
