//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/tasks/persisted/PersistedTask.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/content/Context.h"
#include "co/touchlab/android/threading/errorcontrol/SoftException.h"
#include "co/touchlab/android/threading/tasks/Task.h"
#include "co/touchlab/android/threading/tasks/persisted/PersistedTask.h"
#include "co/touchlab/android/threading/tasks/persisted/SuperbusProcessException.h"
#include "java/lang/Long.h"
#include "java/lang/System.h"
#include "java/util/Map.h"
#include "java/util/concurrent/atomic/AtomicInteger.h"

@interface CoTouchlabAndroidThreadingTasksPersistedPersistedTask () {
 @public
  jlong lastUpdate_;
  jint priority_;
  jlong added_;
  jint orderTie_;
  jint transientExceptionCount_;
  JavaLangLong *id__;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabAndroidThreadingTasksPersistedPersistedTask, id__, JavaLangLong *)

inline JavaUtilConcurrentAtomicAtomicInteger *CoTouchlabAndroidThreadingTasksPersistedPersistedTask_get_orderTieCounter();
inline JavaUtilConcurrentAtomicAtomicInteger *CoTouchlabAndroidThreadingTasksPersistedPersistedTask_set_orderTieCounter(JavaUtilConcurrentAtomicAtomicInteger *value);
static JavaUtilConcurrentAtomicAtomicInteger *CoTouchlabAndroidThreadingTasksPersistedPersistedTask_orderTieCounter;
J2OBJC_STATIC_FIELD_OBJ(CoTouchlabAndroidThreadingTasksPersistedPersistedTask, orderTieCounter, JavaUtilConcurrentAtomicAtomicInteger *)

J2OBJC_INITIALIZED_DEFN(CoTouchlabAndroidThreadingTasksPersistedPersistedTask)

@implementation CoTouchlabAndroidThreadingTasksPersistedPersistedTask

- (NSString *)logSummary {
  return [[self getClass] getSimpleName];
}

- (jboolean)sameWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  return false;
}

- (void)runWithAndroidContentContext:(AndroidContentContext *)context {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)onTransientErrorWithAndroidContentContext:(AndroidContentContext *)context
withCoTouchlabAndroidThreadingErrorcontrolSoftException:(CoTouchlabAndroidThreadingErrorcontrolSoftException *)exception {
}

- (void)onPermanentErrorWithAndroidContentContext:(AndroidContentContext *)context
                                  withNSException:(NSException *)exception {
  jboolean handled = [self handleErrorWithAndroidContentContext:context withNSException:exception];
  if (!handled) {
    @throw new_CoTouchlabAndroidThreadingTasksPersistedSuperbusProcessException_initWithNSException_(exception);
  }
}

- (void)onCompleteWithAndroidContentContext:(AndroidContentContext *)context {
}

- (void)onRuntimeMessageWithAndroidContentContext:(AndroidContentContext *)context
                                     withNSString:(NSString *)message {
  [self onRuntimeMessageWithAndroidContentContext:context withNSString:message withJavaUtilMap:nil];
}

- (void)onRuntimeMessageWithAndroidContentContext:(AndroidContentContext *)context
                                     withNSString:(NSString *)message
                                  withJavaUtilMap:(id<JavaUtilMap>)args {
}

- (jlong)getLastUpdate {
  return lastUpdate_;
}

- (void)setLastUpdateWithLong:(jlong)lastUpdate {
  self->lastUpdate_ = lastUpdate;
}

- (jint)getPriority {
  return priority_;
}

- (void)setPriorityWithInt:(jint)priority {
  self->priority_ = priority;
}

- (jlong)getAdded {
  return added_;
}

- (void)setAddedWithLong:(jlong)added {
  self->added_ = added;
}

- (jint)getOrderTie {
  return orderTie_;
}

- (void)setOrderTieWithInt:(jint)orderTie {
  self->orderTie_ = orderTie;
}

- (jint)getTransientExceptionCount {
  return transientExceptionCount_;
}

- (void)setTransientExceptionCountWithInt:(jint)transientExceptionCount {
  self->transientExceptionCount_ = transientExceptionCount;
}

- (jint)compareToWithId:(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *)persistedTask {
  (void) cast_chk(persistedTask, [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class]);
  jint priorityCompare = [((CoTouchlabAndroidThreadingTasksPersistedPersistedTask *) nil_chk(persistedTask)) getPriority] - priority_;
  if (priorityCompare != 0) {
    return priorityCompare;
  }
  jint addedCompare = (jint) (added_ - [persistedTask getAdded]);
  if (addedCompare != 0) {
    return addedCompare;
  }
  return orderTie_ - persistedTask->orderTie_;
}

- (JavaLangLong *)getId {
  return id__;
}

- (void)setIdWithJavaLangLong:(JavaLangLong *)id_ {
  self->id__ = id_;
}

- (jboolean)runAllInTransaction {
  return false;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingTasksPersistedPersistedTask_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [CoTouchlabAndroidThreadingTasksPersistedPersistedTask class]) {
    CoTouchlabAndroidThreadingTasksPersistedPersistedTask_orderTieCounter = new_JavaUtilConcurrentAtomicAtomicInteger_initWithInt_(0);
    J2OBJC_SET_INITIALIZED(CoTouchlabAndroidThreadingTasksPersistedPersistedTask)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "logSummary", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "sameWithCoTouchlabAndroidThreadingTasksPersistedPersistedTask:", "same", "Z", 0x4, NULL, NULL },
    { "runWithAndroidContentContext:", "run", "V", 0x404, "Lco.touchlab.android.threading.errorcontrol.SoftException;Ljava.lang.Throwable;", NULL },
    { "onTransientErrorWithAndroidContentContext:withCoTouchlabAndroidThreadingErrorcontrolSoftException:", "onTransientError", "V", 0x4, NULL, NULL },
    { "onPermanentErrorWithAndroidContentContext:withNSException:", "onPermanentError", "V", 0x4, NULL, NULL },
    { "onCompleteWithAndroidContentContext:", "onComplete", "V", 0x4, NULL, NULL },
    { "onRuntimeMessageWithAndroidContentContext:withNSString:", "onRuntimeMessage", "V", 0x4, NULL, NULL },
    { "onRuntimeMessageWithAndroidContentContext:withNSString:withJavaUtilMap:", "onRuntimeMessage", "V", 0x4, NULL, NULL },
    { "getLastUpdate", NULL, "J", 0x1, NULL, NULL },
    { "setLastUpdateWithLong:", "setLastUpdate", "V", 0x1, NULL, NULL },
    { "getPriority", NULL, "I", 0x1, NULL, NULL },
    { "setPriorityWithInt:", "setPriority", "V", 0x1, NULL, NULL },
    { "getAdded", NULL, "J", 0x1, NULL, NULL },
    { "setAddedWithLong:", "setAdded", "V", 0x1, NULL, NULL },
    { "getOrderTie", NULL, "I", 0x1, NULL, NULL },
    { "setOrderTieWithInt:", "setOrderTie", "V", 0x1, NULL, NULL },
    { "getTransientExceptionCount", NULL, "I", 0x1, NULL, NULL },
    { "setTransientExceptionCountWithInt:", "setTransientExceptionCount", "V", 0x1, NULL, NULL },
    { "compareToWithId:", "compareTo", "I", 0x1, NULL, NULL },
    { "getId", NULL, "Ljava.lang.Long;", 0x1, NULL, NULL },
    { "setIdWithJavaLangLong:", "setId", "V", 0x1, NULL, NULL },
    { "runAllInTransaction", NULL, "Z", 0x4, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MUCH_LOWER_PRIORITY", "MUCH_LOWER_PRIORITY", 0x19, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTask_MUCH_LOWER_PRIORITY },
    { "LOWER_PRIORITY", "LOWER_PRIORITY", 0x19, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTask_LOWER_PRIORITY },
    { "DEFAULT_PRIORITY", "DEFAULT_PRIORITY", 0x19, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTask_DEFAULT_PRIORITY },
    { "HIGHER_PRIORITY", "HIGHER_PRIORITY", 0x19, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTask_HIGHER_PRIORITY },
    { "MUCH_HIGHER_PRIORITY", "MUCH_HIGHER_PRIORITY", 0x19, "I", NULL, NULL, .constantValue.asInt = CoTouchlabAndroidThreadingTasksPersistedPersistedTask_MUCH_HIGHER_PRIORITY },
    { "orderTieCounter", "orderTieCounter", 0xa, "Ljava.util.concurrent.atomic.AtomicInteger;", &CoTouchlabAndroidThreadingTasksPersistedPersistedTask_orderTieCounter, NULL, .constantValue.asLong = 0 },
    { "lastUpdate_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "priority_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "added_", NULL, 0x2, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "orderTie_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "transientExceptionCount_", NULL, 0x2, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "id__", "id", 0x2, "Ljava.lang.Long;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingTasksPersistedPersistedTask = { 2, "PersistedTask", "co.touchlab.android.threading.tasks.persisted", NULL, 0x401, 23, methods, 12, fields, 0, NULL, 0, NULL, NULL, "Lco/touchlab/android/threading/tasks/Task;Ljava/lang/Comparable<Lco/touchlab/android/threading/tasks/persisted/PersistedTask;>;" };
  return &_CoTouchlabAndroidThreadingTasksPersistedPersistedTask;
}

@end

void CoTouchlabAndroidThreadingTasksPersistedPersistedTask_init(CoTouchlabAndroidThreadingTasksPersistedPersistedTask *self) {
  CoTouchlabAndroidThreadingTasksTask_init(self);
  self->lastUpdate_ = JavaLangSystem_currentTimeMillis();
  self->priority_ = CoTouchlabAndroidThreadingTasksPersistedPersistedTask_DEFAULT_PRIORITY;
  self->added_ = JavaLangSystem_currentTimeMillis();
  self->orderTie_ = [((JavaUtilConcurrentAtomicAtomicInteger *) nil_chk(CoTouchlabAndroidThreadingTasksPersistedPersistedTask_orderTieCounter)) getAndAddWithInt:1];
  self->transientExceptionCount_ = 0;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingTasksPersistedPersistedTask)
