//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/magicthreads/library/src/main/java/co/touchlab/android/threading/errorcontrol/SoftException.java
//

#include "J2ObjC_source.h"
#include "co/touchlab/android/threading/errorcontrol/SoftException.h"
#include "java/lang/Exception.h"

@implementation CoTouchlabAndroidThreadingErrorcontrolSoftException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(self, message);
  return self;
}

- (instancetype)initWithNSString:(NSString *)message
                 withNSException:(NSException *)cause {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SoftException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "SoftException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "SoftException", NULL, 0x1, NULL, NULL },
    { "initWithNSException:", "SoftException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _CoTouchlabAndroidThreadingErrorcontrolSoftException = { 2, "SoftException", "co.touchlab.android.threading.errorcontrol", NULL, 0x1, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabAndroidThreadingErrorcontrolSoftException;
}

@end

void CoTouchlabAndroidThreadingErrorcontrolSoftException_init(CoTouchlabAndroidThreadingErrorcontrolSoftException *self) {
  JavaLangException_init(self);
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_init() {
  CoTouchlabAndroidThreadingErrorcontrolSoftException *self = [CoTouchlabAndroidThreadingErrorcontrolSoftException alloc];
  CoTouchlabAndroidThreadingErrorcontrolSoftException_init(self);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_init() {
  return new_CoTouchlabAndroidThreadingErrorcontrolSoftException_init();
}

void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSString *message) {
  JavaLangException_initWithNSString_(self, message);
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(NSString *message) {
  CoTouchlabAndroidThreadingErrorcontrolSoftException *self = [CoTouchlabAndroidThreadingErrorcontrolSoftException alloc];
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(self, message);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(NSString *message) {
  return new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_(message);
}

void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSString *message, NSException *cause) {
  JavaLangException_initWithNSString_withNSException_(self, message, cause);
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  CoTouchlabAndroidThreadingErrorcontrolSoftException *self = [CoTouchlabAndroidThreadingErrorcontrolSoftException alloc];
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(self, message, cause);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(NSString *message, NSException *cause) {
  return new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSString_withNSException_(message, cause);
}

void CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(CoTouchlabAndroidThreadingErrorcontrolSoftException *self, NSException *cause) {
  JavaLangException_initWithNSException_(self, cause);
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(NSException *cause) {
  CoTouchlabAndroidThreadingErrorcontrolSoftException *self = [CoTouchlabAndroidThreadingErrorcontrolSoftException alloc];
  CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(self, cause);
  return self;
}

CoTouchlabAndroidThreadingErrorcontrolSoftException *create_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(NSException *cause) {
  return new_CoTouchlabAndroidThreadingErrorcontrolSoftException_initWithNSException_(cause);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabAndroidThreadingErrorcontrolSoftException)
