//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/sqlite/SQLiteAccessPermException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("AndroidDatabaseSqliteSQLiteAccessPermException_INCLUDE_ALL")
#ifdef AndroidDatabaseSqliteSQLiteAccessPermException_RESTRICT
#define AndroidDatabaseSqliteSQLiteAccessPermException_INCLUDE_ALL 0
#else
#define AndroidDatabaseSqliteSQLiteAccessPermException_INCLUDE_ALL 1
#endif
#undef AndroidDatabaseSqliteSQLiteAccessPermException_RESTRICT

#if !defined (AndroidDatabaseSqliteSQLiteAccessPermException_) && (AndroidDatabaseSqliteSQLiteAccessPermException_INCLUDE_ALL || defined(AndroidDatabaseSqliteSQLiteAccessPermException_INCLUDE))
#define AndroidDatabaseSqliteSQLiteAccessPermException_

#define AndroidDatabaseSqliteSQLiteException_RESTRICT 1
#define AndroidDatabaseSqliteSQLiteException_INCLUDE 1
#include "android/database/sqlite/SQLiteException.h"

@interface AndroidDatabaseSqliteSQLiteAccessPermException : AndroidDatabaseSqliteSQLiteException

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithNSString:(NSString *)error;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteAccessPermException)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteAccessPermException_init(AndroidDatabaseSqliteSQLiteAccessPermException *self);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *new_AndroidDatabaseSqliteSQLiteAccessPermException_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *create_AndroidDatabaseSqliteSQLiteAccessPermException_init();

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(AndroidDatabaseSqliteSQLiteAccessPermException *self, NSString *error);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *new_AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(NSString *error) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteAccessPermException *create_AndroidDatabaseSqliteSQLiteAccessPermException_initWithNSString_(NSString *error);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteAccessPermException)

#endif

#pragma pop_macro("AndroidDatabaseSqliteSQLiteAccessPermException_INCLUDE_ALL")
