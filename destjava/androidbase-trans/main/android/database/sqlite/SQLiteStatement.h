//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/sqlite/SQLiteStatement.java
//

#include "J2ObjC_header.h"

#pragma push_macro("AndroidDatabaseSqliteSQLiteStatement_INCLUDE_ALL")
#ifdef AndroidDatabaseSqliteSQLiteStatement_RESTRICT
#define AndroidDatabaseSqliteSQLiteStatement_INCLUDE_ALL 0
#else
#define AndroidDatabaseSqliteSQLiteStatement_INCLUDE_ALL 1
#endif
#undef AndroidDatabaseSqliteSQLiteStatement_RESTRICT

#if !defined (AndroidDatabaseSqliteSQLiteStatement_) && (AndroidDatabaseSqliteSQLiteStatement_INCLUDE_ALL || defined(AndroidDatabaseSqliteSQLiteStatement_INCLUDE))
#define AndroidDatabaseSqliteSQLiteStatement_

#define AndroidDatabaseSqliteSQLiteProgram_RESTRICT 1
#define AndroidDatabaseSqliteSQLiteProgram_INCLUDE 1
#include "android/database/sqlite/SQLiteProgram.h"

@class AndroidDatabaseSqliteSQLiteDatabase;
@class IOSObjectArray;

@interface AndroidDatabaseSqliteSQLiteStatement : AndroidDatabaseSqliteSQLiteProgram

#pragma mark Public

- (void)execute;

- (jlong)executeInsert;

- (jint)executeUpdateDelete;

- (jlong)simpleQueryForLong;

- (NSString *)simpleQueryForString;

- (NSString *)description;

#pragma mark Package-Private

- (instancetype)initWithAndroidDatabaseSqliteSQLiteDatabase:(AndroidDatabaseSqliteSQLiteDatabase *)db
                                               withNSString:(NSString *)sql
                                          withNSObjectArray:(IOSObjectArray *)bindArgs;

@end

J2OBJC_EMPTY_STATIC_INIT(AndroidDatabaseSqliteSQLiteStatement)

FOUNDATION_EXPORT void AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteStatement *self, AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteStatement *new_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT AndroidDatabaseSqliteSQLiteStatement *create_AndroidDatabaseSqliteSQLiteStatement_initWithAndroidDatabaseSqliteSQLiteDatabase_withNSString_withNSObjectArray_(AndroidDatabaseSqliteSQLiteDatabase *db, NSString *sql, IOSObjectArray *bindArgs);

J2OBJC_TYPE_LITERAL_HEADER(AndroidDatabaseSqliteSQLiteStatement)

#endif

#pragma pop_macro("AndroidDatabaseSqliteSQLiteStatement_INCLUDE_ALL")
