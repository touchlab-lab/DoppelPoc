//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/sqlite/SQLiteException.java
//

#include "J2ObjC_source.h"
#include "android/database/SQLException.h"
#include "android/database/sqlite/SQLiteException.h"

@implementation AndroidDatabaseSqliteSQLiteException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  AndroidDatabaseSqliteSQLiteException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)error {
  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
  return self;
}

- (instancetype)initWithNSString:(NSString *)error
                 withNSException:(NSException *)cause {
  AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(self, error, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "SQLiteException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "SQLiteException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "SQLiteException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteException = { 2, "SQLiteException", "android.database.sqlite", NULL, 0x1, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidDatabaseSqliteSQLiteException;
}

@end

void AndroidDatabaseSqliteSQLiteException_init(AndroidDatabaseSqliteSQLiteException *self) {
  AndroidDatabaseSQLException_init(self);
}

AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_init() {
  AndroidDatabaseSqliteSQLiteException *self = [AndroidDatabaseSqliteSQLiteException alloc];
  AndroidDatabaseSqliteSQLiteException_init(self);
  return self;
}

AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_init() {
  return new_AndroidDatabaseSqliteSQLiteException_init();
}

void AndroidDatabaseSqliteSQLiteException_initWithNSString_(AndroidDatabaseSqliteSQLiteException *self, NSString *error) {
  AndroidDatabaseSQLException_initWithNSString_(self, error);
}

AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_initWithNSString_(NSString *error) {
  AndroidDatabaseSqliteSQLiteException *self = [AndroidDatabaseSqliteSQLiteException alloc];
  AndroidDatabaseSqliteSQLiteException_initWithNSString_(self, error);
  return self;
}

AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_initWithNSString_(NSString *error) {
  return new_AndroidDatabaseSqliteSQLiteException_initWithNSString_(error);
}

void AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(AndroidDatabaseSqliteSQLiteException *self, NSString *error, NSException *cause) {
  AndroidDatabaseSQLException_initWithNSString_withNSException_(self, error, cause);
}

AndroidDatabaseSqliteSQLiteException *new_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
  AndroidDatabaseSqliteSQLiteException *self = [AndroidDatabaseSqliteSQLiteException alloc];
  AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(self, error, cause);
  return self;
}

AndroidDatabaseSqliteSQLiteException *create_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(NSString *error, NSException *cause) {
  return new_AndroidDatabaseSqliteSQLiteException_initWithNSString_withNSException_(error, cause);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteException)
