//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/database/sqlite/SQLiteCustomFunction.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/database/sqlite/SQLiteCustomFunction.h"
#include "android/database/sqlite/SQLiteDatabase.h"
#include "java/lang/IllegalArgumentException.h"

@interface AndroidDatabaseSqliteSQLiteCustomFunction ()

- (void)dispatchCallbackWithNSStringArray:(IOSObjectArray *)args;

@end

@implementation AndroidDatabaseSqliteSQLiteCustomFunction

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)numArgs
withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:(id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>)callback {
  AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(self, name, numArgs, callback);
  return self;
}

- (void)dispatchCallbackWithNSStringArray:(IOSObjectArray *)args {
  [((id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction>) nil_chk(callback_)) callbackWithNSStringArray:args];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction:", "SQLiteCustomFunction", NULL, 0x1, NULL, NULL },
    { "dispatchCallbackWithNSStringArray:", "dispatchCallback", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "name_", NULL, 0x11, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "numArgs_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "callback_", NULL, 0x11, "Landroid.database.sqlite.SQLiteDatabase$CustomFunction;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _AndroidDatabaseSqliteSQLiteCustomFunction = { 2, "SQLiteCustomFunction", "android.database.sqlite", NULL, 0x11, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidDatabaseSqliteSQLiteCustomFunction;
}

@end

void AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(AndroidDatabaseSqliteSQLiteCustomFunction *self, NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) {
  NSObject_init(self);
  if (name == nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"name must not be null.");
  }
  self->name_ = name;
  self->numArgs_ = numArgs;
  self->callback_ = callback;
}

AndroidDatabaseSqliteSQLiteCustomFunction *new_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) {
  AndroidDatabaseSqliteSQLiteCustomFunction *self = [AndroidDatabaseSqliteSQLiteCustomFunction alloc];
  AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(self, name, numArgs, callback);
  return self;
}

AndroidDatabaseSqliteSQLiteCustomFunction *create_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(NSString *name, jint numArgs, id<AndroidDatabaseSqliteSQLiteDatabase_CustomFunction> callback) {
  return new_AndroidDatabaseSqliteSQLiteCustomFunction_initWithNSString_withInt_withAndroidDatabaseSqliteSQLiteDatabase_CustomFunction_(name, numArgs, callback);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidDatabaseSqliteSQLiteCustomFunction)
