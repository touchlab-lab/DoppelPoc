//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/androidbase/AndroidBase/lib/src/main/java/android/os/HandlerThread.java
//

#include "J2ObjC_source.h"
#include "android/os/HandlerThread.h"
#include "android/os/Looper.h"
#include "java/lang/InterruptedException.h"
#include "java/lang/Thread.h"

@implementation AndroidOsHandlerThread

- (instancetype)initWithNSString:(NSString *)name {
  AndroidOsHandlerThread_initWithNSString_(self, name);
  return self;
}

- (instancetype)initWithNSString:(NSString *)name
                         withInt:(jint)priority {
  AndroidOsHandlerThread_initWithNSString_withInt_(self, name, priority);
  return self;
}

- (void)onLooperPrepared {
}

- (void)run {
  AndroidOsLooper_prepare();
  @synchronized(self) {
    mLooper_ = AndroidOsLooper_myLooper();
    [self notifyAll];
  }
  [self onLooperPrepared];
  AndroidOsLooper_loop();
}

- (AndroidOsLooper *)getLooper {
  if (![self isAlive]) {
    return nil;
  }
  @synchronized(self) {
    while ([self isAlive] && mLooper_ == nil) {
      @try {
        [self wait];
      }
      @catch (JavaLangInterruptedException *e) {
      }
    }
  }
  return mLooper_;
}

- (jboolean)quit {
  AndroidOsLooper *looper = [self getLooper];
  if (looper != nil) {
    [looper quit];
    return true;
  }
  return false;
}

- (jint)getThreadId {
  return -1;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "HandlerThread", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withInt:", "HandlerThread", NULL, 0x1, NULL, NULL },
    { "onLooperPrepared", NULL, "V", 0x4, NULL, NULL },
    { "run", NULL, "V", 0x1, NULL, NULL },
    { "getLooper", NULL, "Landroid.os.Looper;", 0x1, NULL, NULL },
    { "quit", NULL, "Z", 0x1, NULL, NULL },
    { "getThreadId", NULL, "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mPriority_", NULL, 0x0, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "mLooper_", NULL, 0x0, "Landroid.os.Looper;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _AndroidOsHandlerThread = { 2, "HandlerThread", "android.os", NULL, 0x1, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_AndroidOsHandlerThread;
}

@end

void AndroidOsHandlerThread_initWithNSString_(AndroidOsHandlerThread *self, NSString *name) {
  JavaLangThread_initWithNSString_(self, name);
  self->mPriority_ = 0;
}

AndroidOsHandlerThread *new_AndroidOsHandlerThread_initWithNSString_(NSString *name) {
  AndroidOsHandlerThread *self = [AndroidOsHandlerThread alloc];
  AndroidOsHandlerThread_initWithNSString_(self, name);
  return self;
}

AndroidOsHandlerThread *create_AndroidOsHandlerThread_initWithNSString_(NSString *name) {
  return new_AndroidOsHandlerThread_initWithNSString_(name);
}

void AndroidOsHandlerThread_initWithNSString_withInt_(AndroidOsHandlerThread *self, NSString *name, jint priority) {
  JavaLangThread_initWithNSString_(self, name);
  self->mPriority_ = priority;
}

AndroidOsHandlerThread *new_AndroidOsHandlerThread_initWithNSString_withInt_(NSString *name, jint priority) {
  AndroidOsHandlerThread *self = [AndroidOsHandlerThread alloc];
  AndroidOsHandlerThread_initWithNSString_withInt_(self, name, priority);
  return self;
}

AndroidOsHandlerThread *create_AndroidOsHandlerThread_initWithNSString_withInt_(NSString *name, jint priority) {
  return new_AndroidOsHandlerThread_initWithNSString_withInt_(name, priority);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(AndroidOsHandlerThread)
