//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/EventBus/EventBus/src/de/greenrobot/event/SubscriberMethod.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "de/greenrobot/event/SubscriberMethod.h"
#include "de/greenrobot/event/ThreadMode.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/reflect/Method.h"

@interface DeGreenrobotEventSubscriberMethod ()

- (void)checkMethodString;

@end

__attribute__((unused)) static void DeGreenrobotEventSubscriberMethod_checkMethodString(DeGreenrobotEventSubscriberMethod *self);

@implementation DeGreenrobotEventSubscriberMethod

- (instancetype)initWithJavaLangReflectMethod:(JavaLangReflectMethod *)method
              withDeGreenrobotEventThreadMode:(DeGreenrobotEventThreadMode *)threadMode
                                 withIOSClass:(IOSClass *)eventType {
  DeGreenrobotEventSubscriberMethod_initWithJavaLangReflectMethod_withDeGreenrobotEventThreadMode_withIOSClass_(self, method, threadMode, eventType);
  return self;
}

- (jboolean)isEqual:(id)other {
  if ([other isKindOfClass:[DeGreenrobotEventSubscriberMethod class]]) {
    DeGreenrobotEventSubscriberMethod_checkMethodString(self);
    DeGreenrobotEventSubscriberMethod *otherSubscriberMethod = (DeGreenrobotEventSubscriberMethod *) cast_chk(other, [DeGreenrobotEventSubscriberMethod class]);
    DeGreenrobotEventSubscriberMethod_checkMethodString(nil_chk(otherSubscriberMethod));
    return [((NSString *) nil_chk(methodString_)) isEqual:otherSubscriberMethod->methodString_];
  }
  else {
    return false;
  }
}

- (void)checkMethodString {
  DeGreenrobotEventSubscriberMethod_checkMethodString(self);
}

- (NSUInteger)hash {
  return ((jint) [((JavaLangReflectMethod *) nil_chk(method_)) hash]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaLangReflectMethod:withDeGreenrobotEventThreadMode:withIOSClass:", "SubscriberMethod", NULL, 0x0, NULL, "(Ljava/lang/reflect/Method;Lde/greenrobot/event/ThreadMode;Ljava/lang/Class<*>;)V" },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "checkMethodString", NULL, "V", 0x22, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "method_", NULL, 0x10, "Ljava.lang.reflect.Method;", NULL, NULL, .constantValue.asLong = 0 },
    { "threadMode_", NULL, 0x10, "Lde.greenrobot.event.ThreadMode;", NULL, NULL, .constantValue.asLong = 0 },
    { "eventType_", NULL, 0x10, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "methodString_", NULL, 0x0, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _DeGreenrobotEventSubscriberMethod = { 2, "SubscriberMethod", "de.greenrobot.event", NULL, 0x10, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_DeGreenrobotEventSubscriberMethod;
}

@end

void DeGreenrobotEventSubscriberMethod_initWithJavaLangReflectMethod_withDeGreenrobotEventThreadMode_withIOSClass_(DeGreenrobotEventSubscriberMethod *self, JavaLangReflectMethod *method, DeGreenrobotEventThreadMode *threadMode, IOSClass *eventType) {
  NSObject_init(self);
  self->method_ = method;
  self->threadMode_ = threadMode;
  self->eventType_ = eventType;
}

DeGreenrobotEventSubscriberMethod *new_DeGreenrobotEventSubscriberMethod_initWithJavaLangReflectMethod_withDeGreenrobotEventThreadMode_withIOSClass_(JavaLangReflectMethod *method, DeGreenrobotEventThreadMode *threadMode, IOSClass *eventType) {
  DeGreenrobotEventSubscriberMethod *self = [DeGreenrobotEventSubscriberMethod alloc];
  DeGreenrobotEventSubscriberMethod_initWithJavaLangReflectMethod_withDeGreenrobotEventThreadMode_withIOSClass_(self, method, threadMode, eventType);
  return self;
}

DeGreenrobotEventSubscriberMethod *create_DeGreenrobotEventSubscriberMethod_initWithJavaLangReflectMethod_withDeGreenrobotEventThreadMode_withIOSClass_(JavaLangReflectMethod *method, DeGreenrobotEventThreadMode *threadMode, IOSClass *eventType) {
  return new_DeGreenrobotEventSubscriberMethod_initWithJavaLangReflectMethod_withDeGreenrobotEventThreadMode_withIOSClass_(method, threadMode, eventType);
}

void DeGreenrobotEventSubscriberMethod_checkMethodString(DeGreenrobotEventSubscriberMethod *self) {
  @synchronized(self) {
    if (self->methodString_ == nil) {
      JavaLangStringBuilder *builder = new_JavaLangStringBuilder_initWithInt_(64);
      (void) [builder appendWithNSString:[((IOSClass *) nil_chk([((JavaLangReflectMethod *) nil_chk(self->method_)) getDeclaringClass])) getName]];
      (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:'#'])) appendWithNSString:[self->method_ getName]];
      (void) [((JavaLangStringBuilder *) nil_chk([builder appendWithChar:'('])) appendWithNSString:[((IOSClass *) nil_chk(self->eventType_)) getName]];
      self->methodString_ = [builder description];
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventSubscriberMethod)
