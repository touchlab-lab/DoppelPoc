//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/EventBus/EventBus/src/de/greenrobot/event/ThreadMode.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "de/greenrobot/event/ThreadMode.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void DeGreenrobotEventThreadMode_initWithNSString_withInt_(DeGreenrobotEventThreadMode *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static DeGreenrobotEventThreadMode *new_DeGreenrobotEventThreadMode_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(DeGreenrobotEventThreadMode)

DeGreenrobotEventThreadMode *DeGreenrobotEventThreadMode_values_[4];

@implementation DeGreenrobotEventThreadMode

+ (IOSObjectArray *)values {
  return DeGreenrobotEventThreadMode_values();
}

+ (DeGreenrobotEventThreadMode *)valueOfWithNSString:(NSString *)name {
  return DeGreenrobotEventThreadMode_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [DeGreenrobotEventThreadMode class]) {
    JreEnum(DeGreenrobotEventThreadMode, PostThread) = new_DeGreenrobotEventThreadMode_initWithNSString_withInt_(@"PostThread", 0);
    JreEnum(DeGreenrobotEventThreadMode, MainThread) = new_DeGreenrobotEventThreadMode_initWithNSString_withInt_(@"MainThread", 1);
    JreEnum(DeGreenrobotEventThreadMode, BackgroundThread) = new_DeGreenrobotEventThreadMode_initWithNSString_withInt_(@"BackgroundThread", 2);
    JreEnum(DeGreenrobotEventThreadMode, Async) = new_DeGreenrobotEventThreadMode_initWithNSString_withInt_(@"Async", 3);
    J2OBJC_SET_INITIALIZED(DeGreenrobotEventThreadMode)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "PostThread", "PostThread", 0x4019, "Lde.greenrobot.event.ThreadMode;", &JreEnum(DeGreenrobotEventThreadMode, PostThread), NULL, .constantValue.asLong = 0 },
    { "MainThread", "MainThread", 0x4019, "Lde.greenrobot.event.ThreadMode;", &JreEnum(DeGreenrobotEventThreadMode, MainThread), NULL, .constantValue.asLong = 0 },
    { "BackgroundThread", "BackgroundThread", 0x4019, "Lde.greenrobot.event.ThreadMode;", &JreEnum(DeGreenrobotEventThreadMode, BackgroundThread), NULL, .constantValue.asLong = 0 },
    { "Async", "Async", 0x4019, "Lde.greenrobot.event.ThreadMode;", &JreEnum(DeGreenrobotEventThreadMode, Async), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lde.greenrobot.event.ThreadMode;"};
  static const J2ObjcClassInfo _DeGreenrobotEventThreadMode = { 2, "ThreadMode", "de.greenrobot.event", NULL, 0x4011, 0, NULL, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lde/greenrobot/event/ThreadMode;>;" };
  return &_DeGreenrobotEventThreadMode;
}

@end

void DeGreenrobotEventThreadMode_initWithNSString_withInt_(DeGreenrobotEventThreadMode *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

DeGreenrobotEventThreadMode *new_DeGreenrobotEventThreadMode_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  DeGreenrobotEventThreadMode *self = [DeGreenrobotEventThreadMode alloc];
  DeGreenrobotEventThreadMode_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *DeGreenrobotEventThreadMode_values() {
  DeGreenrobotEventThreadMode_initialize();
  return [IOSObjectArray arrayWithObjects:DeGreenrobotEventThreadMode_values_ count:4 type:DeGreenrobotEventThreadMode_class_()];
}

DeGreenrobotEventThreadMode *DeGreenrobotEventThreadMode_valueOfWithNSString_(NSString *name) {
  DeGreenrobotEventThreadMode_initialize();
  for (int i = 0; i < 4; i++) {
    DeGreenrobotEventThreadMode *e = DeGreenrobotEventThreadMode_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

DeGreenrobotEventThreadMode *DeGreenrobotEventThreadMode_fromOrdinal(NSUInteger ordinal) {
  DeGreenrobotEventThreadMode_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return DeGreenrobotEventThreadMode_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DeGreenrobotEventThreadMode)
