//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorReplay.java
//

#include "J2ObjC_source.h"
#include "java/lang/IllegalStateException.h"
#include "rx/Observable.h"
#include "rx/Scheduler.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/internal/operators/OperatorReplay.h"
#include "rx/subjects/Subject.h"

@interface RxInternalOperatorsOperatorReplay ()

- (instancetype)init;

@end

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_init(RxInternalOperatorsOperatorReplay *self);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay *new_RxInternalOperatorsOperatorReplay_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay *create_RxInternalOperatorsOperatorReplay_init();

@interface RxInternalOperatorsOperatorReplay_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxObservable *val$observedOn_;
}

- (void)callWithId:(RxSubscriber *)o;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorReplay_$1, val$observedOn_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(RxInternalOperatorsOperatorReplay_$1 *self, RxObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_$1 *new_RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(RxObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_$1 *create_RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(RxObservable *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorReplay_$1)

@interface RxInternalOperatorsOperatorReplay_$2 : NSObject < RxObservable_OnSubscribe > {
 @public
  RxObservable *val$target_;
}

- (void)callWithId:(RxSubscriber *)t1;

- (instancetype)initWithRxObservable:(RxObservable *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorReplay_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorReplay_$2, val$target_, RxObservable *)

__attribute__((unused)) static void RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(RxInternalOperatorsOperatorReplay_$2 *self, RxObservable *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_$2 *new_RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(RxObservable *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorReplay_$2 *create_RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(RxObservable *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorReplay_$2)

@implementation RxInternalOperatorsOperatorReplay

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxInternalOperatorsOperatorReplay_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (RxSubjectsSubject *)createScheduledSubjectWithRxSubjectsSubject:(RxSubjectsSubject *)subject
                                                   withRxScheduler:(RxScheduler *)scheduler {
  return RxInternalOperatorsOperatorReplay_createScheduledSubjectWithRxSubjectsSubject_withRxScheduler_(subject, scheduler);
}

+ (id<RxObservable_OnSubscribe>)subscriberOfWithRxObservable:(RxObservable *)target {
  return RxInternalOperatorsOperatorReplay_subscriberOfWithRxObservable_(target);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "OperatorReplay", NULL, 0x2, NULL, NULL },
    { "createScheduledSubjectWithRxSubjectsSubject:withRxScheduler:", "createScheduledSubject", "Lrx.subjects.Subject;", 0x9, NULL, "<T:Ljava/lang/Object;>(Lrx/subjects/Subject<TT;TT;>;Lrx/Scheduler;)Lrx/subjects/Subject<TT;TT;>;" },
    { "subscriberOfWithRxObservable:", "subscriberOf", "Lrx.Observable$OnSubscribe;", 0x9, NULL, "<T:Ljava/lang/Object;>(Lrx/Observable<TT;>;)Lrx/Observable$OnSubscribe<TT;>;" },
  };
  static const char *inner_classes[] = {"Lrx.internal.operators.OperatorReplay$SubjectWrapper;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay = { 2, "OperatorReplay", "rx.internal.operators", NULL, 0x11, 3, methods, 0, NULL, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_RxInternalOperatorsOperatorReplay;
}

@end

void RxInternalOperatorsOperatorReplay_init(RxInternalOperatorsOperatorReplay *self) {
  NSObject_init(self);
  @throw new_JavaLangIllegalStateException_initWithNSString_(@"No instances!");
}

RxInternalOperatorsOperatorReplay *new_RxInternalOperatorsOperatorReplay_init() {
  RxInternalOperatorsOperatorReplay *self = [RxInternalOperatorsOperatorReplay alloc];
  RxInternalOperatorsOperatorReplay_init(self);
  return self;
}

RxInternalOperatorsOperatorReplay *create_RxInternalOperatorsOperatorReplay_init() {
  return new_RxInternalOperatorsOperatorReplay_init();
}

RxSubjectsSubject *RxInternalOperatorsOperatorReplay_createScheduledSubjectWithRxSubjectsSubject_withRxScheduler_(RxSubjectsSubject *subject, RxScheduler *scheduler) {
  RxInternalOperatorsOperatorReplay_initialize();
  RxObservable *observedOn = [((RxSubjectsSubject *) nil_chk(subject)) observeOnWithRxScheduler:scheduler];
  RxInternalOperatorsOperatorReplay_SubjectWrapper *s = new_RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(new_RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(observedOn), subject);
  return s;
}

id<RxObservable_OnSubscribe> RxInternalOperatorsOperatorReplay_subscriberOfWithRxObservable_(RxObservable *target) {
  RxInternalOperatorsOperatorReplay_initialize();
  return new_RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(target);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay)

@implementation RxInternalOperatorsOperatorReplay_SubjectWrapper

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)func
                           withRxSubjectsSubject:(RxSubjectsSubject *)subject {
  RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(self, func, subject);
  return self;
}

- (void)onNextWithId:(id)args {
  [((RxSubjectsSubject *) nil_chk(subject_)) onNextWithId:args];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubjectsSubject *) nil_chk(subject_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubjectsSubject *) nil_chk(subject_)) onCompleted];
}

- (jboolean)hasObservers {
  return [((RxSubjectsSubject *) nil_chk(self->subject_)) hasObservers];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObservable_OnSubscribe:withRxSubjectsSubject:", "SubjectWrapper", NULL, 0x1, NULL, "(Lrx/Observable$OnSubscribe<TT;>;Lrx/subjects/Subject<TT;TT;>;)V" },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "hasObservers", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "subject_", NULL, 0x10, "Lrx.subjects.Subject;", NULL, "Lrx/subjects/Subject<TT;TT;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;", "TT;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_SubjectWrapper = { 2, "SubjectWrapper", "rx.internal.operators", "OperatorReplay", 0x19, 5, methods, 1, fields, 2, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;>Lrx/subjects/Subject<TT;TT;>;" };
  return &_RxInternalOperatorsOperatorReplay_SubjectWrapper;
}

@end

void RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(RxInternalOperatorsOperatorReplay_SubjectWrapper *self, id<RxObservable_OnSubscribe> func, RxSubjectsSubject *subject) {
  RxSubjectsSubject_initWithRxObservable_OnSubscribe_(self, func);
  self->subject_ = subject;
}

RxInternalOperatorsOperatorReplay_SubjectWrapper *new_RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(id<RxObservable_OnSubscribe> func, RxSubjectsSubject *subject) {
  RxInternalOperatorsOperatorReplay_SubjectWrapper *self = [RxInternalOperatorsOperatorReplay_SubjectWrapper alloc];
  RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(self, func, subject);
  return self;
}

RxInternalOperatorsOperatorReplay_SubjectWrapper *create_RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(id<RxObservable_OnSubscribe> func, RxSubjectsSubject *subject) {
  return new_RxInternalOperatorsOperatorReplay_SubjectWrapper_initWithRxObservable_OnSubscribe_withRxSubjectsSubject_(func, subject);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_SubjectWrapper)

@implementation RxInternalOperatorsOperatorReplay_$1

- (void)callWithId:(RxSubscriber *)o {
  [((id<RxObservable_OnSubscribe>) nil_chk(RxInternalOperatorsOperatorReplay_subscriberOfWithRxObservable_(val$observedOn_))) callWithId:o];
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0 {
  RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)V" },
    { "initWithRxObservable:", "", NULL, 0x0, NULL, "(Lrx/Observable<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$observedOn_", NULL, 0x1012, "Lrx.Observable;", NULL, "Lrx/Observable<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorReplay", "createScheduledSubjectWithRxSubjectsSubject:withRxScheduler:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_$1 = { 2, "", "rx.internal.operators", "OperatorReplay", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  return &_RxInternalOperatorsOperatorReplay_$1;
}

@end

void RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(RxInternalOperatorsOperatorReplay_$1 *self, RxObservable *capture$0) {
  self->val$observedOn_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_$1 *new_RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(RxObservable *capture$0) {
  RxInternalOperatorsOperatorReplay_$1 *self = [RxInternalOperatorsOperatorReplay_$1 alloc];
  RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(self, capture$0);
  return self;
}

RxInternalOperatorsOperatorReplay_$1 *create_RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(RxObservable *capture$0) {
  return new_RxInternalOperatorsOperatorReplay_$1_initWithRxObservable_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_$1)

@implementation RxInternalOperatorsOperatorReplay_$2

- (void)callWithId:(RxSubscriber *)t1 {
  (void) [((RxObservable *) nil_chk(val$target_)) unsafeSubscribeWithRxSubscriber:t1];
}

- (instancetype)initWithRxObservable:(RxObservable *)capture$0 {
  RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/Subscriber<-TT;>;)V" },
    { "initWithRxObservable:", "", NULL, 0x0, NULL, "(Lrx/Observable<TT;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$target_", NULL, 0x1012, "Lrx.Observable;", NULL, "Lrx/Observable<TT;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorReplay", "subscriberOfWithRxObservable:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorReplay_$2 = { 2, "", "rx.internal.operators", "OperatorReplay", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TT;>;" };
  return &_RxInternalOperatorsOperatorReplay_$2;
}

@end

void RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(RxInternalOperatorsOperatorReplay_$2 *self, RxObservable *capture$0) {
  self->val$target_ = capture$0;
  NSObject_init(self);
}

RxInternalOperatorsOperatorReplay_$2 *new_RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(RxObservable *capture$0) {
  RxInternalOperatorsOperatorReplay_$2 *self = [RxInternalOperatorsOperatorReplay_$2 alloc];
  RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(self, capture$0);
  return self;
}

RxInternalOperatorsOperatorReplay_$2 *create_RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(RxObservable *capture$0) {
  return new_RxInternalOperatorsOperatorReplay_$2_initWithRxObservable_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorReplay_$2)
