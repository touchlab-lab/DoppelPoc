//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorOnErrorResumeNextViaFunction.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_RESTRICT
#define RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_RESTRICT

#if !defined (RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_) && (RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_INCLUDE_ALL || defined(RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_INCLUDE))
#define RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc1;

@interface RxInternalOperatorsOperatorOnErrorResumeNextViaFunction : NSObject < RxObservable_Operator >

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)f;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorOnErrorResumeNextViaFunction)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorOnErrorResumeNextViaFunction *self, id<RxFunctionsFunc1> f);

FOUNDATION_EXPORT RxInternalOperatorsOperatorOnErrorResumeNextViaFunction *new_RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> f) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorOnErrorResumeNextViaFunction *create_RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> f);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorOnErrorResumeNextViaFunction)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorOnErrorResumeNextViaFunction_INCLUDE_ALL")
