//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorMulticast.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicReference.h"
#include "rx/Observable.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/functions/Action0.h"
#include "rx/functions/Action1.h"
#include "rx/functions/Func0.h"
#include "rx/internal/operators/OperatorMulticast.h"
#include "rx/observables/ConnectableObservable.h"
#include "rx/subjects/Subject.h"
#include "rx/subscriptions/Subscriptions.h"

@interface RxInternalOperatorsOperatorMulticast () {
 @public
  JavaUtilConcurrentAtomicAtomicReference *connectedSubject_;
  id<JavaUtilList> waitingForConnect_;
}

- (instancetype)initWithId:(id)guard
withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)connectedSubject
          withJavaUtilList:(id<JavaUtilList>)waitingForConnect
          withRxObservable:(RxObservable *)source
      withRxFunctionsFunc0:(id<RxFunctionsFunc0>)subjectFactory;

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMulticast, connectedSubject_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMulticast, waitingForConnect_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(RxInternalOperatorsOperatorMulticast *self, id guard, JavaUtilConcurrentAtomicAtomicReference *connectedSubject, id<JavaUtilList> waitingForConnect, RxObservable *source, id<RxFunctionsFunc0> subjectFactory);

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast *new_RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(id guard, JavaUtilConcurrentAtomicAtomicReference *connectedSubject, id<JavaUtilList> waitingForConnect, RxObservable *source, id<RxFunctionsFunc0> subjectFactory) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast *create_RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(id guard, JavaUtilConcurrentAtomicAtomicReference *connectedSubject, id<JavaUtilList> waitingForConnect, RxObservable *source, id<RxFunctionsFunc0> subjectFactory);

@interface RxInternalOperatorsOperatorMulticast_$1 : NSObject < RxObservable_OnSubscribe > {
 @public
  id val$guard_;
  JavaUtilConcurrentAtomicAtomicReference *val$connectedSubject_;
  id<JavaUtilList> val$waitingForConnect_;
}

- (void)callWithId:(RxSubscriber *)subscriber;

- (instancetype)initWithId:(id)capture$0
withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
          withJavaUtilList:(id<JavaUtilList>)capture$2;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMulticast_$1)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMulticast_$1, val$guard_, id)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMulticast_$1, val$connectedSubject_, JavaUtilConcurrentAtomicAtomicReference *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMulticast_$1, val$waitingForConnect_, id<JavaUtilList>)

__attribute__((unused)) static void RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(RxInternalOperatorsOperatorMulticast_$1 *self, id capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<JavaUtilList> capture$2);

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast_$1 *new_RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(id capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<JavaUtilList> capture$2) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast_$1 *create_RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(id capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<JavaUtilList> capture$2);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMulticast_$1)

@interface RxInternalOperatorsOperatorMulticast_$2 : RxSubscriber {
 @public
  RxSubjectsSubject *val$subject_;
}

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)args;

- (instancetype)initWithRxSubjectsSubject:(RxSubjectsSubject *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMulticast_$2)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMulticast_$2, val$subject_, RxSubjectsSubject *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(RxInternalOperatorsOperatorMulticast_$2 *self, RxSubjectsSubject *capture$0);

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast_$2 *new_RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast_$2 *create_RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMulticast_$2)

@interface RxInternalOperatorsOperatorMulticast_$3 : NSObject < RxFunctionsAction0 > {
 @public
  RxInternalOperatorsOperatorMulticast *this$0_;
}

- (void)call;

- (instancetype)initWithRxInternalOperatorsOperatorMulticast:(RxInternalOperatorsOperatorMulticast *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorMulticast_$3)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorMulticast_$3, this$0_, RxInternalOperatorsOperatorMulticast *)

__attribute__((unused)) static void RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(RxInternalOperatorsOperatorMulticast_$3 *self, RxInternalOperatorsOperatorMulticast *outer$);

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast_$3 *new_RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(RxInternalOperatorsOperatorMulticast *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxInternalOperatorsOperatorMulticast_$3 *create_RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(RxInternalOperatorsOperatorMulticast *outer$);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorMulticast_$3)

@implementation RxInternalOperatorsOperatorMulticast

- (instancetype)initWithRxObservable:(RxObservable *)source
                withRxFunctionsFunc0:(id<RxFunctionsFunc0>)subjectFactory {
  RxInternalOperatorsOperatorMulticast_initWithRxObservable_withRxFunctionsFunc0_(self, source, subjectFactory);
  return self;
}

- (instancetype)initWithId:(id)guard
withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)connectedSubject
          withJavaUtilList:(id<JavaUtilList>)waitingForConnect
          withRxObservable:(RxObservable *)source
      withRxFunctionsFunc0:(id<RxFunctionsFunc0>)subjectFactory {
  RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(self, guard, connectedSubject, waitingForConnect, source, subjectFactory);
  return self;
}

- (void)connectWithRxFunctionsAction1:(id<RxFunctionsAction1>)connection {
  jboolean shouldSubscribe = false;
  @synchronized(guard_) {
    if (subscription_ != nil) {
      return;
    }
    else {
      shouldSubscribe = true;
      RxSubjectsSubject *subject = [((id<RxFunctionsFunc0>) nil_chk(subjectFactory_)) call];
      subscription_ = new_RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(subject);
      for (RxSubscriber * __strong s in nil_chk(waitingForConnect_)) {
        (void) [((RxSubjectsSubject *) nil_chk(subject)) unsafeSubscribeWithRxSubscriber:s];
      }
      [waitingForConnect_ clear];
      [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(connectedSubject_)) setWithId:subject];
    }
  }
  if (shouldSubscribe) {
    [((id<RxFunctionsAction1>) nil_chk(connection)) callWithId:RxSubscriptionsSubscriptions_createWithRxFunctionsAction0_(new_RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(self))];
    jboolean subscriptionIsNull;
    @synchronized(guard_) {
      subscriptionIsNull = (subscription_ == nil);
    }
    if (!subscriptionIsNull) (void) [((RxObservable *) nil_chk(source_)) unsafeSubscribeWithRxSubscriber:subscription_];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxObservable:withRxFunctionsFunc0:", "OperatorMulticast", NULL, 0x1, NULL, "(Lrx/Observable<+TT;>;Lrx/functions/Func0<+Lrx/subjects/Subject<-TT;+TR;>;>;)V" },
    { "initWithId:withJavaUtilConcurrentAtomicAtomicReference:withJavaUtilList:withRxObservable:withRxFunctionsFunc0:", "OperatorMulticast", NULL, 0x2, NULL, "(Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReference<Lrx/subjects/Subject<-TT;+TR;>;>;Ljava/util/List<Lrx/Subscriber<-TR;>;>;Lrx/Observable<+TT;>;Lrx/functions/Func0<+Lrx/subjects/Subject<-TT;+TR;>;>;)V" },
    { "connectWithRxFunctionsAction1:", "connect", "V", 0x1, NULL, "(Lrx/functions/Action1<-Lrx/Subscription;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "source_", NULL, 0x10, "Lrx.Observable;", NULL, "Lrx/Observable<+TT;>;", .constantValue.asLong = 0 },
    { "guard_", NULL, 0x10, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "subjectFactory_", NULL, 0x10, "Lrx.functions.Func0;", NULL, "Lrx/functions/Func0<+Lrx/subjects/Subject<-TT;+TR;>;>;", .constantValue.asLong = 0 },
    { "connectedSubject_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicReference;", NULL, "Ljava/util/concurrent/atomic/AtomicReference<Lrx/subjects/Subject<-TT;+TR;>;>;", .constantValue.asLong = 0 },
    { "waitingForConnect_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lrx/Subscriber<-TR;>;>;", .constantValue.asLong = 0 },
    { "subscription_", NULL, 0x0, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<TT;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TR;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMulticast = { 2, "OperatorMulticast", "rx.internal.operators", NULL, 0x11, 3, methods, 6, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/observables/ConnectableObservable<TR;>;" };
  return &_RxInternalOperatorsOperatorMulticast;
}

@end

void RxInternalOperatorsOperatorMulticast_initWithRxObservable_withRxFunctionsFunc0_(RxInternalOperatorsOperatorMulticast *self, RxObservable *source, id<RxFunctionsFunc0> subjectFactory) {
  RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(self, new_NSObject_init(), new_JavaUtilConcurrentAtomicAtomicReference_init(), new_JavaUtilArrayList_init(), source, subjectFactory);
}

RxInternalOperatorsOperatorMulticast *new_RxInternalOperatorsOperatorMulticast_initWithRxObservable_withRxFunctionsFunc0_(RxObservable *source, id<RxFunctionsFunc0> subjectFactory) {
  RxInternalOperatorsOperatorMulticast *self = [RxInternalOperatorsOperatorMulticast alloc];
  RxInternalOperatorsOperatorMulticast_initWithRxObservable_withRxFunctionsFunc0_(self, source, subjectFactory);
  return self;
}

RxInternalOperatorsOperatorMulticast *create_RxInternalOperatorsOperatorMulticast_initWithRxObservable_withRxFunctionsFunc0_(RxObservable *source, id<RxFunctionsFunc0> subjectFactory) {
  return new_RxInternalOperatorsOperatorMulticast_initWithRxObservable_withRxFunctionsFunc0_(source, subjectFactory);
}

void RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(RxInternalOperatorsOperatorMulticast *self, id guard, JavaUtilConcurrentAtomicAtomicReference *connectedSubject, id<JavaUtilList> waitingForConnect, RxObservable *source, id<RxFunctionsFunc0> subjectFactory) {
  RxObservablesConnectableObservable_initWithRxObservable_OnSubscribe_(self, new_RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(guard, connectedSubject, waitingForConnect));
  self->guard_ = guard;
  self->connectedSubject_ = connectedSubject;
  self->waitingForConnect_ = waitingForConnect;
  self->source_ = source;
  self->subjectFactory_ = subjectFactory;
}

RxInternalOperatorsOperatorMulticast *new_RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(id guard, JavaUtilConcurrentAtomicAtomicReference *connectedSubject, id<JavaUtilList> waitingForConnect, RxObservable *source, id<RxFunctionsFunc0> subjectFactory) {
  RxInternalOperatorsOperatorMulticast *self = [RxInternalOperatorsOperatorMulticast alloc];
  RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(self, guard, connectedSubject, waitingForConnect, source, subjectFactory);
  return self;
}

RxInternalOperatorsOperatorMulticast *create_RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(id guard, JavaUtilConcurrentAtomicAtomicReference *connectedSubject, id<JavaUtilList> waitingForConnect, RxObservable *source, id<RxFunctionsFunc0> subjectFactory) {
  return new_RxInternalOperatorsOperatorMulticast_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_withRxObservable_withRxFunctionsFunc0_(guard, connectedSubject, waitingForConnect, source, subjectFactory);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMulticast)

@implementation RxInternalOperatorsOperatorMulticast_$1

- (void)callWithId:(RxSubscriber *)subscriber {
  @synchronized(val$guard_) {
    if ([((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(val$connectedSubject_)) get] == nil) {
      [((id<JavaUtilList>) nil_chk(val$waitingForConnect_)) addWithId:subscriber];
    }
    else {
      (void) [((RxSubjectsSubject *) nil_chk([val$connectedSubject_ get])) unsafeSubscribeWithRxSubscriber:subscriber];
    }
  }
}

- (instancetype)initWithId:(id)capture$0
withJavaUtilConcurrentAtomicAtomicReference:(JavaUtilConcurrentAtomicAtomicReference *)capture$1
          withJavaUtilList:(id<JavaUtilList>)capture$2 {
  RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(self, capture$0, capture$1, capture$2);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/Subscriber<-TR;>;)V" },
    { "initWithId:withJavaUtilConcurrentAtomicAtomicReference:withJavaUtilList:", "", NULL, 0x0, NULL, "(Ljava/lang/Object;Ljava/util/concurrent/atomic/AtomicReference<Lrx/subjects/Subject<-TT;+TR;>;>;Ljava/util/List<Lrx/Subscriber<-TR;>;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$guard_", NULL, 0x1012, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$connectedSubject_", NULL, 0x1012, "Ljava.util.concurrent.atomic.AtomicReference;", NULL, "Ljava/util/concurrent/atomic/AtomicReference<Lrx/subjects/Subject<-TT;+TR;>;>;", .constantValue.asLong = 0 },
    { "val$waitingForConnect_", NULL, 0x1012, "Ljava.util.List;", NULL, "Ljava/util/List<Lrx/Subscriber<-TR;>;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorMulticast", "initWithId:withJavaUtilConcurrentAtomicAtomicReference:withJavaUtilList:withRxObservable:withRxFunctionsFunc0:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMulticast_$1 = { 2, "", "rx.internal.operators", "OperatorMulticast", 0x8008, 2, methods, 3, fields, 0, NULL, 0, NULL, &enclosing_method, "Ljava/lang/Object;Lrx/Observable$OnSubscribe<TR;>;" };
  return &_RxInternalOperatorsOperatorMulticast_$1;
}

@end

void RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(RxInternalOperatorsOperatorMulticast_$1 *self, id capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<JavaUtilList> capture$2) {
  self->val$guard_ = capture$0;
  self->val$connectedSubject_ = capture$1;
  self->val$waitingForConnect_ = capture$2;
  NSObject_init(self);
}

RxInternalOperatorsOperatorMulticast_$1 *new_RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(id capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<JavaUtilList> capture$2) {
  RxInternalOperatorsOperatorMulticast_$1 *self = [RxInternalOperatorsOperatorMulticast_$1 alloc];
  RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(self, capture$0, capture$1, capture$2);
  return self;
}

RxInternalOperatorsOperatorMulticast_$1 *create_RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(id capture$0, JavaUtilConcurrentAtomicAtomicReference *capture$1, id<JavaUtilList> capture$2) {
  return new_RxInternalOperatorsOperatorMulticast_$1_initWithId_withJavaUtilConcurrentAtomicAtomicReference_withJavaUtilList_(capture$0, capture$1, capture$2);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMulticast_$1)

@implementation RxInternalOperatorsOperatorMulticast_$2

- (void)onCompleted {
  [((RxSubjectsSubject *) nil_chk(val$subject_)) onCompleted];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubjectsSubject *) nil_chk(val$subject_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)args {
  [((RxSubjectsSubject *) nil_chk(val$subject_)) onNextWithId:args];
}

- (instancetype)initWithRxSubjectsSubject:(RxSubjectsSubject *)capture$0 {
  RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(self, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "initWithRxSubjectsSubject:", "", NULL, 0x0, NULL, "(Lrx/subjects/Subject<-TT;+TR;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$subject_", NULL, 0x1012, "Lrx.subjects.Subject;", NULL, "Lrx/subjects/Subject<-TT;+TR;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorMulticast", "connectWithRxFunctionsAction1:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMulticast_$2 = { 2, "", "rx.internal.operators", "OperatorMulticast", 0x8008, 4, methods, 1, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOperatorMulticast_$2;
}

@end

void RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(RxInternalOperatorsOperatorMulticast_$2 *self, RxSubjectsSubject *capture$0) {
  self->val$subject_ = capture$0;
  RxSubscriber_init(self);
}

RxInternalOperatorsOperatorMulticast_$2 *new_RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0) {
  RxInternalOperatorsOperatorMulticast_$2 *self = [RxInternalOperatorsOperatorMulticast_$2 alloc];
  RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(self, capture$0);
  return self;
}

RxInternalOperatorsOperatorMulticast_$2 *create_RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(RxSubjectsSubject *capture$0) {
  return new_RxInternalOperatorsOperatorMulticast_$2_initWithRxSubjectsSubject_(capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMulticast_$2)

@implementation RxInternalOperatorsOperatorMulticast_$3

- (void)call {
  id<RxSubscription> s;
  @synchronized(this$0_->guard_) {
    s = this$0_->subscription_;
    this$0_->subscription_ = nil;
    [((JavaUtilConcurrentAtomicAtomicReference *) nil_chk(this$0_->connectedSubject_)) setWithId:nil];
  }
  if (s != nil) {
    [s unsubscribe];
  }
}

- (instancetype)initWithRxInternalOperatorsOperatorMulticast:(RxInternalOperatorsOperatorMulticast *)outer$ {
  RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "call", NULL, "V", 0x1, NULL, NULL },
    { "initWithRxInternalOperatorsOperatorMulticast:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrx.internal.operators.OperatorMulticast;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "RxInternalOperatorsOperatorMulticast", "connectWithRxFunctionsAction1:" };
  static const J2ObjcClassInfo _RxInternalOperatorsOperatorMulticast_$3 = { 2, "", "rx.internal.operators", "OperatorMulticast", 0x8008, 2, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_RxInternalOperatorsOperatorMulticast_$3;
}

@end

void RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(RxInternalOperatorsOperatorMulticast_$3 *self, RxInternalOperatorsOperatorMulticast *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

RxInternalOperatorsOperatorMulticast_$3 *new_RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(RxInternalOperatorsOperatorMulticast *outer$) {
  RxInternalOperatorsOperatorMulticast_$3 *self = [RxInternalOperatorsOperatorMulticast_$3 alloc];
  RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(self, outer$);
  return self;
}

RxInternalOperatorsOperatorMulticast_$3 *create_RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(RxInternalOperatorsOperatorMulticast *outer$) {
  return new_RxInternalOperatorsOperatorMulticast_$3_initWithRxInternalOperatorsOperatorMulticast_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOperatorMulticast_$3)
