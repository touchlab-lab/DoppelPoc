//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorTimeout.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorTimeout_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorTimeout_RESTRICT
#define RxInternalOperatorsOperatorTimeout_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorTimeout_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorTimeout_RESTRICT

#if !defined (RxInternalOperatorsOperatorTimeout_) && (RxInternalOperatorsOperatorTimeout_INCLUDE_ALL || defined(RxInternalOperatorsOperatorTimeout_INCLUDE))
#define RxInternalOperatorsOperatorTimeout_

#define RxInternalOperatorsOperatorTimeoutBase_RESTRICT 1
#define RxInternalOperatorsOperatorTimeoutBase_INCLUDE 1
#include "rx/internal/operators/OperatorTimeoutBase.h"

@class JavaUtilConcurrentTimeUnit;
@class RxObservable;
@class RxScheduler;

@interface RxInternalOperatorsOperatorTimeout : RxInternalOperatorsOperatorTimeoutBase

#pragma mark Public

- (instancetype)initWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnit:(JavaUtilConcurrentTimeUnit *)timeUnit
            withRxObservable:(RxObservable *)other
             withRxScheduler:(RxScheduler *)scheduler;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalOperatorsOperatorTimeout)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(RxInternalOperatorsOperatorTimeout *self, jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler);

FOUNDATION_EXPORT RxInternalOperatorsOperatorTimeout *new_RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorTimeout *create_RxInternalOperatorsOperatorTimeout_initWithLong_withJavaUtilConcurrentTimeUnit_withRxObservable_withRxScheduler_(jlong timeout, JavaUtilConcurrentTimeUnit *timeUnit, RxObservable *other, RxScheduler *scheduler);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorTimeout)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorTimeout_INCLUDE_ALL")
