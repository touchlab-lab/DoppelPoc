//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OperatorGroupBy.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalOperatorsOperatorGroupBy_INCLUDE_ALL")
#ifdef RxInternalOperatorsOperatorGroupBy_RESTRICT
#define RxInternalOperatorsOperatorGroupBy_INCLUDE_ALL 0
#else
#define RxInternalOperatorsOperatorGroupBy_INCLUDE_ALL 1
#endif
#undef RxInternalOperatorsOperatorGroupBy_RESTRICT

#if !defined (RxInternalOperatorsOperatorGroupBy_) && (RxInternalOperatorsOperatorGroupBy_INCLUDE_ALL || defined(RxInternalOperatorsOperatorGroupBy_INCLUDE))
#define RxInternalOperatorsOperatorGroupBy_

#define RxObservable_RESTRICT 1
#define RxObservable_Operator_INCLUDE 1
#include "rx/Observable.h"

@class RxSubscriber;
@protocol RxFunctionsFunc1;

@interface RxInternalOperatorsOperatorGroupBy : NSObject < RxObservable_Operator > {
 @public
  id<RxFunctionsFunc1> keySelector_;
  id<RxFunctionsFunc1> valueSelector_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector;

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)valueSelector;

- (RxSubscriber *)callWithId:(RxSubscriber *)child;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorGroupBy)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupBy, keySelector_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupBy, valueSelector_, id<RxFunctionsFunc1>)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_(RxInternalOperatorsOperatorGroupBy *self, id<RxFunctionsFunc1> keySelector);

FOUNDATION_EXPORT RxInternalOperatorsOperatorGroupBy *new_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorGroupBy *create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector);

FOUNDATION_EXPORT void RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(RxInternalOperatorsOperatorGroupBy *self, id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector);

FOUNDATION_EXPORT RxInternalOperatorsOperatorGroupBy *new_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorGroupBy *create_RxInternalOperatorsOperatorGroupBy_initWithRxFunctionsFunc1_withRxFunctionsFunc1_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> valueSelector);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorGroupBy)

#endif

#if !defined (RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_) && (RxInternalOperatorsOperatorGroupBy_INCLUDE_ALL || defined(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_INCLUDE))
#define RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_

#define RxSubscriber_RESTRICT 1
#define RxSubscriber_INCLUDE 1
#include "rx/Subscriber.h"

@class JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater;
@class JavaUtilConcurrentAtomicAtomicLongFieldUpdater;
@class RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_GroupState;
@protocol RxFunctionsFunc1;

@interface RxInternalOperatorsOperatorGroupBy_GroupBySubscriber : RxSubscriber {
 @public
  RxInternalOperatorsOperatorGroupBy_GroupBySubscriber *self__;
  id<RxFunctionsFunc1> keySelector_;
  id<RxFunctionsFunc1> elementSelector_;
  RxSubscriber *child_;
  volatile_jint completionEmitted_;
  volatile_jint terminated_;
  volatile_jlong requested_GroupBySubscriber_;
  volatile_jlong bufferedCount_;
}

#pragma mark Public

- (instancetype)initWithRxFunctionsFunc1:(id<RxFunctionsFunc1>)keySelector
                    withRxFunctionsFunc1:(id<RxFunctionsFunc1>)elementSelector
                        withRxSubscriber:(RxSubscriber *)child;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)e;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)t;

- (void)onStart;

#pragma mark Package-Private

- (void)requestFromGroupedObservableWithLong:(jlong)n
withRxInternalOperatorsOperatorGroupBy_GroupBySubscriber_GroupState:(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_GroupState *)group;

@end

J2OBJC_STATIC_INIT(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber)

J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, self__, RxInternalOperatorsOperatorGroupBy_GroupBySubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, keySelector_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, elementSelector_, id<RxFunctionsFunc1>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, child_, RxSubscriber *)

inline JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_get_COMPLETION_EMITTED_UPDATER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_COMPLETION_EMITTED_UPDATER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, COMPLETION_EMITTED_UPDATER, JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *)

inline JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_get_TERMINATED_UPDATER();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_TERMINATED_UPDATER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, TERMINATED_UPDATER, JavaUtilConcurrentAtomicAtomicIntegerFieldUpdater *)

inline JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_get_REQUESTED();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_REQUESTED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, REQUESTED, JavaUtilConcurrentAtomicAtomicLongFieldUpdater *)

inline JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_get_BUFFERED_COUNT();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_BUFFERED_COUNT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber, BUFFERED_COUNT, JavaUtilConcurrentAtomicAtomicLongFieldUpdater *)

FOUNDATION_EXPORT void RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxSubscriber_(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber *self, id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> elementSelector, RxSubscriber *child);

FOUNDATION_EXPORT RxInternalOperatorsOperatorGroupBy_GroupBySubscriber *new_RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxSubscriber_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> elementSelector, RxSubscriber *child) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalOperatorsOperatorGroupBy_GroupBySubscriber *create_RxInternalOperatorsOperatorGroupBy_GroupBySubscriber_initWithRxFunctionsFunc1_withRxFunctionsFunc1_withRxSubscriber_(id<RxFunctionsFunc1> keySelector, id<RxFunctionsFunc1> elementSelector, RxSubscriber *child);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalOperatorsOperatorGroupBy_GroupBySubscriber)

#endif

#pragma pop_macro("RxInternalOperatorsOperatorGroupBy_INCLUDE_ALL")
