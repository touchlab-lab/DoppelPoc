//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/operators/OnSubscribeCombineLatest.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Math.h"
#include "java/util/BitSet.h"
#include "java/util/List.h"
#include "java/util/concurrent/atomic/AtomicBoolean.h"
#include "java/util/concurrent/atomic/AtomicLong.h"
#include "java/util/concurrent/atomic/AtomicLongFieldUpdater.h"
#include "rx/Observable.h"
#include "rx/Subscriber.h"
#include "rx/Subscription.h"
#include "rx/exceptions/MissingBackpressureException.h"
#include "rx/functions/FuncN.h"
#include "rx/internal/operators/OnSubscribeCombineLatest.h"
#include "rx/internal/util/RxRingBuffer.h"

@interface RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer () {
 @public
  JavaUtilConcurrentAtomicAtomicBoolean *started_;
  JavaUtilConcurrentAtomicAtomicLong *requested_;
  id<JavaUtilList> sources_;
  RxSubscriber *child_;
  id<RxFunctionsFuncN> combinator_;
  IOSObjectArray *subscribers_;
  RxInternalUtilRxRingBuffer *buffer_;
  IOSObjectArray *collectedValues_;
  JavaUtilBitSet *haveValues_;
  volatile_jint haveValuesCount_;
  JavaUtilBitSet *completion_;
  volatile_jint completionCount_;
  volatile_jlong counter_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, started_, JavaUtilConcurrentAtomicAtomicBoolean *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, requested_, JavaUtilConcurrentAtomicAtomicLong *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, sources_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, combinator_, id<RxFunctionsFuncN>)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, subscribers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, buffer_, RxInternalUtilRxRingBuffer *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, collectedValues_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, haveValues_, JavaUtilBitSet *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, completion_, JavaUtilBitSet *)

inline JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_get_WIP();
static JavaUtilConcurrentAtomicAtomicLongFieldUpdater *RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_WIP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer, WIP, JavaUtilConcurrentAtomicAtomicLongFieldUpdater *)

@interface RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber () {
 @public
  RxSubscriber *child_;
  id<RxFunctionsFuncN> combinator_;
}

@end

J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber, child_, RxSubscriber *)
J2OBJC_FIELD_SETTER(RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber, combinator_, id<RxFunctionsFuncN>)

@implementation RxInternalOperatorsOnSubscribeCombineLatest

- (instancetype)initWithJavaUtilList:(id<JavaUtilList>)sources
                withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combinator {
  RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaUtilList_withRxFunctionsFuncN_(self, sources, combinator);
  return self;
}

- (void)callWithId:(RxSubscriber *)child {
  if ([((id<JavaUtilList>) nil_chk(sources_)) isEmpty]) {
    [((RxSubscriber *) nil_chk(child)) onCompleted];
    return;
  }
  if ([sources_ size] == 1) {
    [((RxSubscriber *) nil_chk(child)) setProducerWithRxProducer:new_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer_initWithRxSubscriber_withRxObservable_withRxFunctionsFuncN_(child, [sources_ getWithInt:0], combinator_)];
  }
  else {
    [((RxSubscriber *) nil_chk(child)) setProducerWithRxProducer:new_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_initWithRxSubscriber_withJavaUtilList_withRxFunctionsFuncN_(child, sources_, combinator_)];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilList:withRxFunctionsFuncN:", "OnSubscribeCombineLatest", NULL, 0x1, NULL, "(Ljava/util/List<+Lrx/Observable<+TT;>;>;Lrx/functions/FuncN<+TR;>;)V" },
    { "callWithId:", "call", "V", 0x1, NULL, "(Lrx/Subscriber<-TR;>;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "sources_", NULL, 0x10, "Ljava.util.List;", NULL, "Ljava/util/List<+Lrx/Observable<+TT;>;>;", .constantValue.asLong = 0 },
    { "combinator_", NULL, 0x10, "Lrx.functions.FuncN;", NULL, "Lrx/functions/FuncN<+TR;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.internal.operators.OnSubscribeCombineLatest$MultiSourceProducer;", "Lrx.internal.operators.OnSubscribeCombineLatest$MultiSourceRequestableSubscriber;", "Lrx.internal.operators.OnSubscribeCombineLatest$SingleSourceProducer;", "Lrx.internal.operators.OnSubscribeCombineLatest$SingleSourceRequestableSubscriber;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCombineLatest = { 2, "OnSubscribeCombineLatest", "rx.internal.operators", NULL, 0x11, 2, methods, 2, fields, 0, NULL, 4, inner_classes, NULL, "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Observable$OnSubscribe<TR;>;" };
  return &_RxInternalOperatorsOnSubscribeCombineLatest;
}

@end

void RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaUtilList_withRxFunctionsFuncN_(RxInternalOperatorsOnSubscribeCombineLatest *self, id<JavaUtilList> sources, id<RxFunctionsFuncN> combinator) {
  NSObject_init(self);
  self->sources_ = sources;
  self->combinator_ = combinator;
  if ([((id<JavaUtilList>) nil_chk(sources)) size] > 128) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"More than 128 sources to combineLatest is not supported.");
  }
}

RxInternalOperatorsOnSubscribeCombineLatest *new_RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaUtilList_withRxFunctionsFuncN_(id<JavaUtilList> sources, id<RxFunctionsFuncN> combinator) {
  RxInternalOperatorsOnSubscribeCombineLatest *self = [RxInternalOperatorsOnSubscribeCombineLatest alloc];
  RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaUtilList_withRxFunctionsFuncN_(self, sources, combinator);
  return self;
}

RxInternalOperatorsOnSubscribeCombineLatest *create_RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaUtilList_withRxFunctionsFuncN_(id<JavaUtilList> sources, id<RxFunctionsFuncN> combinator) {
  return new_RxInternalOperatorsOnSubscribeCombineLatest_initWithJavaUtilList_withRxFunctionsFuncN_(sources, combinator);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCombineLatest)

J2OBJC_INITIALIZED_DEFN(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer)

@implementation RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
                    withJavaUtilList:(id<JavaUtilList>)sources
                withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combinator {
  RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_initWithRxSubscriber_withJavaUtilList_withRxFunctionsFuncN_(self, child, sources, combinator);
  return self;
}

- (void)requestWithLong:(jlong)n {
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(requested_)) getAndAddWithLong:n];
  if (![((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(started_)) get] && [started_ compareAndSetWithBoolean:false withBoolean:true]) {
    jint sizePerSubscriber = JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) / [((id<JavaUtilList>) nil_chk(sources_)) size];
    jint leftOver = JreLoadStatic(RxInternalUtilRxRingBuffer, SIZE) % [sources_ size];
    for (jint i = 0; i < [sources_ size]; i++) {
      RxObservable *o = [sources_ getWithInt:i];
      jint toRequest = sizePerSubscriber;
      if (i == [sources_ size] - 1) {
        toRequest += leftOver;
      }
      RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber *s = new_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_initWithInt_withInt_withRxSubscriber_withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_(i, toRequest, child_, self);
      (void) IOSObjectArray_Set(nil_chk(subscribers_), i, s);
      (void) [((RxObservable *) nil_chk(o)) unsafeSubscribeWithRxSubscriber:s];
    }
  }
  [self tick];
}

- (void)tick {
  if ([((JavaUtilConcurrentAtomicAtomicLongFieldUpdater *) nil_chk(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_WIP)) getAndIncrementWithId:self] == 0) {
    jint emitted = 0;
    do {
      if ([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(requested_)) get] > 0) {
        id o = [((RxInternalUtilRxRingBuffer *) nil_chk(buffer_)) poll];
        if (o != nil) {
          if ([buffer_ isCompletedWithId:o]) {
            [((RxSubscriber *) nil_chk(child_)) onCompleted];
          }
          else {
            [buffer_ acceptWithId:o withRxObserver:child_];
            emitted++;
            [requested_ decrementAndGet];
          }
        }
      }
    }
    while ([RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_WIP decrementAndGetWithId:self] > 0);
    if (emitted > 0) {
      {
        IOSObjectArray *a__ = subscribers_;
        RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
        RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber *s = *b__++;
          [((RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber *) nil_chk(s)) requestUpToWithLong:emitted];
        }
      }
    }
  }
}

- (void)onCompletedWithInt:(jint)index
               withBoolean:(jboolean)hadValue {
  if (!hadValue) {
    [((RxSubscriber *) nil_chk(child_)) onCompleted];
    return;
  }
  jboolean done = false;
  @synchronized(self) {
    if (![((JavaUtilBitSet *) nil_chk(completion_)) getWithInt:index]) {
      [completion_ setWithInt:index];
      completionCount_++;
      done = (JreLoadVolatileInt(&completionCount_) == ((IOSObjectArray *) nil_chk(collectedValues_))->size_);
    }
  }
  if (done) {
    [((RxInternalUtilRxRingBuffer *) nil_chk(buffer_)) onCompleted];
    [self tick];
  }
}

- (jboolean)onNextWithInt:(jint)index
                   withId:(id)t {
  @synchronized(self) {
    if (![((JavaUtilBitSet *) nil_chk(haveValues_)) getWithInt:index]) {
      [haveValues_ setWithInt:index];
      haveValuesCount_++;
    }
    (void) IOSObjectArray_Set(nil_chk(collectedValues_), index, t);
    if (JreLoadVolatileInt(&haveValuesCount_) != collectedValues_->size_) {
      return false;
    }
    else {
      @try {
        [((RxInternalUtilRxRingBuffer *) nil_chk(buffer_)) onNextWithId:[((id<RxFunctionsFuncN>) nil_chk(combinator_)) callWithNSObjectArray:collectedValues_]];
      }
      @catch (RxExceptionsMissingBackpressureException *e) {
        [self onErrorWithNSException:e];
      }
      @catch (NSException *e) {
        [self onErrorWithNSException:e];
      }
    }
  }
  [self tick];
  return true;
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
}

+ (void)initialize {
  if (self == [RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer class]) {
    RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_WIP = JavaUtilConcurrentAtomicAtomicLongFieldUpdater_newUpdaterWithIOSClass_withNSString_(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_class_(), @"counter");
    J2OBJC_SET_INITIALIZED(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withJavaUtilList:withRxFunctionsFuncN:", "MultiSourceProducer", NULL, 0x1, NULL, "(Lrx/Subscriber<-TR;>;Ljava/util/List<+Lrx/Observable<+TT;>;>;Lrx/functions/FuncN<+TR;>;)V" },
    { "requestWithLong:", "request", "V", 0x1, NULL, NULL },
    { "tick", NULL, "V", 0x0, NULL, NULL },
    { "onCompletedWithInt:withBoolean:", "onCompleted", "V", 0x1, NULL, NULL },
    { "onNextWithInt:withId:", "onNext", "Z", 0x1, NULL, "(ITT;)Z" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "started_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicBoolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "requested_", NULL, 0x12, "Ljava.util.concurrent.atomic.AtomicLong;", NULL, NULL, .constantValue.asLong = 0 },
    { "sources_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<+Lrx/Observable<+TT;>;>;", .constantValue.asLong = 0 },
    { "child_", NULL, 0x12, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<-TR;>;", .constantValue.asLong = 0 },
    { "combinator_", NULL, 0x12, "Lrx.functions.FuncN;", NULL, "Lrx/functions/FuncN<+TR;>;", .constantValue.asLong = 0 },
    { "subscribers_", NULL, 0x12, "[Lrx.internal.operators.OnSubscribeCombineLatest$MultiSourceRequestableSubscriber;", NULL, "[Lrx/internal/operators/OnSubscribeCombineLatest$MultiSourceRequestableSubscriber<TT;TR;>;", .constantValue.asLong = 0 },
    { "buffer_", NULL, 0x12, "Lrx.internal.util.RxRingBuffer;", NULL, NULL, .constantValue.asLong = 0 },
    { "collectedValues_", NULL, 0x12, "[Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "haveValues_", NULL, 0x12, "Ljava.util.BitSet;", NULL, NULL, .constantValue.asLong = 0 },
    { "haveValuesCount_", NULL, 0x42, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "completion_", NULL, 0x12, "Ljava.util.BitSet;", NULL, NULL, .constantValue.asLong = 0 },
    { "completionCount_", NULL, 0x42, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "counter_", NULL, 0x42, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "WIP", "WIP", 0x1a, "Ljava.util.concurrent.atomic.AtomicLongFieldUpdater;", &RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_WIP, "Ljava/util/concurrent/atomic/AtomicLongFieldUpdater<Lrx/internal/operators/OnSubscribeCombineLatest$MultiSourceProducer;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer = { 2, "MultiSourceProducer", "rx.internal.operators", "OnSubscribeCombineLatest", 0x18, 6, methods, 14, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Producer;" };
  return &_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer;
}

@end

void RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_initWithRxSubscriber_withJavaUtilList_withRxFunctionsFuncN_(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *self, RxSubscriber *child, id<JavaUtilList> sources, id<RxFunctionsFuncN> combinator) {
  NSObject_init(self);
  self->started_ = new_JavaUtilConcurrentAtomicAtomicBoolean_init();
  self->requested_ = new_JavaUtilConcurrentAtomicAtomicLong_init();
  self->buffer_ = RxInternalUtilRxRingBuffer_getSpmcInstance();
  self->sources_ = sources;
  self->child_ = child;
  self->combinator_ = combinator;
  jint n = [((id<JavaUtilList>) nil_chk(sources)) size];
  self->subscribers_ = [IOSObjectArray newArrayWithLength:n type:RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_class_()];
  self->collectedValues_ = [IOSObjectArray newArrayWithLength:n type:NSObject_class_()];
  self->haveValues_ = new_JavaUtilBitSet_initWithInt_(n);
  self->completion_ = new_JavaUtilBitSet_initWithInt_(n);
}

RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *new_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_initWithRxSubscriber_withJavaUtilList_withRxFunctionsFuncN_(RxSubscriber *child, id<JavaUtilList> sources, id<RxFunctionsFuncN> combinator) {
  RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *self = [RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer alloc];
  RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_initWithRxSubscriber_withJavaUtilList_withRxFunctionsFuncN_(self, child, sources, combinator);
  return self;
}

RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *create_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_initWithRxSubscriber_withJavaUtilList_withRxFunctionsFuncN_(RxSubscriber *child, id<JavaUtilList> sources, id<RxFunctionsFuncN> combinator) {
  return new_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_initWithRxSubscriber_withJavaUtilList_withRxFunctionsFuncN_(child, sources, combinator);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer)

@implementation RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber

- (instancetype)initWithInt:(jint)index
                    withInt:(jint)initial
           withRxSubscriber:(RxSubscriber *)child
withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer:(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *)producer {
  RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_initWithInt_withInt_withRxSubscriber_withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_(self, index, initial, child, producer);
  return self;
}

- (void)requestUpToWithLong:(jlong)n {
  jlong r = JavaLangMath_minWithLong_withLong_([((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(emitted_)) get], n);
  [self requestWithLong:r];
  [emitted_ addAndGetWithLong:-r];
}

- (void)onCompleted {
  [((RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *) nil_chk(producer_)) onCompletedWithInt:index_ withBoolean:hasValue_];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *) nil_chk(producer_)) onErrorWithNSException:e];
}

- (void)onNextWithId:(id)t {
  hasValue_ = true;
  [((JavaUtilConcurrentAtomicAtomicLong *) nil_chk(emitted_)) incrementAndGet];
  jboolean emitted = [((RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *) nil_chk(producer_)) onNextWithInt:index_ withId:t];
  if (!emitted) {
    [self requestWithLong:1];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithInt:withInt:withRxSubscriber:withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer:", "MultiSourceRequestableSubscriber", NULL, 0x1, NULL, "(IILrx/Subscriber<-TR;>;Lrx/internal/operators/OnSubscribeCombineLatest$MultiSourceProducer<TT;TR;>;)V" },
    { "requestUpToWithLong:", "requestUpTo", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "producer_", NULL, 0x10, "Lrx.internal.operators.OnSubscribeCombineLatest$MultiSourceProducer;", NULL, "Lrx/internal/operators/OnSubscribeCombineLatest$MultiSourceProducer<TT;TR;>;", .constantValue.asLong = 0 },
    { "index_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "emitted_", NULL, 0x10, "Ljava.util.concurrent.atomic.AtomicLong;", NULL, NULL, .constantValue.asLong = 0 },
    { "hasValue_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber = { 2, "MultiSourceRequestableSubscriber", "rx.internal.operators", "OnSubscribeCombineLatest", 0x18, 5, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber;
}

@end

void RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_initWithInt_withInt_withRxSubscriber_withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber *self, jint index, jint initial, RxSubscriber *child, RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *producer) {
  RxSubscriber_initWithRxSubscriber_(self, child);
  self->emitted_ = new_JavaUtilConcurrentAtomicAtomicLong_init();
  self->hasValue_ = false;
  self->index_ = index;
  self->producer_ = producer;
  [self requestWithLong:initial];
}

RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber *new_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_initWithInt_withInt_withRxSubscriber_withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_(jint index, jint initial, RxSubscriber *child, RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *producer) {
  RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber *self = [RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber alloc];
  RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_initWithInt_withInt_withRxSubscriber_withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_(self, index, initial, child, producer);
  return self;
}

RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber *create_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_initWithInt_withInt_withRxSubscriber_withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_(jint index, jint initial, RxSubscriber *child, RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer *producer) {
  return new_RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber_initWithInt_withInt_withRxSubscriber_withRxInternalOperatorsOnSubscribeCombineLatest_MultiSourceProducer_(index, initial, child, producer);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCombineLatest_MultiSourceRequestableSubscriber)

@implementation RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
                    withRxObservable:(RxObservable *)source
                withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combinator {
  RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer_initWithRxSubscriber_withRxObservable_withRxFunctionsFuncN_(self, child, source, combinator);
  return self;
}

- (void)requestWithLong:(jlong)n {
  [((RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber *) nil_chk(subscriber_)) requestMoreWithLong:n];
  if ([((JavaUtilConcurrentAtomicAtomicBoolean *) nil_chk(started_)) compareAndSetWithBoolean:false withBoolean:true]) {
    (void) [((RxObservable *) nil_chk(source_)) unsafeSubscribeWithRxSubscriber:subscriber_];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withRxObservable:withRxFunctionsFuncN:", "SingleSourceProducer", NULL, 0x1, NULL, "(Lrx/Subscriber<-TR;>;Lrx/Observable<+TT;>;Lrx/functions/FuncN<+TR;>;)V" },
    { "requestWithLong:", "request", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "started_", NULL, 0x10, "Ljava.util.concurrent.atomic.AtomicBoolean;", NULL, NULL, .constantValue.asLong = 0 },
    { "source_", NULL, 0x10, "Lrx.Observable;", NULL, "Lrx/Observable<+TT;>;", .constantValue.asLong = 0 },
    { "child_", NULL, 0x10, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<-TR;>;", .constantValue.asLong = 0 },
    { "combinator_", NULL, 0x10, "Lrx.functions.FuncN;", NULL, "Lrx/functions/FuncN<+TR;>;", .constantValue.asLong = 0 },
    { "subscriber_", NULL, 0x10, "Lrx.internal.operators.OnSubscribeCombineLatest$SingleSourceRequestableSubscriber;", NULL, "Lrx/internal/operators/OnSubscribeCombineLatest$SingleSourceRequestableSubscriber<TT;TR;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer = { 2, "SingleSourceProducer", "rx.internal.operators", "OnSubscribeCombineLatest", 0x18, 2, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Ljava/lang/Object;Lrx/Producer;" };
  return &_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer;
}

@end

void RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer_initWithRxSubscriber_withRxObservable_withRxFunctionsFuncN_(RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer *self, RxSubscriber *child, RxObservable *source, id<RxFunctionsFuncN> combinator) {
  NSObject_init(self);
  self->started_ = new_JavaUtilConcurrentAtomicAtomicBoolean_init();
  self->source_ = source;
  self->child_ = child;
  self->combinator_ = combinator;
  self->subscriber_ = new_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber_initWithRxSubscriber_withRxFunctionsFuncN_(child, combinator);
}

RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer *new_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer_initWithRxSubscriber_withRxObservable_withRxFunctionsFuncN_(RxSubscriber *child, RxObservable *source, id<RxFunctionsFuncN> combinator) {
  RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer *self = [RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer alloc];
  RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer_initWithRxSubscriber_withRxObservable_withRxFunctionsFuncN_(self, child, source, combinator);
  return self;
}

RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer *create_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer_initWithRxSubscriber_withRxObservable_withRxFunctionsFuncN_(RxSubscriber *child, RxObservable *source, id<RxFunctionsFuncN> combinator) {
  return new_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer_initWithRxSubscriber_withRxObservable_withRxFunctionsFuncN_(child, source, combinator);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceProducer)

@implementation RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber

- (instancetype)initWithRxSubscriber:(RxSubscriber *)child
                withRxFunctionsFuncN:(id<RxFunctionsFuncN>)combinator {
  RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber_initWithRxSubscriber_withRxFunctionsFuncN_(self, child, combinator);
  return self;
}

- (void)requestMoreWithLong:(jlong)n {
  [self requestWithLong:n];
}

- (void)onNextWithId:(id)t {
  [((RxSubscriber *) nil_chk(child_)) onNextWithId:[((id<RxFunctionsFuncN>) nil_chk(combinator_)) callWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ t } count:1 type:NSObject_class_()]]];
}

- (void)onErrorWithNSException:(NSException *)e {
  [((RxSubscriber *) nil_chk(child_)) onErrorWithNSException:e];
}

- (void)onCompleted {
  [((RxSubscriber *) nil_chk(child_)) onCompleted];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRxSubscriber:withRxFunctionsFuncN:", "SingleSourceRequestableSubscriber", NULL, 0x0, NULL, "(Lrx/Subscriber<-TR;>;Lrx/functions/FuncN<+TR;>;)V" },
    { "requestMoreWithLong:", "requestMore", "V", 0x1, NULL, NULL },
    { "onNextWithId:", "onNext", "V", 0x1, NULL, "(TT;)V" },
    { "onErrorWithNSException:", "onError", "V", 0x1, NULL, NULL },
    { "onCompleted", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "child_", NULL, 0x12, "Lrx.Subscriber;", NULL, "Lrx/Subscriber<-TR;>;", .constantValue.asLong = 0 },
    { "combinator_", NULL, 0x12, "Lrx.functions.FuncN;", NULL, "Lrx/functions/FuncN<+TR;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjcClassInfo _RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber = { 2, "SingleSourceRequestableSubscriber", "rx.internal.operators", "OnSubscribeCombineLatest", 0x18, 5, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "<T:Ljava/lang/Object;R:Ljava/lang/Object;>Lrx/Subscriber<TT;>;" };
  return &_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber;
}

@end

void RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber_initWithRxSubscriber_withRxFunctionsFuncN_(RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber *self, RxSubscriber *child, id<RxFunctionsFuncN> combinator) {
  RxSubscriber_initWithRxSubscriber_(self, child);
  self->child_ = child;
  self->combinator_ = combinator;
}

RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber *new_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber_initWithRxSubscriber_withRxFunctionsFuncN_(RxSubscriber *child, id<RxFunctionsFuncN> combinator) {
  RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber *self = [RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber alloc];
  RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber_initWithRxSubscriber_withRxFunctionsFuncN_(self, child, combinator);
  return self;
}

RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber *create_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber_initWithRxSubscriber_withRxFunctionsFuncN_(RxSubscriber *child, id<RxFunctionsFuncN> combinator) {
  return new_RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber_initWithRxSubscriber_withRxFunctionsFuncN_(child, combinator);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxInternalOperatorsOnSubscribeCombineLatest_SingleSourceRequestableSubscriber)
