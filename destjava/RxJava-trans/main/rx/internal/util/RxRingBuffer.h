//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/util/RxRingBuffer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalUtilRxRingBuffer_INCLUDE_ALL")
#ifdef RxInternalUtilRxRingBuffer_RESTRICT
#define RxInternalUtilRxRingBuffer_INCLUDE_ALL 0
#else
#define RxInternalUtilRxRingBuffer_INCLUDE_ALL 1
#endif
#undef RxInternalUtilRxRingBuffer_RESTRICT

#if !defined (RxInternalUtilRxRingBuffer_) && (RxInternalUtilRxRingBuffer_INCLUDE_ALL || defined(RxInternalUtilRxRingBuffer_INCLUDE))
#define RxInternalUtilRxRingBuffer_

#define RxSubscription_RESTRICT 1
#define RxSubscription_INCLUDE 1
#include "rx/Subscription.h"

@protocol RxObserver;

@interface RxInternalUtilRxRingBuffer : NSObject < RxSubscription > {
 @public
  volatile_id terminalState_;
}

#pragma mark Public

- (jboolean)acceptWithId:(id)o
          withRxObserver:(id<RxObserver>)child;

- (NSException *)asErrorWithId:(id)o;

- (jint)available;

- (jint)capacity;

- (jint)count;

+ (RxInternalUtilRxRingBuffer *)getSpmcInstance;

+ (RxInternalUtilRxRingBuffer *)getSpscInstance;

- (id)getValueWithId:(id)o;

- (jboolean)isCompletedWithId:(id)o;

- (jboolean)isEmpty;

- (jboolean)isErrorWithId:(id)o;

- (jboolean)isUnsubscribed;

- (void)onCompleted;

- (void)onErrorWithNSException:(NSException *)t;
#ifdef J2OBJC_RENAME_ALIASES
#define onErrorWithJavaLangThrowable onErrorWithNSException
#endif // J2OBJC_RENAME_ALIASES

- (void)onNextWithId:(id)o;

- (id)peek;

- (id)poll;

- (void)release__;

- (void)unsubscribe;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(RxInternalUtilRxRingBuffer)

J2OBJC_VOLATILE_FIELD_SETTER(RxInternalUtilRxRingBuffer, terminalState_, id)

inline jint RxInternalUtilRxRingBuffer_get__size();
inline jint RxInternalUtilRxRingBuffer_set__size(jint value);
inline jint *RxInternalUtilRxRingBuffer_getRef__size();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint RxInternalUtilRxRingBuffer__size;
J2OBJC_STATIC_FIELD_PRIMITIVE(RxInternalUtilRxRingBuffer, _size, jint)

inline jint RxInternalUtilRxRingBuffer_get_SIZE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint RxInternalUtilRxRingBuffer_SIZE;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(RxInternalUtilRxRingBuffer, SIZE, jint)

FOUNDATION_EXPORT RxInternalUtilRxRingBuffer *RxInternalUtilRxRingBuffer_getSpscInstance();

FOUNDATION_EXPORT RxInternalUtilRxRingBuffer *RxInternalUtilRxRingBuffer_getSpmcInstance();

FOUNDATION_EXPORT void RxInternalUtilRxRingBuffer_init(RxInternalUtilRxRingBuffer *self);

FOUNDATION_EXPORT RxInternalUtilRxRingBuffer *new_RxInternalUtilRxRingBuffer_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilRxRingBuffer *create_RxInternalUtilRxRingBuffer_init();

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilRxRingBuffer)

#endif

#pragma pop_macro("RxInternalUtilRxRingBuffer_INCLUDE_ALL")
