//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/util/ScalarSynchronousObservable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalUtilScalarSynchronousObservable_INCLUDE_ALL")
#ifdef RxInternalUtilScalarSynchronousObservable_RESTRICT
#define RxInternalUtilScalarSynchronousObservable_INCLUDE_ALL 0
#else
#define RxInternalUtilScalarSynchronousObservable_INCLUDE_ALL 1
#endif
#undef RxInternalUtilScalarSynchronousObservable_RESTRICT

#if !defined (RxInternalUtilScalarSynchronousObservable_) && (RxInternalUtilScalarSynchronousObservable_INCLUDE_ALL || defined(RxInternalUtilScalarSynchronousObservable_INCLUDE))
#define RxInternalUtilScalarSynchronousObservable_

#define RxObservable_RESTRICT 1
#define RxObservable_INCLUDE 1
#include "rx/Observable.h"

@interface RxInternalUtilScalarSynchronousObservable : RxObservable

#pragma mark Public

+ (RxInternalUtilScalarSynchronousObservable *)createWithId:(id)t;

- (id)get;

#pragma mark Protected

- (instancetype)initWithId:(id)t;

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilScalarSynchronousObservable)

FOUNDATION_EXPORT RxInternalUtilScalarSynchronousObservable *RxInternalUtilScalarSynchronousObservable_createWithId_(id t);

FOUNDATION_EXPORT void RxInternalUtilScalarSynchronousObservable_initWithId_(RxInternalUtilScalarSynchronousObservable *self, id t);

FOUNDATION_EXPORT RxInternalUtilScalarSynchronousObservable *new_RxInternalUtilScalarSynchronousObservable_initWithId_(id t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilScalarSynchronousObservable *create_RxInternalUtilScalarSynchronousObservable_initWithId_(id t);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilScalarSynchronousObservable)

#endif

#pragma pop_macro("RxInternalUtilScalarSynchronousObservable_INCLUDE_ALL")
