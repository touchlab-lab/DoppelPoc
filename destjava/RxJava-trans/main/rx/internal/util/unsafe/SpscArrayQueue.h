//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/internal/util/unsafe/SpscArrayQueue.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL")
#ifdef RxInternalUtilUnsafeSpscArrayQueue_RESTRICT
#define RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL 0
#else
#define RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL 1
#endif
#undef RxInternalUtilUnsafeSpscArrayQueue_RESTRICT
#ifdef RxInternalUtilUnsafeSpscArrayQueue_INCLUDE
#define RxInternalUtilUnsafeSpscArrayQueueL3Pad_INCLUDE 1
#endif
#ifdef RxInternalUtilUnsafeSpscArrayQueueL3Pad_INCLUDE
#define RxInternalUtilUnsafeSpscArrayQueueConsumerField_INCLUDE 1
#endif
#ifdef RxInternalUtilUnsafeSpscArrayQueueConsumerField_INCLUDE
#define RxInternalUtilUnsafeSpscArrayQueueL2Pad_INCLUDE 1
#endif
#ifdef RxInternalUtilUnsafeSpscArrayQueueL2Pad_INCLUDE
#define RxInternalUtilUnsafeSpscArrayQueueProducerFields_INCLUDE 1
#endif
#ifdef RxInternalUtilUnsafeSpscArrayQueueProducerFields_INCLUDE
#define RxInternalUtilUnsafeSpscArrayQueueL1Pad_INCLUDE 1
#endif
#ifdef RxInternalUtilUnsafeSpscArrayQueueL1Pad_INCLUDE
#define RxInternalUtilUnsafeSpscArrayQueueColdField_INCLUDE 1
#endif

#if !defined (RxInternalUtilUnsafeSpscArrayQueueColdField_) && (RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeSpscArrayQueueColdField_INCLUDE))
#define RxInternalUtilUnsafeSpscArrayQueueColdField_

#define RxInternalUtilUnsafeConcurrentCircularArrayQueue_RESTRICT 1
#define RxInternalUtilUnsafeConcurrentCircularArrayQueue_INCLUDE 1
#include "rx/internal/util/unsafe/ConcurrentCircularArrayQueue.h"

@interface RxInternalUtilUnsafeSpscArrayQueueColdField : RxInternalUtilUnsafeConcurrentCircularArrayQueue {
 @public
  jint lookAheadStep_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeSpscArrayQueueColdField)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpscArrayQueueColdField_initWithInt_(RxInternalUtilUnsafeSpscArrayQueueColdField *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpscArrayQueueColdField)

#endif

#if !defined (RxInternalUtilUnsafeSpscArrayQueueL1Pad_) && (RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeSpscArrayQueueL1Pad_INCLUDE))
#define RxInternalUtilUnsafeSpscArrayQueueL1Pad_

@interface RxInternalUtilUnsafeSpscArrayQueueL1Pad : RxInternalUtilUnsafeSpscArrayQueueColdField {
 @public
  jlong p10_, p11_, p12_, p13_, p14_, p15_, p16_;
  jlong p30_SpscArrayQueueL1Pad_, p31_SpscArrayQueueL1Pad_, p32_SpscArrayQueueL1Pad_, p33_SpscArrayQueueL1Pad_, p34_SpscArrayQueueL1Pad_, p35_SpscArrayQueueL1Pad_, p36_SpscArrayQueueL1Pad_, p37_SpscArrayQueueL1Pad_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpscArrayQueueL1Pad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpscArrayQueueL1Pad_initWithInt_(RxInternalUtilUnsafeSpscArrayQueueL1Pad *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpscArrayQueueL1Pad)

#endif

#if !defined (RxInternalUtilUnsafeSpscArrayQueueProducerFields_) && (RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeSpscArrayQueueProducerFields_INCLUDE))
#define RxInternalUtilUnsafeSpscArrayQueueProducerFields_

@interface RxInternalUtilUnsafeSpscArrayQueueProducerFields : RxInternalUtilUnsafeSpscArrayQueueL1Pad {
 @public
  jlong producerIndex_;
  jlong producerLookAhead_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Protected

- (jlong)lvProducerIndex;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeSpscArrayQueueProducerFields)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpscArrayQueueProducerFields_initWithInt_(RxInternalUtilUnsafeSpscArrayQueueProducerFields *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpscArrayQueueProducerFields)

#endif

#if !defined (RxInternalUtilUnsafeSpscArrayQueueL2Pad_) && (RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeSpscArrayQueueL2Pad_INCLUDE))
#define RxInternalUtilUnsafeSpscArrayQueueL2Pad_

@interface RxInternalUtilUnsafeSpscArrayQueueL2Pad : RxInternalUtilUnsafeSpscArrayQueueProducerFields {
 @public
  jlong p20_, p21_, p22_, p23_, p24_, p25_, p26_;
  jlong p30_SpscArrayQueueL2Pad_, p31_SpscArrayQueueL2Pad_, p32_SpscArrayQueueL2Pad_, p33_SpscArrayQueueL2Pad_, p34_SpscArrayQueueL2Pad_, p35_SpscArrayQueueL2Pad_, p36_SpscArrayQueueL2Pad_, p37_SpscArrayQueueL2Pad_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpscArrayQueueL2Pad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpscArrayQueueL2Pad_initWithInt_(RxInternalUtilUnsafeSpscArrayQueueL2Pad *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpscArrayQueueL2Pad)

#endif

#if !defined (RxInternalUtilUnsafeSpscArrayQueueConsumerField_) && (RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeSpscArrayQueueConsumerField_INCLUDE))
#define RxInternalUtilUnsafeSpscArrayQueueConsumerField_

@interface RxInternalUtilUnsafeSpscArrayQueueConsumerField : RxInternalUtilUnsafeSpscArrayQueueL2Pad {
 @public
  jlong consumerIndex_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Protected

- (jlong)lvConsumerIndex;

#pragma mark Package-Private

@end

J2OBJC_STATIC_INIT(RxInternalUtilUnsafeSpscArrayQueueConsumerField)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpscArrayQueueConsumerField_initWithInt_(RxInternalUtilUnsafeSpscArrayQueueConsumerField *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpscArrayQueueConsumerField)

#endif

#if !defined (RxInternalUtilUnsafeSpscArrayQueueL3Pad_) && (RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeSpscArrayQueueL3Pad_INCLUDE))
#define RxInternalUtilUnsafeSpscArrayQueueL3Pad_

@interface RxInternalUtilUnsafeSpscArrayQueueL3Pad : RxInternalUtilUnsafeSpscArrayQueueConsumerField {
 @public
  jlong p40_, p41_, p42_, p43_, p44_, p45_, p46_;
  jlong p30_SpscArrayQueueL3Pad_, p31_SpscArrayQueueL3Pad_, p32_SpscArrayQueueL3Pad_, p33_SpscArrayQueueL3Pad_, p34_SpscArrayQueueL3Pad_, p35_SpscArrayQueueL3Pad_, p36_SpscArrayQueueL3Pad_, p37_SpscArrayQueueL3Pad_;
}

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpscArrayQueueL3Pad)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpscArrayQueueL3Pad_initWithInt_(RxInternalUtilUnsafeSpscArrayQueueL3Pad *self, jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpscArrayQueueL3Pad)

#endif

#if !defined (RxInternalUtilUnsafeSpscArrayQueue_) && (RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL || defined(RxInternalUtilUnsafeSpscArrayQueue_INCLUDE))
#define RxInternalUtilUnsafeSpscArrayQueue_

@interface RxInternalUtilUnsafeSpscArrayQueue : RxInternalUtilUnsafeSpscArrayQueueL3Pad

#pragma mark Public

- (instancetype)initWithInt:(jint)capacity;

- (jboolean)offerWithId:(id)e;

- (id)peek;

- (id)poll;

- (jint)size;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(RxInternalUtilUnsafeSpscArrayQueue)

FOUNDATION_EXPORT void RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(RxInternalUtilUnsafeSpscArrayQueue *self, jint capacity);

FOUNDATION_EXPORT RxInternalUtilUnsafeSpscArrayQueue *new_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxInternalUtilUnsafeSpscArrayQueue *create_RxInternalUtilUnsafeSpscArrayQueue_initWithInt_(jint capacity);

J2OBJC_TYPE_LITERAL_HEADER(RxInternalUtilUnsafeSpscArrayQueue)

#endif

#pragma pop_macro("RxInternalUtilUnsafeSpscArrayQueue_INCLUDE_ALL")
