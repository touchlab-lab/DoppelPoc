//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/exceptions/CompositeException.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "java/io/PrintStream.h"
#include "java/io/PrintWriter.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StackTraceElement.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashSet.h"
#include "java/util/List.h"
#include "java/util/Set.h"
#include "rx/exceptions/CompositeException.h"

@class RxExceptionsCompositeException_PrintStreamOrWriter;

@interface RxExceptionsCompositeException () {
 @public
  id<JavaUtilList> exceptions_;
  NSString *message_;
  NSException *cause_CompositeException_;
}

- (void)printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter:(RxExceptionsCompositeException_PrintStreamOrWriter *)s;

- (void)appendStackTraceWithJavaLangStringBuilder:(JavaLangStringBuilder *)bldr
                                  withNSException:(NSException *)ex
                                     withNSString:(NSString *)prefix;
#ifdef J2OBJC_RENAME_ALIASES
#define withJavaLangThrowable withNSException
#endif // J2OBJC_RENAME_ALIASES

- (id<JavaUtilList>)getListOfCausesWithNSException:(NSException *)ex;
#ifdef J2OBJC_RENAME_ALIASES
#define getListOfCausesWithJavaLangThrowable getListOfCausesWithNSException
#endif // J2OBJC_RENAME_ALIASES

@end

J2OBJC_FIELD_SETTER(RxExceptionsCompositeException, exceptions_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(RxExceptionsCompositeException, message_, NSString *)
J2OBJC_FIELD_SETTER(RxExceptionsCompositeException, cause_CompositeException_, NSException *)

inline jlong RxExceptionsCompositeException_get_serialVersionUID();
#define RxExceptionsCompositeException_serialVersionUID 3026362227162912146LL
J2OBJC_STATIC_FIELD_CONSTANT(RxExceptionsCompositeException, serialVersionUID, jlong)

__attribute__((unused)) static void RxExceptionsCompositeException_printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter_(RxExceptionsCompositeException *self, RxExceptionsCompositeException_PrintStreamOrWriter *s);

__attribute__((unused)) static void RxExceptionsCompositeException_appendStackTraceWithJavaLangStringBuilder_withNSException_withNSString_(RxExceptionsCompositeException *self, JavaLangStringBuilder *bldr, NSException *ex, NSString *prefix);

__attribute__((unused)) static id<JavaUtilList> RxExceptionsCompositeException_getListOfCausesWithNSException_(RxExceptionsCompositeException *self, NSException *ex);

@interface RxExceptionsCompositeException_PrintStreamOrWriter : NSObject

- (id)lock;

- (void)printlnWithId:(id)o;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException_PrintStreamOrWriter)

__attribute__((unused)) static void RxExceptionsCompositeException_PrintStreamOrWriter_init(RxExceptionsCompositeException_PrintStreamOrWriter *self);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException_PrintStreamOrWriter)

@interface RxExceptionsCompositeException_WrappedPrintStream : RxExceptionsCompositeException_PrintStreamOrWriter {
 @public
  JavaIoPrintStream *printStream_;
}

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)printStream;

- (id)lock;

- (void)printlnWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException_WrappedPrintStream)

J2OBJC_FIELD_SETTER(RxExceptionsCompositeException_WrappedPrintStream, printStream_, JavaIoPrintStream *)

__attribute__((unused)) static void RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(RxExceptionsCompositeException_WrappedPrintStream *self, JavaIoPrintStream *printStream);

__attribute__((unused)) static RxExceptionsCompositeException_WrappedPrintStream *new_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(JavaIoPrintStream *printStream) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxExceptionsCompositeException_WrappedPrintStream *create_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(JavaIoPrintStream *printStream);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException_WrappedPrintStream)

@interface RxExceptionsCompositeException_WrappedPrintWriter : RxExceptionsCompositeException_PrintStreamOrWriter {
 @public
  JavaIoPrintWriter *printWriter_;
}

- (instancetype)initWithJavaIoPrintWriter:(JavaIoPrintWriter *)printWriter;

- (id)lock;

- (void)printlnWithId:(id)o;

@end

J2OBJC_EMPTY_STATIC_INIT(RxExceptionsCompositeException_WrappedPrintWriter)

J2OBJC_FIELD_SETTER(RxExceptionsCompositeException_WrappedPrintWriter, printWriter_, JavaIoPrintWriter *)

__attribute__((unused)) static void RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(RxExceptionsCompositeException_WrappedPrintWriter *self, JavaIoPrintWriter *printWriter);

__attribute__((unused)) static RxExceptionsCompositeException_WrappedPrintWriter *new_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(JavaIoPrintWriter *printWriter) NS_RETURNS_RETAINED;

__attribute__((unused)) static RxExceptionsCompositeException_WrappedPrintWriter *create_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(JavaIoPrintWriter *printWriter);

J2OBJC_TYPE_LITERAL_HEADER(RxExceptionsCompositeException_WrappedPrintWriter)

inline jlong RxExceptionsCompositeException_CompositeExceptionCausalChain_get_serialVersionUID();
#define RxExceptionsCompositeException_CompositeExceptionCausalChain_serialVersionUID 3875212506787802066LL
J2OBJC_STATIC_FIELD_CONSTANT(RxExceptionsCompositeException_CompositeExceptionCausalChain, serialVersionUID, jlong)

@implementation RxExceptionsCompositeException

- (instancetype)initWithNSString:(NSString *)messagePrefix
          withJavaUtilCollection:(id<JavaUtilCollection>)errors {
  RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(self, messagePrefix, errors);
  return self;
}

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)errors {
  RxExceptionsCompositeException_initWithJavaUtilCollection_(self, errors);
  return self;
}

- (id<JavaUtilList>)getExceptions {
  return exceptions_;
}

- (NSString *)getMessage {
  return message_;
}

- (NSException *)getCause {
  @synchronized(self) {
    if (cause_CompositeException_ == nil) {
      RxExceptionsCompositeException_CompositeExceptionCausalChain *_cause = new_RxExceptionsCompositeException_CompositeExceptionCausalChain_init();
      id<JavaUtilSet> seenCauses = new_JavaUtilHashSet_init();
      NSException *chain = _cause;
      for (NSException * __strong e in nil_chk(exceptions_)) {
        if ([seenCauses containsWithId:e]) {
          continue;
        }
        [seenCauses addWithId:e];
        id<JavaUtilList> listOfCauses = RxExceptionsCompositeException_getListOfCausesWithNSException_(self, e);
        for (NSException * __strong child in nil_chk(listOfCauses)) {
          if ([seenCauses containsWithId:child]) {
            e = new_JavaLangRuntimeException_initWithNSString_(@"Duplicate found in causal chain so cropping to prevent loop ...");
            continue;
          }
          [seenCauses addWithId:child];
        }
        @try {
          (void) [chain initCauseWithNSException:e];
        }
        @catch (NSException *t) {
        }
        chain = [chain getCause];
      }
      cause_CompositeException_ = _cause;
    }
    return cause_CompositeException_;
  }
}

- (void)printStackTrace {
  [self printStackTraceWithJavaIoPrintStream:JreLoadStatic(JavaLangSystem, err)];
}

- (void)printStackTraceWithJavaIoPrintStream:(JavaIoPrintStream *)s {
  RxExceptionsCompositeException_printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter_(self, new_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(s));
}

- (void)printStackTraceWithJavaIoPrintWriter:(JavaIoPrintWriter *)s {
  RxExceptionsCompositeException_printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter_(self, new_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(s));
}

- (void)printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter:(RxExceptionsCompositeException_PrintStreamOrWriter *)s {
  RxExceptionsCompositeException_printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter_(self, s);
}

- (void)appendStackTraceWithJavaLangStringBuilder:(JavaLangStringBuilder *)bldr
                                  withNSException:(NSException *)ex
                                     withNSString:(NSString *)prefix {
  RxExceptionsCompositeException_appendStackTraceWithJavaLangStringBuilder_withNSException_withNSString_(self, bldr, ex, prefix);
}

- (id<JavaUtilList>)getListOfCausesWithNSException:(NSException *)ex {
  return RxExceptionsCompositeException_getListOfCausesWithNSException_(self, ex);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withJavaUtilCollection:", "CompositeException", NULL, 0x1, NULL, "(Ljava/lang/String;Ljava/util/Collection<+Ljava/lang/Throwable;>;)V" },
    { "initWithJavaUtilCollection:", "CompositeException", NULL, 0x1, NULL, "(Ljava/util/Collection<+Ljava/lang/Throwable;>;)V" },
    { "getExceptions", NULL, "Ljava.util.List;", 0x1, NULL, "()Ljava/util/List<Ljava/lang/Throwable;>;" },
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getCause", NULL, "Ljava.lang.Throwable;", 0x21, NULL, NULL },
    { "printStackTrace", NULL, "V", 0x1, NULL, NULL },
    { "printStackTraceWithJavaIoPrintStream:", "printStackTrace", "V", 0x1, NULL, NULL },
    { "printStackTraceWithJavaIoPrintWriter:", "printStackTrace", "V", 0x1, NULL, NULL },
    { "printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter:", "printStackTrace", "V", 0x2, NULL, NULL },
    { "appendStackTraceWithJavaLangStringBuilder:withNSException:withNSString:", "appendStackTrace", "V", 0x2, NULL, NULL },
    { "getListOfCausesWithNSException:", "getListOfCauses", "Ljava.util.List;", 0x12, NULL, "(Ljava/lang/Throwable;)Ljava/util/List<Ljava/lang/Throwable;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = RxExceptionsCompositeException_serialVersionUID },
    { "exceptions_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Ljava/lang/Throwable;>;", .constantValue.asLong = 0 },
    { "message_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "cause_CompositeException_", "cause", 0x2, "Ljava.lang.Throwable;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lrx.exceptions.CompositeException$PrintStreamOrWriter;", "Lrx.exceptions.CompositeException$WrappedPrintStream;", "Lrx.exceptions.CompositeException$WrappedPrintWriter;", "Lrx.exceptions.CompositeException$CompositeExceptionCausalChain;"};
  static const J2ObjcClassInfo _RxExceptionsCompositeException = { 2, "CompositeException", "rx.exceptions", NULL, 0x11, 11, methods, 4, fields, 0, NULL, 4, inner_classes, NULL, NULL };
  return &_RxExceptionsCompositeException;
}

@end

void RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(RxExceptionsCompositeException *self, NSString *messagePrefix, id<JavaUtilCollection> errors) {
  JavaLangRuntimeException_init(self);
  self->cause_CompositeException_ = nil;
  id<JavaUtilSet> deDupedExceptions = new_JavaUtilLinkedHashSet_init();
  id<JavaUtilList> _exceptions = new_JavaUtilArrayList_init();
  for (NSException * __strong ex in nil_chk(errors)) {
    if ([ex isKindOfClass:[RxExceptionsCompositeException class]]) {
      [deDupedExceptions addAllWithJavaUtilCollection:[((RxExceptionsCompositeException *) nil_chk(((RxExceptionsCompositeException *) cast_chk(ex, [RxExceptionsCompositeException class])))) getExceptions]];
    }
    else {
      [deDupedExceptions addWithId:ex];
    }
  }
  [_exceptions addAllWithJavaUtilCollection:deDupedExceptions];
  self->exceptions_ = JavaUtilCollections_unmodifiableListWithJavaUtilList_(_exceptions);
  self->message_ = JreStrcat("I$", [((id<JavaUtilList>) nil_chk(self->exceptions_)) size], @" exceptions occurred. ");
}

RxExceptionsCompositeException *new_RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(NSString *messagePrefix, id<JavaUtilCollection> errors) {
  RxExceptionsCompositeException *self = [RxExceptionsCompositeException alloc];
  RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(self, messagePrefix, errors);
  return self;
}

RxExceptionsCompositeException *create_RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(NSString *messagePrefix, id<JavaUtilCollection> errors) {
  return new_RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(messagePrefix, errors);
}

void RxExceptionsCompositeException_initWithJavaUtilCollection_(RxExceptionsCompositeException *self, id<JavaUtilCollection> errors) {
  RxExceptionsCompositeException_initWithNSString_withJavaUtilCollection_(self, nil, errors);
}

RxExceptionsCompositeException *new_RxExceptionsCompositeException_initWithJavaUtilCollection_(id<JavaUtilCollection> errors) {
  RxExceptionsCompositeException *self = [RxExceptionsCompositeException alloc];
  RxExceptionsCompositeException_initWithJavaUtilCollection_(self, errors);
  return self;
}

RxExceptionsCompositeException *create_RxExceptionsCompositeException_initWithJavaUtilCollection_(id<JavaUtilCollection> errors) {
  return new_RxExceptionsCompositeException_initWithJavaUtilCollection_(errors);
}

void RxExceptionsCompositeException_printStackTraceWithRxExceptionsCompositeException_PrintStreamOrWriter_(RxExceptionsCompositeException *self, RxExceptionsCompositeException_PrintStreamOrWriter *s) {
  JavaLangStringBuilder *bldr = new_JavaLangStringBuilder_init();
  (void) [((JavaLangStringBuilder *) nil_chk([bldr appendWithId:self])) appendWithNSString:@"\n"];
  {
    IOSObjectArray *a__ = [self getStackTrace];
    JavaLangStackTraceElement * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangStackTraceElement * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangStackTraceElement *myStackElement = *b__++;
      (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([bldr appendWithNSString:@"\tat "])) appendWithId:myStackElement])) appendWithNSString:@"\n"];
    }
  }
  jint i = 1;
  for (NSException * __strong ex in nil_chk(self->exceptions_)) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([bldr appendWithNSString:@"  ComposedException "])) appendWithInt:i])) appendWithNSString:@" :"])) appendWithNSString:@"\n"];
    RxExceptionsCompositeException_appendStackTraceWithJavaLangStringBuilder_withNSException_withNSString_(self, bldr, ex, @"\t");
    i++;
  }
  @synchronized([((RxExceptionsCompositeException_PrintStreamOrWriter *) nil_chk(s)) lock]) {
    [s printlnWithId:[bldr description]];
  }
}

void RxExceptionsCompositeException_appendStackTraceWithJavaLangStringBuilder_withNSException_withNSString_(RxExceptionsCompositeException *self, JavaLangStringBuilder *bldr, NSException *ex, NSString *prefix) {
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(bldr)) appendWithNSString:prefix])) appendWithId:ex])) appendWithNSString:@"\n"];
  {
    IOSObjectArray *a__ = [((NSException *) nil_chk(ex)) getStackTrace];
    JavaLangStackTraceElement * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangStackTraceElement * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangStackTraceElement *stackElement = *b__++;
      (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([bldr appendWithNSString:@"\t\tat "])) appendWithId:stackElement])) appendWithNSString:@"\n"];
    }
  }
  if ([ex getCause] != nil) {
    (void) [bldr appendWithNSString:@"\tCaused by: "];
    RxExceptionsCompositeException_appendStackTraceWithJavaLangStringBuilder_withNSException_withNSString_(self, bldr, [ex getCause], @"");
  }
}

id<JavaUtilList> RxExceptionsCompositeException_getListOfCausesWithNSException_(RxExceptionsCompositeException *self, NSException *ex) {
  id<JavaUtilList> list = new_JavaUtilArrayList_init();
  NSException *root = [((NSException *) nil_chk(ex)) getCause];
  if (root == nil) {
    return list;
  }
  else {
    while (true) {
      [list addWithId:root];
      if ([root getCause] == nil) {
        return list;
      }
      else {
        root = [root getCause];
      }
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxExceptionsCompositeException)

@implementation RxExceptionsCompositeException_PrintStreamOrWriter

- (id)lock {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)printlnWithId:(id)o {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxExceptionsCompositeException_PrintStreamOrWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "lock", NULL, "Ljava.lang.Object;", 0x400, NULL, NULL },
    { "printlnWithId:", "println", "V", 0x400, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _RxExceptionsCompositeException_PrintStreamOrWriter = { 2, "PrintStreamOrWriter", "rx.exceptions", "CompositeException", 0x40a, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxExceptionsCompositeException_PrintStreamOrWriter;
}

@end

void RxExceptionsCompositeException_PrintStreamOrWriter_init(RxExceptionsCompositeException_PrintStreamOrWriter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxExceptionsCompositeException_PrintStreamOrWriter)

@implementation RxExceptionsCompositeException_WrappedPrintStream

- (instancetype)initWithJavaIoPrintStream:(JavaIoPrintStream *)printStream {
  RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(self, printStream);
  return self;
}

- (id)lock {
  return printStream_;
}

- (void)printlnWithId:(id)o {
  [((JavaIoPrintStream *) nil_chk(printStream_)) printlnWithId:o];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoPrintStream:", "WrappedPrintStream", NULL, 0x0, NULL, NULL },
    { "lock", NULL, "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "printlnWithId:", "println", "V", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "printStream_", NULL, 0x12, "Ljava.io.PrintStream;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxExceptionsCompositeException_WrappedPrintStream = { 2, "WrappedPrintStream", "rx.exceptions", "CompositeException", 0xa, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxExceptionsCompositeException_WrappedPrintStream;
}

@end

void RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(RxExceptionsCompositeException_WrappedPrintStream *self, JavaIoPrintStream *printStream) {
  RxExceptionsCompositeException_PrintStreamOrWriter_init(self);
  self->printStream_ = printStream;
}

RxExceptionsCompositeException_WrappedPrintStream *new_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(JavaIoPrintStream *printStream) {
  RxExceptionsCompositeException_WrappedPrintStream *self = [RxExceptionsCompositeException_WrappedPrintStream alloc];
  RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(self, printStream);
  return self;
}

RxExceptionsCompositeException_WrappedPrintStream *create_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(JavaIoPrintStream *printStream) {
  return new_RxExceptionsCompositeException_WrappedPrintStream_initWithJavaIoPrintStream_(printStream);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxExceptionsCompositeException_WrappedPrintStream)

@implementation RxExceptionsCompositeException_WrappedPrintWriter

- (instancetype)initWithJavaIoPrintWriter:(JavaIoPrintWriter *)printWriter {
  RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(self, printWriter);
  return self;
}

- (id)lock {
  return printWriter_;
}

- (void)printlnWithId:(id)o {
  [((JavaIoPrintWriter *) nil_chk(printWriter_)) printlnWithId:o];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaIoPrintWriter:", "WrappedPrintWriter", NULL, 0x0, NULL, NULL },
    { "lock", NULL, "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "printlnWithId:", "println", "V", 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "printWriter_", NULL, 0x12, "Ljava.io.PrintWriter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxExceptionsCompositeException_WrappedPrintWriter = { 2, "WrappedPrintWriter", "rx.exceptions", "CompositeException", 0xa, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxExceptionsCompositeException_WrappedPrintWriter;
}

@end

void RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(RxExceptionsCompositeException_WrappedPrintWriter *self, JavaIoPrintWriter *printWriter) {
  RxExceptionsCompositeException_PrintStreamOrWriter_init(self);
  self->printWriter_ = printWriter;
}

RxExceptionsCompositeException_WrappedPrintWriter *new_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(JavaIoPrintWriter *printWriter) {
  RxExceptionsCompositeException_WrappedPrintWriter *self = [RxExceptionsCompositeException_WrappedPrintWriter alloc];
  RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(self, printWriter);
  return self;
}

RxExceptionsCompositeException_WrappedPrintWriter *create_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(JavaIoPrintWriter *printWriter) {
  return new_RxExceptionsCompositeException_WrappedPrintWriter_initWithJavaIoPrintWriter_(printWriter);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxExceptionsCompositeException_WrappedPrintWriter)

NSString *RxExceptionsCompositeException_CompositeExceptionCausalChain_MESSAGE = @"Chain of Causes for CompositeException In Order Received =>";

@implementation RxExceptionsCompositeException_CompositeExceptionCausalChain

- (NSString *)getMessage {
  return RxExceptionsCompositeException_CompositeExceptionCausalChain_MESSAGE;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxExceptionsCompositeException_CompositeExceptionCausalChain_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getMessage", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = RxExceptionsCompositeException_CompositeExceptionCausalChain_serialVersionUID },
    { "MESSAGE", "MESSAGE", 0x8, "Ljava.lang.String;", &RxExceptionsCompositeException_CompositeExceptionCausalChain_MESSAGE, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RxExceptionsCompositeException_CompositeExceptionCausalChain = { 2, "CompositeExceptionCausalChain", "rx.exceptions", "CompositeException", 0x18, 2, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxExceptionsCompositeException_CompositeExceptionCausalChain;
}

@end

void RxExceptionsCompositeException_CompositeExceptionCausalChain_init(RxExceptionsCompositeException_CompositeExceptionCausalChain *self) {
  JavaLangRuntimeException_init(self);
}

RxExceptionsCompositeException_CompositeExceptionCausalChain *new_RxExceptionsCompositeException_CompositeExceptionCausalChain_init() {
  RxExceptionsCompositeException_CompositeExceptionCausalChain *self = [RxExceptionsCompositeException_CompositeExceptionCausalChain alloc];
  RxExceptionsCompositeException_CompositeExceptionCausalChain_init(self);
  return self;
}

RxExceptionsCompositeException_CompositeExceptionCausalChain *create_RxExceptionsCompositeException_CompositeExceptionCausalChain_init() {
  return new_RxExceptionsCompositeException_CompositeExceptionCausalChain_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxExceptionsCompositeException_CompositeExceptionCausalChain)
