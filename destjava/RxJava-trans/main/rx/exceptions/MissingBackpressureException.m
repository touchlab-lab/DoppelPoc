//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/exceptions/MissingBackpressureException.java
//

#include "J2ObjC_source.h"
#include "java/lang/Exception.h"
#include "rx/exceptions/MissingBackpressureException.h"

inline jlong RxExceptionsMissingBackpressureException_get_serialVersionUID();
#define RxExceptionsMissingBackpressureException_serialVersionUID 7250870679677032194LL
J2OBJC_STATIC_FIELD_CONSTANT(RxExceptionsMissingBackpressureException, serialVersionUID, jlong)

@implementation RxExceptionsMissingBackpressureException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RxExceptionsMissingBackpressureException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)message {
  RxExceptionsMissingBackpressureException_initWithNSString_(self, message);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MissingBackpressureException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "MissingBackpressureException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = RxExceptionsMissingBackpressureException_serialVersionUID },
  };
  static const J2ObjcClassInfo _RxExceptionsMissingBackpressureException = { 2, "MissingBackpressureException", "rx.exceptions", NULL, 0x1, 2, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RxExceptionsMissingBackpressureException;
}

@end

void RxExceptionsMissingBackpressureException_init(RxExceptionsMissingBackpressureException *self) {
  JavaLangException_init(self);
}

RxExceptionsMissingBackpressureException *new_RxExceptionsMissingBackpressureException_init() {
  RxExceptionsMissingBackpressureException *self = [RxExceptionsMissingBackpressureException alloc];
  RxExceptionsMissingBackpressureException_init(self);
  return self;
}

RxExceptionsMissingBackpressureException *create_RxExceptionsMissingBackpressureException_init() {
  return new_RxExceptionsMissingBackpressureException_init();
}

void RxExceptionsMissingBackpressureException_initWithNSString_(RxExceptionsMissingBackpressureException *self, NSString *message) {
  JavaLangException_initWithNSString_(self, message);
}

RxExceptionsMissingBackpressureException *new_RxExceptionsMissingBackpressureException_initWithNSString_(NSString *message) {
  RxExceptionsMissingBackpressureException *self = [RxExceptionsMissingBackpressureException alloc];
  RxExceptionsMissingBackpressureException_initWithNSString_(self, message);
  return self;
}

RxExceptionsMissingBackpressureException *create_RxExceptionsMissingBackpressureException_initWithNSString_(NSString *message) {
  return new_RxExceptionsMissingBackpressureException_initWithNSString_(message);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RxExceptionsMissingBackpressureException)
