//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/subjects/Subject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxSubjectsSubject_INCLUDE_ALL")
#ifdef RxSubjectsSubject_RESTRICT
#define RxSubjectsSubject_INCLUDE_ALL 0
#else
#define RxSubjectsSubject_INCLUDE_ALL 1
#endif
#undef RxSubjectsSubject_RESTRICT

#if !defined (RxSubjectsSubject_) && (RxSubjectsSubject_INCLUDE_ALL || defined(RxSubjectsSubject_INCLUDE))
#define RxSubjectsSubject_

#define RxObservable_RESTRICT 1
#define RxObservable_INCLUDE 1
#include "rx/Observable.h"

#define RxObserver_RESTRICT 1
#define RxObserver_INCLUDE 1
#include "rx/Observer.h"

@class RxSubjectsSerializedSubject;
@protocol RxObservable_OnSubscribe;

@interface RxSubjectsSubject : RxObservable < RxObserver >

#pragma mark Public

- (jboolean)hasObservers;

- (RxSubjectsSerializedSubject *)toSerialized;

#pragma mark Protected

- (instancetype)initWithRxObservable_OnSubscribe:(id<RxObservable_OnSubscribe>)onSubscribe;

@end

J2OBJC_EMPTY_STATIC_INIT(RxSubjectsSubject)

FOUNDATION_EXPORT void RxSubjectsSubject_initWithRxObservable_OnSubscribe_(RxSubjectsSubject *self, id<RxObservable_OnSubscribe> onSubscribe);

J2OBJC_TYPE_LITERAL_HEADER(RxSubjectsSubject)

#endif

#pragma pop_macro("RxSubjectsSubject_INCLUDE_ALL")
