//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/RxJava/src/main/java/rx/schedulers/CachedThreadScheduler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RxSchedulersCachedThreadScheduler_INCLUDE_ALL")
#ifdef RxSchedulersCachedThreadScheduler_RESTRICT
#define RxSchedulersCachedThreadScheduler_INCLUDE_ALL 0
#else
#define RxSchedulersCachedThreadScheduler_INCLUDE_ALL 1
#endif
#undef RxSchedulersCachedThreadScheduler_RESTRICT

#if !defined (RxSchedulersCachedThreadScheduler_) && (RxSchedulersCachedThreadScheduler_INCLUDE_ALL || defined(RxSchedulersCachedThreadScheduler_INCLUDE))
#define RxSchedulersCachedThreadScheduler_

#define RxScheduler_RESTRICT 1
#define RxScheduler_INCLUDE 1
#include "rx/Scheduler.h"

@class RxScheduler_Worker;

@interface RxSchedulersCachedThreadScheduler : RxScheduler

#pragma mark Public

- (RxScheduler_Worker *)createWorker;

#pragma mark Package-Private

- (instancetype)init;

@end

J2OBJC_STATIC_INIT(RxSchedulersCachedThreadScheduler)

FOUNDATION_EXPORT void RxSchedulersCachedThreadScheduler_init(RxSchedulersCachedThreadScheduler *self);

FOUNDATION_EXPORT RxSchedulersCachedThreadScheduler *new_RxSchedulersCachedThreadScheduler_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT RxSchedulersCachedThreadScheduler *create_RxSchedulersCachedThreadScheduler_init();

J2OBJC_TYPE_LITERAL_HEADER(RxSchedulersCachedThreadScheduler)

#endif

#pragma pop_macro("RxSchedulersCachedThreadScheduler_INCLUDE_ALL")
