//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/dao/ModelDao.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "android/content/ContentValues.h"
#include "android/database/Cursor.h"
#include "android/database/sqlite/SQLiteException.h"
#include "android/text/TextUtils.h"
#include "co/touchlab/squeaky/Config.h"
#include "co/touchlab/squeaky/dao/CloseableIterator.h"
#include "co/touchlab/squeaky/dao/Dao.h"
#include "co/touchlab/squeaky/dao/DaoHelper.h"
#include "co/touchlab/squeaky/dao/ModelDao.h"
#include "co/touchlab/squeaky/dao/Query.h"
#include "co/touchlab/squeaky/dao/SelectIterator.h"
#include "co/touchlab/squeaky/dao/SqueakyContext.h"
#include "co/touchlab/squeaky/db/SQLiteDatabase.h"
#include "co/touchlab/squeaky/db/SQLiteStatement.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/ForeignCollectionInfo.h"
#include "co/touchlab/squeaky/sql/SqlHelper.h"
#include "co/touchlab/squeaky/table/GeneratedTableMapper.h"
#include "co/touchlab/squeaky/table/TableInfo.h"
#include "co/touchlab/squeaky/table/TableUtils.h"
#include "co/touchlab/squeaky/table/TransientCache.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/ThreadLocal.h"
#include "java/sql/SQLException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/ConcurrentHashMap.h"

@interface CoTouchlabSqueakyDaoModelDao () {
 @public
  IOSClass *entityClass_;
  id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper_;
  id<JavaUtilSet> daoObserverSet_;
  IOSObjectArray *tableCols_;
  CoTouchlabSqueakyDaoSqueakyContext *squeakyContext_;
  CoTouchlabSqueakyFieldFieldType *idFieldType_;
  id<JavaUtilList> statementList_;
  JavaLangThreadLocal *createStatement_;
  JavaLangThreadLocal *updateStatement_;
}

- (IOSObjectArray *)buildSelect;

- (NSString *)createDefaultFrom;

- (id<JavaUtilList>)makeCursorResultsWithNSString:(NSString *)from
                                     withNSString:(NSString *)where
                                withNSStringArray:(IOSObjectArray *)args
                                     withNSString:(NSString *)orderBy
                              withJavaLangInteger:(JavaLangInteger *)limit
                              withJavaLangInteger:(JavaLangInteger *)offset
  withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap;

- (id<AndroidDatabaseCursor>)makeCursorWithNSString:(NSString *)from
                                       withNSString:(NSString *)where
                                  withNSStringArray:(IOSObjectArray *)args
                                       withNSString:(NSString *)orderBy
                                withJavaLangInteger:(JavaLangInteger *)limit
                                withJavaLangInteger:(JavaLangInteger *)offset;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeCreateStatement;

- (void)fillContentValWithAndroidContentContentValues:(AndroidContentContentValues *)values
                  withCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)val;

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeUpdateStatement;

- (IOSObjectArray *)generateDefaultForeignRefreshMap;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, entityClass_, IOSClass *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, generatedTableMapper_, id<CoTouchlabSqueakyTableGeneratedTableMapper>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, daoObserverSet_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, tableCols_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, squeakyContext_, CoTouchlabSqueakyDaoSqueakyContext *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, idFieldType_, CoTouchlabSqueakyFieldFieldType *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, statementList_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, createStatement_, JavaLangThreadLocal *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao, updateStatement_, JavaLangThreadLocal *)

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoModelDao_buildSelect(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static NSString *CoTouchlabSqueakyDaoModelDao_createDefaultFrom(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static id<JavaUtilList> CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset, IOSObjectArray *foreignRefreshMap);

__attribute__((unused)) static id<AndroidDatabaseCursor> CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset);

__attribute__((unused)) static id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeCreateStatement(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(CoTouchlabSqueakyDaoModelDao *self, AndroidContentContentValues *values, CoTouchlabSqueakyFieldFieldType *fieldType, id val);

__attribute__((unused)) static id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(CoTouchlabSqueakyDaoModelDao *self);

__attribute__((unused)) static IOSObjectArray *CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(CoTouchlabSqueakyDaoModelDao *self);

@interface CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl () {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
  NSString *from_;
  NSString *where_;
  IOSObjectArray *args_;
  NSString *orderBy_;
  JavaLangInteger *limit_;
  JavaLangInteger *offset_;
  IOSObjectArray *foreignRefreshMap_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, this$0_, CoTouchlabSqueakyDaoModelDao *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, from_, NSString *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, where_, NSString *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, args_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, orderBy_, NSString *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, limit_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, offset_, JavaLangInteger *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl, foreignRefreshMap_, IOSObjectArray *)

@interface CoTouchlabSqueakyDaoModelDao_$1 : JavaLangThreadLocal {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_$1)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_$1, this$0_, CoTouchlabSqueakyDaoModelDao *)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_$1 *self, CoTouchlabSqueakyDaoModelDao *outer$);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$1 *new_CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$1 *create_CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyDaoModelDao_$1)

@interface CoTouchlabSqueakyDaoModelDao_$2 : JavaLangThreadLocal {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_$2)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_$2, this$0_, CoTouchlabSqueakyDaoModelDao *)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_$2 *self, CoTouchlabSqueakyDaoModelDao *outer$);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$2 *new_CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$2 *create_CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyDaoModelDao_$2)

@interface CoTouchlabSqueakyDaoModelDao_$3 : NSObject < CoTouchlabSqueakyDaoQuery > {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
  JavaLangStringBuilder *val$sb_;
}

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed;

- (IOSObjectArray *)getParameters;

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed;

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$
                           withJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_$3)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_$3, this$0_, CoTouchlabSqueakyDaoModelDao *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_$3, val$sb_, JavaLangStringBuilder *)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao_$3 *self, CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$3 *new_CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$3 *create_CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyDaoModelDao_$3)

@interface CoTouchlabSqueakyDaoModelDao_$4 : NSObject < CoTouchlabSqueakyDaoQuery > {
 @public
  CoTouchlabSqueakyDaoModelDao *this$0_;
}

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed;

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed;

- (IOSObjectArray *)getParameters;

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyDaoModelDao_$4)

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoModelDao_$4, this$0_, CoTouchlabSqueakyDaoModelDao *)

__attribute__((unused)) static void CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_$4 *self, CoTouchlabSqueakyDaoModelDao *outer$);

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$4 *new_CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyDaoModelDao_$4 *create_CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyDaoModelDao_$4)

NSString *CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX = @"t";
NSString *CoTouchlabSqueakyDaoModelDao_EQ_OPERATION = @"= ?";

@implementation CoTouchlabSqueakyDaoModelDao

- (instancetype)initWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)openHelper
                                              withIOSClass:(IOSClass *)entityClass
            withCoTouchlabSqueakyTableGeneratedTableMapper:(id<CoTouchlabSqueakyTableGeneratedTableMapper>)generatedTableMapper {
  CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(self, openHelper, entityClass, generatedTableMapper);
  return self;
}

- (void)cleanUp {
  for (id<CoTouchlabSqueakyDbSQLiteStatement> __strong sqLiteStatement in nil_chk(statementList_)) {
    [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(sqLiteStatement)) close];
  }
}

- (IOSObjectArray *)buildSelect {
  return CoTouchlabSqueakyDaoModelDao_buildSelect(self);
}

- (id)queryForIdWithId:(id)id_ {
  id<JavaUtilList> tList = [((id<CoTouchlabSqueakyDaoDao_QueryModifiers>) nil_chk([self queryForEqWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName] withId:id_])) list];
  return [((id<JavaUtilList>) nil_chk(tList)) size] == 0 ? nil : [tList getWithInt:0];
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryForAll {
  return new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), nil, nil);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryForEqWithNSString:(NSString *)fieldName
                                                              withId:(id)value {
  id<JavaUtilList> params = new_JavaUtilArrayList_init();
  IOSClass *dataClass = ((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig]))->dataClass_;
  CoTouchlabSqueakyFieldFieldType *fieldType = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) findFieldTypeWithIOSClass:dataClass withNSString:fieldName];
  CoTouchlabSqueakySqlSqlHelper_appendArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withJavaUtilList_withId_(squeakyContext_, fieldType, params, value);
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  CoTouchlabSqueakySqlSqlHelper_appendWhereClauseBodyWithJavaLangStringBuilder_withNSString_withNSString_withCoTouchlabSqueakyFieldFieldType_(sb, CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, CoTouchlabSqueakyDaoModelDao_EQ_OPERATION, fieldType);
  return new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), [sb description], [params toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[params size] type:NSString_class_()]]);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryForFieldValuesWithJavaUtilMap:(id<JavaUtilMap>)fieldValues {
  JavaLangStringBuilder *query = new_JavaLangStringBuilder_init();
  id<JavaUtilList> params = new_JavaUtilArrayList_init();
  for (NSString * __strong field in nil_chk([((id<JavaUtilMap>) nil_chk(fieldValues)) keySet])) {
    if ([query length] > 0) (void) [query appendWithNSString:@" and "];
    IOSClass *dataClass = ((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig]))->dataClass_;
    CoTouchlabSqueakyFieldFieldType *fieldType = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) findFieldTypeWithIOSClass:dataClass withNSString:field];
    CoTouchlabSqueakySqlSqlHelper_appendWhereClauseBodyWithJavaLangStringBuilder_withNSString_withNSString_withCoTouchlabSqueakyFieldFieldType_(query, CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, CoTouchlabSqueakyDaoModelDao_EQ_OPERATION, fieldType);
    CoTouchlabSqueakySqlSqlHelper_appendArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withJavaUtilList_withId_(squeakyContext_, fieldType, params, [fieldValues getWithId:field]);
  }
  return new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), [query description], [params toArrayWithNSObjectArray:[IOSObjectArray newArrayWithLength:[params size] type:NSString_class_()]]);
}

- (NSString *)createDefaultFrom {
  return CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self);
}

- (id<JavaUtilList>)makeCursorResultsWithNSString:(NSString *)from
                                     withNSString:(NSString *)where
                                withNSStringArray:(IOSObjectArray *)args
                                     withNSString:(NSString *)orderBy
                              withJavaLangInteger:(JavaLangInteger *)limit
                              withJavaLangInteger:(JavaLangInteger *)offset
  withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  return CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, from, where, args, orderBy, limit, offset, foreignRefreshMap);
}

- (id<AndroidDatabaseCursor>)makeCursorWithNSString:(NSString *)from
                                       withNSString:(NSString *)where
                                  withNSStringArray:(IOSObjectArray *)args
                                       withNSString:(NSString *)orderBy
                                withJavaLangInteger:(JavaLangInteger *)limit
                                withJavaLangInteger:(JavaLangInteger *)offset {
  return CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, from, where, args, orderBy, limit, offset);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryWithNSString:(NSString *)where
                                              withNSStringArray:(IOSObjectArray *)args {
  return new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), where, args);
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)queryWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  return new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, [((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getFromStatementWithBoolean:true], [where getWhereStatementWithBoolean:true], [where getParameters]);
}

- (void)createWithId:(id)data {
  id<CoTouchlabSqueakyDbSQLiteStatement> sqLiteStatement = [((JavaLangThreadLocal *) nil_chk(createStatement_)) get];
  [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) bindCreateValsWithCoTouchlabSqueakyDbSQLiteStatement:sqLiteStatement withId:data];
  @try {
    jlong newRowId = [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(sqLiteStatement)) executeInsert];
    if (idFieldType_ != nil && [idFieldType_ isGeneratedId]) {
      [generatedTableMapper_ assignIdWithId:data withId:JavaLangLong_valueOfWithLong_(newRowId)];
    }
    [self notifyChanges];
  }
  @catch (AndroidDatabaseSqliteSQLiteException *e) {
    @throw new_JavaSqlSQLException_initWithNSString_withNSException_(@"create failed", e);
  }
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeCreateStatement {
  return CoTouchlabSqueakyDaoModelDao_makeCreateStatement(self);
}

- (void)fillContentValWithAndroidContentContentValues:(AndroidContentContentValues *)values
                  withCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)val {
  CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(self, values, fieldType, val);
}

- (id)createIfNotExistsWithId:(id)data {
  if (data == nil) {
    return nil;
  }
  id existing = [self queryForIdWithId:[((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]];
  if (existing == nil) {
    [self createWithId:data];
    return data;
  }
  else {
    return existing;
  }
}

- (void)createOrUpdateWithId:(id)data {
  id id_ = [self extractIdWithId:data];
  if (id_ == nil || ![self idExistsWithId:id_]) {
    [self createWithId:data];
  }
  else {
    [self updateWithId:data];
  }
}

- (void)updateWithId:(id)data {
  id<CoTouchlabSqueakyDbSQLiteStatement> us = [((JavaLangThreadLocal *) nil_chk(updateStatement_)) get];
  [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) bindValsWithCoTouchlabSqueakyDbSQLiteStatement:us withId:data];
  [((id<CoTouchlabSqueakyDbSQLiteStatement>) nil_chk(us)) executeUpdateDelete];
  [self notifyChanges];
}

- (id<CoTouchlabSqueakyDbSQLiteStatement>)makeUpdateStatement {
  return CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(self);
}

- (jint)updateIdWithId:(id)data
                withId:(id)newId {
  id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase];
  AndroidContentContentValues *values = new_AndroidContentContentValues_init();
  CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(self, values, idFieldType_, newId);
  jint result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) updateWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName] withAndroidContentContentValues:values withNSString:JreStrcat("$$", [((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName], @" = ?") withNSStringArray:[IOSObjectArray newArrayWithObjects:(id[]){ [nil_chk([generatedTableMapper_ extractIdWithId:data]) description] } count:1 type:NSString_class_()]];
  [self notifyChanges];
  return result;
}

- (jint)updateWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where
                            withJavaUtilMap:(id<JavaUtilMap>)valueMap {
  id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase];
  AndroidContentContentValues *values = new_AndroidContentContentValues_init();
  for (NSString * __strong fieldKey in nil_chk([((id<JavaUtilMap>) nil_chk(valueMap)) keySet])) {
    CoTouchlabSqueakyFieldFieldType *fieldType = [squeakyContext_ findFieldTypeWithIOSClass:((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig]))->dataClass_ withNSString:fieldKey];
    CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(self, values, fieldType, CoTouchlabSqueakySqlSqlHelper_pullArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withId_(squeakyContext_, fieldType, [valueMap getWithId:fieldKey]));
  }
  jint result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) updateWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName] withAndroidContentContentValues:values withNSString:[((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getWhereStatementWithBoolean:false] withNSStringArray:[where getParameters]];
  [self notifyChanges];
  return result;
}

- (void)refreshWithId:(id)data {
  [self refreshWithId:data withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self)];
}

- (void)refreshWithId:(id)data
withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  id<AndroidDatabaseCursor> cursor = CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), JreStrcat("$$", [((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName], @" = ?"), [IOSObjectArray newArrayWithObjects:(id[]){ [nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]) description] } count:1 type:NSString_class_()], nil, nil, nil);
  @try {
    if ([((id<AndroidDatabaseCursor>) nil_chk(cursor)) moveToFirst]) {
      do {
        [generatedTableMapper_ fillRowWithId:data withAndroidDatabaseCursor:cursor withCoTouchlabSqueakyDaoModelDao:self withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:foreignRefreshMap withCoTouchlabSqueakyTableTransientCache:nil];
      }
      while ([cursor moveToNext]);
    }
  }
  @finally {
    [((id<AndroidDatabaseCursor>) nil_chk(cursor)) close];
  }
}

- (jint)delete__WithId:(id)data {
  return data == nil ? 0 : [self deleteByIdWithId:[((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]];
}

- (jint)deleteByIdWithId:(id)id_ {
  jint result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) delete__WithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName] withNSString:JreStrcat("$$", [((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName], @"= ?") withNSStringArray:[IOSObjectArray newArrayWithObjects:(id[]){ [nil_chk(id_) description] } count:1 type:NSString_class_()]];
  [self notifyChanges];
  return result;
}

- (jint)delete__WithJavaUtilCollection:(id<JavaUtilCollection>)datas {
  id<JavaUtilList> ids = new_JavaUtilArrayList_initWithInt_([((id<JavaUtilCollection>) nil_chk(datas)) size]);
  for (id __strong data in datas) {
    [ids addWithId:[((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data]];
  }
  return [self deleteIdsWithJavaUtilCollection:ids];
}

- (jint)deleteIdsWithJavaUtilCollection:(id<JavaUtilCollection>)ids {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(idFieldType_)) getColumnName]])) appendWithNSString:@" in ("];
  jboolean first = true;
  for (id __strong id_ in nil_chk(ids)) {
    if (first) first = false;
    else (void) [sb appendWithChar:','];
    if ([idFieldType_ isEscapedValue]) CoTouchlabSqueakyTableTableUtils_appendEscapedWordWithJavaLangStringBuilder_withNSString_(sb, [nil_chk(id_) description]);
    else (void) [sb appendWithNSString:[nil_chk(id_) description]];
  }
  (void) [sb appendWithNSString:@")"];
  return [self delete__WithCoTouchlabSqueakyDaoQuery:new_CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(self, sb)];
}

- (jint)delete__WithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  jlong result = [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) delete__WithNSString:[((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getFromStatementWithBoolean:false] withNSString:[where getWhereStatementWithBoolean:false] withNSStringArray:[where getParameters]];
  [self notifyChanges];
  return (jint) result;
}

- (id<CoTouchlabSqueakyDaoCloseableIterator>)iterator {
  return new_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, CoTouchlabSqueakyDaoModelDao_createDefaultFrom(self), nil, nil, nil, nil, nil), self, CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self));
}

- (IOSObjectArray *)generateDefaultForeignRefreshMap {
  return CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self);
}

- (id<CoTouchlabSqueakyDaoCloseableIterator>)iteratorWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  return new_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, [((id<CoTouchlabSqueakyDaoQuery>) nil_chk(where)) getFromStatementWithBoolean:true], [where getWhereStatementWithBoolean:true], [where getParameters], nil, nil, nil), self, CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(self));
}

- (jlong)queryRawValueWithNSString:(NSString *)query
                 withNSStringArray:(IOSObjectArray *)arguments {
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) longForQueryWithNSString:query withNSStringArray:arguments];
}

- (NSString *)objectToStringWithId:(id)data {
  return [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) objectToStringWithId:data];
}

- (jboolean)objectsEqualWithId:(id)data1
                        withId:(id)data2 {
  return [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) objectsEqualWithId:data1 withId:data2];
}

- (id)extractIdWithId:(id)data {
  return [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) extractIdWithId:data];
}

- (void)fillForeignCollectionWithId:(id)data
                       withNSString:(NSString *)fieldName {
  [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) fillForeignCollectionWithId:data withCoTouchlabSqueakyDaoModelDao:self withNSString:fieldName];
}

- (IOSClass *)getDataClass {
  return entityClass_;
}

- (jboolean)isUpdatable {
  return true;
}

- (jlong)countOf {
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) countOfWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getTableName]];
}

- (jlong)countOfWithCoTouchlabSqueakyDaoQuery:(id<CoTouchlabSqueakyDaoQuery>)where {
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDatabase])) countOfWithCoTouchlabSqueakyDaoQuery:where];
}

- (jboolean)idExistsWithId:(id)id_ {
  return [self queryForIdWithId:id_] != nil;
}

- (void)registerObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:(id<CoTouchlabSqueakyDaoDao_DaoObserver>)observer {
  [((id<JavaUtilSet>) nil_chk(daoObserverSet_)) addWithId:observer];
}

- (void)unregisterObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:(id<CoTouchlabSqueakyDaoDao_DaoObserver>)observer {
  [((id<JavaUtilSet>) nil_chk(daoObserverSet_)) removeWithId:observer];
}

- (void)notifyChanges {
  for (id<CoTouchlabSqueakyDaoDao_DaoObserver> __strong next in nil_chk(daoObserverSet_)) {
    [((id<CoTouchlabSqueakyDaoDao_DaoObserver>) nil_chk(next)) onChange];
  }
}

- (id<CoTouchlabSqueakyDaoQuery>)all {
  return new_CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(self);
}

- (id<CoTouchlabSqueakyTableGeneratedTableMapper>)getGeneratedTableMapper {
  return generatedTableMapper_;
}

- (CoTouchlabSqueakyDaoSqueakyContext *)getOpenHelper {
  return squeakyContext_;
}

- (CoTouchlabSqueakyFieldForeignCollectionInfo *)findForeignCollectionInfoWithNSString:(NSString *)name {
  {
    IOSObjectArray *a__ = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper_)) getTableConfig])) getForeignCollections];
    CoTouchlabSqueakyFieldForeignCollectionInfo * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    CoTouchlabSqueakyFieldForeignCollectionInfo * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      CoTouchlabSqueakyFieldForeignCollectionInfo *foreignCollectionInfo = *b__++;
      if ([((NSString *) nil_chk(name)) isEqual:((CoTouchlabSqueakyFieldForeignCollectionInfo *) nil_chk(foreignCollectionInfo))->variableName_]) return foreignCollectionInfo;
    }
  }
  @throw new_JavaSqlSQLException_initWithNSString_(@"Couldn't find foreign collection children");
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabSqueakyDaoSqueakyContext:withIOSClass:withCoTouchlabSqueakyTableGeneratedTableMapper:", "ModelDao", NULL, 0x4, NULL, "(Lco/touchlab/squeaky/dao/SqueakyContext;Ljava/lang/Class<TT;>;Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;)V" },
    { "cleanUp", NULL, "V", 0x1, NULL, NULL },
    { "buildSelect", NULL, "[Ljava.lang.String;", 0x2, "Ljava.sql.SQLException;", NULL },
    { "queryForIdWithId:", "queryForId", "TT;", 0x1, "Ljava.sql.SQLException;", "(Ljava/lang/Object;)TT;" },
    { "queryForAll", NULL, "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, "Ljava.sql.SQLException;", "()Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "queryForEqWithNSString:withId:", "queryForEq", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, "Ljava.sql.SQLException;", "(Ljava/lang/String;Ljava/lang/Object;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "queryForFieldValuesWithJavaUtilMap:", "queryForFieldValues", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, "Ljava.sql.SQLException;", "(Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "createDefaultFrom", NULL, "Ljava.lang.String;", 0x2, "Ljava.sql.SQLException;", NULL },
    { "makeCursorResultsWithNSString:withNSString:withNSStringArray:withNSString:withJavaLangInteger:withJavaLangInteger:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:", "makeCursorResults", "Ljava.util.List;", 0x2, "Ljava.sql.SQLException;", "(Ljava/lang/String;Ljava/lang/String;[Ljava/lang/String;Ljava/lang/String;Ljava/lang/Integer;Ljava/lang/Integer;[Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)Ljava/util/List<TT;>;" },
    { "makeCursorWithNSString:withNSString:withNSStringArray:withNSString:withJavaLangInteger:withJavaLangInteger:", "makeCursor", "Landroid.database.Cursor;", 0x2, NULL, NULL },
    { "queryWithNSString:withNSStringArray:", "query", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, "Ljava.sql.SQLException;", "(Ljava/lang/String;[Ljava/lang/String;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "queryWithCoTouchlabSqueakyDaoQuery:", "query", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, "Ljava.sql.SQLException;", "(Lco/touchlab/squeaky/dao/Query;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "createWithId:", "create", "V", 0x1, "Ljava.sql.SQLException;", "(TT;)V" },
    { "makeCreateStatement", NULL, "Lco.touchlab.squeaky.db.SQLiteStatement;", 0x2, NULL, NULL },
    { "fillContentValWithAndroidContentContentValues:withCoTouchlabSqueakyFieldFieldType:withId:", "fillContentVal", "V", 0x2, NULL, NULL },
    { "createIfNotExistsWithId:", "createIfNotExists", "TT;", 0x1, "Ljava.sql.SQLException;", "(TT;)TT;" },
    { "createOrUpdateWithId:", "createOrUpdate", "V", 0x1, "Ljava.sql.SQLException;", "(TT;)V" },
    { "updateWithId:", "update", "V", 0x1, "Ljava.sql.SQLException;", "(TT;)V" },
    { "makeUpdateStatement", NULL, "Lco.touchlab.squeaky.db.SQLiteStatement;", 0x2, NULL, NULL },
    { "updateIdWithId:withId:", "updateId", "I", 0x1, "Ljava.sql.SQLException;", "(TT;Ljava/lang/Object;)I" },
    { "updateWithCoTouchlabSqueakyDaoQuery:withJavaUtilMap:", "update", "I", 0x1, "Ljava.sql.SQLException;", "(Lco/touchlab/squeaky/dao/Query;Ljava/util/Map<Ljava/lang/String;Ljava/lang/Object;>;)I" },
    { "refreshWithId:", "refresh", "V", 0x1, "Ljava.sql.SQLException;", "(TT;)V" },
    { "refreshWithId:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:", "refresh", "V", 0x1, "Ljava.sql.SQLException;", "(TT;[Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)V" },
    { "delete__WithId:", "delete", "I", 0x1, "Ljava.sql.SQLException;", "(TT;)I" },
    { "deleteByIdWithId:", "deleteById", "I", 0x1, "Ljava.sql.SQLException;", NULL },
    { "delete__WithJavaUtilCollection:", "delete", "I", 0x1, "Ljava.sql.SQLException;", "(Ljava/util/Collection<TT;>;)I" },
    { "deleteIdsWithJavaUtilCollection:", "deleteIds", "I", 0x1, "Ljava.sql.SQLException;", "(Ljava/util/Collection<Ljava/lang/Object;>;)I" },
    { "delete__WithCoTouchlabSqueakyDaoQuery:", "delete", "I", 0x1, "Ljava.sql.SQLException;", NULL },
    { "iterator", NULL, "Lco.touchlab.squeaky.dao.CloseableIterator;", 0x1, "Ljava.sql.SQLException;", "()Lco/touchlab/squeaky/dao/CloseableIterator<TT;>;" },
    { "generateDefaultForeignRefreshMap", NULL, "[Lco.touchlab.squeaky.dao.Dao$ForeignRefresh;", 0x2, "Ljava.sql.SQLException;", NULL },
    { "iteratorWithCoTouchlabSqueakyDaoQuery:", "iterator", "Lco.touchlab.squeaky.dao.CloseableIterator;", 0x1, "Ljava.sql.SQLException;", "(Lco/touchlab/squeaky/dao/Query;)Lco/touchlab/squeaky/dao/CloseableIterator<TT;>;" },
    { "queryRawValueWithNSString:withNSStringArray:", "queryRawValue", "J", 0x81, "Ljava.sql.SQLException;", NULL },
    { "objectToStringWithId:", "objectToString", "Ljava.lang.String;", 0x1, "Ljava.sql.SQLException;", "(TT;)Ljava/lang/String;" },
    { "objectsEqualWithId:withId:", "objectsEqual", "Z", 0x1, "Ljava.sql.SQLException;", "(TT;TT;)Z" },
    { "extractIdWithId:", "extractId", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", "(TT;)Ljava/lang/Object;" },
    { "fillForeignCollectionWithId:withNSString:", "fillForeignCollection", "V", 0x1, "Ljava.sql.SQLException;", "(TT;Ljava/lang/String;)V" },
    { "getDataClass", NULL, "Ljava.lang.Class;", 0x1, NULL, "()Ljava/lang/Class<TT;>;" },
    { "isUpdatable", NULL, "Z", 0x1, NULL, NULL },
    { "countOf", NULL, "J", 0x1, "Ljava.sql.SQLException;", NULL },
    { "countOfWithCoTouchlabSqueakyDaoQuery:", "countOf", "J", 0x1, "Ljava.sql.SQLException;", NULL },
    { "idExistsWithId:", "idExists", "Z", 0x1, "Ljava.sql.SQLException;", NULL },
    { "registerObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:", "registerObserver", "V", 0x1, NULL, NULL },
    { "unregisterObserverWithCoTouchlabSqueakyDaoDao_DaoObserver:", "unregisterObserver", "V", 0x1, NULL, NULL },
    { "notifyChanges", NULL, "V", 0x1, NULL, NULL },
    { "all", NULL, "Lco.touchlab.squeaky.dao.Query;", 0x1, NULL, NULL },
    { "getGeneratedTableMapper", NULL, "Lco.touchlab.squeaky.table.GeneratedTableMapper;", 0x1, NULL, "()Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;" },
    { "getOpenHelper", NULL, "Lco.touchlab.squeaky.dao.SqueakyContext;", 0x1, NULL, NULL },
    { "findForeignCollectionInfoWithNSString:", "findForeignCollectionInfo", "Lco.touchlab.squeaky.field.ForeignCollectionInfo;", 0x1, "Ljava.sql.SQLException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_TABLE_PREFIX", "DEFAULT_TABLE_PREFIX", 0x19, "Ljava.lang.String;", &CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, NULL, .constantValue.asLong = 0 },
    { "EQ_OPERATION", "EQ_OPERATION", 0x19, "Ljava.lang.String;", &CoTouchlabSqueakyDaoModelDao_EQ_OPERATION, NULL, .constantValue.asLong = 0 },
    { "entityClass_", NULL, 0x12, "Ljava.lang.Class;", NULL, "Ljava/lang/Class<TT;>;", .constantValue.asLong = 0 },
    { "generatedTableMapper_", NULL, 0x12, "Lco.touchlab.squeaky.table.GeneratedTableMapper;", NULL, "Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;", .constantValue.asLong = 0 },
    { "daoObserverSet_", NULL, 0x12, "Ljava.util.Set;", NULL, "Ljava/util/Set<Lco/touchlab/squeaky/dao/Dao$DaoObserver;>;", .constantValue.asLong = 0 },
    { "tableCols_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "squeakyContext_", NULL, 0x12, "Lco.touchlab.squeaky.dao.SqueakyContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "idFieldType_", NULL, 0x12, "Lco.touchlab.squeaky.field.FieldType;", NULL, NULL, .constantValue.asLong = 0 },
    { "statementList_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lco/touchlab/squeaky/db/SQLiteStatement;>;", .constantValue.asLong = 0 },
    { "createStatement_", NULL, 0x2, "Ljava.lang.ThreadLocal;", NULL, "Ljava/lang/ThreadLocal<Lco/touchlab/squeaky/db/SQLiteStatement;>;", .constantValue.asLong = 0 },
    { "updateStatement_", NULL, 0x2, "Ljava.lang.ThreadLocal;", NULL, "Ljava/lang/ThreadLocal<Lco/touchlab/squeaky/db/SQLiteStatement;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lco.touchlab.squeaky.dao.ModelDao$QueryModifiersImpl;"};
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao = { 2, "ModelDao", "co.touchlab.squeaky.dao", NULL, 0x1, 48, methods, 11, fields, 0, NULL, 1, inner_classes, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lco/touchlab/squeaky/dao/Dao<TT;>;" };
  return &_CoTouchlabSqueakyDaoModelDao;
}

@end

void CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(CoTouchlabSqueakyDaoModelDao *self, CoTouchlabSqueakyDaoSqueakyContext *openHelper, IOSClass *entityClass, id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper) {
  NSObject_init(self);
  self->daoObserverSet_ = JavaUtilCollections_newSetFromMapWithJavaUtilMap_(new_JavaUtilConcurrentConcurrentHashMap_init());
  self->statementList_ = JavaUtilCollections_synchronizedListWithJavaUtilList_(new_JavaUtilArrayList_init());
  self->createStatement_ = new_CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(self);
  self->updateStatement_ = new_CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(self);
  self->squeakyContext_ = openHelper;
  self->entityClass_ = entityClass;
  @try {
    self->generatedTableMapper_ = generatedTableMapper;
    CoTouchlabSqueakyFieldFieldType *idField = nil;
    IOSObjectArray *fieldTypes = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(generatedTableMapper)) getTableConfig])) getFieldTypes];
    {
      IOSObjectArray *a__ = fieldTypes;
      CoTouchlabSqueakyFieldFieldType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      CoTouchlabSqueakyFieldFieldType * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        CoTouchlabSqueakyFieldFieldType *fieldType = *b__++;
        if ([((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) isId] || [fieldType isGeneratedId]) {
          idField = fieldType;
          break;
        }
      }
    }
    self->idFieldType_ = idField;
    self->tableCols_ = CoTouchlabSqueakyDaoModelDao_buildSelect(self);
  }
  @catch (JavaLangException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

CoTouchlabSqueakyDaoModelDao *new_CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(CoTouchlabSqueakyDaoSqueakyContext *openHelper, IOSClass *entityClass, id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper) {
  CoTouchlabSqueakyDaoModelDao *self = [CoTouchlabSqueakyDaoModelDao alloc];
  CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(self, openHelper, entityClass, generatedTableMapper);
  return self;
}

CoTouchlabSqueakyDaoModelDao *create_CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(CoTouchlabSqueakyDaoSqueakyContext *openHelper, IOSClass *entityClass, id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper) {
  return new_CoTouchlabSqueakyDaoModelDao_initWithCoTouchlabSqueakyDaoSqueakyContext_withIOSClass_withCoTouchlabSqueakyTableGeneratedTableMapper_(openHelper, entityClass, generatedTableMapper);
}

IOSObjectArray *CoTouchlabSqueakyDaoModelDao_buildSelect(CoTouchlabSqueakyDaoModelDao *self) {
  IOSObjectArray *fieldTypes = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig])) getFieldTypes];
  IOSObjectArray *selectList = [IOSObjectArray newArrayWithLength:((IOSObjectArray *) nil_chk(fieldTypes))->size_ type:NSString_class_()];
  for (jint i = 0; i < fieldTypes->size_; i++) {
    (void) IOSObjectArray_Set(selectList, i, JreStrcat("$C$", CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX, '.', [((CoTouchlabSqueakyFieldFieldType *) nil_chk(IOSObjectArray_Get(fieldTypes, i))) getColumnName]));
  }
  return selectList;
}

NSString *CoTouchlabSqueakyDaoModelDao_createDefaultFrom(CoTouchlabSqueakyDaoModelDao *self) {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig])) getTableName]];
  (void) [sb appendWithChar:' '];
  (void) [sb appendWithNSString:CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX];
  return [sb description];
}

id<JavaUtilList> CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset, IOSObjectArray *foreignRefreshMap) {
  id<JavaUtilList> results = new_JavaUtilArrayList_init();
  CoTouchlabSqueakyTableTransientCache *objectCache = new_CoTouchlabSqueakyTableTransientCache_init();
  id<AndroidDatabaseCursor> cursor = CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(self, from, where, args, orderBy, limit, offset);
  @try {
    if ([((id<AndroidDatabaseCursor>) nil_chk(cursor)) moveToFirst]) {
      do {
        id object = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) createObjectWithAndroidDatabaseCursor:cursor];
        [self->generatedTableMapper_ fillRowWithId:object withAndroidDatabaseCursor:cursor withCoTouchlabSqueakyDaoModelDao:self withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:foreignRefreshMap withCoTouchlabSqueakyTableTransientCache:objectCache];
        [results addWithId:object];
      }
      while ([cursor moveToNext]);
    }
  }
  @finally {
    [((id<AndroidDatabaseCursor>) nil_chk(cursor)) close];
  }
  return results;
}

id<AndroidDatabaseCursor> CoTouchlabSqueakyDaoModelDao_makeCursorWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_(CoTouchlabSqueakyDaoModelDao *self, NSString *from, NSString *where, IOSObjectArray *args, NSString *orderBy, JavaLangInteger *limit, JavaLangInteger *offset) {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"select "])) appendWithNSString:AndroidTextTextUtils_joinWithJavaLangCharSequence_withNSObjectArray_(@",", self->tableCols_)])) appendWithNSString:@" from "])) appendWithNSString:from];
  if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(where)) (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" where "])) appendWithNSString:where];
  if (!AndroidTextTextUtils_isEmptyWithJavaLangCharSequence_(orderBy)) (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" order by "])) appendWithNSString:orderBy];
  if (limit != nil) (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" limit "])) appendWithId:limit];
  if (offset != nil) (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" offset "])) appendWithId:offset];
  NSString *sql = [sb description];
  return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk([((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(self->squeakyContext_)) getDatabase])) rawQueryWithNSString:sql withNSStringArray:args];
}

id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeCreateStatement(CoTouchlabSqueakyDaoModelDao *self) {
  @try {
    id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(self->squeakyContext_)) getDatabase];
    CoTouchlabSqueakyTableTableInfo *tableConfig = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig];
    JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
    (void) [sb appendWithNSString:@"insert into "];
    (void) [sb appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk(tableConfig)) getTableName]];
    (void) [sb appendWithNSString:@"("];
    jboolean first = true;
    JavaLangStringBuilder *args = new_JavaLangStringBuilder_init();
    {
      IOSObjectArray *a__ = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([self->generatedTableMapper_ getTableConfig])) getFieldTypes];
      CoTouchlabSqueakyFieldFieldType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      CoTouchlabSqueakyFieldFieldType * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        CoTouchlabSqueakyFieldFieldType *fieldType = *b__++;
        if (![((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) isGeneratedId]) {
          if (!first) {
            (void) [sb appendWithNSString:@","];
            (void) [args appendWithNSString:@","];
          }
          (void) [sb appendWithNSString:[fieldType getColumnName]];
          (void) [args appendWithNSString:@"?"];
          first = false;
        }
      }
    }
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@")values("])) appendWithNSString:[args description]])) appendWithNSString:@")"];
    return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) compileStatementWithNSString:[sb description]];
  }
  @catch (JavaSqlSQLException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

void CoTouchlabSqueakyDaoModelDao_fillContentValWithAndroidContentContentValues_withCoTouchlabSqueakyFieldFieldType_withId_(CoTouchlabSqueakyDaoModelDao *self, AndroidContentContentValues *values, CoTouchlabSqueakyFieldFieldType *fieldType, id val) {
  if ([val isKindOfClass:[NSString class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withNSString:(NSString *) cast_chk(val, [NSString class])];
  else if ([val isKindOfClass:[JavaLangInteger class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangInteger:(JavaLangInteger *) cast_chk(val, [JavaLangInteger class])];
  else if ([val isKindOfClass:[JavaLangLong class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangLong:(JavaLangLong *) cast_chk(val, [JavaLangLong class])];
  else if ([val isKindOfClass:[JavaLangByte class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangByte:(JavaLangByte *) cast_chk(val, [JavaLangByte class])];
  else if ([val isKindOfClass:[JavaLangShort class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangShort:(JavaLangShort *) cast_chk(val, [JavaLangShort class])];
  else if ([val isKindOfClass:[JavaLangFloat class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangFloat:(JavaLangFloat *) cast_chk(val, [JavaLangFloat class])];
  else if ([val isKindOfClass:[JavaLangDouble class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangDouble:(JavaLangDouble *) cast_chk(val, [JavaLangDouble class])];
  else if ([val isKindOfClass:[JavaLangBoolean class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withJavaLangBoolean:(JavaLangBoolean *) cast_chk(val, [JavaLangBoolean class])];
  else if ([val isKindOfClass:[IOSByteArray class]]) [((AndroidContentContentValues *) nil_chk(values)) putWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) getColumnName] withByteArray:(IOSByteArray *) cast_chk(val, [IOSByteArray class])];
  else @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Don't recognize type for: ", val));
}

id<CoTouchlabSqueakyDbSQLiteStatement> CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(CoTouchlabSqueakyDaoModelDao *self) {
  @try {
    id<CoTouchlabSqueakyDbSQLiteDatabase> db = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(self->squeakyContext_)) getDatabase];
    CoTouchlabSqueakyTableTableInfo *tableConfig = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig];
    JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"update "])) appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk(tableConfig)) getTableName]])) appendWithNSString:@" set "];
    jboolean first = true;
    {
      IOSObjectArray *a__ = [((CoTouchlabSqueakyTableTableInfo *) nil_chk([self->generatedTableMapper_ getTableConfig])) getFieldTypes];
      CoTouchlabSqueakyFieldFieldType * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      CoTouchlabSqueakyFieldFieldType * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        CoTouchlabSqueakyFieldFieldType *fieldType = *b__++;
        if (![((CoTouchlabSqueakyFieldFieldType *) nil_chk(fieldType)) isGeneratedId] && ![fieldType isId]) {
          if (!first) {
            (void) [sb appendWithNSString:@","];
          }
          (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:[fieldType getColumnName]])) appendWithNSString:@" = ?"];
          first = false;
        }
      }
    }
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" where "])) appendWithNSString:[((CoTouchlabSqueakyFieldFieldType *) nil_chk(((CoTouchlabSqueakyTableTableInfo *) nil_chk([self->generatedTableMapper_ getTableConfig]))->idField_)) getColumnName]])) appendWithNSString:@" = ?"];
    return [((id<CoTouchlabSqueakyDbSQLiteDatabase>) nil_chk(db)) compileStatementWithNSString:[sb description]];
  }
  @catch (JavaSqlSQLException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

IOSObjectArray *CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(CoTouchlabSqueakyDaoModelDao *self) {
  return CoTouchlabSqueakyDaoDaoHelper_fillForeignRefreshMapWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldTypeArray_withInt_(self->squeakyContext_, [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) getTableConfig])) getFieldTypes], CoTouchlabSqueakyConfig_MAX_AUTO_REFRESH);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao)

@implementation CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$
                                        withNSString:(NSString *)from
                                        withNSString:(NSString *)where
                                   withNSStringArray:(IOSObjectArray *)args {
  CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, outer$, from, where, args);
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)orderByWithNSString:(NSString *)s {
  orderBy_ = s;
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)limitWithJavaLangInteger:(JavaLangInteger *)i {
  limit_ = i;
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)offsetWithJavaLangInteger:(JavaLangInteger *)i {
  offset_ = i;
  return self;
}

- (id<CoTouchlabSqueakyDaoDao_QueryModifiers>)foreignRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  self->foreignRefreshMap_ = foreignRefreshMap;
  return self;
}

- (id<JavaUtilList>)list {
  return CoTouchlabSqueakyDaoModelDao_makeCursorResultsWithNSString_withNSString_withNSStringArray_withNSString_withJavaLangInteger_withJavaLangInteger_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(this$0_, from_, where_, args_, orderBy_, limit_, offset_, foreignRefreshMap_ == nil ? CoTouchlabSqueakyDaoModelDao_generateDefaultForeignRefreshMap(this$0_) : foreignRefreshMap_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithCoTouchlabSqueakyDaoModelDao:withNSString:withNSString:withNSStringArray:", "QueryModifiersImpl", NULL, 0x1, NULL, NULL },
    { "orderByWithNSString:", "orderBy", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, NULL, "(Ljava/lang/String;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "limitWithJavaLangInteger:", "limit", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, NULL, "(Ljava/lang/Integer;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "offsetWithJavaLangInteger:", "offset", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, NULL, "(Ljava/lang/Integer;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "foreignRefreshMapWithCoTouchlabSqueakyDaoDao_ForeignRefreshArray:", "foreignRefreshMap", "Lco.touchlab.squeaky.dao.Dao$QueryModifiers;", 0x1, NULL, "([Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" },
    { "list", NULL, "Ljava.util.List;", 0x1, "Ljava.sql.SQLException;", "()Ljava/util/List<TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.squeaky.dao.ModelDao;", NULL, NULL, .constantValue.asLong = 0 },
    { "from_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "where_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "args_", NULL, 0x12, "[Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "orderBy_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "limit_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "offset_", NULL, 0x2, "Ljava.lang.Integer;", NULL, NULL, .constantValue.asLong = 0 },
    { "foreignRefreshMap_", NULL, 0x2, "[Lco.touchlab.squeaky.dao.Dao$ForeignRefresh;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl = { 2, "QueryModifiersImpl", "co.touchlab.squeaky.dao", "ModelDao", 0x0, 6, methods, 8, fields, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lco/touchlab/squeaky/dao/Dao$QueryModifiers<TT;>;" };
  return &_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl;
}

@end

void CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl *self, CoTouchlabSqueakyDaoModelDao *outer$, NSString *from, NSString *where, IOSObjectArray *args) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->from_ = from;
  self->where_ = where;
  self->args_ = args;
}

CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl *new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(CoTouchlabSqueakyDaoModelDao *outer$, NSString *from, NSString *where, IOSObjectArray *args) {
  CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl *self = [CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl alloc];
  CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(self, outer$, from, where, args);
  return self;
}

CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl *create_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(CoTouchlabSqueakyDaoModelDao *outer$, NSString *from, NSString *where, IOSObjectArray *args) {
  return new_CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl_initWithCoTouchlabSqueakyDaoModelDao_withNSString_withNSString_withNSStringArray_(outer$, from, where, args);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao_QueryModifiersImpl)

@implementation CoTouchlabSqueakyDaoModelDao_$1

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue {
  id<CoTouchlabSqueakyDbSQLiteStatement> sqLiteStatement = CoTouchlabSqueakyDaoModelDao_makeCreateStatement(this$0_);
  [((id<JavaUtilList>) nil_chk(this$0_->statementList_)) addWithId:sqLiteStatement];
  return sqLiteStatement;
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$ {
  CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "Lco.touchlab.squeaky.db.SQLiteStatement;", 0x4, NULL, "()Lco/touchlab/squeaky/db/SQLiteStatement;" },
    { "initWithCoTouchlabSqueakyDaoModelDao:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.squeaky.dao.ModelDao;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lco.touchlab.squeaky.db.SQLiteStatement;"};
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_$1 = { 2, "", "co.touchlab.squeaky.dao", "ModelDao", 0x8008, 2, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/ThreadLocal<Lco/touchlab/squeaky/db/SQLiteStatement;>;" };
  return &_CoTouchlabSqueakyDaoModelDao_$1;
}

@end

void CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_$1 *self, CoTouchlabSqueakyDaoModelDao *outer$) {
  self->this$0_ = outer$;
  JavaLangThreadLocal_init(self);
}

CoTouchlabSqueakyDaoModelDao_$1 *new_CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  CoTouchlabSqueakyDaoModelDao_$1 *self = [CoTouchlabSqueakyDaoModelDao_$1 alloc];
  CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

CoTouchlabSqueakyDaoModelDao_$1 *create_CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  return new_CoTouchlabSqueakyDaoModelDao_$1_initWithCoTouchlabSqueakyDaoModelDao_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao_$1)

@implementation CoTouchlabSqueakyDaoModelDao_$2

- (id<CoTouchlabSqueakyDbSQLiteStatement>)initialValue {
  id<CoTouchlabSqueakyDbSQLiteStatement> sqLiteStatement = CoTouchlabSqueakyDaoModelDao_makeUpdateStatement(this$0_);
  [((id<JavaUtilList>) nil_chk(this$0_->statementList_)) addWithId:sqLiteStatement];
  return sqLiteStatement;
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$ {
  CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "Lco.touchlab.squeaky.db.SQLiteStatement;", 0x4, NULL, "()Lco/touchlab/squeaky/db/SQLiteStatement;" },
    { "initWithCoTouchlabSqueakyDaoModelDao:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.squeaky.dao.ModelDao;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lco.touchlab.squeaky.db.SQLiteStatement;"};
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_$2 = { 2, "", "co.touchlab.squeaky.dao", "ModelDao", 0x8008, 2, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/ThreadLocal<Lco/touchlab/squeaky/db/SQLiteStatement;>;" };
  return &_CoTouchlabSqueakyDaoModelDao_$2;
}

@end

void CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_$2 *self, CoTouchlabSqueakyDaoModelDao *outer$) {
  self->this$0_ = outer$;
  JavaLangThreadLocal_init(self);
}

CoTouchlabSqueakyDaoModelDao_$2 *new_CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  CoTouchlabSqueakyDaoModelDao_$2 *self = [CoTouchlabSqueakyDaoModelDao_$2 alloc];
  CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

CoTouchlabSqueakyDaoModelDao_$2 *create_CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  return new_CoTouchlabSqueakyDaoModelDao_$2_initWithCoTouchlabSqueakyDaoModelDao_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao_$2)

@implementation CoTouchlabSqueakyDaoModelDao_$3

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed {
  return [((JavaLangStringBuilder *) nil_chk(val$sb_)) description];
}

- (IOSObjectArray *)getParameters {
  return nil;
}

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed {
  return [((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(this$0_->generatedTableMapper_)) getTableConfig])) getTableName];
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$
                           withJavaLangStringBuilder:(JavaLangStringBuilder *)capture$0 {
  CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(self, outer$, capture$0);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getWhereStatementWithBoolean:", "getWhereStatement", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getParameters", NULL, "[Ljava.lang.String;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "getFromStatementWithBoolean:", "getFromStatement", "Ljava.lang.String;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "initWithCoTouchlabSqueakyDaoModelDao:withJavaLangStringBuilder:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.squeaky.dao.ModelDao;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$sb_", NULL, 0x1012, "Ljava.lang.StringBuilder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "CoTouchlabSqueakyDaoModelDao", "deleteIdsWithJavaUtilCollection:" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_$3 = { 2, "", "co.touchlab.squeaky.dao", "ModelDao", 0x8008, 4, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_CoTouchlabSqueakyDaoModelDao_$3;
}

@end

void CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao_$3 *self, CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) {
  self->this$0_ = outer$;
  self->val$sb_ = capture$0;
  NSObject_init(self);
}

CoTouchlabSqueakyDaoModelDao_$3 *new_CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) {
  CoTouchlabSqueakyDaoModelDao_$3 *self = [CoTouchlabSqueakyDaoModelDao_$3 alloc];
  CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(self, outer$, capture$0);
  return self;
}

CoTouchlabSqueakyDaoModelDao_$3 *create_CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(CoTouchlabSqueakyDaoModelDao *outer$, JavaLangStringBuilder *capture$0) {
  return new_CoTouchlabSqueakyDaoModelDao_$3_initWithCoTouchlabSqueakyDaoModelDao_withJavaLangStringBuilder_(outer$, capture$0);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao_$3)

@implementation CoTouchlabSqueakyDaoModelDao_$4

- (NSString *)getFromStatementWithBoolean:(jboolean)joinsAllowed {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [sb appendWithNSString:[((CoTouchlabSqueakyTableTableInfo *) nil_chk([((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(this$0_->generatedTableMapper_)) getTableConfig])) getTableName]];
  if (joinsAllowed) (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" "])) appendWithNSString:CoTouchlabSqueakyDaoModelDao_DEFAULT_TABLE_PREFIX];
  return [sb description];
}

- (NSString *)getWhereStatementWithBoolean:(jboolean)joinsAllowed {
  return nil;
}

- (IOSObjectArray *)getParameters {
  return nil;
}

- (instancetype)initWithCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)outer$ {
  CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getFromStatementWithBoolean:", "getFromStatement", "Ljava.lang.String;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "getWhereStatementWithBoolean:", "getWhereStatement", "Ljava.lang.String;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "getParameters", NULL, "[Ljava.lang.String;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "initWithCoTouchlabSqueakyDaoModelDao:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lco.touchlab.squeaky.dao.ModelDao;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "CoTouchlabSqueakyDaoModelDao", "all" };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoModelDao_$4 = { 2, "", "co.touchlab.squeaky.dao", "ModelDao", 0x8008, 4, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_CoTouchlabSqueakyDaoModelDao_$4;
}

@end

void CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao_$4 *self, CoTouchlabSqueakyDaoModelDao *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

CoTouchlabSqueakyDaoModelDao_$4 *new_CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  CoTouchlabSqueakyDaoModelDao_$4 *self = [CoTouchlabSqueakyDaoModelDao_$4 alloc];
  CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(self, outer$);
  return self;
}

CoTouchlabSqueakyDaoModelDao_$4 *create_CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(CoTouchlabSqueakyDaoModelDao *outer$) {
  return new_CoTouchlabSqueakyDaoModelDao_$4_initWithCoTouchlabSqueakyDaoModelDao_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoModelDao_$4)
