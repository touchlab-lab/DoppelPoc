//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/dao/SelectIterator.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/database/Cursor.h"
#include "co/touchlab/squeaky/dao/ModelDao.h"
#include "co/touchlab/squeaky/dao/SelectIterator.h"
#include "co/touchlab/squeaky/table/GeneratedTableMapper.h"
#include "co/touchlab/squeaky/table/TransientCache.h"
#include "java/io/IOException.h"
#include "java/lang/Exception.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/sql/SQLException.h"

@interface CoTouchlabSqueakyDaoSelectIterator () {
 @public
  id<AndroidDatabaseCursor> cursor_;
  CoTouchlabSqueakyDaoModelDao *modelDao_;
  id<CoTouchlabSqueakyTableGeneratedTableMapper> generatedTableMapper_;
  CoTouchlabSqueakyTableTransientCache *objectCache_;
  IOSObjectArray *foreignRefreshMap_;
}

- (id)makeData;

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, cursor_, id<AndroidDatabaseCursor>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, modelDao_, CoTouchlabSqueakyDaoModelDao *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, generatedTableMapper_, id<CoTouchlabSqueakyTableGeneratedTableMapper>)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, objectCache_, CoTouchlabSqueakyTableTransientCache *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDaoSelectIterator, foreignRefreshMap_, IOSObjectArray *)

__attribute__((unused)) static id CoTouchlabSqueakyDaoSelectIterator_makeData(CoTouchlabSqueakyDaoSelectIterator *self);

@implementation CoTouchlabSqueakyDaoSelectIterator

- (instancetype)initWithAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)cursor
             withCoTouchlabSqueakyDaoModelDao:(CoTouchlabSqueakyDaoModelDao *)modelDao
withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:(IOSObjectArray *)foreignRefreshMap {
  CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, cursor, modelDao, foreignRefreshMap);
  return self;
}

- (void)closeQuietly {
  @try {
    [self close];
  }
  @catch (JavaLangException *e) {
  }
}

- (void)moveToNext {
  [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToNext];
}

- (id)first {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToFirst] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (id)previous {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToPrevious] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (id)current {
  return CoTouchlabSqueakyDaoSelectIterator_makeData(self);
}

- (id)nextThrow {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToNext] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (id)moveRelativeWithInt:(jint)offset {
  return [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveWithInt:offset] ? CoTouchlabSqueakyDaoSelectIterator_makeData(self) : nil;
}

- (void)close {
  [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) close];
}

- (jboolean)hasNext {
  jboolean next = [((id<AndroidDatabaseCursor>) nil_chk(cursor_)) moveToNext];
  [cursor_ moveToPrevious];
  return next;
}

- (id)next {
  @try {
    return [self nextThrow];
  }
  @catch (JavaSqlSQLException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (void)remove {
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(@"Can't remove from cursor");
}

- (id)makeData {
  return CoTouchlabSqueakyDaoSelectIterator_makeData(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAndroidDatabaseCursor:withCoTouchlabSqueakyDaoModelDao:withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:", "SelectIterator", NULL, 0x1, NULL, "(Landroid/database/Cursor;Lco/touchlab/squeaky/dao/ModelDao<TT;>;[Lco/touchlab/squeaky/dao/Dao$ForeignRefresh;)V" },
    { "closeQuietly", NULL, "V", 0x1, NULL, NULL },
    { "moveToNext", NULL, "V", 0x1, NULL, NULL },
    { "first", NULL, "TT;", 0x1, "Ljava.sql.SQLException;", "()TT;" },
    { "previous", NULL, "TT;", 0x1, "Ljava.sql.SQLException;", "()TT;" },
    { "current", NULL, "TT;", 0x1, "Ljava.sql.SQLException;", "()TT;" },
    { "nextThrow", NULL, "TT;", 0x1, "Ljava.sql.SQLException;", "()TT;" },
    { "moveRelativeWithInt:", "moveRelative", "TT;", 0x1, "Ljava.sql.SQLException;", "(I)TT;" },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "hasNext", NULL, "Z", 0x1, NULL, NULL },
    { "next", NULL, "TT;", 0x1, NULL, "()TT;" },
    { "remove", NULL, "V", 0x1, NULL, NULL },
    { "makeData", NULL, "TT;", 0x2, "Ljava.sql.SQLException;", "()TT;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "cursor_", NULL, 0x12, "Landroid.database.Cursor;", NULL, NULL, .constantValue.asLong = 0 },
    { "modelDao_", NULL, 0x12, "Lco.touchlab.squeaky.dao.ModelDao;", NULL, "Lco/touchlab/squeaky/dao/ModelDao<TT;>;", .constantValue.asLong = 0 },
    { "generatedTableMapper_", NULL, 0x12, "Lco.touchlab.squeaky.table.GeneratedTableMapper;", NULL, "Lco/touchlab/squeaky/table/GeneratedTableMapper<TT;>;", .constantValue.asLong = 0 },
    { "objectCache_", NULL, 0x12, "Lco.touchlab.squeaky.table.TransientCache;", NULL, NULL, .constantValue.asLong = 0 },
    { "foreignRefreshMap_", NULL, 0x12, "[Lco.touchlab.squeaky.dao.Dao$ForeignRefresh;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDaoSelectIterator = { 2, "SelectIterator", "co.touchlab.squeaky.dao", NULL, 0x1, 13, methods, 5, fields, 0, NULL, 0, NULL, NULL, "<T:Ljava/lang/Object;>Ljava/lang/Object;Lco/touchlab/squeaky/dao/CloseableIterator<TT;>;" };
  return &_CoTouchlabSqueakyDaoSelectIterator;
}

@end

void CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(CoTouchlabSqueakyDaoSelectIterator *self, id<AndroidDatabaseCursor> cursor, CoTouchlabSqueakyDaoModelDao *modelDao, IOSObjectArray *foreignRefreshMap) {
  NSObject_init(self);
  self->objectCache_ = new_CoTouchlabSqueakyTableTransientCache_init();
  self->cursor_ = cursor;
  self->modelDao_ = modelDao;
  self->foreignRefreshMap_ = foreignRefreshMap;
  self->generatedTableMapper_ = [((CoTouchlabSqueakyDaoModelDao *) nil_chk(modelDao)) getGeneratedTableMapper];
}

CoTouchlabSqueakyDaoSelectIterator *new_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(id<AndroidDatabaseCursor> cursor, CoTouchlabSqueakyDaoModelDao *modelDao, IOSObjectArray *foreignRefreshMap) {
  CoTouchlabSqueakyDaoSelectIterator *self = [CoTouchlabSqueakyDaoSelectIterator alloc];
  CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(self, cursor, modelDao, foreignRefreshMap);
  return self;
}

CoTouchlabSqueakyDaoSelectIterator *create_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(id<AndroidDatabaseCursor> cursor, CoTouchlabSqueakyDaoModelDao *modelDao, IOSObjectArray *foreignRefreshMap) {
  return new_CoTouchlabSqueakyDaoSelectIterator_initWithAndroidDatabaseCursor_withCoTouchlabSqueakyDaoModelDao_withCoTouchlabSqueakyDaoDao_ForeignRefreshArray_(cursor, modelDao, foreignRefreshMap);
}

id CoTouchlabSqueakyDaoSelectIterator_makeData(CoTouchlabSqueakyDaoSelectIterator *self) {
  id data = [((id<CoTouchlabSqueakyTableGeneratedTableMapper>) nil_chk(self->generatedTableMapper_)) createObjectWithAndroidDatabaseCursor:self->cursor_];
  [self->generatedTableMapper_ fillRowWithId:data withAndroidDatabaseCursor:self->cursor_ withCoTouchlabSqueakyDaoModelDao:self->modelDao_ withCoTouchlabSqueakyDaoDao_ForeignRefreshArray:self->foreignRefreshMap_ withCoTouchlabSqueakyTableTransientCache:self->objectCache_];
  return data;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDaoSelectIterator)
