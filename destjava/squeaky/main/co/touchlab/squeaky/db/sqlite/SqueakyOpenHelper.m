//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/db/sqlite/SqueakyOpenHelper.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/content/Context.h"
#include "android/database/DatabaseErrorHandler.h"
#include "android/database/sqlite/SQLiteDatabase.h"
#include "android/database/sqlite/SQLiteOpenHelper.h"
#include "co/touchlab/squeaky/dao/Dao.h"
#include "co/touchlab/squeaky/dao/SqueakyContext.h"
#include "co/touchlab/squeaky/db/SQLiteDatabase.h"
#include "co/touchlab/squeaky/db/sqlite/SQLiteDatabaseImpl.h"
#include "co/touchlab/squeaky/db/sqlite/SqueakyOpenHelper.h"
#include "co/touchlab/squeaky/table/GeneratedTableMapper.h"

@interface CoTouchlabSqueakyDbSqliteSqueakyOpenHelper () {
 @public
  CoTouchlabSqueakyDaoSqueakyContext *squeakyContext_;
  CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl *sqLiteDatabase_;
}

@end

J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDbSqliteSqueakyOpenHelper, squeakyContext_, CoTouchlabSqueakyDaoSqueakyContext *)
J2OBJC_FIELD_SETTER(CoTouchlabSqueakyDbSqliteSqueakyOpenHelper, sqLiteDatabase_, CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl *)

@implementation CoTouchlabSqueakyDbSqliteSqueakyOpenHelper

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
                                      withInt:(jint)version_ {
  CoTouchlabSqueakyDbSqliteSqueakyOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, factory, version_);
  return self;
}

- (instancetype)initWithAndroidContentContext:(AndroidContentContext *)context
                                 withNSString:(NSString *)name
withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:(id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory>)factory
                                      withInt:(jint)version_
      withAndroidDatabaseDatabaseErrorHandler:(id<AndroidDatabaseDatabaseErrorHandler>)errorHandler {
  CoTouchlabSqueakyDbSqliteSqueakyOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(self, context, name, factory, version_, errorHandler);
  return self;
}

- (CoTouchlabSqueakyDaoSqueakyContext *)getSqueakyContext {
  return squeakyContext_;
}

- (id)getDaoWithIOSClass:(IOSClass *)clazz {
  id<CoTouchlabSqueakyDaoDao> dao = [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getDaoWithIOSClass:clazz];
  id<CoTouchlabSqueakyDaoDao> castDao = dao;
  return castDao;
}

- (void)close {
  @synchronized(self) {
    [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) close];
    [super close];
  }
}

- (id<CoTouchlabSqueakyTableGeneratedTableMapper>)getGeneratedTableMapperWithIOSClass:(IOSClass *)clazz {
  @synchronized(self) {
    return [((CoTouchlabSqueakyDaoSqueakyContext *) nil_chk(squeakyContext_)) getGeneratedTableMapperWithIOSClass:clazz];
  }
}

- (id<CoTouchlabSqueakyDbSQLiteDatabase>)getWrappedDatabase {
  @synchronized(self) {
    if (sqLiteDatabase_ == nil) sqLiteDatabase_ = new_CoTouchlabSqueakyDbSqliteSQLiteDatabaseImpl_initWithAndroidDatabaseSqliteSQLiteDatabase_([self getWritableDatabase]);
    return sqLiteDatabase_;
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithAndroidContentContext:withNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withInt:", "SqueakyOpenHelper", NULL, 0x1, NULL, NULL },
    { "initWithAndroidContentContext:withNSString:withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory:withInt:withAndroidDatabaseDatabaseErrorHandler:", "SqueakyOpenHelper", NULL, 0x1, NULL, NULL },
    { "getSqueakyContext", NULL, "Lco.touchlab.squeaky.dao.SqueakyContext;", 0x1, NULL, NULL },
    { "getDaoWithIOSClass:", "getDao", "TD;", 0x1, NULL, "<D::Lco/touchlab/squeaky/dao/Dao<TT;>;T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;)TD;" },
    { "close", NULL, "V", 0x21, NULL, NULL },
    { "getGeneratedTableMapperWithIOSClass:", "getGeneratedTableMapper", "Lco.touchlab.squeaky.table.GeneratedTableMapper;", 0x21, NULL, NULL },
    { "getWrappedDatabase", NULL, "Lco.touchlab.squeaky.db.SQLiteDatabase;", 0x21, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "squeakyContext_", NULL, 0x12, "Lco.touchlab.squeaky.dao.SqueakyContext;", NULL, NULL, .constantValue.asLong = 0 },
    { "sqLiteDatabase_", NULL, 0x2, "Lco.touchlab.squeaky.db.sqlite.SQLiteDatabaseImpl;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyDbSqliteSqueakyOpenHelper = { 2, "SqueakyOpenHelper", "co.touchlab.squeaky.db.sqlite", NULL, 0x401, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyDbSqliteSqueakyOpenHelper;
}

@end

void CoTouchlabSqueakyDbSqliteSqueakyOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(CoTouchlabSqueakyDbSqliteSqueakyOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint version_) {
  AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_(self, context, name, factory, version_);
  self->squeakyContext_ = new_CoTouchlabSqueakyDaoSqueakyContext_initWithCoTouchlabSqueakyDbSQLiteOpenHelper_(self);
}

void CoTouchlabSqueakyDbSqliteSqueakyOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(CoTouchlabSqueakyDbSqliteSqueakyOpenHelper *self, AndroidContentContext *context, NSString *name, id<AndroidDatabaseSqliteSQLiteDatabase_CursorFactory> factory, jint version_, id<AndroidDatabaseDatabaseErrorHandler> errorHandler) {
  AndroidDatabaseSqliteSQLiteOpenHelper_initWithAndroidContentContext_withNSString_withAndroidDatabaseSqliteSQLiteDatabase_CursorFactory_withInt_withAndroidDatabaseDatabaseErrorHandler_(self, context, name, factory, version_, errorHandler);
  self->squeakyContext_ = new_CoTouchlabSqueakyDaoSqueakyContext_initWithCoTouchlabSqueakyDbSQLiteOpenHelper_(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyDbSqliteSqueakyOpenHelper)
