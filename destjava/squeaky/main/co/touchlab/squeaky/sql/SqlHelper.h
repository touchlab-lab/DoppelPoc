//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/sql/SqlHelper.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakySqlSqlHelper_INCLUDE_ALL")
#ifdef CoTouchlabSqueakySqlSqlHelper_RESTRICT
#define CoTouchlabSqueakySqlSqlHelper_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakySqlSqlHelper_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakySqlSqlHelper_RESTRICT

#if !defined (CoTouchlabSqueakySqlSqlHelper_) && (CoTouchlabSqueakySqlSqlHelper_INCLUDE_ALL || defined(CoTouchlabSqueakySqlSqlHelper_INCLUDE))
#define CoTouchlabSqueakySqlSqlHelper_

@class CoTouchlabSqueakyDaoSqueakyContext;
@class CoTouchlabSqueakyFieldFieldType;
@class JavaLangStringBuilder;
@protocol JavaUtilList;

@interface CoTouchlabSqueakySqlSqlHelper : NSObject

#pragma mark Public

- (instancetype)init;

+ (void)appendArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                           withCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                              withJavaUtilList:(id<JavaUtilList>)params
                                                        withId:(id)argOrValue;

+ (void)appendWhereClauseBodyWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb
                                          withNSString:(NSString *)tablePrefix
                                          withNSString:(NSString *)operation
                   withCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType;

+ (NSString *)pullArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext:(CoTouchlabSqueakyDaoSqueakyContext *)squeakyContext
                               withCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                                            withId:(id)argOrValue;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakySqlSqlHelper)

FOUNDATION_EXPORT void CoTouchlabSqueakySqlSqlHelper_appendWhereClauseBodyWithJavaLangStringBuilder_withNSString_withNSString_withCoTouchlabSqueakyFieldFieldType_(JavaLangStringBuilder *sb, NSString *tablePrefix, NSString *operation, CoTouchlabSqueakyFieldFieldType *fieldType);

FOUNDATION_EXPORT void CoTouchlabSqueakySqlSqlHelper_appendArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withJavaUtilList_withId_(CoTouchlabSqueakyDaoSqueakyContext *squeakyContext, CoTouchlabSqueakyFieldFieldType *fieldType, id<JavaUtilList> params, id argOrValue);

FOUNDATION_EXPORT NSString *CoTouchlabSqueakySqlSqlHelper_pullArgOrValueWithCoTouchlabSqueakyDaoSqueakyContext_withCoTouchlabSqueakyFieldFieldType_withId_(CoTouchlabSqueakyDaoSqueakyContext *squeakyContext, CoTouchlabSqueakyFieldFieldType *fieldType, id argOrValue);

FOUNDATION_EXPORT void CoTouchlabSqueakySqlSqlHelper_init(CoTouchlabSqueakySqlSqlHelper *self);

FOUNDATION_EXPORT CoTouchlabSqueakySqlSqlHelper *new_CoTouchlabSqueakySqlSqlHelper_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakySqlSqlHelper *create_CoTouchlabSqueakySqlSqlHelper_init();

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakySqlSqlHelper)

#endif

#pragma pop_macro("CoTouchlabSqueakySqlSqlHelper_INCLUDE_ALL")
