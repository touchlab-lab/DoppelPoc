//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/FieldConverter.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldFieldConverter_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldFieldConverter_RESTRICT
#define CoTouchlabSqueakyFieldFieldConverter_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldFieldConverter_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldFieldConverter_RESTRICT

#if !defined (CoTouchlabSqueakyFieldFieldConverter_) && (CoTouchlabSqueakyFieldFieldConverter_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldFieldConverter_INCLUDE))
#define CoTouchlabSqueakyFieldFieldConverter_

@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyFieldSqlType;
@protocol AndroidDatabaseCursor;

@protocol CoTouchlabSqueakyFieldFieldConverter < NSObject, JavaObject >

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr;

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)obj;

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos;

- (id)resultToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                            withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                              withInt:(jint)columnPos;

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos;

- (CoTouchlabSqueakyFieldSqlType *)getSqlType;

@end

J2OBJC_EMPTY_STATIC_INIT(CoTouchlabSqueakyFieldFieldConverter)

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldFieldConverter)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldFieldConverter_INCLUDE_ALL")
