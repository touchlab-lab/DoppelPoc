//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/SqlType.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(CoTouchlabSqueakyFieldSqlType *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static CoTouchlabSqueakyFieldSqlType *new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldSqlType)

CoTouchlabSqueakyFieldSqlType *CoTouchlabSqueakyFieldSqlType_values_[17];

@implementation CoTouchlabSqueakyFieldSqlType

+ (IOSObjectArray *)values {
  return CoTouchlabSqueakyFieldSqlType_values();
}

+ (CoTouchlabSqueakyFieldSqlType *)valueOfWithNSString:(NSString *)name {
  return CoTouchlabSqueakyFieldSqlType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldSqlType class]) {
    JreEnum(CoTouchlabSqueakyFieldSqlType, STRING) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"STRING", 0);
    JreEnum(CoTouchlabSqueakyFieldSqlType, LONG_STRING) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"LONG_STRING", 1);
    JreEnum(CoTouchlabSqueakyFieldSqlType, DATE) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"DATE", 2);
    JreEnum(CoTouchlabSqueakyFieldSqlType, BOOLEAN) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"BOOLEAN", 3);
    JreEnum(CoTouchlabSqueakyFieldSqlType, CHAR) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"CHAR", 4);
    JreEnum(CoTouchlabSqueakyFieldSqlType, BYTE) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"BYTE", 5);
    JreEnum(CoTouchlabSqueakyFieldSqlType, BYTE_ARRAY) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"BYTE_ARRAY", 6);
    JreEnum(CoTouchlabSqueakyFieldSqlType, SHORT) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"SHORT", 7);
    JreEnum(CoTouchlabSqueakyFieldSqlType, INTEGER) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"INTEGER", 8);
    JreEnum(CoTouchlabSqueakyFieldSqlType, LONG) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"LONG", 9);
    JreEnum(CoTouchlabSqueakyFieldSqlType, FLOAT) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"FLOAT", 10);
    JreEnum(CoTouchlabSqueakyFieldSqlType, DOUBLE) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"DOUBLE", 11);
    JreEnum(CoTouchlabSqueakyFieldSqlType, SERIALIZABLE) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"SERIALIZABLE", 12);
    JreEnum(CoTouchlabSqueakyFieldSqlType, BLOB) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"BLOB", 13);
    JreEnum(CoTouchlabSqueakyFieldSqlType, BIG_DECIMAL) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"BIG_DECIMAL", 14);
    JreEnum(CoTouchlabSqueakyFieldSqlType, OTHER) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"OTHER", 15);
    JreEnum(CoTouchlabSqueakyFieldSqlType, UNKNOWN) = new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(@"UNKNOWN", 16);
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldSqlType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "STRING", "STRING", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, STRING), NULL, .constantValue.asLong = 0 },
    { "LONG_STRING", "LONG_STRING", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, LONG_STRING), NULL, .constantValue.asLong = 0 },
    { "DATE", "DATE", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, DATE), NULL, .constantValue.asLong = 0 },
    { "BOOLEAN", "BOOLEAN", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, BOOLEAN), NULL, .constantValue.asLong = 0 },
    { "CHAR", "CHAR", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, CHAR), NULL, .constantValue.asLong = 0 },
    { "BYTE", "BYTE", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, BYTE), NULL, .constantValue.asLong = 0 },
    { "BYTE_ARRAY", "BYTE_ARRAY", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, BYTE_ARRAY), NULL, .constantValue.asLong = 0 },
    { "SHORT", "SHORT", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, SHORT), NULL, .constantValue.asLong = 0 },
    { "INTEGER", "INTEGER", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, INTEGER), NULL, .constantValue.asLong = 0 },
    { "LONG", "LONG", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, LONG), NULL, .constantValue.asLong = 0 },
    { "FLOAT", "FLOAT", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, FLOAT), NULL, .constantValue.asLong = 0 },
    { "DOUBLE", "DOUBLE", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, DOUBLE), NULL, .constantValue.asLong = 0 },
    { "SERIALIZABLE", "SERIALIZABLE", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, SERIALIZABLE), NULL, .constantValue.asLong = 0 },
    { "BLOB", "BLOB", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, BLOB), NULL, .constantValue.asLong = 0 },
    { "BIG_DECIMAL", "BIG_DECIMAL", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, BIG_DECIMAL), NULL, .constantValue.asLong = 0 },
    { "OTHER", "OTHER", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, OTHER), NULL, .constantValue.asLong = 0 },
    { "UNKNOWN", "UNKNOWN", 0x4019, "Lco.touchlab.squeaky.field.SqlType;", &JreEnum(CoTouchlabSqueakyFieldSqlType, UNKNOWN), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lco.touchlab.squeaky.field.SqlType;"};
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldSqlType = { 2, "SqlType", "co.touchlab.squeaky.field", NULL, 0x4011, 0, NULL, 17, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lco/touchlab/squeaky/field/SqlType;>;" };
  return &_CoTouchlabSqueakyFieldSqlType;
}

@end

void CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(CoTouchlabSqueakyFieldSqlType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

CoTouchlabSqueakyFieldSqlType *new_CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  CoTouchlabSqueakyFieldSqlType *self = [CoTouchlabSqueakyFieldSqlType alloc];
  CoTouchlabSqueakyFieldSqlType_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *CoTouchlabSqueakyFieldSqlType_values() {
  CoTouchlabSqueakyFieldSqlType_initialize();
  return [IOSObjectArray arrayWithObjects:CoTouchlabSqueakyFieldSqlType_values_ count:17 type:CoTouchlabSqueakyFieldSqlType_class_()];
}

CoTouchlabSqueakyFieldSqlType *CoTouchlabSqueakyFieldSqlType_valueOfWithNSString_(NSString *name) {
  CoTouchlabSqueakyFieldSqlType_initialize();
  for (int i = 0; i < 17; i++) {
    CoTouchlabSqueakyFieldSqlType *e = CoTouchlabSqueakyFieldSqlType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

CoTouchlabSqueakyFieldSqlType *CoTouchlabSqueakyFieldSqlType_fromOrdinal(NSUInteger ordinal) {
  CoTouchlabSqueakyFieldSqlType_initialize();
  if (ordinal >= 17) {
    return nil;
  }
  return CoTouchlabSqueakyFieldSqlType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldSqlType)
