//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/StringType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesStringType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesStringType_RESTRICT
#define CoTouchlabSqueakyFieldTypesStringType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesStringType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesStringType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesStringType_) && (CoTouchlabSqueakyFieldTypesStringType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesStringType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesStringType_

#define CoTouchlabSqueakyFieldTypesBaseDataType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesBaseDataType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/BaseDataType.h"

@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;
@protocol AndroidDatabaseCursor;

@interface CoTouchlabSqueakyFieldTypesStringType : CoTouchlabSqueakyFieldTypesBaseDataType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesStringType *)getSingleton;

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr;

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType;

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesStringType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesStringType *CoTouchlabSqueakyFieldTypesStringType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesStringType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesStringType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesStringType *new_CoTouchlabSqueakyFieldTypesStringType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesStringType *create_CoTouchlabSqueakyFieldTypesStringType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesStringType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldTypesStringType *self, CoTouchlabSqueakyFieldSqlType *sqlType);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesStringType *new_CoTouchlabSqueakyFieldTypesStringType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesStringType *create_CoTouchlabSqueakyFieldTypesStringType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesStringType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesStringType_INCLUDE_ALL")
