//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/DateTimeType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/database/Cursor.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/BaseDataType.h"
#include "co/touchlab/squeaky/field/types/DateTimeType.h"
#include "co/touchlab/squeaky/misc/SqlExceptionUtil.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Exception.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Method.h"
#include "java/sql/SQLException.h"

@interface CoTouchlabSqueakyFieldTypesDateTimeType ()

- (instancetype)init;

- (id)createInstanceWithJavaLangLong:(JavaLangLong *)sqlArg;

- (JavaLangLong *)extractMillisWithId:(id)javaObject;

- (IOSClass *)getDateTimeClass;

@end

inline CoTouchlabSqueakyFieldTypesDateTimeType *CoTouchlabSqueakyFieldTypesDateTimeType_get_singleTon();
static CoTouchlabSqueakyFieldTypesDateTimeType *CoTouchlabSqueakyFieldTypesDateTimeType_singleTon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesDateTimeType, singleTon, CoTouchlabSqueakyFieldTypesDateTimeType *)

inline IOSClass *CoTouchlabSqueakyFieldTypesDateTimeType_get_dateTimeClass();
inline IOSClass *CoTouchlabSqueakyFieldTypesDateTimeType_set_dateTimeClass(IOSClass *value);
static IOSClass *CoTouchlabSqueakyFieldTypesDateTimeType_dateTimeClass;
J2OBJC_STATIC_FIELD_OBJ(CoTouchlabSqueakyFieldTypesDateTimeType, dateTimeClass, IOSClass *)

inline JavaLangReflectMethod *CoTouchlabSqueakyFieldTypesDateTimeType_get_getMillisMethod();
inline JavaLangReflectMethod *CoTouchlabSqueakyFieldTypesDateTimeType_set_getMillisMethod(JavaLangReflectMethod *value);
static JavaLangReflectMethod *CoTouchlabSqueakyFieldTypesDateTimeType_getMillisMethod;
J2OBJC_STATIC_FIELD_OBJ(CoTouchlabSqueakyFieldTypesDateTimeType, getMillisMethod, JavaLangReflectMethod *)

inline JavaLangReflectConstructor *CoTouchlabSqueakyFieldTypesDateTimeType_get_millisConstructor();
inline JavaLangReflectConstructor *CoTouchlabSqueakyFieldTypesDateTimeType_set_millisConstructor(JavaLangReflectConstructor *value);
static JavaLangReflectConstructor *CoTouchlabSqueakyFieldTypesDateTimeType_millisConstructor;
J2OBJC_STATIC_FIELD_OBJ(CoTouchlabSqueakyFieldTypesDateTimeType, millisConstructor, JavaLangReflectConstructor *)

inline IOSObjectArray *CoTouchlabSqueakyFieldTypesDateTimeType_get_associatedClassNames();
static IOSObjectArray *CoTouchlabSqueakyFieldTypesDateTimeType_associatedClassNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesDateTimeType, associatedClassNames, IOSObjectArray *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesDateTimeType_init(CoTouchlabSqueakyFieldTypesDateTimeType *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesDateTimeType *new_CoTouchlabSqueakyFieldTypesDateTimeType_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesDateTimeType *create_CoTouchlabSqueakyFieldTypesDateTimeType_init();

__attribute__((unused)) static id CoTouchlabSqueakyFieldTypesDateTimeType_createInstanceWithJavaLangLong_(CoTouchlabSqueakyFieldTypesDateTimeType *self, JavaLangLong *sqlArg);

__attribute__((unused)) static JavaLangLong *CoTouchlabSqueakyFieldTypesDateTimeType_extractMillisWithId_(CoTouchlabSqueakyFieldTypesDateTimeType *self, id javaObject);

__attribute__((unused)) static IOSClass *CoTouchlabSqueakyFieldTypesDateTimeType_getDateTimeClass(CoTouchlabSqueakyFieldTypesDateTimeType *self);

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesDateTimeType)

@implementation CoTouchlabSqueakyFieldTypesDateTimeType

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesDateTimeType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesDateTimeType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

+ (CoTouchlabSqueakyFieldTypesDateTimeType *)getSingleton {
  return CoTouchlabSqueakyFieldTypesDateTimeType_getSingleton();
}

- (IOSObjectArray *)getAssociatedClassNames {
  return CoTouchlabSqueakyFieldTypesDateTimeType_associatedClassNames;
}

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)javaObject {
  return CoTouchlabSqueakyFieldTypesDateTimeType_extractMillisWithId_(self, javaObject);
}

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr {
  @try {
    return JavaLangLong_valueOfWithLong_(JavaLangLong_parseLongWithNSString_(defaultStr));
  }
  @catch (JavaLangNumberFormatException *e) {
    @throw CoTouchlabSqueakyMiscSqlExceptionUtil_createWithNSString_withNSException_(JreStrcat("$@$$", @"Problems with field ", fieldType, @" parsing default DateTime value: ", defaultStr), e);
  }
}

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos {
  return JavaLangLong_valueOfWithLong_([((id<AndroidDatabaseCursor>) nil_chk(results)) getLongWithInt:columnPos]);
}

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos {
  return CoTouchlabSqueakyFieldTypesDateTimeType_createInstanceWithJavaLangLong_(self, (JavaLangLong *) cast_chk(sqlArg, [JavaLangLong class]));
}

- (jboolean)isEscapedValue {
  return false;
}

- (id)createInstanceWithJavaLangLong:(JavaLangLong *)sqlArg {
  return CoTouchlabSqueakyFieldTypesDateTimeType_createInstanceWithJavaLangLong_(self, sqlArg);
}

- (JavaLangLong *)extractMillisWithId:(id)javaObject {
  return CoTouchlabSqueakyFieldTypesDateTimeType_extractMillisWithId_(self, javaObject);
}

- (IOSClass *)getDateTimeClass {
  return CoTouchlabSqueakyFieldTypesDateTimeType_getDateTimeClass(self);
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesDateTimeType class]) {
    CoTouchlabSqueakyFieldTypesDateTimeType_singleTon = new_CoTouchlabSqueakyFieldTypesDateTimeType_init();
    CoTouchlabSqueakyFieldTypesDateTimeType_dateTimeClass = nil;
    CoTouchlabSqueakyFieldTypesDateTimeType_getMillisMethod = nil;
    CoTouchlabSqueakyFieldTypesDateTimeType_millisConstructor = nil;
    CoTouchlabSqueakyFieldTypesDateTimeType_associatedClassNames = [IOSObjectArray newArrayWithObjects:(id[]){ @"org.joda.time.DateTime" } count:1 type:NSString_class_()];
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesDateTimeType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "DateTimeType", NULL, 0x2, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:", "DateTimeType", NULL, 0x4, NULL, NULL },
    { "getSingleton", NULL, "Lco.touchlab.squeaky.field.types.DateTimeType;", 0x9, NULL, NULL },
    { "getAssociatedClassNames", NULL, "[Ljava.lang.String;", 0x1, NULL, NULL },
    { "javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:withId:", "javaToSqlArg", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:withNSString:", "parseDefaultString", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:withAndroidDatabaseCursor:withInt:", "resultToSqlArg", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:withId:withInt:", "sqlArgToJava", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "isEscapedValue", NULL, "Z", 0x1, NULL, NULL },
    { "createInstanceWithJavaLangLong:", "createInstance", "Ljava.lang.Object;", 0x2, "Ljava.sql.SQLException;", NULL },
    { "extractMillisWithId:", "extractMillis", "Ljava.lang.Long;", 0x2, "Ljava.sql.SQLException;", NULL },
    { "getDateTimeClass", NULL, "Ljava.lang.Class;", 0x2, "Ljava.lang.ClassNotFoundException;", "()Ljava/lang/Class<*>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "singleTon", "singleTon", 0x1a, "Lco.touchlab.squeaky.field.types.DateTimeType;", &CoTouchlabSqueakyFieldTypesDateTimeType_singleTon, NULL, .constantValue.asLong = 0 },
    { "dateTimeClass", "dateTimeClass", 0xa, "Ljava.lang.Class;", &CoTouchlabSqueakyFieldTypesDateTimeType_dateTimeClass, "Ljava/lang/Class<*>;", .constantValue.asLong = 0 },
    { "getMillisMethod", "getMillisMethod", 0xa, "Ljava.lang.reflect.Method;", &CoTouchlabSqueakyFieldTypesDateTimeType_getMillisMethod, NULL, .constantValue.asLong = 0 },
    { "millisConstructor", "millisConstructor", 0xa, "Ljava.lang.reflect.Constructor;", &CoTouchlabSqueakyFieldTypesDateTimeType_millisConstructor, "Ljava/lang/reflect/Constructor<*>;", .constantValue.asLong = 0 },
    { "associatedClassNames", "associatedClassNames", 0x1a, "[Ljava.lang.String;", &CoTouchlabSqueakyFieldTypesDateTimeType_associatedClassNames, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesDateTimeType = { 2, "DateTimeType", "co.touchlab.squeaky.field.types", NULL, 0x1, 12, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesDateTimeType;
}

@end

void CoTouchlabSqueakyFieldTypesDateTimeType_init(CoTouchlabSqueakyFieldTypesDateTimeType *self) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_(self, JreLoadEnum(CoTouchlabSqueakyFieldSqlType, LONG));
}

CoTouchlabSqueakyFieldTypesDateTimeType *new_CoTouchlabSqueakyFieldTypesDateTimeType_init() {
  CoTouchlabSqueakyFieldTypesDateTimeType *self = [CoTouchlabSqueakyFieldTypesDateTimeType alloc];
  CoTouchlabSqueakyFieldTypesDateTimeType_init(self);
  return self;
}

CoTouchlabSqueakyFieldTypesDateTimeType *create_CoTouchlabSqueakyFieldTypesDateTimeType_init() {
  return new_CoTouchlabSqueakyFieldTypesDateTimeType_init();
}

void CoTouchlabSqueakyFieldTypesDateTimeType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesDateTimeType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBaseDataType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

CoTouchlabSqueakyFieldTypesDateTimeType *new_CoTouchlabSqueakyFieldTypesDateTimeType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesDateTimeType *self = [CoTouchlabSqueakyFieldTypesDateTimeType alloc];
  CoTouchlabSqueakyFieldTypesDateTimeType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

CoTouchlabSqueakyFieldTypesDateTimeType *create_CoTouchlabSqueakyFieldTypesDateTimeType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  return new_CoTouchlabSqueakyFieldTypesDateTimeType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(sqlType, classes);
}

CoTouchlabSqueakyFieldTypesDateTimeType *CoTouchlabSqueakyFieldTypesDateTimeType_getSingleton() {
  CoTouchlabSqueakyFieldTypesDateTimeType_initialize();
  return CoTouchlabSqueakyFieldTypesDateTimeType_singleTon;
}

id CoTouchlabSqueakyFieldTypesDateTimeType_createInstanceWithJavaLangLong_(CoTouchlabSqueakyFieldTypesDateTimeType *self, JavaLangLong *sqlArg) {
  @try {
    if (CoTouchlabSqueakyFieldTypesDateTimeType_millisConstructor == nil) {
      IOSClass *clazz = CoTouchlabSqueakyFieldTypesDateTimeType_getDateTimeClass(self);
      CoTouchlabSqueakyFieldTypesDateTimeType_millisConstructor = [((IOSClass *) nil_chk(clazz)) getConstructor:[IOSObjectArray newArrayWithObjects:(id[]){ [IOSClass longClass] } count:1 type:IOSClass_class_()]];
    }
    return [((JavaLangReflectConstructor *) nil_chk(CoTouchlabSqueakyFieldTypesDateTimeType_millisConstructor)) newInstanceWithNSObjectArray:[IOSObjectArray newArrayWithObjects:(id[]){ sqlArg } count:1 type:NSObject_class_()]];
  }
  @catch (JavaLangException *e) {
    @throw CoTouchlabSqueakyMiscSqlExceptionUtil_createWithNSString_withNSException_(@"Could not use reflection to construct a Joda DateTime", e);
  }
}

JavaLangLong *CoTouchlabSqueakyFieldTypesDateTimeType_extractMillisWithId_(CoTouchlabSqueakyFieldTypesDateTimeType *self, id javaObject) {
  @try {
    if (CoTouchlabSqueakyFieldTypesDateTimeType_getMillisMethod == nil) {
      IOSClass *clazz = CoTouchlabSqueakyFieldTypesDateTimeType_getDateTimeClass(self);
      CoTouchlabSqueakyFieldTypesDateTimeType_getMillisMethod = [((IOSClass *) nil_chk(clazz)) getMethod:@"getMillis" parameterTypes:[IOSObjectArray newArrayWithLength:0 type:IOSClass_class_()]];
    }
    if (javaObject == nil) {
      return nil;
    }
    else {
      return (JavaLangLong *) cast_chk([((JavaLangReflectMethod *) nil_chk(CoTouchlabSqueakyFieldTypesDateTimeType_getMillisMethod)) invokeWithId:javaObject withNSObjectArray:[IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]], [JavaLangLong class]);
    }
  }
  @catch (JavaLangException *e) {
    @throw CoTouchlabSqueakyMiscSqlExceptionUtil_createWithNSString_withNSException_(JreStrcat("$@", @"Could not use reflection to get millis from Joda DateTime: ", javaObject), e);
  }
}

IOSClass *CoTouchlabSqueakyFieldTypesDateTimeType_getDateTimeClass(CoTouchlabSqueakyFieldTypesDateTimeType *self) {
  if (CoTouchlabSqueakyFieldTypesDateTimeType_dateTimeClass == nil) {
    CoTouchlabSqueakyFieldTypesDateTimeType_dateTimeClass = IOSClass_forName_(@"org.joda.time.DateTime");
  }
  return CoTouchlabSqueakyFieldTypesDateTimeType_dateTimeClass;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesDateTimeType)
