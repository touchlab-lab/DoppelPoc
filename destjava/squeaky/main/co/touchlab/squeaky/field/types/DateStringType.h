//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/DateStringType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesDateStringType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesDateStringType_RESTRICT
#define CoTouchlabSqueakyFieldTypesDateStringType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesDateStringType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesDateStringType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesDateStringType_) && (CoTouchlabSqueakyFieldTypesDateStringType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesDateStringType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesDateStringType_

#define CoTouchlabSqueakyFieldTypesBaseDateType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesBaseDateType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/BaseDateType.h"

@class CoTouchlabSqueakyFieldFieldType;
@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;
@protocol AndroidDatabaseCursor;

@interface CoTouchlabSqueakyFieldTypesDateStringType : CoTouchlabSqueakyFieldTypesBaseDateType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesDateStringType *)getSingleton;

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)obj;

- (id)makeConfigObjectWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType;

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr;

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos;

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType;

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesDateStringType)

inline jint CoTouchlabSqueakyFieldTypesDateStringType_get_DEFAULT_WIDTH();
inline jint CoTouchlabSqueakyFieldTypesDateStringType_set_DEFAULT_WIDTH(jint value);
inline jint *CoTouchlabSqueakyFieldTypesDateStringType_getRef_DEFAULT_WIDTH();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT jint CoTouchlabSqueakyFieldTypesDateStringType_DEFAULT_WIDTH;
J2OBJC_STATIC_FIELD_PRIMITIVE(CoTouchlabSqueakyFieldTypesDateStringType, DEFAULT_WIDTH, jint)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateStringType *CoTouchlabSqueakyFieldTypesDateStringType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesDateStringType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesDateStringType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateStringType *new_CoTouchlabSqueakyFieldTypesDateStringType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateStringType *create_CoTouchlabSqueakyFieldTypesDateStringType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesDateStringType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldTypesDateStringType *self, CoTouchlabSqueakyFieldSqlType *sqlType);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateStringType *new_CoTouchlabSqueakyFieldTypesDateStringType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDateStringType *create_CoTouchlabSqueakyFieldTypesDateStringType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesDateStringType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesDateStringType_INCLUDE_ALL")
