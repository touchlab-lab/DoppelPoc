//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/BooleanType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/BooleanObjectType.h"
#include "co/touchlab/squeaky/field/types/BooleanType.h"

@interface CoTouchlabSqueakyFieldTypesBooleanType ()

- (instancetype)init;

@end

inline CoTouchlabSqueakyFieldTypesBooleanType *CoTouchlabSqueakyFieldTypesBooleanType_get_singleTon();
static CoTouchlabSqueakyFieldTypesBooleanType *CoTouchlabSqueakyFieldTypesBooleanType_singleTon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBooleanType, singleTon, CoTouchlabSqueakyFieldTypesBooleanType *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesBooleanType_init(CoTouchlabSqueakyFieldTypesBooleanType *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBooleanType *new_CoTouchlabSqueakyFieldTypesBooleanType_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesBooleanType *create_CoTouchlabSqueakyFieldTypesBooleanType_init();

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesBooleanType)

@implementation CoTouchlabSqueakyFieldTypesBooleanType

+ (CoTouchlabSqueakyFieldTypesBooleanType *)getSingleton {
  return CoTouchlabSqueakyFieldTypesBooleanType_getSingleton();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType {
  CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(self, sqlType);
  return self;
}

- (jboolean)isPrimitive {
  return true;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesBooleanType class]) {
    CoTouchlabSqueakyFieldTypesBooleanType_singleTon = new_CoTouchlabSqueakyFieldTypesBooleanType_init();
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesBooleanType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSingleton", NULL, "Lco.touchlab.squeaky.field.types.BooleanType;", 0x9, NULL, NULL },
    { "init", "BooleanType", NULL, 0x2, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:", "BooleanType", NULL, 0x4, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:", "BooleanType", NULL, 0x4, NULL, NULL },
    { "isPrimitive", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "singleTon", "singleTon", 0x1a, "Lco.touchlab.squeaky.field.types.BooleanType;", &CoTouchlabSqueakyFieldTypesBooleanType_singleTon, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanType = { 2, "BooleanType", "co.touchlab.squeaky.field.types", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesBooleanType;
}

@end

CoTouchlabSqueakyFieldTypesBooleanType *CoTouchlabSqueakyFieldTypesBooleanType_getSingleton() {
  CoTouchlabSqueakyFieldTypesBooleanType_initialize();
  return CoTouchlabSqueakyFieldTypesBooleanType_singleTon;
}

void CoTouchlabSqueakyFieldTypesBooleanType_init(CoTouchlabSqueakyFieldTypesBooleanType *self) {
  CoTouchlabSqueakyFieldTypesBooleanObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, JreLoadEnum(CoTouchlabSqueakyFieldSqlType, BOOLEAN), [IOSObjectArray newArrayWithObjects:(id[]){ [IOSClass booleanClass] } count:1 type:IOSClass_class_()]);
}

CoTouchlabSqueakyFieldTypesBooleanType *new_CoTouchlabSqueakyFieldTypesBooleanType_init() {
  CoTouchlabSqueakyFieldTypesBooleanType *self = [CoTouchlabSqueakyFieldTypesBooleanType alloc];
  CoTouchlabSqueakyFieldTypesBooleanType_init(self);
  return self;
}

CoTouchlabSqueakyFieldTypesBooleanType *create_CoTouchlabSqueakyFieldTypesBooleanType_init() {
  return new_CoTouchlabSqueakyFieldTypesBooleanType_init();
}

void CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesBooleanType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBooleanObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

CoTouchlabSqueakyFieldTypesBooleanType *new_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBooleanType *self = [CoTouchlabSqueakyFieldTypesBooleanType alloc];
  CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

CoTouchlabSqueakyFieldTypesBooleanType *create_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  return new_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(sqlType, classes);
}

void CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldTypesBooleanType *self, CoTouchlabSqueakyFieldSqlType *sqlType) {
  CoTouchlabSqueakyFieldTypesBooleanObjectType_initWithCoTouchlabSqueakyFieldSqlType_(self, sqlType);
}

CoTouchlabSqueakyFieldTypesBooleanType *new_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType) {
  CoTouchlabSqueakyFieldTypesBooleanType *self = [CoTouchlabSqueakyFieldTypesBooleanType alloc];
  CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(self, sqlType);
  return self;
}

CoTouchlabSqueakyFieldTypesBooleanType *create_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(CoTouchlabSqueakyFieldSqlType *sqlType) {
  return new_CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(sqlType);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanType)
