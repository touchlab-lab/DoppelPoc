//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/BooleanIntegerType.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "android/database/Cursor.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/BooleanIntegerType.h"
#include "co/touchlab/squeaky/field/types/BooleanType.h"
#include "java/lang/Boolean.h"
#include "java/lang/Integer.h"
#include "java/sql/SQLException.h"

inline JavaLangInteger *CoTouchlabSqueakyFieldTypesBooleanIntegerType_get_TRUE_VALUE();
static JavaLangInteger *CoTouchlabSqueakyFieldTypesBooleanIntegerType_TRUE_VALUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBooleanIntegerType, TRUE_VALUE, JavaLangInteger *)

inline JavaLangInteger *CoTouchlabSqueakyFieldTypesBooleanIntegerType_get_FALSE_VALUE();
static JavaLangInteger *CoTouchlabSqueakyFieldTypesBooleanIntegerType_FALSE_VALUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBooleanIntegerType, FALSE_VALUE, JavaLangInteger *)

inline CoTouchlabSqueakyFieldTypesBooleanIntegerType *CoTouchlabSqueakyFieldTypesBooleanIntegerType_get_singleTon();
static CoTouchlabSqueakyFieldTypesBooleanIntegerType *CoTouchlabSqueakyFieldTypesBooleanIntegerType_singleTon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesBooleanIntegerType, singleTon, CoTouchlabSqueakyFieldTypesBooleanIntegerType *)

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesBooleanIntegerType)

@implementation CoTouchlabSqueakyFieldTypesBooleanIntegerType

+ (CoTouchlabSqueakyFieldTypesBooleanIntegerType *)getSingleton {
  return CoTouchlabSqueakyFieldTypesBooleanIntegerType_getSingleton();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesBooleanIntegerType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr {
  return [self javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:fieldType withId:JavaLangBoolean_valueOfWithBoolean_(JavaLangBoolean_parseBooleanWithNSString_(defaultStr))];
}

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)obj {
  return ([((JavaLangBoolean *) nil_chk((JavaLangBoolean *) cast_chk(obj, [JavaLangBoolean class]))) booleanValue] ? CoTouchlabSqueakyFieldTypesBooleanIntegerType_TRUE_VALUE : CoTouchlabSqueakyFieldTypesBooleanIntegerType_FALSE_VALUE);
}

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos {
  return JavaLangInteger_valueOfWithInt_([((id<AndroidDatabaseCursor>) nil_chk(results)) getIntWithInt:columnPos]);
}

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos {
  return ([((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(sqlArg, [JavaLangInteger class]))) intValue] == 0 ? JreLoadStatic(JavaLangBoolean, FALSE) : JreLoadStatic(JavaLangBoolean, TRUE));
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesBooleanIntegerType class]) {
    CoTouchlabSqueakyFieldTypesBooleanIntegerType_TRUE_VALUE = JavaLangInteger_valueOfWithInt_(1);
    CoTouchlabSqueakyFieldTypesBooleanIntegerType_FALSE_VALUE = JavaLangInteger_valueOfWithInt_(0);
    CoTouchlabSqueakyFieldTypesBooleanIntegerType_singleTon = new_CoTouchlabSqueakyFieldTypesBooleanIntegerType_init();
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesBooleanIntegerType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSingleton", NULL, "Lco.touchlab.squeaky.field.types.BooleanIntegerType;", 0x9, NULL, NULL },
    { "init", "BooleanIntegerType", NULL, 0x1, NULL, NULL },
    { "parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:withNSString:", "parseDefaultString", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:withId:", "javaToSqlArg", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:withAndroidDatabaseCursor:withInt:", "resultToSqlArg", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:withId:withInt:", "sqlArgToJava", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TRUE_VALUE", "TRUE_VALUE", 0x1a, "Ljava.lang.Integer;", &CoTouchlabSqueakyFieldTypesBooleanIntegerType_TRUE_VALUE, NULL, .constantValue.asLong = 0 },
    { "FALSE_VALUE", "FALSE_VALUE", 0x1a, "Ljava.lang.Integer;", &CoTouchlabSqueakyFieldTypesBooleanIntegerType_FALSE_VALUE, NULL, .constantValue.asLong = 0 },
    { "singleTon", "singleTon", 0x1a, "Lco.touchlab.squeaky.field.types.BooleanIntegerType;", &CoTouchlabSqueakyFieldTypesBooleanIntegerType_singleTon, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesBooleanIntegerType = { 2, "BooleanIntegerType", "co.touchlab.squeaky.field.types", NULL, 0x1, 6, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesBooleanIntegerType;
}

@end

CoTouchlabSqueakyFieldTypesBooleanIntegerType *CoTouchlabSqueakyFieldTypesBooleanIntegerType_getSingleton() {
  CoTouchlabSqueakyFieldTypesBooleanIntegerType_initialize();
  return CoTouchlabSqueakyFieldTypesBooleanIntegerType_singleTon;
}

void CoTouchlabSqueakyFieldTypesBooleanIntegerType_init(CoTouchlabSqueakyFieldTypesBooleanIntegerType *self) {
  CoTouchlabSqueakyFieldTypesBooleanType_initWithCoTouchlabSqueakyFieldSqlType_(self, JreLoadEnum(CoTouchlabSqueakyFieldSqlType, INTEGER));
}

CoTouchlabSqueakyFieldTypesBooleanIntegerType *new_CoTouchlabSqueakyFieldTypesBooleanIntegerType_init() {
  CoTouchlabSqueakyFieldTypesBooleanIntegerType *self = [CoTouchlabSqueakyFieldTypesBooleanIntegerType alloc];
  CoTouchlabSqueakyFieldTypesBooleanIntegerType_init(self);
  return self;
}

CoTouchlabSqueakyFieldTypesBooleanIntegerType *create_CoTouchlabSqueakyFieldTypesBooleanIntegerType_init() {
  return new_CoTouchlabSqueakyFieldTypesBooleanIntegerType_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesBooleanIntegerType)
