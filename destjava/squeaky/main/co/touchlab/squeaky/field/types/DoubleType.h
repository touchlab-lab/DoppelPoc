//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/DoubleType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("CoTouchlabSqueakyFieldTypesDoubleType_INCLUDE_ALL")
#ifdef CoTouchlabSqueakyFieldTypesDoubleType_RESTRICT
#define CoTouchlabSqueakyFieldTypesDoubleType_INCLUDE_ALL 0
#else
#define CoTouchlabSqueakyFieldTypesDoubleType_INCLUDE_ALL 1
#endif
#undef CoTouchlabSqueakyFieldTypesDoubleType_RESTRICT

#if !defined (CoTouchlabSqueakyFieldTypesDoubleType_) && (CoTouchlabSqueakyFieldTypesDoubleType_INCLUDE_ALL || defined(CoTouchlabSqueakyFieldTypesDoubleType_INCLUDE))
#define CoTouchlabSqueakyFieldTypesDoubleType_

#define CoTouchlabSqueakyFieldTypesDoubleObjectType_RESTRICT 1
#define CoTouchlabSqueakyFieldTypesDoubleObjectType_INCLUDE 1
#include "co/touchlab/squeaky/field/types/DoubleObjectType.h"

@class CoTouchlabSqueakyFieldSqlType;
@class IOSObjectArray;

@interface CoTouchlabSqueakyFieldTypesDoubleType : CoTouchlabSqueakyFieldTypesDoubleObjectType

#pragma mark Public

+ (CoTouchlabSqueakyFieldTypesDoubleType *)getSingleton;

- (jboolean)isPrimitive;

#pragma mark Protected

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes;

@end

J2OBJC_STATIC_INIT(CoTouchlabSqueakyFieldTypesDoubleType)

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDoubleType *CoTouchlabSqueakyFieldTypesDoubleType_getSingleton();

FOUNDATION_EXPORT void CoTouchlabSqueakyFieldTypesDoubleType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesDoubleType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDoubleType *new_CoTouchlabSqueakyFieldTypesDoubleType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT CoTouchlabSqueakyFieldTypesDoubleType *create_CoTouchlabSqueakyFieldTypesDoubleType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes);

J2OBJC_TYPE_LITERAL_HEADER(CoTouchlabSqueakyFieldTypesDoubleType)

#endif

#pragma pop_macro("CoTouchlabSqueakyFieldTypesDoubleType_INCLUDE_ALL")
