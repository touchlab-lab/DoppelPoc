//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/DateType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "android/database/Cursor.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/BaseDateType.h"
#include "co/touchlab/squeaky/field/types/DateType.h"
#include "co/touchlab/squeaky/misc/SqlExceptionUtil.h"
#include "java/sql/SQLException.h"
#include "java/sql/Timestamp.h"
#include "java/text/ParseException.h"
#include "java/util/Date.h"

@interface CoTouchlabSqueakyFieldTypesDateType ()

- (instancetype)init;

@end

inline CoTouchlabSqueakyFieldTypesDateType *CoTouchlabSqueakyFieldTypesDateType_get_singleTon();
static CoTouchlabSqueakyFieldTypesDateType *CoTouchlabSqueakyFieldTypesDateType_singleTon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesDateType, singleTon, CoTouchlabSqueakyFieldTypesDateType *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesDateType_init(CoTouchlabSqueakyFieldTypesDateType *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesDateType *new_CoTouchlabSqueakyFieldTypesDateType_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesDateType *create_CoTouchlabSqueakyFieldTypesDateType_init();

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesDateType)

@implementation CoTouchlabSqueakyFieldTypesDateType

+ (CoTouchlabSqueakyFieldTypesDateType *)getSingleton {
  return CoTouchlabSqueakyFieldTypesDateType_getSingleton();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesDateType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

- (id)parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withNSString:(NSString *)defaultStr {
  CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *dateFormatConfig = CoTouchlabSqueakyFieldTypesBaseDateType_convertDateStringConfigWithCoTouchlabSqueakyFieldFieldType_withCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_(fieldType, [self getDefaultDateFormatConfig]);
  @try {
    return new_JavaSqlTimestamp_initWithLong_([((JavaUtilDate *) nil_chk(CoTouchlabSqueakyFieldTypesBaseDateType_parseDateStringWithCoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig_withNSString_(dateFormatConfig, defaultStr))) getTime]);
  }
  @catch (JavaTextParseException *e) {
    @throw CoTouchlabSqueakyMiscSqlExceptionUtil_createWithNSString_withNSException_(JreStrcat("$$$@C", @"Problems parsing default date string '", defaultStr, @"' using '", dateFormatConfig, '\''), e);
  }
}

- (id)resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                              withAndroidDatabaseCursor:(id<AndroidDatabaseCursor>)results
                                                withInt:(jint)columnPos {
  @throw new_JavaSqlSQLException_initWithNSString_(@"Android does not support timestamp.  Use JAVA_DATE_LONG or JAVA_DATE_STRING types");
}

- (id)sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)sqlArg
                                              withInt:(jint)columnPos {
  JavaSqlTimestamp *value = (JavaSqlTimestamp *) cast_chk(sqlArg, [JavaSqlTimestamp class]);
  return new_JavaUtilDate_initWithLong_([((JavaSqlTimestamp *) nil_chk(value)) getTime]);
}

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)javaObject {
  JavaUtilDate *date = (JavaUtilDate *) cast_chk(javaObject, [JavaUtilDate class]);
  return new_JavaSqlTimestamp_initWithLong_([((JavaUtilDate *) nil_chk(date)) getTime]);
}

- (CoTouchlabSqueakyFieldTypesBaseDateType_DateStringFormatConfig *)getDefaultDateFormatConfig {
  return JreLoadStatic(CoTouchlabSqueakyFieldTypesBaseDateType, defaultDateFormatConfig);
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesDateType class]) {
    CoTouchlabSqueakyFieldTypesDateType_singleTon = new_CoTouchlabSqueakyFieldTypesDateType_init();
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesDateType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSingleton", NULL, "Lco.touchlab.squeaky.field.types.DateType;", 0x9, NULL, NULL },
    { "init", "DateType", NULL, 0x2, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:", "DateType", NULL, 0x4, NULL, NULL },
    { "parseDefaultStringWithCoTouchlabSqueakyFieldFieldType:withNSString:", "parseDefaultString", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "resultToSqlArgWithCoTouchlabSqueakyFieldFieldType:withAndroidDatabaseCursor:withInt:", "resultToSqlArg", "Ljava.lang.Object;", 0x1, "Ljava.sql.SQLException;", NULL },
    { "sqlArgToJavaWithCoTouchlabSqueakyFieldFieldType:withId:withInt:", "sqlArgToJava", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:withId:", "javaToSqlArg", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "getDefaultDateFormatConfig", NULL, "Lco.touchlab.squeaky.field.types.BaseDateType$DateStringFormatConfig;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "singleTon", "singleTon", 0x1a, "Lco.touchlab.squeaky.field.types.DateType;", &CoTouchlabSqueakyFieldTypesDateType_singleTon, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesDateType = { 2, "DateType", "co.touchlab.squeaky.field.types", NULL, 0x1, 8, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesDateType;
}

@end

CoTouchlabSqueakyFieldTypesDateType *CoTouchlabSqueakyFieldTypesDateType_getSingleton() {
  CoTouchlabSqueakyFieldTypesDateType_initialize();
  return CoTouchlabSqueakyFieldTypesDateType_singleTon;
}

void CoTouchlabSqueakyFieldTypesDateType_init(CoTouchlabSqueakyFieldTypesDateType *self) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, JreLoadEnum(CoTouchlabSqueakyFieldSqlType, DATE), [IOSObjectArray newArrayWithObjects:(id[]){ JavaUtilDate_class_() } count:1 type:IOSClass_class_()]);
}

CoTouchlabSqueakyFieldTypesDateType *new_CoTouchlabSqueakyFieldTypesDateType_init() {
  CoTouchlabSqueakyFieldTypesDateType *self = [CoTouchlabSqueakyFieldTypesDateType alloc];
  CoTouchlabSqueakyFieldTypesDateType_init(self);
  return self;
}

CoTouchlabSqueakyFieldTypesDateType *create_CoTouchlabSqueakyFieldTypesDateType_init() {
  return new_CoTouchlabSqueakyFieldTypesDateType_init();
}

void CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesDateType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesBaseDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

CoTouchlabSqueakyFieldTypesDateType *new_CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesDateType *self = [CoTouchlabSqueakyFieldTypesDateType alloc];
  CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

CoTouchlabSqueakyFieldTypesDateType *create_CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  return new_CoTouchlabSqueakyFieldTypesDateType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(sqlType, classes);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesDateType)
