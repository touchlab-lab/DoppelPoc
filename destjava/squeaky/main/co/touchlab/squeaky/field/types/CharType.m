//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/squeaky/core/src/main/java/co/touchlab/squeaky/field/types/CharType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "co/touchlab/squeaky/field/FieldType.h"
#include "co/touchlab/squeaky/field/SqlType.h"
#include "co/touchlab/squeaky/field/types/CharType.h"
#include "co/touchlab/squeaky/field/types/CharacterObjectType.h"
#include "java/lang/Character.h"

@interface CoTouchlabSqueakyFieldTypesCharType ()

- (instancetype)init;

@end

inline CoTouchlabSqueakyFieldTypesCharType *CoTouchlabSqueakyFieldTypesCharType_get_singleTon();
static CoTouchlabSqueakyFieldTypesCharType *CoTouchlabSqueakyFieldTypesCharType_singleTon;
J2OBJC_STATIC_FIELD_OBJ_FINAL(CoTouchlabSqueakyFieldTypesCharType, singleTon, CoTouchlabSqueakyFieldTypesCharType *)

__attribute__((unused)) static void CoTouchlabSqueakyFieldTypesCharType_init(CoTouchlabSqueakyFieldTypesCharType *self);

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesCharType *new_CoTouchlabSqueakyFieldTypesCharType_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static CoTouchlabSqueakyFieldTypesCharType *create_CoTouchlabSqueakyFieldTypesCharType_init();

J2OBJC_INITIALIZED_DEFN(CoTouchlabSqueakyFieldTypesCharType)

@implementation CoTouchlabSqueakyFieldTypesCharType

+ (CoTouchlabSqueakyFieldTypesCharType *)getSingleton {
  return CoTouchlabSqueakyFieldTypesCharType_getSingleton();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  CoTouchlabSqueakyFieldTypesCharType_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithCoTouchlabSqueakyFieldSqlType:(CoTouchlabSqueakyFieldSqlType *)sqlType
                                    withIOSClassArray:(IOSObjectArray *)classes {
  CoTouchlabSqueakyFieldTypesCharType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

- (id)javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:(CoTouchlabSqueakyFieldFieldType *)fieldType
                                               withId:(id)javaObject {
  JavaLangCharacter *character = (JavaLangCharacter *) cast_chk(javaObject, [JavaLangCharacter class]);
  if (character == nil || [character charValue] == 0) {
    return nil;
  }
  else {
    return character;
  }
}

- (jboolean)isPrimitive {
  return true;
}

+ (void)initialize {
  if (self == [CoTouchlabSqueakyFieldTypesCharType class]) {
    CoTouchlabSqueakyFieldTypesCharType_singleTon = new_CoTouchlabSqueakyFieldTypesCharType_init();
    J2OBJC_SET_INITIALIZED(CoTouchlabSqueakyFieldTypesCharType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getSingleton", NULL, "Lco.touchlab.squeaky.field.types.CharType;", 0x9, NULL, NULL },
    { "init", "CharType", NULL, 0x2, NULL, NULL },
    { "initWithCoTouchlabSqueakyFieldSqlType:withIOSClassArray:", "CharType", NULL, 0x4, NULL, NULL },
    { "javaToSqlArgWithCoTouchlabSqueakyFieldFieldType:withId:", "javaToSqlArg", "Ljava.lang.Object;", 0x1, NULL, NULL },
    { "isPrimitive", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "singleTon", "singleTon", 0x1a, "Lco.touchlab.squeaky.field.types.CharType;", &CoTouchlabSqueakyFieldTypesCharType_singleTon, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _CoTouchlabSqueakyFieldTypesCharType = { 2, "CharType", "co.touchlab.squeaky.field.types", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_CoTouchlabSqueakyFieldTypesCharType;
}

@end

CoTouchlabSqueakyFieldTypesCharType *CoTouchlabSqueakyFieldTypesCharType_getSingleton() {
  CoTouchlabSqueakyFieldTypesCharType_initialize();
  return CoTouchlabSqueakyFieldTypesCharType_singleTon;
}

void CoTouchlabSqueakyFieldTypesCharType_init(CoTouchlabSqueakyFieldTypesCharType *self) {
  CoTouchlabSqueakyFieldTypesCharacterObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, JreLoadEnum(CoTouchlabSqueakyFieldSqlType, CHAR), [IOSObjectArray newArrayWithObjects:(id[]){ [IOSClass charClass] } count:1 type:IOSClass_class_()]);
}

CoTouchlabSqueakyFieldTypesCharType *new_CoTouchlabSqueakyFieldTypesCharType_init() {
  CoTouchlabSqueakyFieldTypesCharType *self = [CoTouchlabSqueakyFieldTypesCharType alloc];
  CoTouchlabSqueakyFieldTypesCharType_init(self);
  return self;
}

CoTouchlabSqueakyFieldTypesCharType *create_CoTouchlabSqueakyFieldTypesCharType_init() {
  return new_CoTouchlabSqueakyFieldTypesCharType_init();
}

void CoTouchlabSqueakyFieldTypesCharType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldTypesCharType *self, CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesCharacterObjectType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
}

CoTouchlabSqueakyFieldTypesCharType *new_CoTouchlabSqueakyFieldTypesCharType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  CoTouchlabSqueakyFieldTypesCharType *self = [CoTouchlabSqueakyFieldTypesCharType alloc];
  CoTouchlabSqueakyFieldTypesCharType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(self, sqlType, classes);
  return self;
}

CoTouchlabSqueakyFieldTypesCharType *create_CoTouchlabSqueakyFieldTypesCharType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(CoTouchlabSqueakyFieldSqlType *sqlType, IOSObjectArray *classes) {
  return new_CoTouchlabSqueakyFieldTypesCharType_initWithCoTouchlabSqueakyFieldSqlType_withIOSClassArray_(sqlType, classes);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(CoTouchlabSqueakyFieldTypesCharType)
