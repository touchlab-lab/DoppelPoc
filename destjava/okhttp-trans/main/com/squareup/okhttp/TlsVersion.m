//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/TlsVersion.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/TlsVersion.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(ComSquareupOkhttpTlsVersion *self, NSString *javaName, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComSquareupOkhttpTlsVersion *new_ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(NSString *javaName, NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpTlsVersion)

ComSquareupOkhttpTlsVersion *ComSquareupOkhttpTlsVersion_values_[4];

@implementation ComSquareupOkhttpTlsVersion

+ (ComSquareupOkhttpTlsVersion *)forJavaNameWithNSString:(NSString *)javaName {
  return ComSquareupOkhttpTlsVersion_forJavaNameWithNSString_(javaName);
}

+ (IOSObjectArray *)values {
  return ComSquareupOkhttpTlsVersion_values();
}

+ (ComSquareupOkhttpTlsVersion *)valueOfWithNSString:(NSString *)name {
  return ComSquareupOkhttpTlsVersion_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [ComSquareupOkhttpTlsVersion class]) {
    JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_2) = new_ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(@"TLSv1.2", @"TLS_1_2", 0);
    JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_1) = new_ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(@"TLSv1.1", @"TLS_1_1", 1);
    JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_0) = new_ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(@"TLSv1", @"TLS_1_0", 2);
    JreEnum(ComSquareupOkhttpTlsVersion, SSL_3_0) = new_ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(@"SSLv3", @"SSL_3_0", 3);
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpTlsVersion)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "forJavaNameWithNSString:", "forJavaName", "Lcom.squareup.okhttp.TlsVersion;", 0x8, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TLS_1_2", "TLS_1_2", 0x4019, "Lcom.squareup.okhttp.TlsVersion;", &JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_2), NULL, .constantValue.asLong = 0 },
    { "TLS_1_1", "TLS_1_1", 0x4019, "Lcom.squareup.okhttp.TlsVersion;", &JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_1), NULL, .constantValue.asLong = 0 },
    { "TLS_1_0", "TLS_1_0", 0x4019, "Lcom.squareup.okhttp.TlsVersion;", &JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_0), NULL, .constantValue.asLong = 0 },
    { "SSL_3_0", "SSL_3_0", 0x4019, "Lcom.squareup.okhttp.TlsVersion;", &JreEnum(ComSquareupOkhttpTlsVersion, SSL_3_0), NULL, .constantValue.asLong = 0 },
    { "javaName_", NULL, 0x10, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lcom.squareup.okhttp.TlsVersion;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpTlsVersion = { 2, "TlsVersion", "com.squareup.okhttp", NULL, 0x4011, 1, methods, 5, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lcom/squareup/okhttp/TlsVersion;>;" };
  return &_ComSquareupOkhttpTlsVersion;
}

@end

void ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(ComSquareupOkhttpTlsVersion *self, NSString *javaName, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->javaName_ = javaName;
}

ComSquareupOkhttpTlsVersion *new_ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(NSString *javaName, NSString *__name, jint __ordinal) {
  ComSquareupOkhttpTlsVersion *self = [ComSquareupOkhttpTlsVersion alloc];
  ComSquareupOkhttpTlsVersion_initWithNSString_withNSString_withInt_(self, javaName, __name, __ordinal);
  return self;
}

ComSquareupOkhttpTlsVersion *ComSquareupOkhttpTlsVersion_forJavaNameWithNSString_(NSString *javaName) {
  ComSquareupOkhttpTlsVersion_initialize();
  {
    NSArray *__caseValues = [NSArray arrayWithObjects:@"TLSv1.2", @"TLSv1.1", @"TLSv1", @"SSLv3", nil];
    NSUInteger __index = [__caseValues indexOfObject:javaName];
    switch (__index) {
      case 0:
      return JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_2);
      case 1:
      return JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_1);
      case 2:
      return JreEnum(ComSquareupOkhttpTlsVersion, TLS_1_0);
      case 3:
      return JreEnum(ComSquareupOkhttpTlsVersion, SSL_3_0);
    }
  }
  @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Unexpected TLS version: ", javaName));
}

IOSObjectArray *ComSquareupOkhttpTlsVersion_values() {
  ComSquareupOkhttpTlsVersion_initialize();
  return [IOSObjectArray arrayWithObjects:ComSquareupOkhttpTlsVersion_values_ count:4 type:ComSquareupOkhttpTlsVersion_class_()];
}

ComSquareupOkhttpTlsVersion *ComSquareupOkhttpTlsVersion_valueOfWithNSString_(NSString *name) {
  ComSquareupOkhttpTlsVersion_initialize();
  for (int i = 0; i < 4; i++) {
    ComSquareupOkhttpTlsVersion *e = ComSquareupOkhttpTlsVersion_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

ComSquareupOkhttpTlsVersion *ComSquareupOkhttpTlsVersion_fromOrdinal(NSUInteger ordinal) {
  ComSquareupOkhttpTlsVersion_initialize();
  if (ordinal >= 4) {
    return nil;
  }
  return ComSquareupOkhttpTlsVersion_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpTlsVersion)
