//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/FormEncodingBuilder.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/FormEncodingBuilder.h"
#include "com/squareup/okhttp/MediaType.h"
#include "com/squareup/okhttp/RequestBody.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/AssertionError.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "java/net/URLEncoder.h"

@interface ComSquareupOkhttpFormEncodingBuilder () {
 @public
  JavaLangStringBuilder *content_;
}

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpFormEncodingBuilder, content_, JavaLangStringBuilder *)

inline ComSquareupOkhttpMediaType *ComSquareupOkhttpFormEncodingBuilder_get_CONTENT_TYPE();
static ComSquareupOkhttpMediaType *ComSquareupOkhttpFormEncodingBuilder_CONTENT_TYPE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpFormEncodingBuilder, CONTENT_TYPE, ComSquareupOkhttpMediaType *)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpFormEncodingBuilder)

@implementation ComSquareupOkhttpFormEncodingBuilder

- (ComSquareupOkhttpFormEncodingBuilder *)addWithNSString:(NSString *)name
                                             withNSString:(NSString *)value {
  if ([((JavaLangStringBuilder *) nil_chk(content_)) length] > 0) {
    (void) [content_ appendWithChar:'&'];
  }
  @try {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([content_ appendWithNSString:JavaNetURLEncoder_encodeWithNSString_withNSString_(name, @"UTF-8")])) appendWithChar:'='])) appendWithNSString:JavaNetURLEncoder_encodeWithNSString_withNSString_(value, @"UTF-8")];
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangAssertionError_initWithId_(e);
  }
  return self;
}

- (ComSquareupOkhttpRequestBody *)build {
  if ([((JavaLangStringBuilder *) nil_chk(content_)) length] == 0) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Form encoded body must have at least one part.");
  }
  IOSByteArray *contentBytes = [((NSString *) nil_chk([content_ description])) getBytesWithCharset:JreLoadStatic(ComSquareupOkhttpInternalUtil, UTF_8)];
  return ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withByteArray_(ComSquareupOkhttpFormEncodingBuilder_CONTENT_TYPE, contentBytes);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpFormEncodingBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [ComSquareupOkhttpFormEncodingBuilder class]) {
    ComSquareupOkhttpFormEncodingBuilder_CONTENT_TYPE = ComSquareupOkhttpMediaType_parseWithNSString_(@"application/x-www-form-urlencoded");
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpFormEncodingBuilder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "addWithNSString:withNSString:", "add", "Lcom.squareup.okhttp.FormEncodingBuilder;", 0x1, NULL, NULL },
    { "build", NULL, "Lcom.squareup.okhttp.RequestBody;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CONTENT_TYPE", "CONTENT_TYPE", 0x1a, "Lcom.squareup.okhttp.MediaType;", &ComSquareupOkhttpFormEncodingBuilder_CONTENT_TYPE, NULL, .constantValue.asLong = 0 },
    { "content_", NULL, 0x12, "Ljava.lang.StringBuilder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpFormEncodingBuilder = { 2, "FormEncodingBuilder", "com.squareup.okhttp", NULL, 0x11, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpFormEncodingBuilder;
}

@end

void ComSquareupOkhttpFormEncodingBuilder_init(ComSquareupOkhttpFormEncodingBuilder *self) {
  NSObject_init(self);
  self->content_ = new_JavaLangStringBuilder_init();
}

ComSquareupOkhttpFormEncodingBuilder *new_ComSquareupOkhttpFormEncodingBuilder_init() {
  ComSquareupOkhttpFormEncodingBuilder *self = [ComSquareupOkhttpFormEncodingBuilder alloc];
  ComSquareupOkhttpFormEncodingBuilder_init(self);
  return self;
}

ComSquareupOkhttpFormEncodingBuilder *create_ComSquareupOkhttpFormEncodingBuilder_init() {
  return new_ComSquareupOkhttpFormEncodingBuilder_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpFormEncodingBuilder)
