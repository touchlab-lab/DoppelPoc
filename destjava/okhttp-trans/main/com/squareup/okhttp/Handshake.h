//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/Handshake.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComSquareupOkhttpHandshake_INCLUDE_ALL")
#ifdef ComSquareupOkhttpHandshake_RESTRICT
#define ComSquareupOkhttpHandshake_INCLUDE_ALL 0
#else
#define ComSquareupOkhttpHandshake_INCLUDE_ALL 1
#endif
#undef ComSquareupOkhttpHandshake_RESTRICT

#if !defined (ComSquareupOkhttpHandshake_) && (ComSquareupOkhttpHandshake_INCLUDE_ALL || defined(ComSquareupOkhttpHandshake_INCLUDE))
#define ComSquareupOkhttpHandshake_

@protocol JavaSecurityPrincipal;
@protocol JavaUtilList;
@protocol JavaxNetSslSSLSession;

@interface ComSquareupOkhttpHandshake : NSObject

#pragma mark Public

- (NSString *)cipherSuite;

- (jboolean)isEqual:(id)other;

+ (ComSquareupOkhttpHandshake *)getWithJavaxNetSslSSLSession:(id<JavaxNetSslSSLSession>)session;

+ (ComSquareupOkhttpHandshake *)getWithNSString:(NSString *)cipherSuite
                               withJavaUtilList:(id<JavaUtilList>)peerCertificates
                               withJavaUtilList:(id<JavaUtilList>)localCertificates;

- (NSUInteger)hash;

- (id<JavaUtilList>)localCertificates;

- (id<JavaSecurityPrincipal>)localPrincipal;

- (id<JavaUtilList>)peerCertificates;

- (id<JavaSecurityPrincipal>)peerPrincipal;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpHandshake)

FOUNDATION_EXPORT ComSquareupOkhttpHandshake *ComSquareupOkhttpHandshake_getWithJavaxNetSslSSLSession_(id<JavaxNetSslSSLSession> session);

FOUNDATION_EXPORT ComSquareupOkhttpHandshake *ComSquareupOkhttpHandshake_getWithNSString_withJavaUtilList_withJavaUtilList_(NSString *cipherSuite, id<JavaUtilList> peerCertificates, id<JavaUtilList> localCertificates);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpHandshake)

#endif

#pragma pop_macro("ComSquareupOkhttpHandshake_INCLUDE_ALL")
