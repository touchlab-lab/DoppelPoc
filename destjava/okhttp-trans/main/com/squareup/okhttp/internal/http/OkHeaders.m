//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/http/OkHeaders.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Authenticator.h"
#include "com/squareup/okhttp/Challenge.h"
#include "com/squareup/okhttp/Headers.h"
#include "com/squareup/okhttp/Request.h"
#include "com/squareup/okhttp/Response.h"
#include "com/squareup/okhttp/internal/Platform.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "com/squareup/okhttp/internal/http/HeaderParser.h"
#include "com/squareup/okhttp/internal/http/OkHeaders.h"
#include "java/io/IOException.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"
#include "java/lang/StringBuilder.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/Proxy.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"

@interface ComSquareupOkhttpInternalHttpOkHeaders ()

- (instancetype)init;

+ (jlong)stringToLongWithNSString:(NSString *)s;

+ (NSString *)buildCookieHeaderWithJavaUtilList:(id<JavaUtilList>)cookies;

+ (id<JavaUtilSet>)varyFieldsWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response;

@end

inline id<JavaUtilComparator> ComSquareupOkhttpInternalHttpOkHeaders_get_FIELD_NAME_COMPARATOR();
static id<JavaUtilComparator> ComSquareupOkhttpInternalHttpOkHeaders_FIELD_NAME_COMPARATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalHttpOkHeaders, FIELD_NAME_COMPARATOR, id<JavaUtilComparator>)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpOkHeaders_init(ComSquareupOkhttpInternalHttpOkHeaders *self);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpOkHeaders *new_ComSquareupOkhttpInternalHttpOkHeaders_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpOkHeaders *create_ComSquareupOkhttpInternalHttpOkHeaders_init();

__attribute__((unused)) static jlong ComSquareupOkhttpInternalHttpOkHeaders_stringToLongWithNSString_(NSString *s);

__attribute__((unused)) static NSString *ComSquareupOkhttpInternalHttpOkHeaders_buildCookieHeaderWithJavaUtilList_(id<JavaUtilList> cookies);

__attribute__((unused)) static id<JavaUtilSet> ComSquareupOkhttpInternalHttpOkHeaders_varyFieldsWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response);

@interface ComSquareupOkhttpInternalHttpOkHeaders_$1 : NSObject < JavaUtilComparator >

- (jint)compareWithId:(NSString *)a
               withId:(NSString *)b;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpOkHeaders_$1)

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpOkHeaders_$1_init(ComSquareupOkhttpInternalHttpOkHeaders_$1 *self);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpOkHeaders_$1 *new_ComSquareupOkhttpInternalHttpOkHeaders_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpOkHeaders_$1 *create_ComSquareupOkhttpInternalHttpOkHeaders_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpOkHeaders_$1)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpInternalHttpOkHeaders)

NSString *ComSquareupOkhttpInternalHttpOkHeaders_PREFIX;
NSString *ComSquareupOkhttpInternalHttpOkHeaders_SENT_MILLIS;
NSString *ComSquareupOkhttpInternalHttpOkHeaders_RECEIVED_MILLIS;
NSString *ComSquareupOkhttpInternalHttpOkHeaders_SELECTED_PROTOCOL;

@implementation ComSquareupOkhttpInternalHttpOkHeaders

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalHttpOkHeaders_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (jlong)contentLengthWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  return ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpRequest_(request);
}

+ (jlong)contentLengthWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpResponse_(response);
}

+ (jlong)contentLengthWithComSquareupOkhttpHeaders:(ComSquareupOkhttpHeaders *)headers {
  return ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpHeaders_(headers);
}

+ (jlong)stringToLongWithNSString:(NSString *)s {
  return ComSquareupOkhttpInternalHttpOkHeaders_stringToLongWithNSString_(s);
}

+ (id<JavaUtilMap>)toMultimapWithComSquareupOkhttpHeaders:(ComSquareupOkhttpHeaders *)headers
                                             withNSString:(NSString *)valueForNullKey {
  return ComSquareupOkhttpInternalHttpOkHeaders_toMultimapWithComSquareupOkhttpHeaders_withNSString_(headers, valueForNullKey);
}

+ (void)addCookiesWithComSquareupOkhttpRequest_Builder:(ComSquareupOkhttpRequest_Builder *)builder
                                       withJavaUtilMap:(id<JavaUtilMap>)cookieHeaders {
  ComSquareupOkhttpInternalHttpOkHeaders_addCookiesWithComSquareupOkhttpRequest_Builder_withJavaUtilMap_(builder, cookieHeaders);
}

+ (NSString *)buildCookieHeaderWithJavaUtilList:(id<JavaUtilList>)cookies {
  return ComSquareupOkhttpInternalHttpOkHeaders_buildCookieHeaderWithJavaUtilList_(cookies);
}

+ (jboolean)varyMatchesWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)cachedResponse
                        withComSquareupOkhttpHeaders:(ComSquareupOkhttpHeaders *)cachedRequest
                        withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)newRequest {
  return ComSquareupOkhttpInternalHttpOkHeaders_varyMatchesWithComSquareupOkhttpResponse_withComSquareupOkhttpHeaders_withComSquareupOkhttpRequest_(cachedResponse, cachedRequest, newRequest);
}

+ (jboolean)hasVaryAllWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return ComSquareupOkhttpInternalHttpOkHeaders_hasVaryAllWithComSquareupOkhttpResponse_(response);
}

+ (id<JavaUtilSet>)varyFieldsWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return ComSquareupOkhttpInternalHttpOkHeaders_varyFieldsWithComSquareupOkhttpResponse_(response);
}

+ (ComSquareupOkhttpHeaders *)varyHeadersWithComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response {
  return ComSquareupOkhttpInternalHttpOkHeaders_varyHeadersWithComSquareupOkhttpResponse_(response);
}

+ (jboolean)isEndToEndWithNSString:(NSString *)fieldName {
  return ComSquareupOkhttpInternalHttpOkHeaders_isEndToEndWithNSString_(fieldName);
}

+ (id<JavaUtilList>)parseChallengesWithComSquareupOkhttpHeaders:(ComSquareupOkhttpHeaders *)responseHeaders
                                                   withNSString:(NSString *)challengeHeader {
  return ComSquareupOkhttpInternalHttpOkHeaders_parseChallengesWithComSquareupOkhttpHeaders_withNSString_(responseHeaders, challengeHeader);
}

+ (ComSquareupOkhttpRequest *)processAuthHeaderWithComSquareupOkhttpAuthenticator:(id<ComSquareupOkhttpAuthenticator>)authenticator
                                                    withComSquareupOkhttpResponse:(ComSquareupOkhttpResponse *)response
                                                                 withJavaNetProxy:(JavaNetProxy *)proxy {
  return ComSquareupOkhttpInternalHttpOkHeaders_processAuthHeaderWithComSquareupOkhttpAuthenticator_withComSquareupOkhttpResponse_withJavaNetProxy_(authenticator, response, proxy);
}

+ (void)initialize {
  if (self == [ComSquareupOkhttpInternalHttpOkHeaders class]) {
    ComSquareupOkhttpInternalHttpOkHeaders_FIELD_NAME_COMPARATOR = new_ComSquareupOkhttpInternalHttpOkHeaders_$1_init();
    ComSquareupOkhttpInternalHttpOkHeaders_PREFIX = [((ComSquareupOkhttpInternalPlatform *) nil_chk(ComSquareupOkhttpInternalPlatform_get())) getPrefix];
    ComSquareupOkhttpInternalHttpOkHeaders_SENT_MILLIS = JreStrcat("$$", ComSquareupOkhttpInternalHttpOkHeaders_PREFIX, @"-Sent-Millis");
    ComSquareupOkhttpInternalHttpOkHeaders_RECEIVED_MILLIS = JreStrcat("$$", ComSquareupOkhttpInternalHttpOkHeaders_PREFIX, @"-Received-Millis");
    ComSquareupOkhttpInternalHttpOkHeaders_SELECTED_PROTOCOL = JreStrcat("$$", ComSquareupOkhttpInternalHttpOkHeaders_PREFIX, @"-Selected-Protocol");
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpInternalHttpOkHeaders)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "OkHeaders", NULL, 0x2, NULL, NULL },
    { "contentLengthWithComSquareupOkhttpRequest:", "contentLength", "J", 0x9, NULL, NULL },
    { "contentLengthWithComSquareupOkhttpResponse:", "contentLength", "J", 0x9, NULL, NULL },
    { "contentLengthWithComSquareupOkhttpHeaders:", "contentLength", "J", 0x9, NULL, NULL },
    { "stringToLongWithNSString:", "stringToLong", "J", 0xa, NULL, NULL },
    { "toMultimapWithComSquareupOkhttpHeaders:withNSString:", "toMultimap", "Ljava.util.Map;", 0x9, NULL, "(Lcom/squareup/okhttp/Headers;Ljava/lang/String;)Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;" },
    { "addCookiesWithComSquareupOkhttpRequest_Builder:withJavaUtilMap:", "addCookies", "V", 0x9, NULL, "(Lcom/squareup/okhttp/Request$Builder;Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;>;)V" },
    { "buildCookieHeaderWithJavaUtilList:", "buildCookieHeader", "Ljava.lang.String;", 0xa, NULL, "(Ljava/util/List<Ljava/lang/String;>;)Ljava/lang/String;" },
    { "varyMatchesWithComSquareupOkhttpResponse:withComSquareupOkhttpHeaders:withComSquareupOkhttpRequest:", "varyMatches", "Z", 0x9, NULL, NULL },
    { "hasVaryAllWithComSquareupOkhttpResponse:", "hasVaryAll", "Z", 0x9, NULL, NULL },
    { "varyFieldsWithComSquareupOkhttpResponse:", "varyFields", "Ljava.util.Set;", 0xa, NULL, "(Lcom/squareup/okhttp/Response;)Ljava/util/Set<Ljava/lang/String;>;" },
    { "varyHeadersWithComSquareupOkhttpResponse:", "varyHeaders", "Lcom.squareup.okhttp.Headers;", 0x9, NULL, NULL },
    { "isEndToEndWithNSString:", "isEndToEnd", "Z", 0x8, NULL, NULL },
    { "parseChallengesWithComSquareupOkhttpHeaders:withNSString:", "parseChallenges", "Ljava.util.List;", 0x9, NULL, "(Lcom/squareup/okhttp/Headers;Ljava/lang/String;)Ljava/util/List<Lcom/squareup/okhttp/Challenge;>;" },
    { "processAuthHeaderWithComSquareupOkhttpAuthenticator:withComSquareupOkhttpResponse:withJavaNetProxy:", "processAuthHeader", "Lcom.squareup.okhttp.Request;", 0x9, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "FIELD_NAME_COMPARATOR", "FIELD_NAME_COMPARATOR", 0x1a, "Ljava.util.Comparator;", &ComSquareupOkhttpInternalHttpOkHeaders_FIELD_NAME_COMPARATOR, "Ljava/util/Comparator<Ljava/lang/String;>;", .constantValue.asLong = 0 },
    { "PREFIX", "PREFIX", 0x18, "Ljava.lang.String;", &ComSquareupOkhttpInternalHttpOkHeaders_PREFIX, NULL, .constantValue.asLong = 0 },
    { "SENT_MILLIS", "SENT_MILLIS", 0x19, "Ljava.lang.String;", &ComSquareupOkhttpInternalHttpOkHeaders_SENT_MILLIS, NULL, .constantValue.asLong = 0 },
    { "RECEIVED_MILLIS", "RECEIVED_MILLIS", 0x19, "Ljava.lang.String;", &ComSquareupOkhttpInternalHttpOkHeaders_RECEIVED_MILLIS, NULL, .constantValue.asLong = 0 },
    { "SELECTED_PROTOCOL", "SELECTED_PROTOCOL", 0x19, "Ljava.lang.String;", &ComSquareupOkhttpInternalHttpOkHeaders_SELECTED_PROTOCOL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpOkHeaders = { 2, "OkHeaders", "com.squareup.okhttp.internal.http", NULL, 0x11, 15, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpOkHeaders;
}

@end

void ComSquareupOkhttpInternalHttpOkHeaders_init(ComSquareupOkhttpInternalHttpOkHeaders *self) {
  NSObject_init(self);
}

ComSquareupOkhttpInternalHttpOkHeaders *new_ComSquareupOkhttpInternalHttpOkHeaders_init() {
  ComSquareupOkhttpInternalHttpOkHeaders *self = [ComSquareupOkhttpInternalHttpOkHeaders alloc];
  ComSquareupOkhttpInternalHttpOkHeaders_init(self);
  return self;
}

ComSquareupOkhttpInternalHttpOkHeaders *create_ComSquareupOkhttpInternalHttpOkHeaders_init() {
  return new_ComSquareupOkhttpInternalHttpOkHeaders_init();
}

jlong ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpRequest_(ComSquareupOkhttpRequest *request) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  return ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpHeaders_([((ComSquareupOkhttpRequest *) nil_chk(request)) headers]);
}

jlong ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  return ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpHeaders_([((ComSquareupOkhttpResponse *) nil_chk(response)) headers]);
}

jlong ComSquareupOkhttpInternalHttpOkHeaders_contentLengthWithComSquareupOkhttpHeaders_(ComSquareupOkhttpHeaders *headers) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  return ComSquareupOkhttpInternalHttpOkHeaders_stringToLongWithNSString_([((ComSquareupOkhttpHeaders *) nil_chk(headers)) getWithNSString:@"Content-Length"]);
}

jlong ComSquareupOkhttpInternalHttpOkHeaders_stringToLongWithNSString_(NSString *s) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  if (s == nil) return -1;
  @try {
    return JavaLangLong_parseLongWithNSString_(s);
  }
  @catch (JavaLangNumberFormatException *e) {
    return -1;
  }
}

id<JavaUtilMap> ComSquareupOkhttpInternalHttpOkHeaders_toMultimapWithComSquareupOkhttpHeaders_withNSString_(ComSquareupOkhttpHeaders *headers, NSString *valueForNullKey) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  id<JavaUtilMap> result = new_JavaUtilTreeMap_initWithJavaUtilComparator_(ComSquareupOkhttpInternalHttpOkHeaders_FIELD_NAME_COMPARATOR);
  for (jint i = 0, size = [((ComSquareupOkhttpHeaders *) nil_chk(headers)) size]; i < size; i++) {
    NSString *fieldName = [headers nameWithInt:i];
    NSString *value = [headers valueWithInt:i];
    id<JavaUtilList> allValues = new_JavaUtilArrayList_init();
    id<JavaUtilList> otherValues = [result getWithId:fieldName];
    if (otherValues != nil) {
      [allValues addAllWithJavaUtilCollection:otherValues];
    }
    [allValues addWithId:value];
    (void) [result putWithId:fieldName withId:JavaUtilCollections_unmodifiableListWithJavaUtilList_(allValues)];
  }
  if (valueForNullKey != nil) {
    (void) [result putWithId:nil withId:JavaUtilCollections_unmodifiableListWithJavaUtilList_(JavaUtilCollections_singletonListWithId_(valueForNullKey))];
  }
  return JavaUtilCollections_unmodifiableMapWithJavaUtilMap_(result);
}

void ComSquareupOkhttpInternalHttpOkHeaders_addCookiesWithComSquareupOkhttpRequest_Builder_withJavaUtilMap_(ComSquareupOkhttpRequest_Builder *builder, id<JavaUtilMap> cookieHeaders) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(cookieHeaders)) entrySet])) {
    NSString *key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (([@"Cookie" equalsIgnoreCase:key] || [@"Cookie2" equalsIgnoreCase:key]) && ![((id<JavaUtilList>) nil_chk([entry_ getValue])) isEmpty]) {
      (void) [((ComSquareupOkhttpRequest_Builder *) nil_chk(builder)) addHeaderWithNSString:key withNSString:ComSquareupOkhttpInternalHttpOkHeaders_buildCookieHeaderWithJavaUtilList_([entry_ getValue])];
    }
  }
}

NSString *ComSquareupOkhttpInternalHttpOkHeaders_buildCookieHeaderWithJavaUtilList_(id<JavaUtilList> cookies) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  if ([((id<JavaUtilList>) nil_chk(cookies)) size] == 1) return [cookies getWithInt:0];
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  for (jint i = 0, size = [cookies size]; i < size; i++) {
    if (i > 0) (void) [sb appendWithNSString:@"; "];
    (void) [sb appendWithNSString:[cookies getWithInt:i]];
  }
  return [sb description];
}

jboolean ComSquareupOkhttpInternalHttpOkHeaders_varyMatchesWithComSquareupOkhttpResponse_withComSquareupOkhttpHeaders_withComSquareupOkhttpRequest_(ComSquareupOkhttpResponse *cachedResponse, ComSquareupOkhttpHeaders *cachedRequest, ComSquareupOkhttpRequest *newRequest) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  for (NSString * __strong field in nil_chk(ComSquareupOkhttpInternalHttpOkHeaders_varyFieldsWithComSquareupOkhttpResponse_(cachedResponse))) {
    if (!ComSquareupOkhttpInternalUtil_equalWithId_withId_([((ComSquareupOkhttpHeaders *) nil_chk(cachedRequest)) valuesWithNSString:field], [((ComSquareupOkhttpRequest *) nil_chk(newRequest)) headersWithNSString:field])) return false;
  }
  return true;
}

jboolean ComSquareupOkhttpInternalHttpOkHeaders_hasVaryAllWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  return [((id<JavaUtilSet>) nil_chk(ComSquareupOkhttpInternalHttpOkHeaders_varyFieldsWithComSquareupOkhttpResponse_(response))) containsWithId:@"*"];
}

id<JavaUtilSet> ComSquareupOkhttpInternalHttpOkHeaders_varyFieldsWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  id<JavaUtilSet> result = JavaUtilCollections_emptySet();
  ComSquareupOkhttpHeaders *headers = [((ComSquareupOkhttpResponse *) nil_chk(response)) headers];
  for (jint i = 0, size = [((ComSquareupOkhttpHeaders *) nil_chk(headers)) size]; i < size; i++) {
    if (![@"Vary" equalsIgnoreCase:[headers nameWithInt:i]]) continue;
    NSString *value = [headers valueWithInt:i];
    if ([((id<JavaUtilSet>) nil_chk(result)) isEmpty]) {
      result = new_JavaUtilTreeSet_initWithJavaUtilComparator_(JreLoadStatic(NSString, CASE_INSENSITIVE_ORDER));
    }
    {
      IOSObjectArray *a__ = [((NSString *) nil_chk(value)) split:@","];
      NSString * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      NSString * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        NSString *varyField = *b__++;
        [result addWithId:[((NSString *) nil_chk(varyField)) trim]];
      }
    }
  }
  return result;
}

ComSquareupOkhttpHeaders *ComSquareupOkhttpInternalHttpOkHeaders_varyHeadersWithComSquareupOkhttpResponse_(ComSquareupOkhttpResponse *response) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  id<JavaUtilSet> varyFields = ComSquareupOkhttpInternalHttpOkHeaders_varyFieldsWithComSquareupOkhttpResponse_(response);
  if ([((id<JavaUtilSet>) nil_chk(varyFields)) isEmpty]) return [new_ComSquareupOkhttpHeaders_Builder_init() build];
  ComSquareupOkhttpHeaders *requestHeaders = [((ComSquareupOkhttpRequest *) nil_chk([((ComSquareupOkhttpResponse *) nil_chk([((ComSquareupOkhttpResponse *) nil_chk(response)) networkResponse])) request])) headers];
  ComSquareupOkhttpHeaders_Builder *result = new_ComSquareupOkhttpHeaders_Builder_init();
  for (jint i = 0, size = [((ComSquareupOkhttpHeaders *) nil_chk(requestHeaders)) size]; i < size; i++) {
    NSString *fieldName = [requestHeaders nameWithInt:i];
    if ([varyFields containsWithId:fieldName]) {
      (void) [result addWithNSString:fieldName withNSString:[requestHeaders valueWithInt:i]];
    }
  }
  return [result build];
}

jboolean ComSquareupOkhttpInternalHttpOkHeaders_isEndToEndWithNSString_(NSString *fieldName) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  return ![@"Connection" equalsIgnoreCase:fieldName] && ![@"Keep-Alive" equalsIgnoreCase:fieldName] && ![@"Proxy-Authenticate" equalsIgnoreCase:fieldName] && ![@"Proxy-Authorization" equalsIgnoreCase:fieldName] && ![@"TE" equalsIgnoreCase:fieldName] && ![@"Trailers" equalsIgnoreCase:fieldName] && ![@"Transfer-Encoding" equalsIgnoreCase:fieldName] && ![@"Upgrade" equalsIgnoreCase:fieldName];
}

id<JavaUtilList> ComSquareupOkhttpInternalHttpOkHeaders_parseChallengesWithComSquareupOkhttpHeaders_withNSString_(ComSquareupOkhttpHeaders *responseHeaders, NSString *challengeHeader) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  id<JavaUtilList> result = new_JavaUtilArrayList_init();
  for (jint i = 0, size = [((ComSquareupOkhttpHeaders *) nil_chk(responseHeaders)) size]; i < size; i++) {
    if (![((NSString *) nil_chk(challengeHeader)) equalsIgnoreCase:[responseHeaders nameWithInt:i]]) {
      continue;
    }
    NSString *value = [responseHeaders valueWithInt:i];
    jint pos = 0;
    while (pos < ((jint) [((NSString *) nil_chk(value)) length])) {
      jint tokenStart = pos;
      pos = ComSquareupOkhttpInternalHttpHeaderParser_skipUntilWithNSString_withInt_withNSString_(value, pos, @" ");
      NSString *scheme = [((NSString *) nil_chk([value substring:tokenStart endIndex:pos])) trim];
      pos = ComSquareupOkhttpInternalHttpHeaderParser_skipWhitespaceWithNSString_withInt_(value, pos);
      if (![value regionMatches:true thisOffset:pos aString:@"realm=\"" otherOffset:0 count:((jint) [@"realm=\"" length])]) {
        break;
      }
      pos += ((jint) [@"realm=\"" length]);
      jint realmStart = pos;
      pos = ComSquareupOkhttpInternalHttpHeaderParser_skipUntilWithNSString_withInt_withNSString_(value, pos, @"\"");
      NSString *realm = [value substring:realmStart endIndex:pos];
      pos++;
      pos = ComSquareupOkhttpInternalHttpHeaderParser_skipUntilWithNSString_withInt_withNSString_(value, pos, @",");
      pos++;
      pos = ComSquareupOkhttpInternalHttpHeaderParser_skipWhitespaceWithNSString_withInt_(value, pos);
      [result addWithId:new_ComSquareupOkhttpChallenge_initWithNSString_withNSString_(scheme, realm)];
    }
  }
  return result;
}

ComSquareupOkhttpRequest *ComSquareupOkhttpInternalHttpOkHeaders_processAuthHeaderWithComSquareupOkhttpAuthenticator_withComSquareupOkhttpResponse_withJavaNetProxy_(id<ComSquareupOkhttpAuthenticator> authenticator, ComSquareupOkhttpResponse *response, JavaNetProxy *proxy) {
  ComSquareupOkhttpInternalHttpOkHeaders_initialize();
  return [((ComSquareupOkhttpResponse *) nil_chk(response)) code] == JavaNetHttpURLConnection_HTTP_PROXY_AUTH ? [((id<ComSquareupOkhttpAuthenticator>) nil_chk(authenticator)) authenticateProxyWithJavaNetProxy:proxy withComSquareupOkhttpResponse:response] : [((id<ComSquareupOkhttpAuthenticator>) nil_chk(authenticator)) authenticateWithJavaNetProxy:proxy withComSquareupOkhttpResponse:response];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpOkHeaders)

@implementation ComSquareupOkhttpInternalHttpOkHeaders_$1

- (jint)compareWithId:(NSString *)a
               withId:(NSString *)b {
  if (a == b) {
    return 0;
  }
  else if (a == nil) {
    return -1;
  }
  else if (b == nil) {
    return 1;
  }
  else {
    return [((id<JavaUtilComparator>) nil_chk(JreLoadStatic(NSString, CASE_INSENSITIVE_ORDER))) compareWithId:a withId:b];
  }
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalHttpOkHeaders_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "compareWithId:withId:", "compare", "I", 0x1, NULL, NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpOkHeaders_$1 = { 2, "", "com.squareup.okhttp.internal.http", "OkHeaders", 0x8008, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Ljava/util/Comparator<Ljava/lang/String;>;" };
  return &_ComSquareupOkhttpInternalHttpOkHeaders_$1;
}

@end

void ComSquareupOkhttpInternalHttpOkHeaders_$1_init(ComSquareupOkhttpInternalHttpOkHeaders_$1 *self) {
  NSObject_init(self);
}

ComSquareupOkhttpInternalHttpOkHeaders_$1 *new_ComSquareupOkhttpInternalHttpOkHeaders_$1_init() {
  ComSquareupOkhttpInternalHttpOkHeaders_$1 *self = [ComSquareupOkhttpInternalHttpOkHeaders_$1 alloc];
  ComSquareupOkhttpInternalHttpOkHeaders_$1_init(self);
  return self;
}

ComSquareupOkhttpInternalHttpOkHeaders_$1 *create_ComSquareupOkhttpInternalHttpOkHeaders_$1_init() {
  return new_ComSquareupOkhttpInternalHttpOkHeaders_$1_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpOkHeaders_$1)
