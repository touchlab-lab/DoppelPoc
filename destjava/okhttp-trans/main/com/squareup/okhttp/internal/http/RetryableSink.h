//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/http/RetryableSink.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComSquareupOkhttpInternalHttpRetryableSink_INCLUDE_ALL")
#ifdef ComSquareupOkhttpInternalHttpRetryableSink_RESTRICT
#define ComSquareupOkhttpInternalHttpRetryableSink_INCLUDE_ALL 0
#else
#define ComSquareupOkhttpInternalHttpRetryableSink_INCLUDE_ALL 1
#endif
#undef ComSquareupOkhttpInternalHttpRetryableSink_RESTRICT

#if !defined (ComSquareupOkhttpInternalHttpRetryableSink_) && (ComSquareupOkhttpInternalHttpRetryableSink_INCLUDE_ALL || defined(ComSquareupOkhttpInternalHttpRetryableSink_INCLUDE))
#define ComSquareupOkhttpInternalHttpRetryableSink_

#define OkioSink_RESTRICT 1
#define OkioSink_INCLUDE 1
#include "okio/Sink.h"

@class OkioBuffer;
@class OkioTimeout;

@interface ComSquareupOkhttpInternalHttpRetryableSink : NSObject < OkioSink >

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithInt:(jint)limit;

- (void)close;

- (jlong)contentLength;

- (void)flush;

- (OkioTimeout *)timeout;

- (void)writeWithOkioBuffer:(OkioBuffer *)source
                   withLong:(jlong)byteCount;

- (void)writeToSocketWithOkioSink:(id<OkioSink>)socketOut;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalHttpRetryableSink)

FOUNDATION_EXPORT void ComSquareupOkhttpInternalHttpRetryableSink_initWithInt_(ComSquareupOkhttpInternalHttpRetryableSink *self, jint limit);

FOUNDATION_EXPORT ComSquareupOkhttpInternalHttpRetryableSink *new_ComSquareupOkhttpInternalHttpRetryableSink_initWithInt_(jint limit) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSquareupOkhttpInternalHttpRetryableSink *create_ComSquareupOkhttpInternalHttpRetryableSink_initWithInt_(jint limit);

FOUNDATION_EXPORT void ComSquareupOkhttpInternalHttpRetryableSink_init(ComSquareupOkhttpInternalHttpRetryableSink *self);

FOUNDATION_EXPORT ComSquareupOkhttpInternalHttpRetryableSink *new_ComSquareupOkhttpInternalHttpRetryableSink_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComSquareupOkhttpInternalHttpRetryableSink *create_ComSquareupOkhttpInternalHttpRetryableSink_init();

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalHttpRetryableSink)

#endif

#pragma pop_macro("ComSquareupOkhttpInternalHttpRetryableSink_INCLUDE_ALL")
