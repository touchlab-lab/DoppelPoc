//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/http/HeaderParser.java
//

#include "J2ObjC_source.h"
#include "com/squareup/okhttp/internal/http/HeaderParser.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NumberFormatException.h"

@interface ComSquareupOkhttpInternalHttpHeaderParser ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComSquareupOkhttpInternalHttpHeaderParser_init(ComSquareupOkhttpInternalHttpHeaderParser *self);

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHeaderParser *new_ComSquareupOkhttpInternalHttpHeaderParser_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalHttpHeaderParser *create_ComSquareupOkhttpInternalHttpHeaderParser_init();

@implementation ComSquareupOkhttpInternalHttpHeaderParser

+ (jint)skipUntilWithNSString:(NSString *)input
                      withInt:(jint)pos
                 withNSString:(NSString *)characters {
  return ComSquareupOkhttpInternalHttpHeaderParser_skipUntilWithNSString_withInt_withNSString_(input, pos, characters);
}

+ (jint)skipWhitespaceWithNSString:(NSString *)input
                           withInt:(jint)pos {
  return ComSquareupOkhttpInternalHttpHeaderParser_skipWhitespaceWithNSString_withInt_(input, pos);
}

+ (jint)parseSecondsWithNSString:(NSString *)value
                         withInt:(jint)defaultValue {
  return ComSquareupOkhttpInternalHttpHeaderParser_parseSecondsWithNSString_withInt_(value, defaultValue);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpInternalHttpHeaderParser_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "skipUntilWithNSString:withInt:withNSString:", "skipUntil", "I", 0x9, NULL, NULL },
    { "skipWhitespaceWithNSString:withInt:", "skipWhitespace", "I", 0x9, NULL, NULL },
    { "parseSecondsWithNSString:withInt:", "parseSeconds", "I", 0x9, NULL, NULL },
    { "init", "HeaderParser", NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalHttpHeaderParser = { 2, "HeaderParser", "com.squareup.okhttp.internal.http", NULL, 0x11, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalHttpHeaderParser;
}

@end

jint ComSquareupOkhttpInternalHttpHeaderParser_skipUntilWithNSString_withInt_withNSString_(NSString *input, jint pos, NSString *characters) {
  ComSquareupOkhttpInternalHttpHeaderParser_initialize();
  for (; pos < ((jint) [((NSString *) nil_chk(input)) length]); pos++) {
    if ([((NSString *) nil_chk(characters)) indexOf:[input charAtWithInt:pos]] != -1) {
      break;
    }
  }
  return pos;
}

jint ComSquareupOkhttpInternalHttpHeaderParser_skipWhitespaceWithNSString_withInt_(NSString *input, jint pos) {
  ComSquareupOkhttpInternalHttpHeaderParser_initialize();
  for (; pos < ((jint) [((NSString *) nil_chk(input)) length]); pos++) {
    jchar c = [input charAtWithInt:pos];
    if (c != ' ' && c != 0x0009) {
      break;
    }
  }
  return pos;
}

jint ComSquareupOkhttpInternalHttpHeaderParser_parseSecondsWithNSString_withInt_(NSString *value, jint defaultValue) {
  ComSquareupOkhttpInternalHttpHeaderParser_initialize();
  @try {
    jlong seconds = JavaLangLong_parseLongWithNSString_(value);
    if (seconds > JavaLangInteger_MAX_VALUE) {
      return JavaLangInteger_MAX_VALUE;
    }
    else if (seconds < 0) {
      return 0;
    }
    else {
      return (jint) seconds;
    }
  }
  @catch (JavaLangNumberFormatException *e) {
    return defaultValue;
  }
}

void ComSquareupOkhttpInternalHttpHeaderParser_init(ComSquareupOkhttpInternalHttpHeaderParser *self) {
  NSObject_init(self);
}

ComSquareupOkhttpInternalHttpHeaderParser *new_ComSquareupOkhttpInternalHttpHeaderParser_init() {
  ComSquareupOkhttpInternalHttpHeaderParser *self = [ComSquareupOkhttpInternalHttpHeaderParser alloc];
  ComSquareupOkhttpInternalHttpHeaderParser_init(self);
  return self;
}

ComSquareupOkhttpInternalHttpHeaderParser *create_ComSquareupOkhttpInternalHttpHeaderParser_init() {
  return new_ComSquareupOkhttpInternalHttpHeaderParser_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalHttpHeaderParser)
