//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/ws/WebSocket.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Call.h"
#include "com/squareup/okhttp/Connection.h"
#include "com/squareup/okhttp/OkHttpClient.h"
#include "com/squareup/okhttp/Protocol.h"
#include "com/squareup/okhttp/Request.h"
#include "com/squareup/okhttp/Response.h"
#include "com/squareup/okhttp/internal/Internal.h"
#include "com/squareup/okhttp/internal/NamedRunnable.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "com/squareup/okhttp/internal/ws/WebSocket.h"
#include "com/squareup/okhttp/internal/ws/WebSocketListener.h"
#include "com/squareup/okhttp/internal/ws/WebSocketReader.h"
#include "com/squareup/okhttp/internal/ws/WebSocketWriter.h"
#include "java/io/IOException.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Thread.h"
#include "java/net/ProtocolException.h"
#include "java/net/Socket.h"
#include "java/security/SecureRandom.h"
#include "java/util/Collections.h"
#include "java/util/List.h"
#include "java/util/Random.h"
#include "java/util/concurrent/Executor.h"
#include "java/util/concurrent/LinkedBlockingDeque.h"
#include "java/util/concurrent/ThreadPoolExecutor.h"
#include "java/util/concurrent/TimeUnit.h"
#include "okio/Buffer.h"
#include "okio/BufferedSink.h"
#include "okio/BufferedSource.h"
#include "okio/ByteString.h"
#include "okio/Okio.h"
#include "okio/Sink.h"
#include "okio/Source.h"

@interface ComSquareupOkhttpInternalWsWebSocket () {
 @public
  ComSquareupOkhttpOkHttpClient *client_;
  ComSquareupOkhttpRequest *request_;
  JavaUtilRandom *random_;
  NSString *key_;
  id<JavaUtilConcurrentExecutor> pongExecutor_;
  volatile_jboolean writerClosed_;
  volatile_jboolean readerClosed_;
  id closeLock_;
  jboolean connected_;
  ComSquareupOkhttpConnection *connection_;
  ComSquareupOkhttpInternalWsWebSocketWriter *writer_;
}

- (void)peerCloseWithOkioBuffer:(OkioBuffer *)buffer;

- (void)readerErrorCloseWithJavaIoIOException:(JavaIoIOException *)e
withComSquareupOkhttpInternalWsWebSocketListener:(id<ComSquareupOkhttpInternalWsWebSocketListener>)listener;

- (void)closeConnection;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, client_, ComSquareupOkhttpOkHttpClient *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, request_, ComSquareupOkhttpRequest *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, random_, JavaUtilRandom *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, key_, NSString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, pongExecutor_, id<JavaUtilConcurrentExecutor>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, closeLock_, id)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, connection_, ComSquareupOkhttpConnection *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket, writer_, ComSquareupOkhttpInternalWsWebSocketWriter *)

inline NSString *ComSquareupOkhttpInternalWsWebSocket_get_ACCEPT_MAGIC();
static NSString *ComSquareupOkhttpInternalWsWebSocket_ACCEPT_MAGIC = @"258EAFA5-E914-47DA-95CA-C5AB0DC85B11";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpInternalWsWebSocket, ACCEPT_MAGIC, NSString *)

inline jint ComSquareupOkhttpInternalWsWebSocket_get_CLOSE_PROTOCOL_EXCEPTION();
#define ComSquareupOkhttpInternalWsWebSocket_CLOSE_PROTOCOL_EXCEPTION 1002
J2OBJC_STATIC_FIELD_CONSTANT(ComSquareupOkhttpInternalWsWebSocket, CLOSE_PROTOCOL_EXCEPTION, jint)

__attribute__((unused)) static void ComSquareupOkhttpInternalWsWebSocket_peerCloseWithOkioBuffer_(ComSquareupOkhttpInternalWsWebSocket *self, OkioBuffer *buffer);

__attribute__((unused)) static void ComSquareupOkhttpInternalWsWebSocket_readerErrorCloseWithJavaIoIOException_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket *self, JavaIoIOException *e, id<ComSquareupOkhttpInternalWsWebSocketListener> listener);

__attribute__((unused)) static void ComSquareupOkhttpInternalWsWebSocket_closeConnection(ComSquareupOkhttpInternalWsWebSocket *self);

__attribute__((unused)) static void ComSquareupOkhttpInternalWsWebSocket_PayloadType_initWithNSString_withInt_(ComSquareupOkhttpInternalWsWebSocket_PayloadType *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static ComSquareupOkhttpInternalWsWebSocket_PayloadType *new_ComSquareupOkhttpInternalWsWebSocket_PayloadType_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable : ComSquareupOkhttpInternalNamedRunnable {
 @public
  ComSquareupOkhttpInternalWsWebSocket *this$0_;
  ComSquareupOkhttpInternalWsWebSocketReader *reader_;
  id<ComSquareupOkhttpInternalWsWebSocketListener> listener_;
}

- (instancetype)initWithComSquareupOkhttpInternalWsWebSocket:(ComSquareupOkhttpInternalWsWebSocket *)outer$
                                                withNSString:(NSString *)url
              withComSquareupOkhttpInternalWsWebSocketReader:(ComSquareupOkhttpInternalWsWebSocketReader *)reader
            withComSquareupOkhttpInternalWsWebSocketListener:(id<ComSquareupOkhttpInternalWsWebSocketListener>)listener;

- (void)execute;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable, this$0_, ComSquareupOkhttpInternalWsWebSocket *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable, reader_, ComSquareupOkhttpInternalWsWebSocketReader *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable, listener_, id<ComSquareupOkhttpInternalWsWebSocketListener>)

__attribute__((unused)) static void ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *self, ComSquareupOkhttpInternalWsWebSocket *outer$, NSString *url, ComSquareupOkhttpInternalWsWebSocketReader *reader, id<ComSquareupOkhttpInternalWsWebSocketListener> listener);

__attribute__((unused)) static ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *new_ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket *outer$, NSString *url, ComSquareupOkhttpInternalWsWebSocketReader *reader, id<ComSquareupOkhttpInternalWsWebSocketListener> listener) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *create_ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket *outer$, NSString *url, ComSquareupOkhttpInternalWsWebSocketReader *reader, id<ComSquareupOkhttpInternalWsWebSocketListener> listener);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable)

@interface ComSquareupOkhttpInternalWsWebSocket_$1 : NSObject < ComSquareupOkhttpInternalWsWebSocketReader_FrameCallback > {
 @public
  ComSquareupOkhttpInternalWsWebSocket *this$0_;
}

- (void)onPingWithOkioBuffer:(OkioBuffer *)buffer;

- (void)onCloseWithOkioBuffer:(OkioBuffer *)buffer;

- (instancetype)initWithComSquareupOkhttpInternalWsWebSocket:(ComSquareupOkhttpInternalWsWebSocket *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalWsWebSocket_$1)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket_$1, this$0_, ComSquareupOkhttpInternalWsWebSocket *)

__attribute__((unused)) static void ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(ComSquareupOkhttpInternalWsWebSocket_$1 *self, ComSquareupOkhttpInternalWsWebSocket *outer$);

__attribute__((unused)) static ComSquareupOkhttpInternalWsWebSocket_$1 *new_ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(ComSquareupOkhttpInternalWsWebSocket *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalWsWebSocket_$1 *create_ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(ComSquareupOkhttpInternalWsWebSocket *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalWsWebSocket_$1)

@interface ComSquareupOkhttpInternalWsWebSocket_$1_$1 : ComSquareupOkhttpInternalNamedRunnable {
 @public
  ComSquareupOkhttpInternalWsWebSocket_$1 *this$0_;
  OkioBuffer *val$buffer_;
}

- (void)execute;

- (instancetype)initWithComSquareupOkhttpInternalWsWebSocket_$1:(ComSquareupOkhttpInternalWsWebSocket_$1 *)outer$
                                                 withOkioBuffer:(OkioBuffer *)capture$0
                                                   withNSString:(NSString *)arg$0
                                              withNSObjectArray:(IOSObjectArray *)arg$1;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpInternalWsWebSocket_$1_$1)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket_$1_$1, this$0_, ComSquareupOkhttpInternalWsWebSocket_$1 *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpInternalWsWebSocket_$1_$1, val$buffer_, OkioBuffer *)

__attribute__((unused)) static void ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(ComSquareupOkhttpInternalWsWebSocket_$1_$1 *self, ComSquareupOkhttpInternalWsWebSocket_$1 *outer$, OkioBuffer *capture$0, NSString *arg$0, IOSObjectArray *arg$1);

__attribute__((unused)) static ComSquareupOkhttpInternalWsWebSocket_$1_$1 *new_ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(ComSquareupOkhttpInternalWsWebSocket_$1 *outer$, OkioBuffer *capture$0, NSString *arg$0, IOSObjectArray *arg$1) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpInternalWsWebSocket_$1_$1 *create_ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(ComSquareupOkhttpInternalWsWebSocket_$1 *outer$, OkioBuffer *capture$0, NSString *arg$0, IOSObjectArray *arg$1);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpInternalWsWebSocket_$1_$1)

@implementation ComSquareupOkhttpInternalWsWebSocket

+ (ComSquareupOkhttpInternalWsWebSocket *)newWebSocketWithComSquareupOkhttpOkHttpClient:(ComSquareupOkhttpOkHttpClient *)client
                                                           withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  return ComSquareupOkhttpInternalWsWebSocket_newWebSocketWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(client, request);
}

- (instancetype)initWithComSquareupOkhttpOkHttpClient:(ComSquareupOkhttpOkHttpClient *)client
                         withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
                                   withJavaUtilRandom:(JavaUtilRandom *)random {
  ComSquareupOkhttpInternalWsWebSocket_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withJavaUtilRandom_(self, client, request, random);
  return self;
}

- (ComSquareupOkhttpRequest *)request {
  return request_;
}

- (ComSquareupOkhttpResponse *)connectWithComSquareupOkhttpInternalWsWebSocketListener:(id<ComSquareupOkhttpInternalWsWebSocketListener>)listener {
  if (connected_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Already connected");
  if (JreLoadVolatileBoolean(&writerClosed_)) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Closed");
  ComSquareupOkhttpCall *call = [((ComSquareupOkhttpInternalInternal *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalInternal, instance))) newCallWithComSquareupOkhttpOkHttpClient:client_ withComSquareupOkhttpRequest:request_];
  ComSquareupOkhttpResponse *response = [JreLoadStatic(ComSquareupOkhttpInternalInternal, instance) callGetResponseWithComSquareupOkhttpCall:call withBoolean:true];
  if ([((ComSquareupOkhttpResponse *) nil_chk(response)) code] != 101) {
    [JreLoadStatic(ComSquareupOkhttpInternalInternal, instance) callEngineReleaseConnectionWithComSquareupOkhttpCall:call];
  }
  else {
    NSString *headerConnection = [response headerWithNSString:@"Connection"];
    if (![@"Upgrade" equalsIgnoreCase:headerConnection]) {
      @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Expected 'Connection' header value 'Upgrade' but was: ", headerConnection));
    }
    NSString *headerUpgrade = [response headerWithNSString:@"Upgrade"];
    if (![@"websocket" equalsIgnoreCase:headerUpgrade]) {
      @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$", @"Expected 'Upgrade' header value 'websocket' but was: ", headerUpgrade));
    }
    NSString *headerAccept = [response headerWithNSString:@"Sec-WebSocket-Accept"];
    NSString *acceptExpected = ComSquareupOkhttpInternalUtil_shaBase64WithNSString_(JreStrcat("$$", key_, ComSquareupOkhttpInternalWsWebSocket_ACCEPT_MAGIC));
    if (![((NSString *) nil_chk(acceptExpected)) isEqual:headerAccept]) {
      @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$$$$", @"Expected 'Sec-WebSocket-Accept' header value '", acceptExpected, @"' but was: ", headerAccept));
    }
    connection_ = [JreLoadStatic(ComSquareupOkhttpInternalInternal, instance) callEngineGetConnectionWithComSquareupOkhttpCall:call];
    if (![JreLoadStatic(ComSquareupOkhttpInternalInternal, instance) connectionClearOwnerWithComSquareupOkhttpConnection:connection_]) {
      @throw new_JavaLangIllegalStateException_initWithNSString_(@"Unable to take ownership of connection.");
    }
    [JreLoadStatic(ComSquareupOkhttpInternalInternal, instance) connectionSetOwnerWithComSquareupOkhttpConnection:connection_ withId:self];
    connected_ = true;
    JavaNetSocket *socket = [((ComSquareupOkhttpConnection *) nil_chk(connection_)) getSocket];
    id<OkioBufferedSink> sink = OkioOkio_bufferWithOkioSink_(OkioOkio_sinkWithJavaNetSocket_(socket));
    writer_ = new_ComSquareupOkhttpInternalWsWebSocketWriter_initWithBoolean_withOkioBufferedSink_withJavaUtilRandom_(true, sink, random_);
    id<OkioBufferedSource> source = OkioOkio_bufferWithOkioSource_(OkioOkio_sourceWithJavaNetSocket_(socket));
    ComSquareupOkhttpInternalWsWebSocketReader *reader = new_ComSquareupOkhttpInternalWsWebSocketReader_initWithBoolean_withOkioBufferedSource_withComSquareupOkhttpInternalWsWebSocketListener_withComSquareupOkhttpInternalWsWebSocketReader_FrameCallback_(true, source, listener, new_ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(self));
    ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *readerRunnable = new_ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(self, [((ComSquareupOkhttpRequest *) nil_chk(request_)) urlString], reader, listener);
    [new_JavaLangThread_initWithJavaLangRunnable_(readerRunnable) start];
  }
  return response;
}

- (id<OkioBufferedSink>)newMessageSinkWithComSquareupOkhttpInternalWsWebSocket_PayloadType:(ComSquareupOkhttpInternalWsWebSocket_PayloadType *)type {
  if (JreLoadVolatileBoolean(&writerClosed_)) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Closed");
  if (!connected_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Not connected");
  return [((ComSquareupOkhttpInternalWsWebSocketWriter *) nil_chk(writer_)) newMessageSinkWithComSquareupOkhttpInternalWsWebSocket_PayloadType:type];
}

- (void)sendMessageWithComSquareupOkhttpInternalWsWebSocket_PayloadType:(ComSquareupOkhttpInternalWsWebSocket_PayloadType *)type
                                                         withOkioBuffer:(OkioBuffer *)payload {
  if (JreLoadVolatileBoolean(&writerClosed_)) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Closed");
  if (!connected_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Not connected");
  [((ComSquareupOkhttpInternalWsWebSocketWriter *) nil_chk(writer_)) sendMessageWithComSquareupOkhttpInternalWsWebSocket_PayloadType:type withOkioBuffer:payload];
}

- (void)closeWithInt:(jint)code
        withNSString:(NSString *)reason {
  jboolean closeConnection;
  @synchronized(closeLock_) {
    if (JreLoadVolatileBoolean(&writerClosed_)) return;
    JreAssignVolatileBoolean(&writerClosed_, true);
    closeConnection = JreLoadVolatileBoolean(&readerClosed_);
  }
  [((ComSquareupOkhttpInternalWsWebSocketWriter *) nil_chk(writer_)) writeCloseWithInt:code withNSString:reason];
  writer_ = nil;
  if (closeConnection) {
    ComSquareupOkhttpInternalWsWebSocket_closeConnection(self);
  }
}

- (void)peerCloseWithOkioBuffer:(OkioBuffer *)buffer {
  ComSquareupOkhttpInternalWsWebSocket_peerCloseWithOkioBuffer_(self, buffer);
}

- (void)readerErrorCloseWithJavaIoIOException:(JavaIoIOException *)e
withComSquareupOkhttpInternalWsWebSocketListener:(id<ComSquareupOkhttpInternalWsWebSocketListener>)listener {
  ComSquareupOkhttpInternalWsWebSocket_readerErrorCloseWithJavaIoIOException_withComSquareupOkhttpInternalWsWebSocketListener_(self, e, listener);
}

- (void)closeConnection {
  ComSquareupOkhttpInternalWsWebSocket_closeConnection(self);
}

- (jboolean)isClosed {
  return JreLoadVolatileBoolean(&writerClosed_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "newWebSocketWithComSquareupOkhttpOkHttpClient:withComSquareupOkhttpRequest:", "newWebSocket", "Lcom.squareup.okhttp.internal.ws.WebSocket;", 0x9, NULL, NULL },
    { "initWithComSquareupOkhttpOkHttpClient:withComSquareupOkhttpRequest:withJavaUtilRandom:", "WebSocket", NULL, 0x0, NULL, NULL },
    { "request", NULL, "Lcom.squareup.okhttp.Request;", 0x1, NULL, NULL },
    { "connectWithComSquareupOkhttpInternalWsWebSocketListener:", "connect", "Lcom.squareup.okhttp.Response;", 0x1, "Ljava.io.IOException;", NULL },
    { "newMessageSinkWithComSquareupOkhttpInternalWsWebSocket_PayloadType:", "newMessageSink", "Lokio.BufferedSink;", 0x1, NULL, NULL },
    { "sendMessageWithComSquareupOkhttpInternalWsWebSocket_PayloadType:withOkioBuffer:", "sendMessage", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "closeWithInt:withNSString:", "close", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "peerCloseWithOkioBuffer:", "peerClose", "V", 0x2, "Ljava.io.IOException;", NULL },
    { "readerErrorCloseWithJavaIoIOException:withComSquareupOkhttpInternalWsWebSocketListener:", "readerErrorClose", "V", 0x2, NULL, NULL },
    { "closeConnection", NULL, "V", 0x2, "Ljava.io.IOException;", NULL },
    { "isClosed", NULL, "Z", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "ACCEPT_MAGIC", "ACCEPT_MAGIC", 0x1a, "Ljava.lang.String;", &ComSquareupOkhttpInternalWsWebSocket_ACCEPT_MAGIC, NULL, .constantValue.asLong = 0 },
    { "CLOSE_PROTOCOL_EXCEPTION", "CLOSE_PROTOCOL_EXCEPTION", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComSquareupOkhttpInternalWsWebSocket_CLOSE_PROTOCOL_EXCEPTION },
    { "client_", NULL, 0x12, "Lcom.squareup.okhttp.OkHttpClient;", NULL, NULL, .constantValue.asLong = 0 },
    { "request_", NULL, 0x12, "Lcom.squareup.okhttp.Request;", NULL, NULL, .constantValue.asLong = 0 },
    { "random_", NULL, 0x12, "Ljava.util.Random;", NULL, NULL, .constantValue.asLong = 0 },
    { "key_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "pongExecutor_", NULL, 0x12, "Ljava.util.concurrent.Executor;", NULL, NULL, .constantValue.asLong = 0 },
    { "writerClosed_", NULL, 0x42, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "readerClosed_", NULL, 0x42, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "closeLock_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "connected_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "connection_", NULL, 0x2, "Lcom.squareup.okhttp.Connection;", NULL, NULL, .constantValue.asLong = 0 },
    { "writer_", NULL, 0x2, "Lcom.squareup.okhttp.internal.ws.WebSocketWriter;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.internal.ws.WebSocket$PayloadType;", "Lcom.squareup.okhttp.internal.ws.WebSocket$ReaderRunnable;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalWsWebSocket = { 2, "WebSocket", "com.squareup.okhttp.internal.ws", NULL, 0x11, 11, methods, 13, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpInternalWsWebSocket;
}

@end

ComSquareupOkhttpInternalWsWebSocket *ComSquareupOkhttpInternalWsWebSocket_newWebSocketWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *request) {
  ComSquareupOkhttpInternalWsWebSocket_initialize();
  client = [((ComSquareupOkhttpOkHttpClient *) nil_chk(client)) clone];
  (void) [((ComSquareupOkhttpOkHttpClient *) nil_chk(client)) setProtocolsWithJavaUtilList:JavaUtilCollections_singletonListWithId_(JreLoadEnum(ComSquareupOkhttpProtocol, HTTP_1_1))];
  return new_ComSquareupOkhttpInternalWsWebSocket_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withJavaUtilRandom_(client, request, new_JavaSecuritySecureRandom_init());
}

void ComSquareupOkhttpInternalWsWebSocket_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withJavaUtilRandom_(ComSquareupOkhttpInternalWsWebSocket *self, ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *request, JavaUtilRandom *random) {
  NSObject_init(self);
  self->closeLock_ = new_NSObject_init();
  self->client_ = client;
  self->random_ = random;
  JavaUtilConcurrentThreadPoolExecutor *pongExecutor = new_JavaUtilConcurrentThreadPoolExecutor_initWithInt_withInt_withLong_withJavaUtilConcurrentTimeUnit_withJavaUtilConcurrentBlockingQueue_(1, 1, 1, JreLoadEnum(JavaUtilConcurrentTimeUnit, SECONDS), new_JavaUtilConcurrentLinkedBlockingDeque_init());
  [pongExecutor allowCoreThreadTimeOutWithBoolean:true];
  self->pongExecutor_ = pongExecutor;
  if (![@"GET" isEqual:[((ComSquareupOkhttpRequest *) nil_chk(request)) method]]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Request must be GET: ", [request method]));
  }
  NSString *url = [request urlString];
  NSString *httpUrl;
  if ([((NSString *) nil_chk(url)) hasPrefix:@"ws://"]) {
    httpUrl = JreStrcat("$$", @"http://", [url substring:5]);
  }
  else if ([url hasPrefix:@"wss://"]) {
    httpUrl = JreStrcat("$$", @"https://", [url substring:6]);
  }
  else if ([url hasPrefix:@"http://"] || [url hasPrefix:@"https://"]) {
    httpUrl = url;
  }
  else {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Request url must use 'ws', 'wss', 'http', or 'https' scheme: ", url));
  }
  IOSByteArray *nonce = [IOSByteArray newArrayWithLength:16];
  [((JavaUtilRandom *) nil_chk(random)) nextBytesWithByteArray:nonce];
  self->key_ = [((OkioByteString *) nil_chk(OkioByteString_ofWithByteArray_(nonce))) base64];
  self->request_ = [((ComSquareupOkhttpRequest_Builder *) nil_chk([((ComSquareupOkhttpRequest_Builder *) nil_chk([((ComSquareupOkhttpRequest_Builder *) nil_chk([((ComSquareupOkhttpRequest_Builder *) nil_chk([((ComSquareupOkhttpRequest_Builder *) nil_chk([((ComSquareupOkhttpRequest_Builder *) nil_chk([request newBuilder])) urlWithNSString:httpUrl])) headerWithNSString:@"Upgrade" withNSString:@"websocket"])) headerWithNSString:@"Connection" withNSString:@"Upgrade"])) headerWithNSString:@"Sec-WebSocket-Key" withNSString:self->key_])) headerWithNSString:@"Sec-WebSocket-Version" withNSString:@"13"])) build];
}

ComSquareupOkhttpInternalWsWebSocket *new_ComSquareupOkhttpInternalWsWebSocket_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withJavaUtilRandom_(ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *request, JavaUtilRandom *random) {
  ComSquareupOkhttpInternalWsWebSocket *self = [ComSquareupOkhttpInternalWsWebSocket alloc];
  ComSquareupOkhttpInternalWsWebSocket_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withJavaUtilRandom_(self, client, request, random);
  return self;
}

ComSquareupOkhttpInternalWsWebSocket *create_ComSquareupOkhttpInternalWsWebSocket_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withJavaUtilRandom_(ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *request, JavaUtilRandom *random) {
  return new_ComSquareupOkhttpInternalWsWebSocket_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withJavaUtilRandom_(client, request, random);
}

void ComSquareupOkhttpInternalWsWebSocket_peerCloseWithOkioBuffer_(ComSquareupOkhttpInternalWsWebSocket *self, OkioBuffer *buffer) {
  jboolean closeConnection;
  @synchronized(self->closeLock_) {
    JreAssignVolatileBoolean(&self->readerClosed_, true);
    closeConnection = JreLoadVolatileBoolean(&self->writerClosed_);
    JreAssignVolatileBoolean(&self->writerClosed_, true);
  }
  if (closeConnection) {
    ComSquareupOkhttpInternalWsWebSocket_closeConnection(self);
  }
  else {
    [((ComSquareupOkhttpInternalWsWebSocketWriter *) nil_chk(self->writer_)) writeCloseWithOkioBuffer:buffer];
  }
}

void ComSquareupOkhttpInternalWsWebSocket_readerErrorCloseWithJavaIoIOException_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket *self, JavaIoIOException *e, id<ComSquareupOkhttpInternalWsWebSocketListener> listener) {
  jboolean closeConnection;
  @synchronized(self->closeLock_) {
    JreAssignVolatileBoolean(&self->readerClosed_, true);
    closeConnection = !JreLoadVolatileBoolean(&self->writerClosed_);
    JreAssignVolatileBoolean(&self->writerClosed_, true);
  }
  if (closeConnection) {
    if ([e isKindOfClass:[JavaNetProtocolException class]]) {
      @try {
        [((ComSquareupOkhttpInternalWsWebSocketWriter *) nil_chk(self->writer_)) writeCloseWithInt:ComSquareupOkhttpInternalWsWebSocket_CLOSE_PROTOCOL_EXCEPTION withNSString:nil];
      }
      @catch (JavaIoIOException *ignored) {
      }
    }
    @try {
      ComSquareupOkhttpInternalWsWebSocket_closeConnection(self);
    }
    @catch (JavaIoIOException *ignored) {
    }
  }
  [((id<ComSquareupOkhttpInternalWsWebSocketListener>) nil_chk(listener)) onFailureWithJavaIoIOException:e];
}

void ComSquareupOkhttpInternalWsWebSocket_closeConnection(ComSquareupOkhttpInternalWsWebSocket *self) {
  [((ComSquareupOkhttpInternalInternal *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalInternal, instance))) connectionCloseIfOwnedByWithComSquareupOkhttpConnection:self->connection_ withId:self];
  self->connection_ = nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalWsWebSocket)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpInternalWsWebSocket_PayloadType)

ComSquareupOkhttpInternalWsWebSocket_PayloadType *ComSquareupOkhttpInternalWsWebSocket_PayloadType_values_[2];

@implementation ComSquareupOkhttpInternalWsWebSocket_PayloadType

+ (IOSObjectArray *)values {
  return ComSquareupOkhttpInternalWsWebSocket_PayloadType_values();
}

+ (ComSquareupOkhttpInternalWsWebSocket_PayloadType *)valueOfWithNSString:(NSString *)name {
  return ComSquareupOkhttpInternalWsWebSocket_PayloadType_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [ComSquareupOkhttpInternalWsWebSocket_PayloadType class]) {
    JreEnum(ComSquareupOkhttpInternalWsWebSocket_PayloadType, TEXT) = new_ComSquareupOkhttpInternalWsWebSocket_PayloadType_initWithNSString_withInt_(@"TEXT", 0);
    JreEnum(ComSquareupOkhttpInternalWsWebSocket_PayloadType, BINARY) = new_ComSquareupOkhttpInternalWsWebSocket_PayloadType_initWithNSString_withInt_(@"BINARY", 1);
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpInternalWsWebSocket_PayloadType)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "TEXT", "TEXT", 0x4019, "Lcom.squareup.okhttp.internal.ws.WebSocket$PayloadType;", &JreEnum(ComSquareupOkhttpInternalWsWebSocket_PayloadType, TEXT), NULL, .constantValue.asLong = 0 },
    { "BINARY", "BINARY", 0x4019, "Lcom.squareup.okhttp.internal.ws.WebSocket$PayloadType;", &JreEnum(ComSquareupOkhttpInternalWsWebSocket_PayloadType, BINARY), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lcom.squareup.okhttp.internal.ws.WebSocket$PayloadType;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalWsWebSocket_PayloadType = { 2, "PayloadType", "com.squareup.okhttp.internal.ws", "WebSocket", 0x4019, 0, NULL, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lcom/squareup/okhttp/internal/ws/WebSocket$PayloadType;>;" };
  return &_ComSquareupOkhttpInternalWsWebSocket_PayloadType;
}

@end

void ComSquareupOkhttpInternalWsWebSocket_PayloadType_initWithNSString_withInt_(ComSquareupOkhttpInternalWsWebSocket_PayloadType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

ComSquareupOkhttpInternalWsWebSocket_PayloadType *new_ComSquareupOkhttpInternalWsWebSocket_PayloadType_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  ComSquareupOkhttpInternalWsWebSocket_PayloadType *self = [ComSquareupOkhttpInternalWsWebSocket_PayloadType alloc];
  ComSquareupOkhttpInternalWsWebSocket_PayloadType_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *ComSquareupOkhttpInternalWsWebSocket_PayloadType_values() {
  ComSquareupOkhttpInternalWsWebSocket_PayloadType_initialize();
  return [IOSObjectArray arrayWithObjects:ComSquareupOkhttpInternalWsWebSocket_PayloadType_values_ count:2 type:ComSquareupOkhttpInternalWsWebSocket_PayloadType_class_()];
}

ComSquareupOkhttpInternalWsWebSocket_PayloadType *ComSquareupOkhttpInternalWsWebSocket_PayloadType_valueOfWithNSString_(NSString *name) {
  ComSquareupOkhttpInternalWsWebSocket_PayloadType_initialize();
  for (int i = 0; i < 2; i++) {
    ComSquareupOkhttpInternalWsWebSocket_PayloadType *e = ComSquareupOkhttpInternalWsWebSocket_PayloadType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

ComSquareupOkhttpInternalWsWebSocket_PayloadType *ComSquareupOkhttpInternalWsWebSocket_PayloadType_fromOrdinal(NSUInteger ordinal) {
  ComSquareupOkhttpInternalWsWebSocket_PayloadType_initialize();
  if (ordinal >= 2) {
    return nil;
  }
  return ComSquareupOkhttpInternalWsWebSocket_PayloadType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalWsWebSocket_PayloadType)

@implementation ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable

- (instancetype)initWithComSquareupOkhttpInternalWsWebSocket:(ComSquareupOkhttpInternalWsWebSocket *)outer$
                                                withNSString:(NSString *)url
              withComSquareupOkhttpInternalWsWebSocketReader:(ComSquareupOkhttpInternalWsWebSocketReader *)reader
            withComSquareupOkhttpInternalWsWebSocketListener:(id<ComSquareupOkhttpInternalWsWebSocketListener>)listener {
  ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(self, outer$, url, reader, listener);
  return self;
}

- (void)execute {
  while (!JreLoadVolatileBoolean(&this$0_->readerClosed_)) {
    @try {
      [((ComSquareupOkhttpInternalWsWebSocketReader *) nil_chk(reader_)) readMessage];
    }
    @catch (JavaIoIOException *e) {
      ComSquareupOkhttpInternalWsWebSocket_readerErrorCloseWithJavaIoIOException_withComSquareupOkhttpInternalWsWebSocketListener_(this$0_, e, listener_);
      return;
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpInternalWsWebSocket:withNSString:withComSquareupOkhttpInternalWsWebSocketReader:withComSquareupOkhttpInternalWsWebSocketListener:", "ReaderRunnable", NULL, 0x1, NULL, NULL },
    { "execute", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.ws.WebSocket;", NULL, NULL, .constantValue.asLong = 0 },
    { "reader_", NULL, 0x12, "Lcom.squareup.okhttp.internal.ws.WebSocketReader;", NULL, NULL, .constantValue.asLong = 0 },
    { "listener_", NULL, 0x12, "Lcom.squareup.okhttp.internal.ws.WebSocketListener;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable = { 2, "ReaderRunnable", "com.squareup.okhttp.internal.ws", "WebSocket", 0x2, 2, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable;
}

@end

void ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *self, ComSquareupOkhttpInternalWsWebSocket *outer$, NSString *url, ComSquareupOkhttpInternalWsWebSocketReader *reader, id<ComSquareupOkhttpInternalWsWebSocketListener> listener) {
  self->this$0_ = outer$;
  ComSquareupOkhttpInternalNamedRunnable_initWithNSString_withNSObjectArray_(self, JreStrcat("$$", @"WebSocketReader ", url), [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()]);
  self->reader_ = reader;
  self->listener_ = listener;
}

ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *new_ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket *outer$, NSString *url, ComSquareupOkhttpInternalWsWebSocketReader *reader, id<ComSquareupOkhttpInternalWsWebSocketListener> listener) {
  ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *self = [ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable alloc];
  ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(self, outer$, url, reader, listener);
  return self;
}

ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable *create_ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(ComSquareupOkhttpInternalWsWebSocket *outer$, NSString *url, ComSquareupOkhttpInternalWsWebSocketReader *reader, id<ComSquareupOkhttpInternalWsWebSocketListener> listener) {
  return new_ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable_initWithComSquareupOkhttpInternalWsWebSocket_withNSString_withComSquareupOkhttpInternalWsWebSocketReader_withComSquareupOkhttpInternalWsWebSocketListener_(outer$, url, reader, listener);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalWsWebSocket_ReaderRunnable)

@implementation ComSquareupOkhttpInternalWsWebSocket_$1

- (void)onPingWithOkioBuffer:(OkioBuffer *)buffer {
  [((id<JavaUtilConcurrentExecutor>) nil_chk(this$0_->pongExecutor_)) executeWithJavaLangRunnable:new_ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(self, buffer, @"WebSocket PongWriter", [IOSObjectArray newArrayWithLength:0 type:NSObject_class_()])];
}

- (void)onCloseWithOkioBuffer:(OkioBuffer *)buffer {
  ComSquareupOkhttpInternalWsWebSocket_peerCloseWithOkioBuffer_(this$0_, buffer);
}

- (instancetype)initWithComSquareupOkhttpInternalWsWebSocket:(ComSquareupOkhttpInternalWsWebSocket *)outer$ {
  ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onPingWithOkioBuffer:", "onPing", "V", 0x1, NULL, NULL },
    { "onCloseWithOkioBuffer:", "onClose", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "initWithComSquareupOkhttpInternalWsWebSocket:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.ws.WebSocket;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpInternalWsWebSocket", "connectWithComSquareupOkhttpInternalWsWebSocketListener:" };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalWsWebSocket_$1 = { 2, "", "com.squareup.okhttp.internal.ws", "WebSocket", 0x8008, 3, methods, 1, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComSquareupOkhttpInternalWsWebSocket_$1;
}

@end

void ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(ComSquareupOkhttpInternalWsWebSocket_$1 *self, ComSquareupOkhttpInternalWsWebSocket *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

ComSquareupOkhttpInternalWsWebSocket_$1 *new_ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(ComSquareupOkhttpInternalWsWebSocket *outer$) {
  ComSquareupOkhttpInternalWsWebSocket_$1 *self = [ComSquareupOkhttpInternalWsWebSocket_$1 alloc];
  ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(self, outer$);
  return self;
}

ComSquareupOkhttpInternalWsWebSocket_$1 *create_ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(ComSquareupOkhttpInternalWsWebSocket *outer$) {
  return new_ComSquareupOkhttpInternalWsWebSocket_$1_initWithComSquareupOkhttpInternalWsWebSocket_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalWsWebSocket_$1)

@implementation ComSquareupOkhttpInternalWsWebSocket_$1_$1

- (void)execute {
  @try {
    [((ComSquareupOkhttpInternalWsWebSocketWriter *) nil_chk(this$0_->this$0_->writer_)) writePongWithOkioBuffer:val$buffer_];
  }
  @catch (JavaIoIOException *ignored) {
  }
}

- (instancetype)initWithComSquareupOkhttpInternalWsWebSocket_$1:(ComSquareupOkhttpInternalWsWebSocket_$1 *)outer$
                                                 withOkioBuffer:(OkioBuffer *)capture$0
                                                   withNSString:(NSString *)arg$0
                                              withNSObjectArray:(IOSObjectArray *)arg$1 {
  ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(self, outer$, capture$0, arg$0, arg$1);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "execute", NULL, "V", 0x4, NULL, NULL },
    { "initWithComSquareupOkhttpInternalWsWebSocket_$1:withOkioBuffer:withNSString:withNSObjectArray:", "", NULL, 0x80, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.internal.ws.WebSocket$1;", NULL, NULL, .constantValue.asLong = 0 },
    { "val$buffer_", NULL, 0x1012, "Lokio.Buffer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComSquareupOkhttpInternalWsWebSocket_$1", "onPingWithOkioBuffer:" };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalWsWebSocket_$1_$1 = { 2, "", "com.squareup.okhttp.internal.ws", "WebSocket$", 0x8008, 2, methods, 2, fields, 0, NULL, 0, NULL, &enclosing_method, NULL };
  return &_ComSquareupOkhttpInternalWsWebSocket_$1_$1;
}

@end

void ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(ComSquareupOkhttpInternalWsWebSocket_$1_$1 *self, ComSquareupOkhttpInternalWsWebSocket_$1 *outer$, OkioBuffer *capture$0, NSString *arg$0, IOSObjectArray *arg$1) {
  self->this$0_ = outer$;
  self->val$buffer_ = capture$0;
  ComSquareupOkhttpInternalNamedRunnable_initWithNSString_withNSObjectArray_(self, arg$0, arg$1);
}

ComSquareupOkhttpInternalWsWebSocket_$1_$1 *new_ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(ComSquareupOkhttpInternalWsWebSocket_$1 *outer$, OkioBuffer *capture$0, NSString *arg$0, IOSObjectArray *arg$1) {
  ComSquareupOkhttpInternalWsWebSocket_$1_$1 *self = [ComSquareupOkhttpInternalWsWebSocket_$1_$1 alloc];
  ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(self, outer$, capture$0, arg$0, arg$1);
  return self;
}

ComSquareupOkhttpInternalWsWebSocket_$1_$1 *create_ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(ComSquareupOkhttpInternalWsWebSocket_$1 *outer$, OkioBuffer *capture$0, NSString *arg$0, IOSObjectArray *arg$1) {
  return new_ComSquareupOkhttpInternalWsWebSocket_$1_$1_initWithComSquareupOkhttpInternalWsWebSocket_$1_withOkioBuffer_withNSString_withNSObjectArray_(outer$, capture$0, arg$0, arg$1);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalWsWebSocket_$1_$1)
