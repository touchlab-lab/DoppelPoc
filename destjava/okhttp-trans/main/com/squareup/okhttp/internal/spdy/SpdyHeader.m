//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/internal/spdy/SpdyHeader.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/internal/spdy/SpdyHeader.h"
#include "okio/ByteString.h"

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpInternalSpdySpdyHeader)

OkioByteString *ComSquareupOkhttpInternalSpdySpdyHeader_RESPONSE_STATUS;
OkioByteString *ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_METHOD;
OkioByteString *ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_PATH;
OkioByteString *ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_SCHEME;
OkioByteString *ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_AUTHORITY;
OkioByteString *ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_HOST;
OkioByteString *ComSquareupOkhttpInternalSpdySpdyHeader_VERSION;

@implementation ComSquareupOkhttpInternalSpdySpdyHeader

- (instancetype)initWithNSString:(NSString *)name
                    withNSString:(NSString *)value {
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithNSString_withNSString_(self, name, value);
  return self;
}

- (instancetype)initWithOkioByteString:(OkioByteString *)name
                          withNSString:(NSString *)value {
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withNSString_(self, name, value);
  return self;
}

- (instancetype)initWithOkioByteString:(OkioByteString *)name
                    withOkioByteString:(OkioByteString *)value {
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(self, name, value);
  return self;
}

- (jboolean)isEqual:(id)other {
  if ([other isKindOfClass:[ComSquareupOkhttpInternalSpdySpdyHeader class]]) {
    ComSquareupOkhttpInternalSpdySpdyHeader *that = (ComSquareupOkhttpInternalSpdySpdyHeader *) cast_chk(other, [ComSquareupOkhttpInternalSpdySpdyHeader class]);
    return [((OkioByteString *) nil_chk(self->name_)) isEqual:((ComSquareupOkhttpInternalSpdySpdyHeader *) nil_chk(that))->name_] && [((OkioByteString *) nil_chk(self->value_)) isEqual:that->value_];
  }
  return false;
}

- (NSUInteger)hash {
  jint result = 17;
  result = 31 * result + ((jint) [((OkioByteString *) nil_chk(name_)) hash]);
  result = 31 * result + ((jint) [((OkioByteString *) nil_chk(value_)) hash]);
  return result;
}

- (NSString *)description {
  return NSString_formatWithNSString_withNSObjectArray_(@"%s: %s", [IOSObjectArray newArrayWithObjects:(id[]){ [((OkioByteString *) nil_chk(name_)) utf8], [((OkioByteString *) nil_chk(value_)) utf8] } count:2 type:NSObject_class_()]);
}

+ (void)initialize {
  if (self == [ComSquareupOkhttpInternalSpdySpdyHeader class]) {
    ComSquareupOkhttpInternalSpdySpdyHeader_RESPONSE_STATUS = OkioByteString_encodeUtf8WithNSString_(@":status");
    ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_METHOD = OkioByteString_encodeUtf8WithNSString_(@":method");
    ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_PATH = OkioByteString_encodeUtf8WithNSString_(@":path");
    ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_SCHEME = OkioByteString_encodeUtf8WithNSString_(@":scheme");
    ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_AUTHORITY = OkioByteString_encodeUtf8WithNSString_(@":authority");
    ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_HOST = OkioByteString_encodeUtf8WithNSString_(@":host");
    ComSquareupOkhttpInternalSpdySpdyHeader_VERSION = OkioByteString_encodeUtf8WithNSString_(@":version");
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpInternalSpdySpdyHeader)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withNSString:", "SpdyHeader", NULL, 0x1, NULL, NULL },
    { "initWithOkioByteString:withNSString:", "SpdyHeader", NULL, 0x1, NULL, NULL },
    { "initWithOkioByteString:withOkioByteString:", "SpdyHeader", NULL, 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "RESPONSE_STATUS", "RESPONSE_STATUS", 0x19, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdySpdyHeader_RESPONSE_STATUS, NULL, .constantValue.asLong = 0 },
    { "TARGET_METHOD", "TARGET_METHOD", 0x19, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_METHOD, NULL, .constantValue.asLong = 0 },
    { "TARGET_PATH", "TARGET_PATH", 0x19, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_PATH, NULL, .constantValue.asLong = 0 },
    { "TARGET_SCHEME", "TARGET_SCHEME", 0x19, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_SCHEME, NULL, .constantValue.asLong = 0 },
    { "TARGET_AUTHORITY", "TARGET_AUTHORITY", 0x19, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_AUTHORITY, NULL, .constantValue.asLong = 0 },
    { "TARGET_HOST", "TARGET_HOST", 0x19, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdySpdyHeader_TARGET_HOST, NULL, .constantValue.asLong = 0 },
    { "VERSION", "VERSION", 0x19, "Lokio.ByteString;", &ComSquareupOkhttpInternalSpdySpdyHeader_VERSION, NULL, .constantValue.asLong = 0 },
    { "name_", NULL, 0x11, "Lokio.ByteString;", NULL, NULL, .constantValue.asLong = 0 },
    { "value_", NULL, 0x11, "Lokio.ByteString;", NULL, NULL, .constantValue.asLong = 0 },
    { "hpackSize_", NULL, 0x10, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpInternalSpdySpdyHeader = { 2, "SpdyHeader", "com.squareup.okhttp.internal.spdy", NULL, 0x11, 6, methods, 10, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpInternalSpdySpdyHeader;
}

@end

void ComSquareupOkhttpInternalSpdySpdyHeader_initWithNSString_withNSString_(ComSquareupOkhttpInternalSpdySpdyHeader *self, NSString *name, NSString *value) {
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(self, OkioByteString_encodeUtf8WithNSString_(name), OkioByteString_encodeUtf8WithNSString_(value));
}

ComSquareupOkhttpInternalSpdySpdyHeader *new_ComSquareupOkhttpInternalSpdySpdyHeader_initWithNSString_withNSString_(NSString *name, NSString *value) {
  ComSquareupOkhttpInternalSpdySpdyHeader *self = [ComSquareupOkhttpInternalSpdySpdyHeader alloc];
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithNSString_withNSString_(self, name, value);
  return self;
}

ComSquareupOkhttpInternalSpdySpdyHeader *create_ComSquareupOkhttpInternalSpdySpdyHeader_initWithNSString_withNSString_(NSString *name, NSString *value) {
  return new_ComSquareupOkhttpInternalSpdySpdyHeader_initWithNSString_withNSString_(name, value);
}

void ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withNSString_(ComSquareupOkhttpInternalSpdySpdyHeader *self, OkioByteString *name, NSString *value) {
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(self, name, OkioByteString_encodeUtf8WithNSString_(value));
}

ComSquareupOkhttpInternalSpdySpdyHeader *new_ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withNSString_(OkioByteString *name, NSString *value) {
  ComSquareupOkhttpInternalSpdySpdyHeader *self = [ComSquareupOkhttpInternalSpdySpdyHeader alloc];
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withNSString_(self, name, value);
  return self;
}

ComSquareupOkhttpInternalSpdySpdyHeader *create_ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withNSString_(OkioByteString *name, NSString *value) {
  return new_ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withNSString_(name, value);
}

void ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(ComSquareupOkhttpInternalSpdySpdyHeader *self, OkioByteString *name, OkioByteString *value) {
  NSObject_init(self);
  self->name_ = name;
  self->value_ = value;
  self->hpackSize_ = 32 + [((OkioByteString *) nil_chk(name)) size] + [((OkioByteString *) nil_chk(value)) size];
}

ComSquareupOkhttpInternalSpdySpdyHeader *new_ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(OkioByteString *name, OkioByteString *value) {
  ComSquareupOkhttpInternalSpdySpdyHeader *self = [ComSquareupOkhttpInternalSpdySpdyHeader alloc];
  ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(self, name, value);
  return self;
}

ComSquareupOkhttpInternalSpdySpdyHeader *create_ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(OkioByteString *name, OkioByteString *value) {
  return new_ComSquareupOkhttpInternalSpdySpdyHeader_initWithOkioByteString_withOkioByteString_(name, value);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpInternalSpdySpdyHeader)
