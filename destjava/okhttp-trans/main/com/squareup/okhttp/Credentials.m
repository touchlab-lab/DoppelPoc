//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/Credentials.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Credentials.h"
#include "java/io/UnsupportedEncodingException.h"
#include "java/lang/AssertionError.h"
#include "okio/ByteString.h"

@interface ComSquareupOkhttpCredentials ()

- (instancetype)init;

@end

__attribute__((unused)) static void ComSquareupOkhttpCredentials_init(ComSquareupOkhttpCredentials *self);

__attribute__((unused)) static ComSquareupOkhttpCredentials *new_ComSquareupOkhttpCredentials_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCredentials *create_ComSquareupOkhttpCredentials_init();

@implementation ComSquareupOkhttpCredentials

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpCredentials_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)basicWithNSString:(NSString *)userName
                   withNSString:(NSString *)password {
  return ComSquareupOkhttpCredentials_basicWithNSString_withNSString_(userName, password);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Credentials", NULL, 0x2, NULL, NULL },
    { "basicWithNSString:withNSString:", "basic", "Ljava.lang.String;", 0x9, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpCredentials = { 2, "Credentials", "com.squareup.okhttp", NULL, 0x11, 2, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpCredentials;
}

@end

void ComSquareupOkhttpCredentials_init(ComSquareupOkhttpCredentials *self) {
  NSObject_init(self);
}

ComSquareupOkhttpCredentials *new_ComSquareupOkhttpCredentials_init() {
  ComSquareupOkhttpCredentials *self = [ComSquareupOkhttpCredentials alloc];
  ComSquareupOkhttpCredentials_init(self);
  return self;
}

ComSquareupOkhttpCredentials *create_ComSquareupOkhttpCredentials_init() {
  return new_ComSquareupOkhttpCredentials_init();
}

NSString *ComSquareupOkhttpCredentials_basicWithNSString_withNSString_(NSString *userName, NSString *password) {
  ComSquareupOkhttpCredentials_initialize();
  @try {
    NSString *usernameAndPassword = JreStrcat("$C$", userName, ':', password);
    IOSByteArray *bytes = [usernameAndPassword getBytesWithCharsetName:@"ISO-8859-1"];
    NSString *encoded = [((OkioByteString *) nil_chk(OkioByteString_ofWithByteArray_(bytes))) base64];
    return JreStrcat("$$", @"Basic ", encoded);
  }
  @catch (JavaIoUnsupportedEncodingException *e) {
    @throw new_JavaLangAssertionError_init();
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCredentials)
