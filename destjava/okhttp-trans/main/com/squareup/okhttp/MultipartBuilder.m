//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/MultipartBuilder.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Headers.h"
#include "com/squareup/okhttp/MediaType.h"
#include "com/squareup/okhttp/MultipartBuilder.h"
#include "com/squareup/okhttp/RequestBody.h"
#include "com/squareup/okhttp/internal/Util.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/UUID.h"
#include "okio/BufferedSink.h"
#include "okio/ByteString.h"

@interface ComSquareupOkhttpMultipartBuilder () {
 @public
  OkioByteString *boundary_;
  ComSquareupOkhttpMediaType *type_;
  id<JavaUtilList> partHeaders_;
  id<JavaUtilList> partBodies_;
}

+ (JavaLangStringBuilder *)appendQuotedStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)target
                                                          withNSString:(NSString *)key;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder, boundary_, OkioByteString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder, type_, ComSquareupOkhttpMediaType *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder, partHeaders_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder, partBodies_, id<JavaUtilList>)

inline IOSByteArray *ComSquareupOkhttpMultipartBuilder_get_COLONSPACE();
static IOSByteArray *ComSquareupOkhttpMultipartBuilder_COLONSPACE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpMultipartBuilder, COLONSPACE, IOSByteArray *)

inline IOSByteArray *ComSquareupOkhttpMultipartBuilder_get_CRLF();
static IOSByteArray *ComSquareupOkhttpMultipartBuilder_CRLF;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpMultipartBuilder, CRLF, IOSByteArray *)

inline IOSByteArray *ComSquareupOkhttpMultipartBuilder_get_DASHDASH();
static IOSByteArray *ComSquareupOkhttpMultipartBuilder_DASHDASH;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComSquareupOkhttpMultipartBuilder, DASHDASH, IOSByteArray *)

__attribute__((unused)) static JavaLangStringBuilder *ComSquareupOkhttpMultipartBuilder_appendQuotedStringWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *target, NSString *key);

@interface ComSquareupOkhttpMultipartBuilder_MultipartRequestBody : ComSquareupOkhttpRequestBody {
 @public
  OkioByteString *boundary_;
  ComSquareupOkhttpMediaType *contentType_;
  id<JavaUtilList> partHeaders_;
  id<JavaUtilList> partBodies_;
}

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)type
                                withOkioByteString:(OkioByteString *)boundary
                                  withJavaUtilList:(id<JavaUtilList>)partHeaders
                                  withJavaUtilList:(id<JavaUtilList>)partBodies;

- (ComSquareupOkhttpMediaType *)contentType;

- (jlong)contentLength;

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink;

@end

J2OBJC_EMPTY_STATIC_INIT(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody)

J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody, boundary_, OkioByteString *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody, contentType_, ComSquareupOkhttpMediaType *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody, partHeaders_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody, partBodies_, id<JavaUtilList>)

__attribute__((unused)) static void ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody *self, ComSquareupOkhttpMediaType *type, OkioByteString *boundary, id<JavaUtilList> partHeaders, id<JavaUtilList> partBodies);

__attribute__((unused)) static ComSquareupOkhttpMultipartBuilder_MultipartRequestBody *new_ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(ComSquareupOkhttpMediaType *type, OkioByteString *boundary, id<JavaUtilList> partHeaders, id<JavaUtilList> partBodies) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpMultipartBuilder_MultipartRequestBody *create_ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(ComSquareupOkhttpMediaType *type, OkioByteString *boundary, id<JavaUtilList> partHeaders, id<JavaUtilList> partBodies);

J2OBJC_TYPE_LITERAL_HEADER(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody)

J2OBJC_INITIALIZED_DEFN(ComSquareupOkhttpMultipartBuilder)

ComSquareupOkhttpMediaType *ComSquareupOkhttpMultipartBuilder_MIXED;
ComSquareupOkhttpMediaType *ComSquareupOkhttpMultipartBuilder_ALTERNATIVE;
ComSquareupOkhttpMediaType *ComSquareupOkhttpMultipartBuilder_DIGEST;
ComSquareupOkhttpMediaType *ComSquareupOkhttpMultipartBuilder_PARALLEL;
ComSquareupOkhttpMediaType *ComSquareupOkhttpMultipartBuilder_FORM;

@implementation ComSquareupOkhttpMultipartBuilder

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComSquareupOkhttpMultipartBuilder_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithNSString:(NSString *)boundary {
  ComSquareupOkhttpMultipartBuilder_initWithNSString_(self, boundary);
  return self;
}

- (ComSquareupOkhttpMultipartBuilder *)typeWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)type {
  if (type == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"type == null");
  }
  if (![((NSString *) nil_chk([((ComSquareupOkhttpMediaType *) nil_chk(type)) type])) isEqual:@"multipart"]) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"multipart != ", type));
  }
  self->type_ = type;
  return self;
}

- (ComSquareupOkhttpMultipartBuilder *)addPartWithComSquareupOkhttpRequestBody:(ComSquareupOkhttpRequestBody *)body {
  return [self addPartWithComSquareupOkhttpHeaders:nil withComSquareupOkhttpRequestBody:body];
}

- (ComSquareupOkhttpMultipartBuilder *)addPartWithComSquareupOkhttpHeaders:(ComSquareupOkhttpHeaders *)headers
                                          withComSquareupOkhttpRequestBody:(ComSquareupOkhttpRequestBody *)body {
  if (body == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"body == null");
  }
  if (headers != nil && [headers getWithNSString:@"Content-Type"] != nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unexpected header: Content-Type");
  }
  if (headers != nil && [headers getWithNSString:@"Content-Length"] != nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Unexpected header: Content-Length");
  }
  [((id<JavaUtilList>) nil_chk(partHeaders_)) addWithId:headers];
  [((id<JavaUtilList>) nil_chk(partBodies_)) addWithId:body];
  return self;
}

+ (JavaLangStringBuilder *)appendQuotedStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)target
                                                          withNSString:(NSString *)key {
  return ComSquareupOkhttpMultipartBuilder_appendQuotedStringWithJavaLangStringBuilder_withNSString_(target, key);
}

- (ComSquareupOkhttpMultipartBuilder *)addFormDataPartWithNSString:(NSString *)name
                                                      withNSString:(NSString *)value {
  return [self addFormDataPartWithNSString:name withNSString:nil withComSquareupOkhttpRequestBody:ComSquareupOkhttpRequestBody_createWithComSquareupOkhttpMediaType_withNSString_(nil, value)];
}

- (ComSquareupOkhttpMultipartBuilder *)addFormDataPartWithNSString:(NSString *)name
                                                      withNSString:(NSString *)filename
                                  withComSquareupOkhttpRequestBody:(ComSquareupOkhttpRequestBody *)value {
  if (name == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"name == null");
  }
  JavaLangStringBuilder *disposition = new_JavaLangStringBuilder_initWithNSString_(@"form-data; name=");
  (void) ComSquareupOkhttpMultipartBuilder_appendQuotedStringWithJavaLangStringBuilder_withNSString_(disposition, name);
  if (filename != nil) {
    (void) [disposition appendWithNSString:@"; filename="];
    (void) ComSquareupOkhttpMultipartBuilder_appendQuotedStringWithJavaLangStringBuilder_withNSString_(disposition, filename);
  }
  return [self addPartWithComSquareupOkhttpHeaders:ComSquareupOkhttpHeaders_ofWithNSStringArray_([IOSObjectArray newArrayWithObjects:(id[]){ @"Content-Disposition", [disposition description] } count:2 type:NSString_class_()]) withComSquareupOkhttpRequestBody:value];
}

- (ComSquareupOkhttpRequestBody *)build {
  if ([((id<JavaUtilList>) nil_chk(partHeaders_)) isEmpty]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Multipart body must have at least one part.");
  }
  return new_ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(type_, boundary_, partHeaders_, partBodies_);
}

+ (void)initialize {
  if (self == [ComSquareupOkhttpMultipartBuilder class]) {
    ComSquareupOkhttpMultipartBuilder_MIXED = ComSquareupOkhttpMediaType_parseWithNSString_(@"multipart/mixed");
    ComSquareupOkhttpMultipartBuilder_ALTERNATIVE = ComSquareupOkhttpMediaType_parseWithNSString_(@"multipart/alternative");
    ComSquareupOkhttpMultipartBuilder_DIGEST = ComSquareupOkhttpMediaType_parseWithNSString_(@"multipart/digest");
    ComSquareupOkhttpMultipartBuilder_PARALLEL = ComSquareupOkhttpMediaType_parseWithNSString_(@"multipart/parallel");
    ComSquareupOkhttpMultipartBuilder_FORM = ComSquareupOkhttpMediaType_parseWithNSString_(@"multipart/form-data");
    ComSquareupOkhttpMultipartBuilder_COLONSPACE = [IOSByteArray newArrayWithBytes:(jbyte[]){ ':', ' ' } count:2];
    ComSquareupOkhttpMultipartBuilder_CRLF = [IOSByteArray newArrayWithBytes:(jbyte[]){ 0x000d, 0x000a } count:2];
    ComSquareupOkhttpMultipartBuilder_DASHDASH = [IOSByteArray newArrayWithBytes:(jbyte[]){ '-', '-' } count:2];
    J2OBJC_SET_INITIALIZED(ComSquareupOkhttpMultipartBuilder)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "MultipartBuilder", NULL, 0x1, NULL, NULL },
    { "initWithNSString:", "MultipartBuilder", NULL, 0x1, NULL, NULL },
    { "typeWithComSquareupOkhttpMediaType:", "type", "Lcom.squareup.okhttp.MultipartBuilder;", 0x1, NULL, NULL },
    { "addPartWithComSquareupOkhttpRequestBody:", "addPart", "Lcom.squareup.okhttp.MultipartBuilder;", 0x1, NULL, NULL },
    { "addPartWithComSquareupOkhttpHeaders:withComSquareupOkhttpRequestBody:", "addPart", "Lcom.squareup.okhttp.MultipartBuilder;", 0x1, NULL, NULL },
    { "appendQuotedStringWithJavaLangStringBuilder:withNSString:", "appendQuotedString", "Ljava.lang.StringBuilder;", 0xa, NULL, NULL },
    { "addFormDataPartWithNSString:withNSString:", "addFormDataPart", "Lcom.squareup.okhttp.MultipartBuilder;", 0x1, NULL, NULL },
    { "addFormDataPartWithNSString:withNSString:withComSquareupOkhttpRequestBody:", "addFormDataPart", "Lcom.squareup.okhttp.MultipartBuilder;", 0x1, NULL, NULL },
    { "build", NULL, "Lcom.squareup.okhttp.RequestBody;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "MIXED", "MIXED", 0x19, "Lcom.squareup.okhttp.MediaType;", &ComSquareupOkhttpMultipartBuilder_MIXED, NULL, .constantValue.asLong = 0 },
    { "ALTERNATIVE", "ALTERNATIVE", 0x19, "Lcom.squareup.okhttp.MediaType;", &ComSquareupOkhttpMultipartBuilder_ALTERNATIVE, NULL, .constantValue.asLong = 0 },
    { "DIGEST", "DIGEST", 0x19, "Lcom.squareup.okhttp.MediaType;", &ComSquareupOkhttpMultipartBuilder_DIGEST, NULL, .constantValue.asLong = 0 },
    { "PARALLEL", "PARALLEL", 0x19, "Lcom.squareup.okhttp.MediaType;", &ComSquareupOkhttpMultipartBuilder_PARALLEL, NULL, .constantValue.asLong = 0 },
    { "FORM", "FORM", 0x19, "Lcom.squareup.okhttp.MediaType;", &ComSquareupOkhttpMultipartBuilder_FORM, NULL, .constantValue.asLong = 0 },
    { "COLONSPACE", "COLONSPACE", 0x1a, "[B", &ComSquareupOkhttpMultipartBuilder_COLONSPACE, NULL, .constantValue.asLong = 0 },
    { "CRLF", "CRLF", 0x1a, "[B", &ComSquareupOkhttpMultipartBuilder_CRLF, NULL, .constantValue.asLong = 0 },
    { "DASHDASH", "DASHDASH", 0x1a, "[B", &ComSquareupOkhttpMultipartBuilder_DASHDASH, NULL, .constantValue.asLong = 0 },
    { "boundary_", NULL, 0x12, "Lokio.ByteString;", NULL, NULL, .constantValue.asLong = 0 },
    { "type_", NULL, 0x2, "Lcom.squareup.okhttp.MediaType;", NULL, NULL, .constantValue.asLong = 0 },
    { "partHeaders_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/squareup/okhttp/Headers;>;", .constantValue.asLong = 0 },
    { "partBodies_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/squareup/okhttp/RequestBody;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.MultipartBuilder$MultipartRequestBody;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpMultipartBuilder = { 2, "MultipartBuilder", "com.squareup.okhttp", NULL, 0x11, 9, methods, 12, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpMultipartBuilder;
}

@end

void ComSquareupOkhttpMultipartBuilder_init(ComSquareupOkhttpMultipartBuilder *self) {
  ComSquareupOkhttpMultipartBuilder_initWithNSString_(self, [((JavaUtilUUID *) nil_chk(JavaUtilUUID_randomUUID())) description]);
}

ComSquareupOkhttpMultipartBuilder *new_ComSquareupOkhttpMultipartBuilder_init() {
  ComSquareupOkhttpMultipartBuilder *self = [ComSquareupOkhttpMultipartBuilder alloc];
  ComSquareupOkhttpMultipartBuilder_init(self);
  return self;
}

ComSquareupOkhttpMultipartBuilder *create_ComSquareupOkhttpMultipartBuilder_init() {
  return new_ComSquareupOkhttpMultipartBuilder_init();
}

void ComSquareupOkhttpMultipartBuilder_initWithNSString_(ComSquareupOkhttpMultipartBuilder *self, NSString *boundary) {
  NSObject_init(self);
  self->type_ = ComSquareupOkhttpMultipartBuilder_MIXED;
  self->partHeaders_ = new_JavaUtilArrayList_init();
  self->partBodies_ = new_JavaUtilArrayList_init();
  self->boundary_ = OkioByteString_encodeUtf8WithNSString_(boundary);
}

ComSquareupOkhttpMultipartBuilder *new_ComSquareupOkhttpMultipartBuilder_initWithNSString_(NSString *boundary) {
  ComSquareupOkhttpMultipartBuilder *self = [ComSquareupOkhttpMultipartBuilder alloc];
  ComSquareupOkhttpMultipartBuilder_initWithNSString_(self, boundary);
  return self;
}

ComSquareupOkhttpMultipartBuilder *create_ComSquareupOkhttpMultipartBuilder_initWithNSString_(NSString *boundary) {
  return new_ComSquareupOkhttpMultipartBuilder_initWithNSString_(boundary);
}

JavaLangStringBuilder *ComSquareupOkhttpMultipartBuilder_appendQuotedStringWithJavaLangStringBuilder_withNSString_(JavaLangStringBuilder *target, NSString *key) {
  ComSquareupOkhttpMultipartBuilder_initialize();
  (void) [((JavaLangStringBuilder *) nil_chk(target)) appendWithChar:'"'];
  for (jint i = 0, len = ((jint) [((NSString *) nil_chk(key)) length]); i < len; i++) {
    jchar ch = [key charAtWithInt:i];
    switch (ch) {
      case 0x000a:
      (void) [target appendWithNSString:@"%0A"];
      break;
      case 0x000d:
      (void) [target appendWithNSString:@"%0D"];
      break;
      case '"':
      (void) [target appendWithNSString:@"%22"];
      break;
      default:
      (void) [target appendWithChar:ch];
      break;
    }
  }
  (void) [target appendWithChar:'"'];
  return target;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpMultipartBuilder)

@implementation ComSquareupOkhttpMultipartBuilder_MultipartRequestBody

- (instancetype)initWithComSquareupOkhttpMediaType:(ComSquareupOkhttpMediaType *)type
                                withOkioByteString:(OkioByteString *)boundary
                                  withJavaUtilList:(id<JavaUtilList>)partHeaders
                                  withJavaUtilList:(id<JavaUtilList>)partBodies {
  ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(self, type, boundary, partHeaders, partBodies);
  return self;
}

- (ComSquareupOkhttpMediaType *)contentType {
  return contentType_;
}

- (jlong)contentLength {
  return -1LL;
}

- (void)writeToWithOkioBufferedSink:(id<OkioBufferedSink>)sink {
  for (jint p = 0, partCount = [((id<JavaUtilList>) nil_chk(partHeaders_)) size]; p < partCount; p++) {
    ComSquareupOkhttpHeaders *headers = [partHeaders_ getWithInt:p];
    ComSquareupOkhttpRequestBody *body = [((id<JavaUtilList>) nil_chk(partBodies_)) getWithInt:p];
    (void) [((id<OkioBufferedSink>) nil_chk(sink)) writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, DASHDASH)];
    (void) [sink writeWithOkioByteString:boundary_];
    (void) [sink writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, CRLF)];
    if (headers != nil) {
      for (jint h = 0, headerCount = [headers size]; h < headerCount; h++) {
        (void) [((id<OkioBufferedSink>) nil_chk([((id<OkioBufferedSink>) nil_chk([((id<OkioBufferedSink>) nil_chk([sink writeUtf8WithNSString:[headers nameWithInt:h]])) writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, COLONSPACE)])) writeUtf8WithNSString:[headers valueWithInt:h]])) writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, CRLF)];
      }
    }
    ComSquareupOkhttpMediaType *contentType = [((ComSquareupOkhttpRequestBody *) nil_chk(body)) contentType];
    if (contentType != nil) {
      (void) [((id<OkioBufferedSink>) nil_chk([((id<OkioBufferedSink>) nil_chk([sink writeUtf8WithNSString:@"Content-Type: "])) writeUtf8WithNSString:[contentType description]])) writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, CRLF)];
    }
    jlong contentLength = [body contentLength];
    if (contentLength != -1) {
      (void) [((id<OkioBufferedSink>) nil_chk([((id<OkioBufferedSink>) nil_chk([sink writeUtf8WithNSString:@"Content-Length: "])) writeUtf8WithNSString:JavaLangLong_toStringWithLong_(contentLength)])) writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, CRLF)];
    }
    (void) [sink writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, CRLF)];
    [((ComSquareupOkhttpRequestBody *) nil_chk([partBodies_ getWithInt:p])) writeToWithOkioBufferedSink:sink];
    (void) [sink writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, CRLF)];
  }
  (void) [((id<OkioBufferedSink>) nil_chk(sink)) writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, DASHDASH)];
  (void) [sink writeWithOkioByteString:boundary_];
  (void) [sink writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, DASHDASH)];
  (void) [sink writeWithByteArray:JreLoadStatic(ComSquareupOkhttpMultipartBuilder, CRLF)];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpMediaType:withOkioByteString:withJavaUtilList:withJavaUtilList:", "MultipartRequestBody", NULL, 0x1, NULL, "(Lcom/squareup/okhttp/MediaType;Lokio/ByteString;Ljava/util/List<Lcom/squareup/okhttp/Headers;>;Ljava/util/List<Lcom/squareup/okhttp/RequestBody;>;)V" },
    { "contentType", NULL, "Lcom.squareup.okhttp.MediaType;", 0x1, NULL, NULL },
    { "contentLength", NULL, "J", 0x1, "Ljava.io.IOException;", NULL },
    { "writeToWithOkioBufferedSink:", "writeTo", "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "boundary_", NULL, 0x12, "Lokio.ByteString;", NULL, NULL, .constantValue.asLong = 0 },
    { "contentType_", NULL, 0x12, "Lcom.squareup.okhttp.MediaType;", NULL, NULL, .constantValue.asLong = 0 },
    { "partHeaders_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/squareup/okhttp/Headers;>;", .constantValue.asLong = 0 },
    { "partBodies_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/squareup/okhttp/RequestBody;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpMultipartBuilder_MultipartRequestBody = { 2, "MultipartRequestBody", "com.squareup.okhttp", "MultipartBuilder", 0x1a, 4, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpMultipartBuilder_MultipartRequestBody;
}

@end

void ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody *self, ComSquareupOkhttpMediaType *type, OkioByteString *boundary, id<JavaUtilList> partHeaders, id<JavaUtilList> partBodies) {
  ComSquareupOkhttpRequestBody_init(self);
  if (type == nil) @throw new_JavaLangNullPointerException_initWithNSString_(@"type == null");
  self->boundary_ = boundary;
  self->contentType_ = ComSquareupOkhttpMediaType_parseWithNSString_(JreStrcat("@$$", type, @"; boundary=", [((OkioByteString *) nil_chk(boundary)) utf8]));
  self->partHeaders_ = ComSquareupOkhttpInternalUtil_immutableListWithJavaUtilList_(partHeaders);
  self->partBodies_ = ComSquareupOkhttpInternalUtil_immutableListWithJavaUtilList_(partBodies);
}

ComSquareupOkhttpMultipartBuilder_MultipartRequestBody *new_ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(ComSquareupOkhttpMediaType *type, OkioByteString *boundary, id<JavaUtilList> partHeaders, id<JavaUtilList> partBodies) {
  ComSquareupOkhttpMultipartBuilder_MultipartRequestBody *self = [ComSquareupOkhttpMultipartBuilder_MultipartRequestBody alloc];
  ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(self, type, boundary, partHeaders, partBodies);
  return self;
}

ComSquareupOkhttpMultipartBuilder_MultipartRequestBody *create_ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(ComSquareupOkhttpMediaType *type, OkioByteString *boundary, id<JavaUtilList> partHeaders, id<JavaUtilList> partBodies) {
  return new_ComSquareupOkhttpMultipartBuilder_MultipartRequestBody_initWithComSquareupOkhttpMediaType_withOkioByteString_withJavaUtilList_withJavaUtilList_(type, boundary, partHeaders, partBodies);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpMultipartBuilder_MultipartRequestBody)
