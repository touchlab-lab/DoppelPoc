//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/com/squareup/okhttp/Call.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/squareup/okhttp/Call.h"
#include "com/squareup/okhttp/Callback.h"
#include "com/squareup/okhttp/Connection.h"
#include "com/squareup/okhttp/Dispatcher.h"
#include "com/squareup/okhttp/Interceptor.h"
#include "com/squareup/okhttp/MediaType.h"
#include "com/squareup/okhttp/OkHttpClient.h"
#include "com/squareup/okhttp/Request.h"
#include "com/squareup/okhttp/RequestBody.h"
#include "com/squareup/okhttp/Response.h"
#include "com/squareup/okhttp/internal/Internal.h"
#include "com/squareup/okhttp/internal/NamedRunnable.h"
#include "com/squareup/okhttp/internal/http/HttpEngine.h"
#include "java/io/IOException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/net/MalformedURLException.h"
#include "java/net/ProtocolException.h"
#include "java/net/URL.h"
#include "java/util/List.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

@interface ComSquareupOkhttpCall () {
 @public
  ComSquareupOkhttpOkHttpClient *client_;
  jboolean executed_;
}

- (NSString *)toLoggableString;

- (ComSquareupOkhttpResponse *)getResponseWithInterceptorChain;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCall, client_, ComSquareupOkhttpOkHttpClient *)

__attribute__((unused)) static NSString *ComSquareupOkhttpCall_toLoggableString(ComSquareupOkhttpCall *self);

__attribute__((unused)) static ComSquareupOkhttpResponse *ComSquareupOkhttpCall_getResponseWithInterceptorChain(ComSquareupOkhttpCall *self);

@interface ComSquareupOkhttpCall_AsyncCall () {
 @public
  ComSquareupOkhttpCall *this$0_;
  id<ComSquareupOkhttpCallback> responseCallback_;
}

- (instancetype)initWithComSquareupOkhttpCall:(ComSquareupOkhttpCall *)outer$
                withComSquareupOkhttpCallback:(id<ComSquareupOkhttpCallback>)responseCallback;

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCall_AsyncCall, this$0_, ComSquareupOkhttpCall *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCall_AsyncCall, responseCallback_, id<ComSquareupOkhttpCallback>)

__attribute__((unused)) static void ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(ComSquareupOkhttpCall_AsyncCall *self, ComSquareupOkhttpCall *outer$, id<ComSquareupOkhttpCallback> responseCallback);

__attribute__((unused)) static ComSquareupOkhttpCall_AsyncCall *new_ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(ComSquareupOkhttpCall *outer$, id<ComSquareupOkhttpCallback> responseCallback) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComSquareupOkhttpCall_AsyncCall *create_ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(ComSquareupOkhttpCall *outer$, id<ComSquareupOkhttpCallback> responseCallback);

@interface ComSquareupOkhttpCall_ApplicationInterceptorChain () {
 @public
  ComSquareupOkhttpCall *this$0_;
  jint index_;
  ComSquareupOkhttpRequest *request_;
}

@end

J2OBJC_FIELD_SETTER(ComSquareupOkhttpCall_ApplicationInterceptorChain, this$0_, ComSquareupOkhttpCall *)
J2OBJC_FIELD_SETTER(ComSquareupOkhttpCall_ApplicationInterceptorChain, request_, ComSquareupOkhttpRequest *)

@implementation ComSquareupOkhttpCall

- (instancetype)initWithComSquareupOkhttpOkHttpClient:(ComSquareupOkhttpOkHttpClient *)client
                         withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)originalRequest {
  ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(self, client, originalRequest);
  return self;
}

- (ComSquareupOkhttpResponse *)execute {
  @synchronized(self) {
    if (executed_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Already Executed");
    executed_ = true;
  }
  @try {
    [((ComSquareupOkhttpDispatcher *) nil_chk([((ComSquareupOkhttpOkHttpClient *) nil_chk(client_)) getDispatcher])) executedWithComSquareupOkhttpCall:self];
    ComSquareupOkhttpResponse *result = ComSquareupOkhttpCall_getResponseWithInterceptorChain(self);
    if (result == nil) @throw new_JavaIoIOException_initWithNSString_(@"Canceled");
    return result;
  }
  @finally {
    [((ComSquareupOkhttpDispatcher *) nil_chk([((ComSquareupOkhttpOkHttpClient *) nil_chk(client_)) getDispatcher])) finishedWithComSquareupOkhttpCall:self];
  }
}

- (id)tag {
  return [((ComSquareupOkhttpRequest *) nil_chk(originalRequest_)) tag];
}

- (void)enqueueWithComSquareupOkhttpCallback:(id<ComSquareupOkhttpCallback>)responseCallback {
  @synchronized(self) {
    if (executed_) @throw new_JavaLangIllegalStateException_initWithNSString_(@"Already Executed");
    executed_ = true;
  }
  [((ComSquareupOkhttpDispatcher *) nil_chk([((ComSquareupOkhttpOkHttpClient *) nil_chk(client_)) getDispatcher])) enqueueWithComSquareupOkhttpCall_AsyncCall:new_ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(self, responseCallback)];
}

- (void)cancel {
  JreAssignVolatileBoolean(&canceled_, true);
  if (engine_ != nil) [engine_ disconnect];
}

- (jboolean)isCanceled {
  return JreLoadVolatileBoolean(&canceled_);
}

- (NSString *)toLoggableString {
  return ComSquareupOkhttpCall_toLoggableString(self);
}

- (ComSquareupOkhttpResponse *)getResponseWithInterceptorChain {
  return ComSquareupOkhttpCall_getResponseWithInterceptorChain(self);
}

- (ComSquareupOkhttpResponse *)getResponseWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request
                                                           withBoolean:(jboolean)forWebSocket {
  ComSquareupOkhttpRequestBody *body = [((ComSquareupOkhttpRequest *) nil_chk(request)) body];
  if (body != nil) {
    ComSquareupOkhttpRequest_Builder *requestBuilder = [request newBuilder];
    ComSquareupOkhttpMediaType *contentType = [body contentType];
    if (contentType != nil) {
      (void) [((ComSquareupOkhttpRequest_Builder *) nil_chk(requestBuilder)) headerWithNSString:@"Content-Type" withNSString:[contentType description]];
    }
    jlong contentLength = [body contentLength];
    if (contentLength != -1) {
      (void) [((ComSquareupOkhttpRequest_Builder *) nil_chk(requestBuilder)) headerWithNSString:@"Content-Length" withNSString:JavaLangLong_toStringWithLong_(contentLength)];
      (void) [requestBuilder removeHeaderWithNSString:@"Transfer-Encoding"];
    }
    else {
      (void) [((ComSquareupOkhttpRequest_Builder *) nil_chk(requestBuilder)) headerWithNSString:@"Transfer-Encoding" withNSString:@"chunked"];
      (void) [requestBuilder removeHeaderWithNSString:@"Content-Length"];
    }
    request = [((ComSquareupOkhttpRequest_Builder *) nil_chk(requestBuilder)) build];
  }
  engine_ = new_ComSquareupOkhttpInternalHttpHttpEngine_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withBoolean_withBoolean_withBoolean_withComSquareupOkhttpConnection_withComSquareupOkhttpInternalHttpRouteSelector_withComSquareupOkhttpInternalHttpRetryableSink_withComSquareupOkhttpResponse_(client_, request, false, false, forWebSocket, nil, nil, nil, nil);
  jint followUpCount = 0;
  while (true) {
    if (JreLoadVolatileBoolean(&canceled_)) {
      [engine_ releaseConnection];
      return nil;
    }
    @try {
      [engine_ sendRequest];
      [engine_ readResponse];
    }
    @catch (JavaIoIOException *e) {
      ComSquareupOkhttpInternalHttpHttpEngine *retryEngine = [engine_ recoverWithJavaIoIOException:e withOkioSink:nil];
      if (retryEngine != nil) {
        engine_ = retryEngine;
        continue;
      }
      @throw e;
    }
    ComSquareupOkhttpResponse *response = [engine_ getResponse];
    ComSquareupOkhttpRequest *followUp = [engine_ followUpRequest];
    if (followUp == nil) {
      if (!forWebSocket) {
        [engine_ releaseConnection];
      }
      return response;
    }
    if (++followUpCount > ComSquareupOkhttpInternalHttpHttpEngine_MAX_FOLLOW_UPS) {
      @throw new_JavaNetProtocolException_initWithNSString_(JreStrcat("$I", @"Too many follow-up requests: ", followUpCount));
    }
    if (![engine_ sameConnectionWithJavaNetURL:[((ComSquareupOkhttpRequest *) nil_chk(followUp)) url]]) {
      [engine_ releaseConnection];
    }
    ComSquareupOkhttpConnection *connection = [engine_ close];
    request = followUp;
    engine_ = new_ComSquareupOkhttpInternalHttpHttpEngine_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_withBoolean_withBoolean_withBoolean_withComSquareupOkhttpConnection_withComSquareupOkhttpInternalHttpRouteSelector_withComSquareupOkhttpInternalHttpRetryableSink_withComSquareupOkhttpResponse_(client_, request, false, false, forWebSocket, connection, nil, nil, response);
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpOkHttpClient:withComSquareupOkhttpRequest:", "Call", NULL, 0x4, NULL, NULL },
    { "execute", NULL, "Lcom.squareup.okhttp.Response;", 0x1, "Ljava.io.IOException;", NULL },
    { "tag", NULL, "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "enqueueWithComSquareupOkhttpCallback:", "enqueue", "V", 0x1, NULL, NULL },
    { "cancel", NULL, "V", 0x1, NULL, NULL },
    { "isCanceled", NULL, "Z", 0x1, NULL, NULL },
    { "toLoggableString", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "getResponseWithInterceptorChain", NULL, "Lcom.squareup.okhttp.Response;", 0x2, "Ljava.io.IOException;", NULL },
    { "getResponseWithComSquareupOkhttpRequest:withBoolean:", "getResponse", "Lcom.squareup.okhttp.Response;", 0x0, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "client_", NULL, 0x12, "Lcom.squareup.okhttp.OkHttpClient;", NULL, NULL, .constantValue.asLong = 0 },
    { "executed_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "canceled_", NULL, 0x40, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "originalRequest_", NULL, 0x0, "Lcom.squareup.okhttp.Request;", NULL, NULL, .constantValue.asLong = 0 },
    { "engine_", NULL, 0x0, "Lcom.squareup.okhttp.internal.http.HttpEngine;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.squareup.okhttp.Call$AsyncCall;", "Lcom.squareup.okhttp.Call$ApplicationInterceptorChain;"};
  static const J2ObjcClassInfo _ComSquareupOkhttpCall = { 2, "Call", "com.squareup.okhttp", NULL, 0x1, 9, methods, 5, fields, 0, NULL, 2, inner_classes, NULL, NULL };
  return &_ComSquareupOkhttpCall;
}

@end

void ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall *self, ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *originalRequest) {
  NSObject_init(self);
  self->client_ = [((ComSquareupOkhttpOkHttpClient *) nil_chk(client)) copyWithDefaults];
  self->originalRequest_ = originalRequest;
}

ComSquareupOkhttpCall *new_ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *originalRequest) {
  ComSquareupOkhttpCall *self = [ComSquareupOkhttpCall alloc];
  ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(self, client, originalRequest);
  return self;
}

ComSquareupOkhttpCall *create_ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(ComSquareupOkhttpOkHttpClient *client, ComSquareupOkhttpRequest *originalRequest) {
  return new_ComSquareupOkhttpCall_initWithComSquareupOkhttpOkHttpClient_withComSquareupOkhttpRequest_(client, originalRequest);
}

NSString *ComSquareupOkhttpCall_toLoggableString(ComSquareupOkhttpCall *self) {
  NSString *string = JreLoadVolatileBoolean(&self->canceled_) ? @"canceled call" : @"call";
  @try {
    NSString *redactedUrl = [new_JavaNetURL_initWithJavaNetURL_withNSString_([((ComSquareupOkhttpRequest *) nil_chk(self->originalRequest_)) url], @"/...") description];
    return JreStrcat("$$$", string, @" to ", redactedUrl);
  }
  @catch (JavaNetMalformedURLException *e) {
    return string;
  }
}

ComSquareupOkhttpResponse *ComSquareupOkhttpCall_getResponseWithInterceptorChain(ComSquareupOkhttpCall *self) {
  return [new_ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(self, 0, self->originalRequest_) proceedWithComSquareupOkhttpRequest:self->originalRequest_];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCall)

@implementation ComSquareupOkhttpCall_AsyncCall

- (instancetype)initWithComSquareupOkhttpCall:(ComSquareupOkhttpCall *)outer$
                withComSquareupOkhttpCallback:(id<ComSquareupOkhttpCallback>)responseCallback {
  ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(self, outer$, responseCallback);
  return self;
}

- (NSString *)host {
  return [((JavaNetURL *) nil_chk([((ComSquareupOkhttpRequest *) nil_chk(this$0_->originalRequest_)) url])) getHost];
}

- (ComSquareupOkhttpRequest *)request {
  return this$0_->originalRequest_;
}

- (id)tag {
  return [((ComSquareupOkhttpRequest *) nil_chk(this$0_->originalRequest_)) tag];
}

- (void)cancel {
  [this$0_ cancel];
}

- (ComSquareupOkhttpCall *)get {
  return this$0_;
}

- (void)execute {
  jboolean signalledCallback = false;
  @try {
    ComSquareupOkhttpResponse *response = ComSquareupOkhttpCall_getResponseWithInterceptorChain(this$0_);
    if (JreLoadVolatileBoolean(&this$0_->canceled_)) {
      signalledCallback = true;
      [((id<ComSquareupOkhttpCallback>) nil_chk(responseCallback_)) onFailureWithComSquareupOkhttpRequest:this$0_->originalRequest_ withJavaIoIOException:new_JavaIoIOException_initWithNSString_(@"Canceled")];
    }
    else {
      signalledCallback = true;
      [((id<ComSquareupOkhttpCallback>) nil_chk(responseCallback_)) onResponseWithComSquareupOkhttpResponse:response];
    }
  }
  @catch (JavaIoIOException *e) {
    if (signalledCallback) {
      [((JavaUtilLoggingLogger *) nil_chk(JreLoadStatic(ComSquareupOkhttpInternalInternal, logger))) logWithJavaUtilLoggingLevel:JreLoadStatic(JavaUtilLoggingLevel, INFO) withNSString:JreStrcat("$$", @"Callback failure for ", ComSquareupOkhttpCall_toLoggableString(this$0_)) withNSException:e];
    }
    else {
      [((id<ComSquareupOkhttpCallback>) nil_chk(responseCallback_)) onFailureWithComSquareupOkhttpRequest:[((ComSquareupOkhttpInternalHttpHttpEngine *) nil_chk(this$0_->engine_)) getRequest] withJavaIoIOException:e];
    }
  }
  @finally {
    [((ComSquareupOkhttpDispatcher *) nil_chk([((ComSquareupOkhttpOkHttpClient *) nil_chk(this$0_->client_)) getDispatcher])) finishedWithComSquareupOkhttpCall_AsyncCall:self];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpCall:withComSquareupOkhttpCallback:", "AsyncCall", NULL, 0x2, NULL, NULL },
    { "host", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "request", NULL, "Lcom.squareup.okhttp.Request;", 0x0, NULL, NULL },
    { "tag", NULL, "Ljava.lang.Object;", 0x0, NULL, NULL },
    { "cancel", NULL, "V", 0x0, NULL, NULL },
    { "get", NULL, "Lcom.squareup.okhttp.Call;", 0x0, NULL, NULL },
    { "execute", NULL, "V", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.Call;", NULL, NULL, .constantValue.asLong = 0 },
    { "responseCallback_", NULL, 0x12, "Lcom.squareup.okhttp.Callback;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpCall_AsyncCall = { 2, "AsyncCall", "com.squareup.okhttp", "Call", 0x10, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpCall_AsyncCall;
}

@end

void ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(ComSquareupOkhttpCall_AsyncCall *self, ComSquareupOkhttpCall *outer$, id<ComSquareupOkhttpCallback> responseCallback) {
  self->this$0_ = outer$;
  ComSquareupOkhttpInternalNamedRunnable_initWithNSString_withNSObjectArray_(self, @"OkHttp %s", [IOSObjectArray newArrayWithObjects:(id[]){ [((ComSquareupOkhttpRequest *) nil_chk(outer$->originalRequest_)) urlString] } count:1 type:NSObject_class_()]);
  self->responseCallback_ = responseCallback;
}

ComSquareupOkhttpCall_AsyncCall *new_ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(ComSquareupOkhttpCall *outer$, id<ComSquareupOkhttpCallback> responseCallback) {
  ComSquareupOkhttpCall_AsyncCall *self = [ComSquareupOkhttpCall_AsyncCall alloc];
  ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(self, outer$, responseCallback);
  return self;
}

ComSquareupOkhttpCall_AsyncCall *create_ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(ComSquareupOkhttpCall *outer$, id<ComSquareupOkhttpCallback> responseCallback) {
  return new_ComSquareupOkhttpCall_AsyncCall_initWithComSquareupOkhttpCall_withComSquareupOkhttpCallback_(outer$, responseCallback);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCall_AsyncCall)

@implementation ComSquareupOkhttpCall_ApplicationInterceptorChain

- (instancetype)initWithComSquareupOkhttpCall:(ComSquareupOkhttpCall *)outer$
                                      withInt:(jint)index
                 withComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(self, outer$, index, request);
  return self;
}

- (ComSquareupOkhttpConnection *)connection {
  return nil;
}

- (ComSquareupOkhttpRequest *)request {
  return request_;
}

- (ComSquareupOkhttpResponse *)proceedWithComSquareupOkhttpRequest:(ComSquareupOkhttpRequest *)request {
  if (index_ < [((id<JavaUtilList>) nil_chk([((ComSquareupOkhttpOkHttpClient *) nil_chk(this$0_->client_)) interceptors])) size]) {
    ComSquareupOkhttpCall_ApplicationInterceptorChain *chain = new_ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(this$0_, index_ + 1, request);
    return [((id<ComSquareupOkhttpInterceptor>) nil_chk([((id<JavaUtilList>) nil_chk([this$0_->client_ interceptors])) getWithInt:index_])) interceptWithComSquareupOkhttpInterceptor_Chain:chain];
  }
  else {
    return [this$0_ getResponseWithComSquareupOkhttpRequest:request withBoolean:false];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComSquareupOkhttpCall:withInt:withComSquareupOkhttpRequest:", "ApplicationInterceptorChain", NULL, 0x0, NULL, NULL },
    { "connection", NULL, "Lcom.squareup.okhttp.Connection;", 0x1, NULL, NULL },
    { "request", NULL, "Lcom.squareup.okhttp.Request;", 0x1, NULL, NULL },
    { "proceedWithComSquareupOkhttpRequest:", "proceed", "Lcom.squareup.okhttp.Response;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.squareup.okhttp.Call;", NULL, NULL, .constantValue.asLong = 0 },
    { "index_", NULL, 0x12, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "request_", NULL, 0x12, "Lcom.squareup.okhttp.Request;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComSquareupOkhttpCall_ApplicationInterceptorChain = { 2, "ApplicationInterceptorChain", "com.squareup.okhttp", "Call", 0x0, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComSquareupOkhttpCall_ApplicationInterceptorChain;
}

@end

void ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall_ApplicationInterceptorChain *self, ComSquareupOkhttpCall *outer$, jint index, ComSquareupOkhttpRequest *request) {
  self->this$0_ = outer$;
  NSObject_init(self);
  self->index_ = index;
  self->request_ = request;
}

ComSquareupOkhttpCall_ApplicationInterceptorChain *new_ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall *outer$, jint index, ComSquareupOkhttpRequest *request) {
  ComSquareupOkhttpCall_ApplicationInterceptorChain *self = [ComSquareupOkhttpCall_ApplicationInterceptorChain alloc];
  ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(self, outer$, index, request);
  return self;
}

ComSquareupOkhttpCall_ApplicationInterceptorChain *create_ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(ComSquareupOkhttpCall *outer$, jint index, ComSquareupOkhttpRequest *request) {
  return new_ComSquareupOkhttpCall_ApplicationInterceptorChain_initWithComSquareupOkhttpCall_withInt_withComSquareupOkhttpRequest_(outer$, index, request);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComSquareupOkhttpCall_ApplicationInterceptorChain)
