//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/okhttp/okhttp/src/main/java/okio/BufferedSink.java
//

#include "J2ObjC_header.h"

#pragma push_macro("OkioBufferedSink_INCLUDE_ALL")
#ifdef OkioBufferedSink_RESTRICT
#define OkioBufferedSink_INCLUDE_ALL 0
#else
#define OkioBufferedSink_INCLUDE_ALL 1
#endif
#undef OkioBufferedSink_RESTRICT

#if !defined (OkioBufferedSink_) && (OkioBufferedSink_INCLUDE_ALL || defined(OkioBufferedSink_INCLUDE))
#define OkioBufferedSink_

#define OkioSink_RESTRICT 1
#define OkioSink_INCLUDE 1
#include "okio/Sink.h"

@class IOSByteArray;
@class JavaIoOutputStream;
@class JavaNioCharsetCharset;
@class OkioBuffer;
@class OkioByteString;
@protocol OkioSource;

@protocol OkioBufferedSink < OkioSink, NSObject, JavaObject >

- (OkioBuffer *)buffer;

- (id<OkioBufferedSink>)writeWithOkioByteString:(OkioByteString *)byteString;

- (id<OkioBufferedSink>)writeWithByteArray:(IOSByteArray *)source;

- (id<OkioBufferedSink>)writeWithByteArray:(IOSByteArray *)source
                                   withInt:(jint)offset
                                   withInt:(jint)byteCount;

- (jlong)writeAllWithOkioSource:(id<OkioSource>)source;

- (id<OkioBufferedSink>)writeWithOkioSource:(id<OkioSource>)source
                                   withLong:(jlong)byteCount;

- (id<OkioBufferedSink>)writeUtf8WithNSString:(NSString *)string;

- (id<OkioBufferedSink>)writeStringWithNSString:(NSString *)string
                      withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (id<OkioBufferedSink>)writeByteWithInt:(jint)b;

- (id<OkioBufferedSink>)writeShortWithInt:(jint)s;

- (id<OkioBufferedSink>)writeShortLeWithInt:(jint)s;

- (id<OkioBufferedSink>)writeIntWithInt:(jint)i;

- (id<OkioBufferedSink>)writeIntLeWithInt:(jint)i;

- (id<OkioBufferedSink>)writeLongWithLong:(jlong)v;

- (id<OkioBufferedSink>)writeLongLeWithLong:(jlong)v;

- (id<OkioBufferedSink>)emitCompleteSegments;

- (id<OkioBufferedSink>)emit;

- (JavaIoOutputStream *)outputStream;

@end

J2OBJC_EMPTY_STATIC_INIT(OkioBufferedSink)

J2OBJC_TYPE_LITERAL_HEADER(OkioBufferedSink)

#endif

#pragma pop_macro("OkioBufferedSink_INCLUDE_ALL")
