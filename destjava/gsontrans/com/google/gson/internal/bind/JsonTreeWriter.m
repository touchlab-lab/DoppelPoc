//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/gson/gson/src/main/java/com/google/gson/internal/bind/JsonTreeWriter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/google/gson/JsonArray.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonNull.h"
#include "com/google/gson/JsonObject.h"
#include "com/google/gson/JsonPrimitive.h"
#include "com/google/gson/internal/bind/JsonTreeWriter.h"
#include "com/google/gson/stream/JsonWriter.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/AssertionError.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Long.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"

@interface ComGoogleGsonInternalBindJsonTreeWriter () {
 @public
  id<JavaUtilList> stack_JsonTreeWriter_;
  NSString *pendingName_;
  DPGSJsonElement *product_;
}

- (DPGSJsonElement *)peek;

- (void)putWithDPGSJsonElement:(DPGSJsonElement *)value;

@end

J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindJsonTreeWriter, stack_JsonTreeWriter_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindJsonTreeWriter, pendingName_, NSString *)
J2OBJC_FIELD_SETTER(ComGoogleGsonInternalBindJsonTreeWriter, product_, DPGSJsonElement *)

inline JavaIoWriter *ComGoogleGsonInternalBindJsonTreeWriter_get_UNWRITABLE_WRITER();
static JavaIoWriter *ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonInternalBindJsonTreeWriter, UNWRITABLE_WRITER, JavaIoWriter *)

inline DPGSJsonPrimitive *ComGoogleGsonInternalBindJsonTreeWriter_get_SENTINEL_CLOSED();
static DPGSJsonPrimitive *ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComGoogleGsonInternalBindJsonTreeWriter, SENTINEL_CLOSED, DPGSJsonPrimitive *)

__attribute__((unused)) static DPGSJsonElement *ComGoogleGsonInternalBindJsonTreeWriter_peek(ComGoogleGsonInternalBindJsonTreeWriter *self);

__attribute__((unused)) static void ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(ComGoogleGsonInternalBindJsonTreeWriter *self, DPGSJsonElement *value);

@interface ComGoogleGsonInternalBindJsonTreeWriter_$1 : JavaIoWriter

- (void)writeWithCharArray:(IOSCharArray *)buffer
                   withInt:(jint)offset
                   withInt:(jint)counter;

- (void)flush;

- (void)close;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComGoogleGsonInternalBindJsonTreeWriter_$1)

__attribute__((unused)) static void ComGoogleGsonInternalBindJsonTreeWriter_$1_init(ComGoogleGsonInternalBindJsonTreeWriter_$1 *self);

__attribute__((unused)) static ComGoogleGsonInternalBindJsonTreeWriter_$1 *new_ComGoogleGsonInternalBindJsonTreeWriter_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComGoogleGsonInternalBindJsonTreeWriter_$1 *create_ComGoogleGsonInternalBindJsonTreeWriter_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(ComGoogleGsonInternalBindJsonTreeWriter_$1)

J2OBJC_INITIALIZED_DEFN(ComGoogleGsonInternalBindJsonTreeWriter)

@implementation ComGoogleGsonInternalBindJsonTreeWriter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalBindJsonTreeWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (DPGSJsonElement *)get {
  if (![((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$@", @"Expected one JSON element but was ", stack_JsonTreeWriter_));
  }
  return product_;
}

- (DPGSJsonElement *)peek {
  return ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
}

- (void)putWithDPGSJsonElement:(DPGSJsonElement *)value {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, value);
}

- (DPGSStreamJsonWriter *)beginArray {
  DPGSJsonArray *array = new_DPGSJsonArray_init();
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, array);
  [((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) addWithId:array];
  return self;
}

- (DPGSStreamJsonWriter *)endArray {
  if ([((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty] || pendingName_ != nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  DPGSJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
  if ([element isKindOfClass:[DPGSJsonArray class]]) {
    (void) [stack_JsonTreeWriter_ removeWithInt:[stack_JsonTreeWriter_ size] - 1];
    return self;
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (DPGSStreamJsonWriter *)beginObject {
  DPGSJsonObject *object = new_DPGSJsonObject_init();
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, object);
  [((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) addWithId:object];
  return self;
}

- (DPGSStreamJsonWriter *)endObject {
  if ([((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty] || pendingName_ != nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  DPGSJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
  if ([element isKindOfClass:[DPGSJsonObject class]]) {
    (void) [stack_JsonTreeWriter_ removeWithInt:[stack_JsonTreeWriter_ size] - 1];
    return self;
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (DPGSStreamJsonWriter *)nameWithNSString:(NSString *)name {
  if ([((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty] || pendingName_ != nil) {
    @throw new_JavaLangIllegalStateException_init();
  }
  DPGSJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
  if ([element isKindOfClass:[DPGSJsonObject class]]) {
    pendingName_ = name;
    return self;
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (DPGSStreamJsonWriter *)valueWithNSString:(NSString *)value {
  if (value == nil) {
    return [self nullValue];
  }
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, new_DPGSJsonPrimitive_initWithNSString_(value));
  return self;
}

- (DPGSStreamJsonWriter *)nullValue {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, JreLoadStatic(DPGSJsonNull, INSTANCE));
  return self;
}

- (DPGSStreamJsonWriter *)valueWithBoolean:(jboolean)value {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, new_DPGSJsonPrimitive_initWithJavaLangBoolean_(JavaLangBoolean_valueOfWithBoolean_(value)));
  return self;
}

- (DPGSStreamJsonWriter *)valueWithDouble:(jdouble)value {
  if (![self isLenient] && (JavaLangDouble_isNaNWithDouble_(value) || JavaLangDouble_isInfiniteWithDouble_(value))) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$D", @"JSON forbids NaN and infinities: ", value));
  }
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, new_DPGSJsonPrimitive_initWithNSNumber_(JavaLangDouble_valueOfWithDouble_(value)));
  return self;
}

- (DPGSStreamJsonWriter *)valueWithLong:(jlong)value {
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, new_DPGSJsonPrimitive_initWithNSNumber_(JavaLangLong_valueOfWithLong_(value)));
  return self;
}

- (DPGSStreamJsonWriter *)valueWithNSNumber:(NSNumber *)value {
  if (value == nil) {
    return [self nullValue];
  }
  if (![self isLenient]) {
    jdouble d = [((NSNumber *) nil_chk(value)) doubleValue];
    if (JavaLangDouble_isNaNWithDouble_(d) || JavaLangDouble_isInfiniteWithDouble_(d)) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"JSON forbids NaN and infinities: ", value));
    }
  }
  ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(self, new_DPGSJsonPrimitive_initWithNSNumber_(value));
  return self;
}

- (void)flush {
}

- (void)close {
  if (![((id<JavaUtilList>) nil_chk(stack_JsonTreeWriter_)) isEmpty]) {
    @throw new_JavaIoIOException_initWithNSString_(@"Incomplete document");
  }
  [stack_JsonTreeWriter_ addWithId:ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED];
}

+ (void)initialize {
  if (self == [ComGoogleGsonInternalBindJsonTreeWriter class]) {
    ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER = new_ComGoogleGsonInternalBindJsonTreeWriter_$1_init();
    ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED = new_DPGSJsonPrimitive_initWithNSString_(@"closed");
    J2OBJC_SET_INITIALIZED(ComGoogleGsonInternalBindJsonTreeWriter)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JsonTreeWriter", NULL, 0x1, NULL, NULL },
    { "get", NULL, "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "peek", NULL, "Lcom.google.gson.JsonElement;", 0x2, NULL, NULL },
    { "putWithDPGSJsonElement:", "put", "V", 0x2, NULL, NULL },
    { "beginArray", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "endArray", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "beginObject", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "endObject", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "nameWithNSString:", "name", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithNSString:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "nullValue", NULL, "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithBoolean:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithDouble:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithLong:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "valueWithNSNumber:", "value", "Lcom.google.gson.stream.JsonWriter;", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "UNWRITABLE_WRITER", "UNWRITABLE_WRITER", 0x1a, "Ljava.io.Writer;", &ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER, NULL, .constantValue.asLong = 0 },
    { "SENTINEL_CLOSED", "SENTINEL_CLOSED", 0x1a, "Lcom.google.gson.JsonPrimitive;", &ComGoogleGsonInternalBindJsonTreeWriter_SENTINEL_CLOSED, NULL, .constantValue.asLong = 0 },
    { "stack_JsonTreeWriter_", "stack", 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/google/gson/JsonElement;>;", .constantValue.asLong = 0 },
    { "pendingName_", NULL, 0x2, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "product_", NULL, 0x2, "Lcom.google.gson.JsonElement;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComGoogleGsonInternalBindJsonTreeWriter = { 2, "JsonTreeWriter", "com.google.gson.internal.bind", NULL, 0x11, 17, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComGoogleGsonInternalBindJsonTreeWriter;
}

@end

void ComGoogleGsonInternalBindJsonTreeWriter_init(ComGoogleGsonInternalBindJsonTreeWriter *self) {
  DPGSStreamJsonWriter_initWithJavaIoWriter_(self, ComGoogleGsonInternalBindJsonTreeWriter_UNWRITABLE_WRITER);
  self->stack_JsonTreeWriter_ = new_JavaUtilArrayList_init();
  self->product_ = JreLoadStatic(DPGSJsonNull, INSTANCE);
}

ComGoogleGsonInternalBindJsonTreeWriter *new_ComGoogleGsonInternalBindJsonTreeWriter_init() {
  ComGoogleGsonInternalBindJsonTreeWriter *self = [ComGoogleGsonInternalBindJsonTreeWriter alloc];
  ComGoogleGsonInternalBindJsonTreeWriter_init(self);
  return self;
}

ComGoogleGsonInternalBindJsonTreeWriter *create_ComGoogleGsonInternalBindJsonTreeWriter_init() {
  return new_ComGoogleGsonInternalBindJsonTreeWriter_init();
}

DPGSJsonElement *ComGoogleGsonInternalBindJsonTreeWriter_peek(ComGoogleGsonInternalBindJsonTreeWriter *self) {
  return [self->stack_JsonTreeWriter_ getWithInt:[((id<JavaUtilList>) nil_chk(self->stack_JsonTreeWriter_)) size] - 1];
}

void ComGoogleGsonInternalBindJsonTreeWriter_putWithDPGSJsonElement_(ComGoogleGsonInternalBindJsonTreeWriter *self, DPGSJsonElement *value) {
  if (self->pendingName_ != nil) {
    if (![((DPGSJsonElement *) nil_chk(value)) isJsonNull] || [self getSerializeNulls]) {
      DPGSJsonObject *object = (DPGSJsonObject *) cast_chk(ComGoogleGsonInternalBindJsonTreeWriter_peek(self), [DPGSJsonObject class]);
      [((DPGSJsonObject *) nil_chk(object)) addWithNSString:self->pendingName_ withDPGSJsonElement:value];
    }
    self->pendingName_ = nil;
  }
  else if ([((id<JavaUtilList>) nil_chk(self->stack_JsonTreeWriter_)) isEmpty]) {
    self->product_ = value;
  }
  else {
    DPGSJsonElement *element = ComGoogleGsonInternalBindJsonTreeWriter_peek(self);
    if ([element isKindOfClass:[DPGSJsonArray class]]) {
      [((DPGSJsonArray *) nil_chk(((DPGSJsonArray *) cast_chk(element, [DPGSJsonArray class])))) addWithDPGSJsonElement:value];
    }
    else {
      @throw new_JavaLangIllegalStateException_init();
    }
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalBindJsonTreeWriter)

@implementation ComGoogleGsonInternalBindJsonTreeWriter_$1

- (void)writeWithCharArray:(IOSCharArray *)buffer
                   withInt:(jint)offset
                   withInt:(jint)counter {
  @throw new_JavaLangAssertionError_init();
}

- (void)flush {
  @throw new_JavaLangAssertionError_init();
}

- (void)close {
  @throw new_JavaLangAssertionError_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComGoogleGsonInternalBindJsonTreeWriter_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "writeWithCharArray:withInt:withInt:", "write", "V", 0x1, NULL, NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComGoogleGsonInternalBindJsonTreeWriter_$1 = { 2, "", "com.google.gson.internal.bind", "JsonTreeWriter", 0x8008, 4, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComGoogleGsonInternalBindJsonTreeWriter_$1;
}

@end

void ComGoogleGsonInternalBindJsonTreeWriter_$1_init(ComGoogleGsonInternalBindJsonTreeWriter_$1 *self) {
  JavaIoWriter_init(self);
}

ComGoogleGsonInternalBindJsonTreeWriter_$1 *new_ComGoogleGsonInternalBindJsonTreeWriter_$1_init() {
  ComGoogleGsonInternalBindJsonTreeWriter_$1 *self = [ComGoogleGsonInternalBindJsonTreeWriter_$1 alloc];
  ComGoogleGsonInternalBindJsonTreeWriter_$1_init(self);
  return self;
}

ComGoogleGsonInternalBindJsonTreeWriter_$1 *create_ComGoogleGsonInternalBindJsonTreeWriter_$1_init() {
  return new_ComGoogleGsonInternalBindJsonTreeWriter_$1_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComGoogleGsonInternalBindJsonTreeWriter_$1)
