//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/gson/gson/src/main/java/com/google/gson/reflect/TypeToken.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComGoogleGsonReflectTypeToken_INCLUDE_ALL")
#ifdef ComGoogleGsonReflectTypeToken_RESTRICT
#define ComGoogleGsonReflectTypeToken_INCLUDE_ALL 0
#else
#define ComGoogleGsonReflectTypeToken_INCLUDE_ALL 1
#endif
#undef ComGoogleGsonReflectTypeToken_RESTRICT

#if !defined (DPGSReflectTypeToken_) && (ComGoogleGsonReflectTypeToken_INCLUDE_ALL || defined(DPGSReflectTypeToken_INCLUDE))
#define DPGSReflectTypeToken_

@class IOSClass;
@protocol JavaLangReflectType;

@interface DPGSReflectTypeToken : NSObject {
 @public
  IOSClass *rawType_;
  id<JavaLangReflectType> type_;
  jint hashCode_;
}

#pragma mark Public

- (jboolean)isEqual:(id)o;

+ (DPGSReflectTypeToken *)getWithIOSClass:(IOSClass *)type;

+ (DPGSReflectTypeToken *)getWithJavaLangReflectType:(id<JavaLangReflectType>)type;

- (IOSClass *)getRawType;

- (id<JavaLangReflectType>)getType;

- (NSUInteger)hash;

- (jboolean)isAssignableFromWithIOSClass:(IOSClass *)cls;

- (jboolean)isAssignableFromWithJavaLangReflectType:(id<JavaLangReflectType>)from;

- (jboolean)isAssignableFromWithDPGSReflectTypeToken:(DPGSReflectTypeToken *)token;

- (NSString *)description;

#pragma mark Protected

- (instancetype)init;

#pragma mark Package-Private

- (instancetype)initWithJavaLangReflectType:(id<JavaLangReflectType>)type;

+ (id<JavaLangReflectType>)getSuperclassTypeParameterWithIOSClass:(IOSClass *)subclass;

@end

J2OBJC_EMPTY_STATIC_INIT(DPGSReflectTypeToken)

J2OBJC_FIELD_SETTER(DPGSReflectTypeToken, rawType_, IOSClass *)
J2OBJC_FIELD_SETTER(DPGSReflectTypeToken, type_, id<JavaLangReflectType>)

FOUNDATION_EXPORT void DPGSReflectTypeToken_init(DPGSReflectTypeToken *self);

FOUNDATION_EXPORT DPGSReflectTypeToken *new_DPGSReflectTypeToken_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DPGSReflectTypeToken *create_DPGSReflectTypeToken_init();

FOUNDATION_EXPORT void DPGSReflectTypeToken_initWithJavaLangReflectType_(DPGSReflectTypeToken *self, id<JavaLangReflectType> type);

FOUNDATION_EXPORT DPGSReflectTypeToken *new_DPGSReflectTypeToken_initWithJavaLangReflectType_(id<JavaLangReflectType> type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT DPGSReflectTypeToken *create_DPGSReflectTypeToken_initWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT id<JavaLangReflectType> DPGSReflectTypeToken_getSuperclassTypeParameterWithIOSClass_(IOSClass *subclass);

FOUNDATION_EXPORT DPGSReflectTypeToken *DPGSReflectTypeToken_getWithJavaLangReflectType_(id<JavaLangReflectType> type);

FOUNDATION_EXPORT DPGSReflectTypeToken *DPGSReflectTypeToken_getWithIOSClass_(IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(DPGSReflectTypeToken)

@compatibility_alias ComGoogleGsonReflectTypeToken DPGSReflectTypeToken;

#endif

#pragma pop_macro("ComGoogleGsonReflectTypeToken_INCLUDE_ALL")
