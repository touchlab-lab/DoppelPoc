//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/gson/gson/src/main/java/com/google/gson/FieldNamingPolicy.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/google/gson/FieldNamingPolicy.h"
#include "java/lang/Character.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/reflect/Field.h"
#include "java/util/Locale.h"

#pragma clang diagnostic ignored "-Wprotocol"

@interface DPGSFieldNamingPolicy ()

+ (NSString *)modifyStringWithChar:(jchar)firstCharacter
                      withNSString:(NSString *)srcString
                           withInt:(jint)indexOfSubstring;

@end

__attribute__((unused)) static NSString *DPGSFieldNamingPolicy_modifyStringWithChar_withNSString_withInt_(jchar firstCharacter, NSString *srcString, jint indexOfSubstring);

__attribute__((unused)) static void DPGSFieldNamingPolicy_initWithNSString_withInt_(DPGSFieldNamingPolicy *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static DPGSFieldNamingPolicy *new_DPGSFieldNamingPolicy_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

@interface DPGSFieldNamingPolicy_$1 : DPGSFieldNamingPolicy < NSCopying >

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(DPGSFieldNamingPolicy_$1)

__attribute__((unused)) static void DPGSFieldNamingPolicy_$1_initWithNSString_withInt_(DPGSFieldNamingPolicy_$1 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static DPGSFieldNamingPolicy_$1 *new_DPGSFieldNamingPolicy_$1_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(DPGSFieldNamingPolicy_$1)

@interface DPGSFieldNamingPolicy_$2 : DPGSFieldNamingPolicy < NSCopying >

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(DPGSFieldNamingPolicy_$2)

__attribute__((unused)) static void DPGSFieldNamingPolicy_$2_initWithNSString_withInt_(DPGSFieldNamingPolicy_$2 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static DPGSFieldNamingPolicy_$2 *new_DPGSFieldNamingPolicy_$2_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(DPGSFieldNamingPolicy_$2)

@interface DPGSFieldNamingPolicy_$3 : DPGSFieldNamingPolicy < NSCopying >

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(DPGSFieldNamingPolicy_$3)

__attribute__((unused)) static void DPGSFieldNamingPolicy_$3_initWithNSString_withInt_(DPGSFieldNamingPolicy_$3 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static DPGSFieldNamingPolicy_$3 *new_DPGSFieldNamingPolicy_$3_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(DPGSFieldNamingPolicy_$3)

@interface DPGSFieldNamingPolicy_$4 : DPGSFieldNamingPolicy < NSCopying >

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(DPGSFieldNamingPolicy_$4)

__attribute__((unused)) static void DPGSFieldNamingPolicy_$4_initWithNSString_withInt_(DPGSFieldNamingPolicy_$4 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static DPGSFieldNamingPolicy_$4 *new_DPGSFieldNamingPolicy_$4_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(DPGSFieldNamingPolicy_$4)

@interface DPGSFieldNamingPolicy_$5 : DPGSFieldNamingPolicy < NSCopying >

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f;

@end

J2OBJC_EMPTY_STATIC_INIT(DPGSFieldNamingPolicy_$5)

__attribute__((unused)) static void DPGSFieldNamingPolicy_$5_initWithNSString_withInt_(DPGSFieldNamingPolicy_$5 *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static DPGSFieldNamingPolicy_$5 *new_DPGSFieldNamingPolicy_$5_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(DPGSFieldNamingPolicy_$5)

J2OBJC_INITIALIZED_DEFN(DPGSFieldNamingPolicy)

DPGSFieldNamingPolicy *DPGSFieldNamingPolicy_values_[5];

@implementation DPGSFieldNamingPolicy

+ (NSString *)separateCamelCaseWithNSString:(NSString *)name
                               withNSString:(NSString *)separator {
  return DPGSFieldNamingPolicy_separateCamelCaseWithNSString_withNSString_(name, separator);
}

+ (NSString *)upperCaseFirstLetterWithNSString:(NSString *)name {
  return DPGSFieldNamingPolicy_upperCaseFirstLetterWithNSString_(name);
}

+ (NSString *)modifyStringWithChar:(jchar)firstCharacter
                      withNSString:(NSString *)srcString
                           withInt:(jint)indexOfSubstring {
  return DPGSFieldNamingPolicy_modifyStringWithChar_withNSString_withInt_(firstCharacter, srcString, indexOfSubstring);
}

+ (IOSObjectArray *)values {
  return DPGSFieldNamingPolicy_values();
}

+ (DPGSFieldNamingPolicy *)valueOfWithNSString:(NSString *)name {
  return DPGSFieldNamingPolicy_valueOfWithNSString_(name);
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [DPGSFieldNamingPolicy class]) {
    JreEnum(DPGSFieldNamingPolicy, IDENTITY) = new_DPGSFieldNamingPolicy_$1_initWithNSString_withInt_(@"IDENTITY", 0);
    JreEnum(DPGSFieldNamingPolicy, UPPER_CAMEL_CASE) = new_DPGSFieldNamingPolicy_$2_initWithNSString_withInt_(@"UPPER_CAMEL_CASE", 1);
    JreEnum(DPGSFieldNamingPolicy, UPPER_CAMEL_CASE_WITH_SPACES) = new_DPGSFieldNamingPolicy_$3_initWithNSString_withInt_(@"UPPER_CAMEL_CASE_WITH_SPACES", 2);
    JreEnum(DPGSFieldNamingPolicy, LOWER_CASE_WITH_UNDERSCORES) = new_DPGSFieldNamingPolicy_$4_initWithNSString_withInt_(@"LOWER_CASE_WITH_UNDERSCORES", 3);
    JreEnum(DPGSFieldNamingPolicy, LOWER_CASE_WITH_DASHES) = new_DPGSFieldNamingPolicy_$5_initWithNSString_withInt_(@"LOWER_CASE_WITH_DASHES", 4);
    J2OBJC_SET_INITIALIZED(DPGSFieldNamingPolicy)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "separateCamelCaseWithNSString:withNSString:", "separateCamelCase", "Ljava.lang.String;", 0x8, NULL, NULL },
    { "upperCaseFirstLetterWithNSString:", "upperCaseFirstLetter", "Ljava.lang.String;", 0x8, NULL, NULL },
    { "modifyStringWithChar:withNSString:withInt:", "modifyString", "Ljava.lang.String;", 0xa, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "IDENTITY", "IDENTITY", 0x4019, "Lcom.google.gson.FieldNamingPolicy;", &JreEnum(DPGSFieldNamingPolicy, IDENTITY), NULL, .constantValue.asLong = 0 },
    { "UPPER_CAMEL_CASE", "UPPER_CAMEL_CASE", 0x4019, "Lcom.google.gson.FieldNamingPolicy;", &JreEnum(DPGSFieldNamingPolicy, UPPER_CAMEL_CASE), NULL, .constantValue.asLong = 0 },
    { "UPPER_CAMEL_CASE_WITH_SPACES", "UPPER_CAMEL_CASE_WITH_SPACES", 0x4019, "Lcom.google.gson.FieldNamingPolicy;", &JreEnum(DPGSFieldNamingPolicy, UPPER_CAMEL_CASE_WITH_SPACES), NULL, .constantValue.asLong = 0 },
    { "LOWER_CASE_WITH_UNDERSCORES", "LOWER_CASE_WITH_UNDERSCORES", 0x4019, "Lcom.google.gson.FieldNamingPolicy;", &JreEnum(DPGSFieldNamingPolicy, LOWER_CASE_WITH_UNDERSCORES), NULL, .constantValue.asLong = 0 },
    { "LOWER_CASE_WITH_DASHES", "LOWER_CASE_WITH_DASHES", 0x4019, "Lcom.google.gson.FieldNamingPolicy;", &JreEnum(DPGSFieldNamingPolicy, LOWER_CASE_WITH_DASHES), NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lcom.google.gson.FieldNamingPolicy;"};
  static const J2ObjcClassInfo _DPGSFieldNamingPolicy = { 2, "FieldNamingPolicy", "com.google.gson", NULL, 0x4401, 3, methods, 5, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lcom/google/gson/FieldNamingPolicy;>;Lcom/google/gson/FieldNamingStrategy;" };
  return &_DPGSFieldNamingPolicy;
}

@end

NSString *DPGSFieldNamingPolicy_separateCamelCaseWithNSString_withNSString_(NSString *name, NSString *separator) {
  DPGSFieldNamingPolicy_initialize();
  JavaLangStringBuilder *translation = new_JavaLangStringBuilder_init();
  for (jint i = 0; i < ((jint) [((NSString *) nil_chk(name)) length]); i++) {
    jchar character = [name charAtWithInt:i];
    if (JavaLangCharacter_isUpperCaseWithChar_(character) && [translation length] != 0) {
      (void) [translation appendWithNSString:separator];
    }
    (void) [translation appendWithChar:character];
  }
  return [translation description];
}

NSString *DPGSFieldNamingPolicy_upperCaseFirstLetterWithNSString_(NSString *name) {
  DPGSFieldNamingPolicy_initialize();
  JavaLangStringBuilder *fieldNameBuilder = new_JavaLangStringBuilder_init();
  jint index = 0;
  jchar firstCharacter = [((NSString *) nil_chk(name)) charAtWithInt:index];
  while (index < ((jint) [name length]) - 1) {
    if (JavaLangCharacter_isLetterWithChar_(firstCharacter)) {
      break;
    }
    (void) [fieldNameBuilder appendWithChar:firstCharacter];
    firstCharacter = [name charAtWithInt:++index];
  }
  if (index == ((jint) [name length])) {
    return [fieldNameBuilder description];
  }
  if (!JavaLangCharacter_isUpperCaseWithChar_(firstCharacter)) {
    NSString *modifiedTarget = DPGSFieldNamingPolicy_modifyStringWithChar_withNSString_withInt_(JavaLangCharacter_toUpperCaseWithChar_(firstCharacter), name, ++index);
    return [((JavaLangStringBuilder *) nil_chk([fieldNameBuilder appendWithNSString:modifiedTarget])) description];
  }
  else {
    return name;
  }
}

NSString *DPGSFieldNamingPolicy_modifyStringWithChar_withNSString_withInt_(jchar firstCharacter, NSString *srcString, jint indexOfSubstring) {
  DPGSFieldNamingPolicy_initialize();
  return (indexOfSubstring < ((jint) [((NSString *) nil_chk(srcString)) length])) ? JreStrcat("C$", firstCharacter, [srcString substring:indexOfSubstring]) : NSString_valueOfChar_(firstCharacter);
}

void DPGSFieldNamingPolicy_initWithNSString_withInt_(DPGSFieldNamingPolicy *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

DPGSFieldNamingPolicy *new_DPGSFieldNamingPolicy_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy *self = [DPGSFieldNamingPolicy alloc];
  DPGSFieldNamingPolicy_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *DPGSFieldNamingPolicy_values() {
  DPGSFieldNamingPolicy_initialize();
  return [IOSObjectArray arrayWithObjects:DPGSFieldNamingPolicy_values_ count:5 type:DPGSFieldNamingPolicy_class_()];
}

DPGSFieldNamingPolicy *DPGSFieldNamingPolicy_valueOfWithNSString_(NSString *name) {
  DPGSFieldNamingPolicy_initialize();
  for (int i = 0; i < 5; i++) {
    DPGSFieldNamingPolicy *e = DPGSFieldNamingPolicy_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

DPGSFieldNamingPolicy *DPGSFieldNamingPolicy_fromOrdinal(NSUInteger ordinal) {
  DPGSFieldNamingPolicy_initialize();
  if (ordinal >= 5) {
    return nil;
  }
  return DPGSFieldNamingPolicy_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSFieldNamingPolicy)

@implementation DPGSFieldNamingPolicy_$1

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f {
  return [((JavaLangReflectField *) nil_chk(f)) getName];
}

- (void)dealloc {
  JreCheckFinalize(self, [DPGSFieldNamingPolicy_$1 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "translateNameWithJavaLangReflectField:", "translateName", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _DPGSFieldNamingPolicy_$1 = { 2, "", "com.google.gson", "FieldNamingPolicy", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_DPGSFieldNamingPolicy_$1;
}

@end

void DPGSFieldNamingPolicy_$1_initWithNSString_withInt_(DPGSFieldNamingPolicy_$1 *self, NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_initWithNSString_withInt_(self, __name, __ordinal);
}

DPGSFieldNamingPolicy_$1 *new_DPGSFieldNamingPolicy_$1_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_$1 *self = [DPGSFieldNamingPolicy_$1 alloc];
  DPGSFieldNamingPolicy_$1_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSFieldNamingPolicy_$1)

@implementation DPGSFieldNamingPolicy_$2

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f {
  return DPGSFieldNamingPolicy_upperCaseFirstLetterWithNSString_([((JavaLangReflectField *) nil_chk(f)) getName]);
}

- (void)dealloc {
  JreCheckFinalize(self, [DPGSFieldNamingPolicy_$2 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "translateNameWithJavaLangReflectField:", "translateName", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _DPGSFieldNamingPolicy_$2 = { 2, "", "com.google.gson", "FieldNamingPolicy", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_DPGSFieldNamingPolicy_$2;
}

@end

void DPGSFieldNamingPolicy_$2_initWithNSString_withInt_(DPGSFieldNamingPolicy_$2 *self, NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_initWithNSString_withInt_(self, __name, __ordinal);
}

DPGSFieldNamingPolicy_$2 *new_DPGSFieldNamingPolicy_$2_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_$2 *self = [DPGSFieldNamingPolicy_$2 alloc];
  DPGSFieldNamingPolicy_$2_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSFieldNamingPolicy_$2)

@implementation DPGSFieldNamingPolicy_$3

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f {
  return DPGSFieldNamingPolicy_upperCaseFirstLetterWithNSString_(DPGSFieldNamingPolicy_separateCamelCaseWithNSString_withNSString_([((JavaLangReflectField *) nil_chk(f)) getName], @" "));
}

- (void)dealloc {
  JreCheckFinalize(self, [DPGSFieldNamingPolicy_$3 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "translateNameWithJavaLangReflectField:", "translateName", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _DPGSFieldNamingPolicy_$3 = { 2, "", "com.google.gson", "FieldNamingPolicy", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_DPGSFieldNamingPolicy_$3;
}

@end

void DPGSFieldNamingPolicy_$3_initWithNSString_withInt_(DPGSFieldNamingPolicy_$3 *self, NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_initWithNSString_withInt_(self, __name, __ordinal);
}

DPGSFieldNamingPolicy_$3 *new_DPGSFieldNamingPolicy_$3_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_$3 *self = [DPGSFieldNamingPolicy_$3 alloc];
  DPGSFieldNamingPolicy_$3_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSFieldNamingPolicy_$3)

@implementation DPGSFieldNamingPolicy_$4

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f {
  return [((NSString *) nil_chk(DPGSFieldNamingPolicy_separateCamelCaseWithNSString_withNSString_([((JavaLangReflectField *) nil_chk(f)) getName], @"_"))) lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, ENGLISH)];
}

- (void)dealloc {
  JreCheckFinalize(self, [DPGSFieldNamingPolicy_$4 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "translateNameWithJavaLangReflectField:", "translateName", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _DPGSFieldNamingPolicy_$4 = { 2, "", "com.google.gson", "FieldNamingPolicy", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_DPGSFieldNamingPolicy_$4;
}

@end

void DPGSFieldNamingPolicy_$4_initWithNSString_withInt_(DPGSFieldNamingPolicy_$4 *self, NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_initWithNSString_withInt_(self, __name, __ordinal);
}

DPGSFieldNamingPolicy_$4 *new_DPGSFieldNamingPolicy_$4_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_$4 *self = [DPGSFieldNamingPolicy_$4 alloc];
  DPGSFieldNamingPolicy_$4_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSFieldNamingPolicy_$4)

@implementation DPGSFieldNamingPolicy_$5

- (NSString *)translateNameWithJavaLangReflectField:(JavaLangReflectField *)f {
  return [((NSString *) nil_chk(DPGSFieldNamingPolicy_separateCamelCaseWithNSString_withNSString_([((JavaLangReflectField *) nil_chk(f)) getName], @"-"))) lowercaseStringWithJRELocale:JreLoadStatic(JavaUtilLocale, ENGLISH)];
}

- (void)dealloc {
  JreCheckFinalize(self, [DPGSFieldNamingPolicy_$5 class]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "translateNameWithJavaLangReflectField:", "translateName", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _DPGSFieldNamingPolicy_$5 = { 2, "", "com.google.gson", "FieldNamingPolicy", 0xc018, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_DPGSFieldNamingPolicy_$5;
}

@end

void DPGSFieldNamingPolicy_$5_initWithNSString_withInt_(DPGSFieldNamingPolicy_$5 *self, NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_initWithNSString_withInt_(self, __name, __ordinal);
}

DPGSFieldNamingPolicy_$5 *new_DPGSFieldNamingPolicy_$5_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  DPGSFieldNamingPolicy_$5 *self = [DPGSFieldNamingPolicy_$5 alloc];
  DPGSFieldNamingPolicy_$5_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSFieldNamingPolicy_$5)
