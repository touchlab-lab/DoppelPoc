//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/gson/gson/src/main/java/com/google/gson/JsonArray.java
//

#include "J2ObjC_source.h"
#include "com/google/gson/JsonArray.h"
#include "com/google/gson/JsonElement.h"
#include "com/google/gson/JsonNull.h"
#include "com/google/gson/JsonPrimitive.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/IllegalStateException.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface DPGSJsonArray () {
 @public
  id<JavaUtilList> elements_;
}

@end

J2OBJC_FIELD_SETTER(DPGSJsonArray, elements_, id<JavaUtilList>)

@implementation DPGSJsonArray

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  DPGSJsonArray_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (DPGSJsonArray *)deepCopy {
  DPGSJsonArray *result = new_DPGSJsonArray_init();
  for (DPGSJsonElement * __strong element in nil_chk(elements_)) {
    [result addWithDPGSJsonElement:[((DPGSJsonElement *) nil_chk(element)) deepCopy]];
  }
  return result;
}

- (void)addWithJavaLangBoolean:(JavaLangBoolean *)bool_ {
  [((id<JavaUtilList>) nil_chk(elements_)) addWithId:bool_ == nil ? JreLoadStatic(DPGSJsonNull, INSTANCE) : new_DPGSJsonPrimitive_initWithJavaLangBoolean_(bool_)];
}

- (void)addWithJavaLangCharacter:(JavaLangCharacter *)character {
  [((id<JavaUtilList>) nil_chk(elements_)) addWithId:character == nil ? JreLoadStatic(DPGSJsonNull, INSTANCE) : new_DPGSJsonPrimitive_initWithJavaLangCharacter_(character)];
}

- (void)addWithNSNumber:(NSNumber *)number {
  [((id<JavaUtilList>) nil_chk(elements_)) addWithId:number == nil ? JreLoadStatic(DPGSJsonNull, INSTANCE) : new_DPGSJsonPrimitive_initWithNSNumber_(number)];
}

- (void)addWithNSString:(NSString *)string {
  [((id<JavaUtilList>) nil_chk(elements_)) addWithId:string == nil ? JreLoadStatic(DPGSJsonNull, INSTANCE) : new_DPGSJsonPrimitive_initWithNSString_(string)];
}

- (void)addWithDPGSJsonElement:(DPGSJsonElement *)element {
  if (element == nil) {
    element = JreLoadStatic(DPGSJsonNull, INSTANCE);
  }
  [((id<JavaUtilList>) nil_chk(elements_)) addWithId:element];
}

- (void)addAllWithDPGSJsonArray:(DPGSJsonArray *)array {
  [((id<JavaUtilList>) nil_chk(elements_)) addAllWithJavaUtilCollection:((DPGSJsonArray *) nil_chk(array))->elements_];
}

- (DPGSJsonElement *)setWithInt:(jint)index
            withDPGSJsonElement:(DPGSJsonElement *)element {
  return [((id<JavaUtilList>) nil_chk(elements_)) setWithInt:index withId:element];
}

- (jboolean)removeWithDPGSJsonElement:(DPGSJsonElement *)element {
  return [((id<JavaUtilList>) nil_chk(elements_)) removeWithId:element];
}

- (DPGSJsonElement *)removeWithInt:(jint)index {
  return [((id<JavaUtilList>) nil_chk(elements_)) removeWithInt:index];
}

- (jboolean)containsWithDPGSJsonElement:(DPGSJsonElement *)element {
  return [((id<JavaUtilList>) nil_chk(elements_)) containsWithId:element];
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(elements_)) size];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(elements_)) iterator];
}

- (DPGSJsonElement *)getWithInt:(jint)i {
  return [((id<JavaUtilList>) nil_chk(elements_)) getWithInt:i];
}

- (NSNumber *)getAsNumber {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsNumber];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (NSString *)getAsString {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsString];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jdouble)getAsDouble {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsDouble];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (JavaMathBigDecimal *)getAsBigDecimal {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsBigDecimal];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (JavaMathBigInteger *)getAsBigInteger {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsBigInteger];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jfloat)getAsFloat {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsFloat];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jlong)getAsLong {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsLong];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jint)getAsInt {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsInt];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jbyte)getAsByte {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsByte];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jchar)getAsCharacter {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsCharacter];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jshort)getAsShort {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsShort];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jboolean)getAsBoolean {
  if ([((id<JavaUtilList>) nil_chk(elements_)) size] == 1) {
    return [((DPGSJsonElement *) nil_chk([elements_ getWithInt:0])) getAsBoolean];
  }
  @throw new_JavaLangIllegalStateException_init();
}

- (jboolean)isEqual:(id)o {
  return (o == self) || ([o isKindOfClass:[DPGSJsonArray class]] && [((id<JavaUtilList>) nil_chk(((DPGSJsonArray *) nil_chk(((DPGSJsonArray *) cast_chk(o, [DPGSJsonArray class]))))->elements_)) isEqual:elements_]);
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilList>) nil_chk(elements_)) hash]);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf, len);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "JsonArray", NULL, 0x1, NULL, NULL },
    { "deepCopy", NULL, "Lcom.google.gson.JsonArray;", 0x0, NULL, NULL },
    { "addWithJavaLangBoolean:", "add", "V", 0x1, NULL, NULL },
    { "addWithJavaLangCharacter:", "add", "V", 0x1, NULL, NULL },
    { "addWithNSNumber:", "add", "V", 0x1, NULL, NULL },
    { "addWithNSString:", "add", "V", 0x1, NULL, NULL },
    { "addWithDPGSJsonElement:", "add", "V", 0x1, NULL, NULL },
    { "addAllWithDPGSJsonArray:", "addAll", "V", 0x1, NULL, NULL },
    { "setWithInt:withDPGSJsonElement:", "set", "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "removeWithDPGSJsonElement:", "remove", "Z", 0x1, NULL, NULL },
    { "removeWithInt:", "remove", "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "containsWithDPGSJsonElement:", "contains", "Z", 0x1, NULL, NULL },
    { "size", NULL, "I", 0x1, NULL, NULL },
    { "iterator", NULL, "Ljava.util.Iterator;", 0x1, NULL, "()Ljava/util/Iterator<Lcom/google/gson/JsonElement;>;" },
    { "getWithInt:", "get", "Lcom.google.gson.JsonElement;", 0x1, NULL, NULL },
    { "getAsNumber", NULL, "Ljava.lang.Number;", 0x1, NULL, NULL },
    { "getAsString", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getAsDouble", NULL, "D", 0x1, NULL, NULL },
    { "getAsBigDecimal", NULL, "Ljava.math.BigDecimal;", 0x1, NULL, NULL },
    { "getAsBigInteger", NULL, "Ljava.math.BigInteger;", 0x1, NULL, NULL },
    { "getAsFloat", NULL, "F", 0x1, NULL, NULL },
    { "getAsLong", NULL, "J", 0x1, NULL, NULL },
    { "getAsInt", NULL, "I", 0x1, NULL, NULL },
    { "getAsByte", NULL, "B", 0x1, NULL, NULL },
    { "getAsCharacter", NULL, "C", 0x1, NULL, NULL },
    { "getAsShort", NULL, "S", 0x1, NULL, NULL },
    { "getAsBoolean", NULL, "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "elements_", NULL, 0x12, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/google/gson/JsonElement;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _DPGSJsonArray = { 2, "JsonArray", "com.google.gson", NULL, 0x11, 29, methods, 1, fields, 0, NULL, 0, NULL, NULL, "Lcom/google/gson/JsonElement;Ljava/lang/Iterable<Lcom/google/gson/JsonElement;>;" };
  return &_DPGSJsonArray;
}

@end

void DPGSJsonArray_init(DPGSJsonArray *self) {
  DPGSJsonElement_init(self);
  self->elements_ = new_JavaUtilArrayList_init();
}

DPGSJsonArray *new_DPGSJsonArray_init() {
  DPGSJsonArray *self = [DPGSJsonArray alloc];
  DPGSJsonArray_init(self);
  return self;
}

DPGSJsonArray *create_DPGSJsonArray_init() {
  return new_DPGSJsonArray_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSJsonArray)
