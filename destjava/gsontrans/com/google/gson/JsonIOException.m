//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/gson/gson/src/main/java/com/google/gson/JsonIOException.java
//

#include "J2ObjC_source.h"
#include "com/google/gson/JsonIOException.h"
#include "com/google/gson/JsonParseException.h"

inline jlong DPGSJsonIOException_get_serialVersionUID();
#define DPGSJsonIOException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(DPGSJsonIOException, serialVersionUID, jlong)

@implementation DPGSJsonIOException

- (instancetype)initWithNSString:(NSString *)msg {
  DPGSJsonIOException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause {
  DPGSJsonIOException_initWithNSString_withNSException_(self, msg, cause);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  DPGSJsonIOException_initWithNSException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "JsonIOException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "JsonIOException", NULL, 0x1, NULL, NULL },
    { "initWithNSException:", "JsonIOException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = DPGSJsonIOException_serialVersionUID },
  };
  static const J2ObjcClassInfo _DPGSJsonIOException = { 2, "JsonIOException", "com.google.gson", NULL, 0x11, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_DPGSJsonIOException;
}

@end

void DPGSJsonIOException_initWithNSString_(DPGSJsonIOException *self, NSString *msg) {
  DPGSJsonParseException_initWithNSString_(self, msg);
}

DPGSJsonIOException *new_DPGSJsonIOException_initWithNSString_(NSString *msg) {
  DPGSJsonIOException *self = [DPGSJsonIOException alloc];
  DPGSJsonIOException_initWithNSString_(self, msg);
  return self;
}

DPGSJsonIOException *create_DPGSJsonIOException_initWithNSString_(NSString *msg) {
  return new_DPGSJsonIOException_initWithNSString_(msg);
}

void DPGSJsonIOException_initWithNSString_withNSException_(DPGSJsonIOException *self, NSString *msg, NSException *cause) {
  DPGSJsonParseException_initWithNSString_withNSException_(self, msg, cause);
}

DPGSJsonIOException *new_DPGSJsonIOException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  DPGSJsonIOException *self = [DPGSJsonIOException alloc];
  DPGSJsonIOException_initWithNSString_withNSException_(self, msg, cause);
  return self;
}

DPGSJsonIOException *create_DPGSJsonIOException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  return new_DPGSJsonIOException_initWithNSString_withNSException_(msg, cause);
}

void DPGSJsonIOException_initWithNSException_(DPGSJsonIOException *self, NSException *cause) {
  DPGSJsonParseException_initWithNSException_(self, cause);
}

DPGSJsonIOException *new_DPGSJsonIOException_initWithNSException_(NSException *cause) {
  DPGSJsonIOException *self = [DPGSJsonIOException alloc];
  DPGSJsonIOException_initWithNSException_(self, cause);
  return self;
}

DPGSJsonIOException *create_DPGSJsonIOException_initWithNSException_(NSException *cause) {
  return new_DPGSJsonIOException_initWithNSException_(cause);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSJsonIOException)
