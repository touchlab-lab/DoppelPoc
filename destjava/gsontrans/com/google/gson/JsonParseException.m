//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/gson/gson/src/main/java/com/google/gson/JsonParseException.java
//

#include "J2ObjC_source.h"
#include "com/google/gson/JsonParseException.h"
#include "java/lang/RuntimeException.h"

@implementation DPGSJsonParseException

- (instancetype)initWithNSString:(NSString *)msg {
  DPGSJsonParseException_initWithNSString_(self, msg);
  return self;
}

- (instancetype)initWithNSString:(NSString *)msg
                 withNSException:(NSException *)cause {
  DPGSJsonParseException_initWithNSString_withNSException_(self, msg, cause);
  return self;
}

- (instancetype)initWithNSException:(NSException *)cause {
  DPGSJsonParseException_initWithNSException_(self, cause);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "JsonParseException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withNSException:", "JsonParseException", NULL, 0x1, NULL, NULL },
    { "initWithNSException:", "JsonParseException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x18, "J", NULL, NULL, .constantValue.asLong = DPGSJsonParseException_serialVersionUID },
  };
  static const J2ObjcClassInfo _DPGSJsonParseException = { 2, "JsonParseException", "com.google.gson", NULL, 0x1, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_DPGSJsonParseException;
}

@end

void DPGSJsonParseException_initWithNSString_(DPGSJsonParseException *self, NSString *msg) {
  JavaLangRuntimeException_initWithNSString_(self, msg);
}

DPGSJsonParseException *new_DPGSJsonParseException_initWithNSString_(NSString *msg) {
  DPGSJsonParseException *self = [DPGSJsonParseException alloc];
  DPGSJsonParseException_initWithNSString_(self, msg);
  return self;
}

DPGSJsonParseException *create_DPGSJsonParseException_initWithNSString_(NSString *msg) {
  return new_DPGSJsonParseException_initWithNSString_(msg);
}

void DPGSJsonParseException_initWithNSString_withNSException_(DPGSJsonParseException *self, NSString *msg, NSException *cause) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, msg, cause);
}

DPGSJsonParseException *new_DPGSJsonParseException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  DPGSJsonParseException *self = [DPGSJsonParseException alloc];
  DPGSJsonParseException_initWithNSString_withNSException_(self, msg, cause);
  return self;
}

DPGSJsonParseException *create_DPGSJsonParseException_initWithNSString_withNSException_(NSString *msg, NSException *cause) {
  return new_DPGSJsonParseException_initWithNSString_withNSException_(msg, cause);
}

void DPGSJsonParseException_initWithNSException_(DPGSJsonParseException *self, NSException *cause) {
  JavaLangRuntimeException_initWithNSException_(self, cause);
}

DPGSJsonParseException *new_DPGSJsonParseException_initWithNSException_(NSException *cause) {
  DPGSJsonParseException *self = [DPGSJsonParseException alloc];
  DPGSJsonParseException_initWithNSException_(self, cause);
  return self;
}

DPGSJsonParseException *create_DPGSJsonParseException_initWithNSException_(NSException *cause) {
  return new_DPGSJsonParseException_initWithNSException_(cause);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(DPGSJsonParseException)
