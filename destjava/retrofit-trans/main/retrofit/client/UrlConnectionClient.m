//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/retrofit/retrofit/src/main/java/retrofit/client/UrlConnectionClient.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/net/HttpURLConnection.h"
#include "java/net/URL.h"
#include "java/net/URLConnection.h"
#include "java/util/ArrayList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "retrofit/client/ClientHeader.h"
#include "retrofit/client/Defaults.h"
#include "retrofit/client/Request.h"
#include "retrofit/client/Response.h"
#include "retrofit/client/UrlConnectionClient.h"
#include "retrofit/mime/TypedInput.h"
#include "retrofit/mime/TypedOutput.h"

inline jint RetrofitClientUrlConnectionClient_get_CHUNK_SIZE();
#define RetrofitClientUrlConnectionClient_CHUNK_SIZE 4096
J2OBJC_STATIC_FIELD_CONSTANT(RetrofitClientUrlConnectionClient, CHUNK_SIZE, jint)

@interface RetrofitClientUrlConnectionClient_TypedInputStream : NSObject < RetrofitMimeTypedInput > {
 @public
  NSString *mimeType_;
  jlong length_;
  JavaIoInputStream *stream_;
}

- (instancetype)initWithNSString:(NSString *)mimeType
                        withLong:(jlong)length
           withJavaIoInputStream:(JavaIoInputStream *)stream;

- (NSString *)mimeType;

- (jlong)length;

- (JavaIoInputStream *)in;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitClientUrlConnectionClient_TypedInputStream)

J2OBJC_FIELD_SETTER(RetrofitClientUrlConnectionClient_TypedInputStream, mimeType_, NSString *)
J2OBJC_FIELD_SETTER(RetrofitClientUrlConnectionClient_TypedInputStream, stream_, JavaIoInputStream *)

__attribute__((unused)) static void RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(RetrofitClientUrlConnectionClient_TypedInputStream *self, NSString *mimeType, jlong length, JavaIoInputStream *stream);

__attribute__((unused)) static RetrofitClientUrlConnectionClient_TypedInputStream *new_RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(NSString *mimeType, jlong length, JavaIoInputStream *stream) NS_RETURNS_RETAINED;

__attribute__((unused)) static RetrofitClientUrlConnectionClient_TypedInputStream *create_RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(NSString *mimeType, jlong length, JavaIoInputStream *stream);

J2OBJC_TYPE_LITERAL_HEADER(RetrofitClientUrlConnectionClient_TypedInputStream)

@implementation RetrofitClientUrlConnectionClient

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RetrofitClientUrlConnectionClient_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (RetrofitClientResponse *)executeWithRetrofitClientRequest:(RetrofitClientRequest *)request {
  JavaNetHttpURLConnection *connection = [self openConnectionWithRetrofitClientRequest:request];
  [self prepareRequestWithJavaNetHttpURLConnection:connection withRetrofitClientRequest:request];
  return [self readResponseWithJavaNetHttpURLConnection:connection];
}

- (JavaNetHttpURLConnection *)openConnectionWithRetrofitClientRequest:(RetrofitClientRequest *)request {
  JavaNetHttpURLConnection *connection = (JavaNetHttpURLConnection *) cast_chk([new_JavaNetURL_initWithNSString_([((RetrofitClientRequest *) nil_chk(request)) getUrl]) openConnection], [JavaNetHttpURLConnection class]);
  [((JavaNetHttpURLConnection *) nil_chk(connection)) setConnectTimeoutWithInt:RetrofitClientDefaults_CONNECT_TIMEOUT_MILLIS];
  [connection setReadTimeoutWithInt:RetrofitClientDefaults_READ_TIMEOUT_MILLIS];
  return connection;
}

- (void)prepareRequestWithJavaNetHttpURLConnection:(JavaNetHttpURLConnection *)connection
                         withRetrofitClientRequest:(RetrofitClientRequest *)request {
  [((JavaNetHttpURLConnection *) nil_chk(connection)) setRequestMethodWithNSString:[((RetrofitClientRequest *) nil_chk(request)) getMethod]];
  [connection setDoInputWithBoolean:true];
  for (RetrofitClientClientHeader * __strong header in nil_chk([request getHeaders])) {
    [connection addRequestPropertyWithNSString:[((RetrofitClientClientHeader *) nil_chk(header)) getName] withNSString:[header getValue]];
  }
  id<RetrofitMimeTypedOutput> body = [request getBody];
  if (body != nil) {
    [connection setDoOutputWithBoolean:true];
    [connection addRequestPropertyWithNSString:@"Content-Type" withNSString:[body mimeType]];
    jlong length = [body length];
    if (length != -1) {
      [connection setFixedLengthStreamingModeWithInt:(jint) length];
      [connection addRequestPropertyWithNSString:@"Content-Length" withNSString:NSString_valueOfLong_(length)];
    }
    else {
      [connection setChunkedStreamingModeWithInt:RetrofitClientUrlConnectionClient_CHUNK_SIZE];
    }
    [body writeToWithJavaIoOutputStream:[connection getOutputStream]];
  }
}

- (RetrofitClientResponse *)readResponseWithJavaNetHttpURLConnection:(JavaNetHttpURLConnection *)connection {
  jint status = [((JavaNetHttpURLConnection *) nil_chk(connection)) getResponseCode];
  NSString *reason = [connection getResponseMessage];
  if (reason == nil) reason = @"";
  id<JavaUtilList> headers = new_JavaUtilArrayList_init();
  for (id<JavaUtilMap_Entry> __strong field in nil_chk([((id<JavaUtilMap>) nil_chk([connection getHeaderFields])) entrySet])) {
    NSString *name = [((id<JavaUtilMap_Entry>) nil_chk(field)) getKey];
    for (NSString * __strong value in nil_chk([field getValue])) {
      [headers addWithId:new_RetrofitClientClientHeader_initWithNSString_withNSString_(name, value)];
    }
  }
  NSString *mimeType = [connection getContentType];
  jint length = [connection getContentLength];
  JavaIoInputStream *stream;
  if (status >= 400) {
    stream = [connection getErrorStream];
  }
  else {
    stream = [connection getInputStream];
  }
  id<RetrofitMimeTypedInput> responseBody = new_RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(mimeType, length, stream);
  return new_RetrofitClientResponse_initWithNSString_withInt_withNSString_withJavaUtilList_withRetrofitMimeTypedInput_([((JavaNetURL *) nil_chk([connection getURL])) description], status, reason, headers, responseBody);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "UrlConnectionClient", NULL, 0x1, NULL, NULL },
    { "executeWithRetrofitClientRequest:", "execute", "Lretrofit.client.Response;", 0x1, "Ljava.io.IOException;", NULL },
    { "openConnectionWithRetrofitClientRequest:", "openConnection", "Ljava.net.HttpURLConnection;", 0x4, "Ljava.io.IOException;", NULL },
    { "prepareRequestWithJavaNetHttpURLConnection:withRetrofitClientRequest:", "prepareRequest", "V", 0x0, "Ljava.io.IOException;", NULL },
    { "readResponseWithJavaNetHttpURLConnection:", "readResponse", "Lretrofit.client.Response;", 0x0, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "CHUNK_SIZE", "CHUNK_SIZE", 0x1a, "I", NULL, NULL, .constantValue.asInt = RetrofitClientUrlConnectionClient_CHUNK_SIZE },
  };
  static const char *inner_classes[] = {"Lretrofit.client.UrlConnectionClient$TypedInputStream;"};
  static const J2ObjcClassInfo _RetrofitClientUrlConnectionClient = { 2, "UrlConnectionClient", "retrofit.client", NULL, 0x1, 5, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_RetrofitClientUrlConnectionClient;
}

@end

void RetrofitClientUrlConnectionClient_init(RetrofitClientUrlConnectionClient *self) {
  NSObject_init(self);
}

RetrofitClientUrlConnectionClient *new_RetrofitClientUrlConnectionClient_init() {
  RetrofitClientUrlConnectionClient *self = [RetrofitClientUrlConnectionClient alloc];
  RetrofitClientUrlConnectionClient_init(self);
  return self;
}

RetrofitClientUrlConnectionClient *create_RetrofitClientUrlConnectionClient_init() {
  return new_RetrofitClientUrlConnectionClient_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitClientUrlConnectionClient)

@implementation RetrofitClientUrlConnectionClient_TypedInputStream

- (instancetype)initWithNSString:(NSString *)mimeType
                        withLong:(jlong)length
           withJavaIoInputStream:(JavaIoInputStream *)stream {
  RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(self, mimeType, length, stream);
  return self;
}

- (NSString *)mimeType {
  return mimeType_;
}

- (jlong)length {
  return length_;
}

- (JavaIoInputStream *)in {
  return stream_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withLong:withJavaIoInputStream:", "TypedInputStream", NULL, 0x2, NULL, NULL },
    { "mimeType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "length", NULL, "J", 0x1, NULL, NULL },
    { "in", NULL, "Ljava.io.InputStream;", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "mimeType_", NULL, 0x12, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "length_", NULL, 0x12, "J", NULL, NULL, .constantValue.asLong = 0 },
    { "stream_", NULL, 0x12, "Ljava.io.InputStream;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RetrofitClientUrlConnectionClient_TypedInputStream = { 2, "TypedInputStream", "retrofit.client", "UrlConnectionClient", 0xa, 4, methods, 3, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_RetrofitClientUrlConnectionClient_TypedInputStream;
}

@end

void RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(RetrofitClientUrlConnectionClient_TypedInputStream *self, NSString *mimeType, jlong length, JavaIoInputStream *stream) {
  NSObject_init(self);
  self->mimeType_ = mimeType;
  self->length_ = length;
  self->stream_ = stream;
}

RetrofitClientUrlConnectionClient_TypedInputStream *new_RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(NSString *mimeType, jlong length, JavaIoInputStream *stream) {
  RetrofitClientUrlConnectionClient_TypedInputStream *self = [RetrofitClientUrlConnectionClient_TypedInputStream alloc];
  RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(self, mimeType, length, stream);
  return self;
}

RetrofitClientUrlConnectionClient_TypedInputStream *create_RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(NSString *mimeType, jlong length, JavaIoInputStream *stream) {
  return new_RetrofitClientUrlConnectionClient_TypedInputStream_initWithNSString_withLong_withJavaIoInputStream_(mimeType, length, stream);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RetrofitClientUrlConnectionClient_TypedInputStream)
