//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/sourcejava/retrofit/retrofit/src/main/java/retrofit/CallbackRunnable.java
//

#include "J2ObjC_header.h"

#pragma push_macro("RetrofitCallbackRunnable_INCLUDE_ALL")
#ifdef RetrofitCallbackRunnable_RESTRICT
#define RetrofitCallbackRunnable_INCLUDE_ALL 0
#else
#define RetrofitCallbackRunnable_INCLUDE_ALL 1
#endif
#undef RetrofitCallbackRunnable_RESTRICT

#if !defined (RetrofitCallbackRunnable_) && (RetrofitCallbackRunnable_INCLUDE_ALL || defined(RetrofitCallbackRunnable_INCLUDE))
#define RetrofitCallbackRunnable_

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"

@class RetrofitResponseWrapper;
@protocol JavaUtilConcurrentExecutor;
@protocol RetrofitCallback;
@protocol RetrofitErrorHandler;

@interface RetrofitCallbackRunnable : NSObject < JavaLangRunnable >

#pragma mark Public

- (RetrofitResponseWrapper *)obtainResponse;

- (void)run;

#pragma mark Package-Private

- (instancetype)initWithRetrofitCallback:(id<RetrofitCallback>)callback
          withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)callbackExecutor
                withRetrofitErrorHandler:(id<RetrofitErrorHandler>)errorHandler;

@end

J2OBJC_EMPTY_STATIC_INIT(RetrofitCallbackRunnable)

FOUNDATION_EXPORT void RetrofitCallbackRunnable_initWithRetrofitCallback_withJavaUtilConcurrentExecutor_withRetrofitErrorHandler_(RetrofitCallbackRunnable *self, id<RetrofitCallback> callback, id<JavaUtilConcurrentExecutor> callbackExecutor, id<RetrofitErrorHandler> errorHandler);

J2OBJC_TYPE_LITERAL_HEADER(RetrofitCallbackRunnable)

#endif

#pragma pop_macro("RetrofitCallbackRunnable_INCLUDE_ALL")
