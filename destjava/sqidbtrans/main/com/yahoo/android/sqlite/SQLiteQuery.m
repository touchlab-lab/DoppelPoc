//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb-ios/src/com/yahoo/android/sqlite/SQLiteQuery.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/yahoo/android/sqlite/CursorWindow.h"
#include "com/yahoo/android/sqlite/SQLiteClosable.h"
#include "com/yahoo/android/sqlite/SQLiteDatabase.h"
#include "com/yahoo/android/sqlite/SQLiteDatabaseCorruptException.h"
#include "com/yahoo/android/sqlite/SQLiteException.h"
#include "com/yahoo/android/sqlite/SQLiteProgram.h"
#include "com/yahoo/android/sqlite/SQLiteQuery.h"
#include "com/yahoo/android/sqlite/SQLiteSession.h"
#include "com/yahoo/squidb/utility/Logger.h"

inline NSString *ComYahooAndroidSqliteSQLiteQuery_get_TAG();
static NSString *ComYahooAndroidSqliteSQLiteQuery_TAG = @"SQLiteQuery";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYahooAndroidSqliteSQLiteQuery, TAG, NSString *)

@implementation ComYahooAndroidSqliteSQLiteQuery

- (instancetype)initWithComYahooAndroidSqliteSQLiteDatabase:(ComYahooAndroidSqliteSQLiteDatabase *)db
                                               withNSString:(NSString *)query {
  ComYahooAndroidSqliteSQLiteQuery_initWithComYahooAndroidSqliteSQLiteDatabase_withNSString_(self, db, query);
  return self;
}

- (jint)fillWindowWithComYahooAndroidSqliteCursorWindow:(ComYahooAndroidSqliteCursorWindow *)window
                                                withInt:(jint)startPos
                                                withInt:(jint)requiredPos
                                            withBoolean:(jboolean)countAllRows {
  [self acquireReference];
  @try {
    [((ComYahooAndroidSqliteCursorWindow *) nil_chk(window)) acquireReference];
    @try {
      jint numRows = [((ComYahooAndroidSqliteSQLiteSession *) nil_chk([self getSession])) executeForCursorWindowWithNSString:[self getSql] withNSObjectArray:[self getBindArgs] withComYahooAndroidSqliteCursorWindow:window withInt:startPos withInt:requiredPos withBoolean:countAllRows withInt:[self getConnectionFlags]];
      return numRows;
    }
    @catch (ComYahooAndroidSqliteSQLiteDatabaseCorruptException *ex) {
      [self onCorruption];
      @throw ex;
    }
    @catch (ComYahooAndroidSqliteSQLiteException *ex) {
      ComYahooSquidbUtilityLogger_eWithNSString_withNSString_(ComYahooAndroidSqliteSQLiteQuery_TAG, JreStrcat("$$$$", @"exception: ", [((ComYahooAndroidSqliteSQLiteException *) nil_chk(ex)) getMessage], @"; query: ", [self getSql]));
      @throw ex;
    }
    @finally {
      [window releaseReference];
    }
  }
  @finally {
    [self releaseReference];
  }
}

- (NSString *)description {
  return JreStrcat("$$", @"SQLiteQuery: ", [self getSql]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComYahooAndroidSqliteSQLiteDatabase:withNSString:", "SQLiteQuery", NULL, 0x0, NULL, NULL },
    { "fillWindowWithComYahooAndroidSqliteCursorWindow:withInt:withInt:withBoolean:", "fillWindow", "I", 0x0, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TAG", "TAG", 0x1a, "Ljava.lang.String;", &ComYahooAndroidSqliteSQLiteQuery_TAG, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooAndroidSqliteSQLiteQuery = { 2, "SQLiteQuery", "com.yahoo.android.sqlite", NULL, 0x11, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooAndroidSqliteSQLiteQuery;
}

@end

void ComYahooAndroidSqliteSQLiteQuery_initWithComYahooAndroidSqliteSQLiteDatabase_withNSString_(ComYahooAndroidSqliteSQLiteQuery *self, ComYahooAndroidSqliteSQLiteDatabase *db, NSString *query) {
  ComYahooAndroidSqliteSQLiteProgram_initWithComYahooAndroidSqliteSQLiteDatabase_withNSString_withNSObjectArray_(self, db, query, nil);
}

ComYahooAndroidSqliteSQLiteQuery *new_ComYahooAndroidSqliteSQLiteQuery_initWithComYahooAndroidSqliteSQLiteDatabase_withNSString_(ComYahooAndroidSqliteSQLiteDatabase *db, NSString *query) {
  ComYahooAndroidSqliteSQLiteQuery *self = [ComYahooAndroidSqliteSQLiteQuery alloc];
  ComYahooAndroidSqliteSQLiteQuery_initWithComYahooAndroidSqliteSQLiteDatabase_withNSString_(self, db, query);
  return self;
}

ComYahooAndroidSqliteSQLiteQuery *create_ComYahooAndroidSqliteSQLiteQuery_initWithComYahooAndroidSqliteSQLiteDatabase_withNSString_(ComYahooAndroidSqliteSQLiteDatabase *db, NSString *query) {
  return new_ComYahooAndroidSqliteSQLiteQuery_initWithComYahooAndroidSqliteSQLiteDatabase_withNSString_(db, query);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooAndroidSqliteSQLiteQuery)
