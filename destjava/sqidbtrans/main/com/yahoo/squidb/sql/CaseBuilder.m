//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/CaseBuilder.java
//

#include "J2ObjC_source.h"
#include "com/yahoo/squidb/sql/CaseBuilder.h"
#include "com/yahoo/squidb/sql/Function.h"
#include "com/yahoo/squidb/sql/SqlBuilder.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/StringBuilder.h"
#include "java/util/ArrayList.h"

@interface ComYahooSquidbSqlCaseBuilder () {
 @public
  id baseExpression_;
  JavaUtilArrayList *whens_;
  JavaUtilArrayList *thens_;
  id elseValue_;
  jboolean ended_;
}

@end

J2OBJC_FIELD_SETTER(ComYahooSquidbSqlCaseBuilder, baseExpression_, id)
J2OBJC_FIELD_SETTER(ComYahooSquidbSqlCaseBuilder, whens_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComYahooSquidbSqlCaseBuilder, thens_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ComYahooSquidbSqlCaseBuilder, elseValue_, id)

@interface ComYahooSquidbSqlCaseBuilder_$1 : ComYahooSquidbSqlFunction {
 @public
  ComYahooSquidbSqlCaseBuilder *this$0_;
}

- (void)appendFunctionExpressionWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                    withBoolean:(jboolean)forSqlValidation;

- (instancetype)initWithComYahooSquidbSqlCaseBuilder:(ComYahooSquidbSqlCaseBuilder *)outer$;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbSqlCaseBuilder_$1)

J2OBJC_FIELD_SETTER(ComYahooSquidbSqlCaseBuilder_$1, this$0_, ComYahooSquidbSqlCaseBuilder *)

__attribute__((unused)) static void ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(ComYahooSquidbSqlCaseBuilder_$1 *self, ComYahooSquidbSqlCaseBuilder *outer$);

__attribute__((unused)) static ComYahooSquidbSqlCaseBuilder_$1 *new_ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(ComYahooSquidbSqlCaseBuilder *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbSqlCaseBuilder_$1 *create_ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(ComYahooSquidbSqlCaseBuilder *outer$);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlCaseBuilder_$1)

@implementation ComYahooSquidbSqlCaseBuilder

- (instancetype)initWithId:(id)baseExpression {
  ComYahooSquidbSqlCaseBuilder_initWithId_(self, baseExpression);
  return self;
}

- (ComYahooSquidbSqlCaseBuilder *)whenWithId:(id)when
                                      withId:(id)then {
  if (ended_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Can't call when() after calling end()");
  }
  if (whens_ == nil) {
    whens_ = new_JavaUtilArrayList_init();
    thens_ = new_JavaUtilArrayList_init();
  }
  [((JavaUtilArrayList *) nil_chk(whens_)) addWithId:when];
  [((JavaUtilArrayList *) nil_chk(thens_)) addWithId:then];
  return self;
}

- (ComYahooSquidbSqlCaseBuilder *)elseExprWithId:(id)value {
  if (ended_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Can't call elseExpr() after calling end()");
  }
  self->elseValue_ = value;
  return self;
}

- (ComYahooSquidbSqlFunction *)end {
  if (whens_ == nil || [whens_ size] == 0) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"CASE statement must have at least one WHEN branch");
  }
  if (ended_) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"end() already called on this CASE statement");
  }
  ended_ = true;
  return new_ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithId:", "CaseBuilder", NULL, 0x0, NULL, NULL },
    { "whenWithId:withId:", "when", "Lcom.yahoo.squidb.sql.CaseBuilder;", 0x1, NULL, NULL },
    { "elseExprWithId:", "elseExpr", "Lcom.yahoo.squidb.sql.CaseBuilder;", 0x1, NULL, NULL },
    { "end", NULL, "Lcom.yahoo.squidb.sql.Function;", 0x1, NULL, "<T:Ljava/lang/Object;>()Lcom/yahoo/squidb/sql/Function<TT;>;" },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "baseExpression_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "whens_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "thens_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Ljava/lang/Object;>;", .constantValue.asLong = 0 },
    { "elseValue_", NULL, 0x2, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "ended_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbSqlCaseBuilder = { 2, "CaseBuilder", "com.yahoo.squidb.sql", NULL, 0x1, 4, methods, 5, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbSqlCaseBuilder;
}

@end

void ComYahooSquidbSqlCaseBuilder_initWithId_(ComYahooSquidbSqlCaseBuilder *self, id baseExpression) {
  NSObject_init(self);
  self->baseExpression_ = baseExpression;
}

ComYahooSquidbSqlCaseBuilder *new_ComYahooSquidbSqlCaseBuilder_initWithId_(id baseExpression) {
  ComYahooSquidbSqlCaseBuilder *self = [ComYahooSquidbSqlCaseBuilder alloc];
  ComYahooSquidbSqlCaseBuilder_initWithId_(self, baseExpression);
  return self;
}

ComYahooSquidbSqlCaseBuilder *create_ComYahooSquidbSqlCaseBuilder_initWithId_(id baseExpression) {
  return new_ComYahooSquidbSqlCaseBuilder_initWithId_(baseExpression);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbSqlCaseBuilder)

@implementation ComYahooSquidbSqlCaseBuilder_$1

- (void)appendFunctionExpressionWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                    withBoolean:(jboolean)forSqlValidation {
  (void) [((JavaLangStringBuilder *) nil_chk(((ComYahooSquidbSqlSqlBuilder *) nil_chk(builder))->sql_)) appendWithNSString:@"(CASE"];
  if (this$0_->baseExpression_ != nil) {
    (void) [builder->sql_ appendWithChar:' '];
    [builder addValueToSqlWithId:this$0_->baseExpression_ withBoolean:forSqlValidation];
  }
  jint size = [((JavaUtilArrayList *) nil_chk(this$0_->whens_)) size];
  for (jint i = 0; i < size; i++) {
    (void) [builder->sql_ appendWithNSString:@" WHEN "];
    [builder addValueToSqlWithId:[this$0_->whens_ getWithInt:i] withBoolean:forSqlValidation];
    (void) [builder->sql_ appendWithNSString:@" THEN "];
    [builder addValueToSqlWithId:[((JavaUtilArrayList *) nil_chk(this$0_->thens_)) getWithInt:i] withBoolean:forSqlValidation];
  }
  if (this$0_->elseValue_ != nil) {
    (void) [builder->sql_ appendWithNSString:@" ELSE "];
    [builder addValueToSqlWithId:this$0_->elseValue_ withBoolean:forSqlValidation];
  }
  (void) [builder->sql_ appendWithNSString:@" END)"];
}

- (instancetype)initWithComYahooSquidbSqlCaseBuilder:(ComYahooSquidbSqlCaseBuilder *)outer$ {
  ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(self, outer$);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "appendFunctionExpressionWithComYahooSquidbSqlSqlBuilder:withBoolean:", "appendFunctionExpression", "V", 0x4, NULL, NULL },
    { "initWithComYahooSquidbSqlCaseBuilder:", "", NULL, 0x0, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.yahoo.squidb.sql.CaseBuilder;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"TT;"};
  static const J2ObjCEnclosingMethodInfo enclosing_method = { "ComYahooSquidbSqlCaseBuilder", "end" };
  static const J2ObjcClassInfo _ComYahooSquidbSqlCaseBuilder_$1 = { 2, "", "com.yahoo.squidb.sql", "CaseBuilder", 0x8008, 2, methods, 1, fields, 1, superclass_type_args, 0, NULL, &enclosing_method, "Lcom/yahoo/squidb/sql/Function<TT;>;" };
  return &_ComYahooSquidbSqlCaseBuilder_$1;
}

@end

void ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(ComYahooSquidbSqlCaseBuilder_$1 *self, ComYahooSquidbSqlCaseBuilder *outer$) {
  self->this$0_ = outer$;
  ComYahooSquidbSqlFunction_init(self);
}

ComYahooSquidbSqlCaseBuilder_$1 *new_ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(ComYahooSquidbSqlCaseBuilder *outer$) {
  ComYahooSquidbSqlCaseBuilder_$1 *self = [ComYahooSquidbSqlCaseBuilder_$1 alloc];
  ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(self, outer$);
  return self;
}

ComYahooSquidbSqlCaseBuilder_$1 *create_ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(ComYahooSquidbSqlCaseBuilder *outer$) {
  return new_ComYahooSquidbSqlCaseBuilder_$1_initWithComYahooSquidbSqlCaseBuilder_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbSqlCaseBuilder_$1)
