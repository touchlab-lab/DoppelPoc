//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/CaseInsensitiveEqualsCriterion.java
//

#include "J2ObjC_source.h"
#include "com/yahoo/squidb/sql/BinaryCriterion.h"
#include "com/yahoo/squidb/sql/CaseInsensitiveEqualsCriterion.h"
#include "com/yahoo/squidb/sql/Field.h"
#include "com/yahoo/squidb/sql/Operator.h"
#include "com/yahoo/squidb/sql/SqlBuilder.h"
#include "java/lang/StringBuilder.h"

@implementation ComYahooSquidbSqlCaseInsensitiveEqualsCriterion

- (instancetype)initWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)expression
                 withComYahooSquidbSqlOperator:(ComYahooSquidbSqlOperator *)operator_
                                        withId:(id)value {
  ComYahooSquidbSqlCaseInsensitiveEqualsCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(self, expression, operator_, value);
  return self;
}

- (void)afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                 withBoolean:(jboolean)forSqlValidation {
  [super afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:builder withBoolean:forSqlValidation];
  (void) [((JavaLangStringBuilder *) nil_chk(((ComYahooSquidbSqlSqlBuilder *) nil_chk(builder))->sql_)) appendWithNSString:@" COLLATE NOCASE "];
}

- (ComYahooSquidbSqlBinaryCriterion *)constructNegatedCriterionWithComYahooSquidbSqlOperator:(ComYahooSquidbSqlOperator *)negatedOperator {
  return new_ComYahooSquidbSqlCaseInsensitiveEqualsCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(field_, negatedOperator, value_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComYahooSquidbSqlField:withComYahooSquidbSqlOperator:withId:", "CaseInsensitiveEqualsCriterion", NULL, 0x0, NULL, "(Lcom/yahoo/squidb/sql/Field<*>;Lcom/yahoo/squidb/sql/Operator;Ljava/lang/Object;)V" },
    { "afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:withBoolean:", "afterPopulateOperator", "V", 0x4, NULL, NULL },
    { "constructNegatedCriterionWithComYahooSquidbSqlOperator:", "constructNegatedCriterion", "Lcom.yahoo.squidb.sql.BinaryCriterion;", 0x4, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComYahooSquidbSqlCaseInsensitiveEqualsCriterion = { 2, "CaseInsensitiveEqualsCriterion", "com.yahoo.squidb.sql", NULL, 0x0, 3, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbSqlCaseInsensitiveEqualsCriterion;
}

@end

void ComYahooSquidbSqlCaseInsensitiveEqualsCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(ComYahooSquidbSqlCaseInsensitiveEqualsCriterion *self, ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id value) {
  ComYahooSquidbSqlBinaryCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(self, expression, operator_, value);
}

ComYahooSquidbSqlCaseInsensitiveEqualsCriterion *new_ComYahooSquidbSqlCaseInsensitiveEqualsCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id value) {
  ComYahooSquidbSqlCaseInsensitiveEqualsCriterion *self = [ComYahooSquidbSqlCaseInsensitiveEqualsCriterion alloc];
  ComYahooSquidbSqlCaseInsensitiveEqualsCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(self, expression, operator_, value);
  return self;
}

ComYahooSquidbSqlCaseInsensitiveEqualsCriterion *create_ComYahooSquidbSqlCaseInsensitiveEqualsCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id value) {
  return new_ComYahooSquidbSqlCaseInsensitiveEqualsCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(expression, operator_, value);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbSqlCaseInsensitiveEqualsCriterion)
