//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/Function.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComYahooSquidbSqlFunction_INCLUDE_ALL")
#ifdef ComYahooSquidbSqlFunction_RESTRICT
#define ComYahooSquidbSqlFunction_INCLUDE_ALL 0
#else
#define ComYahooSquidbSqlFunction_INCLUDE_ALL 1
#endif
#undef ComYahooSquidbSqlFunction_RESTRICT

#if !defined (ComYahooSquidbSqlFunction_) && (ComYahooSquidbSqlFunction_INCLUDE_ALL || defined(ComYahooSquidbSqlFunction_INCLUDE))
#define ComYahooSquidbSqlFunction_

#define ComYahooSquidbSqlField_RESTRICT 1
#define ComYahooSquidbSqlField_INCLUDE 1
#include "com/yahoo/squidb/sql/Field.h"

@class ComYahooSquidbSqlCaseBuilder;
@class ComYahooSquidbSqlCriterion;
@class ComYahooSquidbSqlQuery;
@class ComYahooSquidbSqlSqlBuilder;
@class ComYahooSquidbUtilityVersionCode;
@class IOSObjectArray;

@interface ComYahooSquidbSqlFunction : ComYahooSquidbSqlField

#pragma mark Public

- (instancetype)init;

+ (ComYahooSquidbSqlFunction *)absWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)addWithNSObjectArray:(IOSObjectArray *)args;

+ (ComYahooSquidbSqlFunction *)avgWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)avgDistinctWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)bitwiseAndWithNSObjectArray:(IOSObjectArray *)args;

+ (ComYahooSquidbSqlFunction *)bitwiseOrWithNSObjectArray:(IOSObjectArray *)args;

+ (ComYahooSquidbSqlCaseBuilder *)caseExprWithId:(id)baseExpression;

+ (ComYahooSquidbSqlFunction *)caseWhenWithComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)when;

+ (ComYahooSquidbSqlCaseBuilder *)caseWhenWithComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)when
                                                                  withId:(id)then;

+ (ComYahooSquidbSqlFunction *)caseWhenWithComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)when
                                                               withId:(id)ifTrue
                                                               withId:(id)ifFalse;

+ (ComYahooSquidbSqlFunction *)castWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field
                                                 withNSString:(NSString *)newType;

+ (ComYahooSquidbSqlFunction *)coalesceWithNSObjectArray:(IOSObjectArray *)values;

+ (ComYahooSquidbSqlFunction *)count;

+ (ComYahooSquidbSqlFunction *)countWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)countDistinctWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)divideWithNSObjectArray:(IOSObjectArray *)args;

+ (ComYahooSquidbSqlFunction *)fromQueryWithComYahooSquidbSqlQuery:(ComYahooSquidbSqlQuery *)query;

+ (ComYahooSquidbSqlFunction *)functionWithArgumentsWithNSString:(NSString *)functionName
                                               withNSObjectArray:(IOSObjectArray *)arguments;

- (NSString *)getExpression;

- (NSString *)getExpressionWithComYahooSquidbUtilityVersionCode:(ComYahooSquidbUtilityVersionCode *)forSqliteVersion;

+ (ComYahooSquidbSqlFunction *)groupConcatWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)groupConcatWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field
                                                        withNSString:(NSString *)separator;

+ (ComYahooSquidbSqlFunction *)groupConcatDistinctWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)lengthWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)lowerWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)maxWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)minWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)moduloWithId:(id)lhs
                                     withId:(id)rhs;

+ (ComYahooSquidbSqlFunction *)multiplyWithNSObjectArray:(IOSObjectArray *)args;

+ (ComYahooSquidbSqlFunction *)rawFunctionWithNSString:(NSString *)expression;

+ (ComYahooSquidbSqlFunction *)strConcatWithNSObjectArray:(IOSObjectArray *)objects;

+ (ComYahooSquidbSqlFunction *)substrWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field
                                                         withId:(id)start;

+ (ComYahooSquidbSqlFunction *)substrWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field
                                                         withId:(id)start
                                                         withId:(id)length;

+ (ComYahooSquidbSqlFunction *)subtractWithNSObjectArray:(IOSObjectArray *)args;

+ (ComYahooSquidbSqlFunction *)sumWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)sumDistinctWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

+ (ComYahooSquidbSqlFunction *)upperWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)field;

#pragma mark Protected

- (instancetype)initWithNSString:(NSString *)expression;

- (void)appendFunctionExpressionWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                    withBoolean:(jboolean)forSqlValidation;

- (void)appendQualifiedExpressionWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                     withBoolean:(jboolean)forSqlValidation;

- (NSString *)expressionForComparison;

@end

J2OBJC_STATIC_INIT(ComYahooSquidbSqlFunction)

inline ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_get_TRUE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_TRUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYahooSquidbSqlFunction, TRUE, ComYahooSquidbSqlFunction *)

inline ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_get_FALSE();
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_FALSE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComYahooSquidbSqlFunction, FALSE, ComYahooSquidbSqlFunction *)

FOUNDATION_EXPORT void ComYahooSquidbSqlFunction_init(ComYahooSquidbSqlFunction *self);

FOUNDATION_EXPORT void ComYahooSquidbSqlFunction_initWithNSString_(ComYahooSquidbSqlFunction *self, NSString *expression);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_functionWithArgumentsWithNSString_withNSObjectArray_(NSString *functionName, IOSObjectArray *arguments);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_rawFunctionWithNSString_(NSString *expression);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_fromQueryWithComYahooSquidbSqlQuery_(ComYahooSquidbSqlQuery *query);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_upperWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_lowerWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_substrWithComYahooSquidbSqlField_withId_(ComYahooSquidbSqlField *field, id start);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_substrWithComYahooSquidbSqlField_withId_withId_(ComYahooSquidbSqlField *field, id start, id length);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_strConcatWithNSObjectArray_(IOSObjectArray *objects);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_count();

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_countWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_countDistinctWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_lengthWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_maxWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_minWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_sumWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_sumDistinctWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_avgWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_avgDistinctWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_absWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_groupConcatWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_groupConcatDistinctWithComYahooSquidbSqlField_(ComYahooSquidbSqlField *field);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_groupConcatWithComYahooSquidbSqlField_withNSString_(ComYahooSquidbSqlField *field, NSString *separator);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_caseWhenWithComYahooSquidbSqlCriterion_(ComYahooSquidbSqlCriterion *when);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_caseWhenWithComYahooSquidbSqlCriterion_withId_withId_(ComYahooSquidbSqlCriterion *when, id ifTrue, id ifFalse);

FOUNDATION_EXPORT ComYahooSquidbSqlCaseBuilder *ComYahooSquidbSqlFunction_caseWhenWithComYahooSquidbSqlCriterion_withId_(ComYahooSquidbSqlCriterion *when, id then);

FOUNDATION_EXPORT ComYahooSquidbSqlCaseBuilder *ComYahooSquidbSqlFunction_caseExprWithId_(id baseExpression);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_castWithComYahooSquidbSqlField_withNSString_(ComYahooSquidbSqlField *field, NSString *newType);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_coalesceWithNSObjectArray_(IOSObjectArray *values);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_addWithNSObjectArray_(IOSObjectArray *args);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_subtractWithNSObjectArray_(IOSObjectArray *args);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_multiplyWithNSObjectArray_(IOSObjectArray *args);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_divideWithNSObjectArray_(IOSObjectArray *args);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_moduloWithId_withId_(id lhs, id rhs);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_bitwiseAndWithNSObjectArray_(IOSObjectArray *args);

FOUNDATION_EXPORT ComYahooSquidbSqlFunction *ComYahooSquidbSqlFunction_bitwiseOrWithNSObjectArray_(IOSObjectArray *args);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlFunction)

#endif

#pragma pop_macro("ComYahooSquidbSqlFunction_INCLUDE_ALL")
