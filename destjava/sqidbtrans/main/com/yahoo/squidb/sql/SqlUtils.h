//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/SqlUtils.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComYahooSquidbSqlSqlUtils_INCLUDE_ALL")
#ifdef ComYahooSquidbSqlSqlUtils_RESTRICT
#define ComYahooSquidbSqlSqlUtils_INCLUDE_ALL 0
#else
#define ComYahooSquidbSqlSqlUtils_INCLUDE_ALL 1
#endif
#undef ComYahooSquidbSqlSqlUtils_RESTRICT

#if !defined (ComYahooSquidbSqlSqlUtils_) && (ComYahooSquidbSqlSqlUtils_INCLUDE_ALL || defined(ComYahooSquidbSqlSqlUtils_INCLUDE))
#define ComYahooSquidbSqlSqlUtils_

@class JavaLangStringBuilder;
@protocol JavaUtilCollection;

@interface ComYahooSquidbSqlSqlUtils : NSObject

#pragma mark Public

+ (jboolean)equalsWithNSString:(NSString *)a
                  withNSString:(NSString *)b;

+ (NSString *)escapeLikePatternWithNSString:(NSString *)pattern
                                   withChar:(jchar)escape;

+ (jboolean)isEmptyWithNSString:(NSString *)str;

+ (id)resolveArgReferencesWithId:(id)arg;

#pragma mark Package-Private

+ (void)addInlineCollectionToSqlStringWithJavaLangStringBuilder:(JavaLangStringBuilder *)sql
                                         withJavaUtilCollection:(id<JavaUtilCollection>)values;

+ (NSString *)sanitizeStringAsLiteralWithNSString:(NSString *)literal;

+ (NSString *)toSanitizedStringWithId:(id)value;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbSqlSqlUtils)

FOUNDATION_EXPORT jboolean ComYahooSquidbSqlSqlUtils_isEmptyWithNSString_(NSString *str);

FOUNDATION_EXPORT jboolean ComYahooSquidbSqlSqlUtils_equalsWithNSString_withNSString_(NSString *a, NSString *b);

FOUNDATION_EXPORT id ComYahooSquidbSqlSqlUtils_resolveArgReferencesWithId_(id arg);

FOUNDATION_EXPORT void ComYahooSquidbSqlSqlUtils_addInlineCollectionToSqlStringWithJavaLangStringBuilder_withJavaUtilCollection_(JavaLangStringBuilder *sql, id<JavaUtilCollection> values);

FOUNDATION_EXPORT NSString *ComYahooSquidbSqlSqlUtils_toSanitizedStringWithId_(id value);

FOUNDATION_EXPORT NSString *ComYahooSquidbSqlSqlUtils_sanitizeStringAsLiteralWithNSString_(NSString *literal);

FOUNDATION_EXPORT NSString *ComYahooSquidbSqlSqlUtils_escapeLikePatternWithNSString_withChar_(NSString *pattern, jchar escape);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlSqlUtils)

#endif

#pragma pop_macro("ComYahooSquidbSqlSqlUtils_INCLUDE_ALL")
