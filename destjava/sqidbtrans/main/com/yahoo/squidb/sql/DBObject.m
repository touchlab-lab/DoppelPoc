//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/DBObject.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/yahoo/squidb/sql/CompilableWithArguments.h"
#include "com/yahoo/squidb/sql/DBObject.h"
#include "com/yahoo/squidb/sql/SqlBuilder.h"
#include "com/yahoo/squidb/sql/SqlUtils.h"
#include "java/lang/CloneNotSupportedException.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/StringBuilder.h"

@interface ComYahooSquidbSqlDBObject ()

- (void)appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder;

@end

__attribute__((unused)) static void ComYahooSquidbSqlDBObject_appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder_(ComYahooSquidbSqlDBObject *self, JavaLangStringBuilder *builder);

@implementation ComYahooSquidbSqlDBObject

- (instancetype)initWithNSString:(NSString *)expression {
  ComYahooSquidbSqlDBObject_initWithNSString_(self, expression);
  return self;
}

- (instancetype)initWithNSString:(NSString *)expression
                    withNSString:(NSString *)qualifier {
  ComYahooSquidbSqlDBObject_initWithNSString_withNSString_(self, expression, qualifier);
  return self;
}

- (id)asWithNSString:(NSString *)newAlias {
  @try {
    ComYahooSquidbSqlDBObject *clone = (ComYahooSquidbSqlDBObject *) cast_chk([self clone], [ComYahooSquidbSqlDBObject class]);
    ((ComYahooSquidbSqlDBObject *) nil_chk(clone))->alias_ = newAlias;
    return clone;
  }
  @catch (JavaLangCloneNotSupportedException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
}

- (jboolean)hasAlias {
  return !ComYahooSquidbSqlSqlUtils_isEmptyWithNSString_(alias_);
}

- (jboolean)hasQualifier {
  return !ComYahooSquidbSqlSqlUtils_isEmptyWithNSString_(qualifier_);
}

- (jboolean)isEqual:(id)o {
  if (self == o) {
    return true;
  }
  if (o == nil || [self getClass] != (id) [o getClass]) {
    return false;
  }
  ComYahooSquidbSqlDBObject *dbObject = (ComYahooSquidbSqlDBObject *) cast_chk(o, [ComYahooSquidbSqlDBObject class]);
  if (alias_ != nil ? ![alias_ isEqual:((ComYahooSquidbSqlDBObject *) nil_chk(dbObject))->alias_] : ((ComYahooSquidbSqlDBObject *) nil_chk(dbObject))->alias_ != nil) {
    return false;
  }
  NSString *myExpression = [self expressionForComparison];
  NSString *otherExpression = [((ComYahooSquidbSqlDBObject *) nil_chk(dbObject)) expressionForComparison];
  if (myExpression != nil ? ![myExpression isEqual:otherExpression] : otherExpression != nil) {
    return false;
  }
  return !(qualifier_ != nil ? ![qualifier_ isEqual:dbObject->qualifier_] : dbObject->qualifier_ != nil);
}

- (NSUInteger)hash {
  jint result = alias_ != nil ? ((jint) [alias_ hash]) : 0;
  NSString *expression = [self expressionForComparison];
  result = 31 * result + (expression != nil ? ((jint) [expression hash]) : 0);
  result = 31 * result + (qualifier_ != nil ? ((jint) [qualifier_ hash]) : 0);
  return result;
}

- (NSString *)expressionForComparison {
  return [self getExpression];
}

- (NSString *)description {
  JavaLangStringBuilder *sb = new_JavaLangStringBuilder_init();
  (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@"Expression="])) appendWithNSString:[self expressionForComparison]];
  if ([self hasQualifier]) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" Qualifier="])) appendWithNSString:qualifier_];
  }
  if ([self hasAlias]) {
    (void) [((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" Alias="])) appendWithNSString:alias_];
  }
  return [sb description];
}

- (NSString *)getName {
  if ([self hasAlias]) {
    return alias_;
  }
  return [self getExpression];
}

- (NSString *)getExpression {
  return expression_;
}

- (NSString *)getQualifiedExpression {
  JavaLangStringBuilder *builder = new_JavaLangStringBuilder_init();
  ComYahooSquidbSqlDBObject_appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder_(self, builder);
  return [builder description];
}

- (void)appendToSqlBuilderWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                              withBoolean:(jboolean)forSqlValidation {
  [self appendQualifiedExpressionWithComYahooSquidbSqlSqlBuilder:builder withBoolean:forSqlValidation];
  if ([self hasAlias]) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(((ComYahooSquidbSqlSqlBuilder *) nil_chk(builder))->sql_)) appendWithNSString:@" AS "])) appendWithNSString:alias_];
  }
  else if ([self hasQualifier]) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(((ComYahooSquidbSqlSqlBuilder *) nil_chk(builder))->sql_)) appendWithNSString:@" AS "])) appendWithNSString:expression_];
  }
}

- (void)appendQualifiedExpressionWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                     withBoolean:(jboolean)forSqlValidation {
  ComYahooSquidbSqlDBObject_appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder_(self, ((ComYahooSquidbSqlSqlBuilder *) nil_chk(builder))->sql_);
}

- (void)appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder:(JavaLangStringBuilder *)builder {
  ComYahooSquidbSqlDBObject_appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder_(self, builder);
}

- (id)copyWithZone:(NSZone *)zone {
  return [self clone];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:", "DBObject", NULL, 0x4, NULL, NULL },
    { "initWithNSString:withNSString:", "DBObject", NULL, 0x4, NULL, NULL },
    { "asWithNSString:", "as", "TT;", 0x1, NULL, "(Ljava/lang/String;)TT;" },
    { "hasAlias", NULL, "Z", 0x1, NULL, NULL },
    { "hasQualifier", NULL, "Z", 0x1, NULL, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL, NULL },
    { "hash", "hashCode", "I", 0x1, NULL, NULL },
    { "expressionForComparison", NULL, "Ljava.lang.String;", 0x4, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getName", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "getExpression", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getQualifiedExpression", NULL, "Ljava.lang.String;", 0x11, NULL, NULL },
    { "appendToSqlBuilderWithComYahooSquidbSqlSqlBuilder:withBoolean:", "appendToSqlBuilder", "V", 0x0, NULL, NULL },
    { "appendQualifiedExpressionWithComYahooSquidbSqlSqlBuilder:withBoolean:", "appendQualifiedExpression", "V", 0x4, NULL, NULL },
    { "appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder:", "appendQualifiedExpressionToStringBuilder", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "alias_", NULL, 0x4, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "expression_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "qualifier_", NULL, 0x14, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbSqlDBObject = { 2, "DBObject", "com.yahoo.squidb.sql", NULL, 0x400, 15, methods, 3, fields, 0, NULL, 0, NULL, NULL, "<T:Lcom/yahoo/squidb/sql/DBObject<*>;>Lcom/yahoo/squidb/sql/CompilableWithArguments;Ljava/lang/Cloneable;" };
  return &_ComYahooSquidbSqlDBObject;
}

@end

void ComYahooSquidbSqlDBObject_initWithNSString_(ComYahooSquidbSqlDBObject *self, NSString *expression) {
  ComYahooSquidbSqlDBObject_initWithNSString_withNSString_(self, expression, nil);
}

void ComYahooSquidbSqlDBObject_initWithNSString_withNSString_(ComYahooSquidbSqlDBObject *self, NSString *expression, NSString *qualifier) {
  ComYahooSquidbSqlCompilableWithArguments_init(self);
  self->expression_ = expression;
  self->qualifier_ = qualifier;
}

void ComYahooSquidbSqlDBObject_appendQualifiedExpressionToStringBuilderWithJavaLangStringBuilder_(ComYahooSquidbSqlDBObject *self, JavaLangStringBuilder *builder) {
  if ([self hasQualifier]) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:self->qualifier_])) appendWithChar:'.'];
  }
  (void) [((JavaLangStringBuilder *) nil_chk(builder)) appendWithNSString:[self getExpression]];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbSqlDBObject)
