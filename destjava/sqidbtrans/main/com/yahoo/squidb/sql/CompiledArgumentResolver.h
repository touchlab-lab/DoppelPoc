//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/CompiledArgumentResolver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("ComYahooSquidbSqlCompiledArgumentResolver_INCLUDE_ALL")
#ifdef ComYahooSquidbSqlCompiledArgumentResolver_RESTRICT
#define ComYahooSquidbSqlCompiledArgumentResolver_INCLUDE_ALL 0
#else
#define ComYahooSquidbSqlCompiledArgumentResolver_INCLUDE_ALL 1
#endif
#undef ComYahooSquidbSqlCompiledArgumentResolver_RESTRICT

#if !defined (ComYahooSquidbSqlCompiledArgumentResolver_) && (ComYahooSquidbSqlCompiledArgumentResolver_INCLUDE_ALL || defined(ComYahooSquidbSqlCompiledArgumentResolver_INCLUDE))
#define ComYahooSquidbSqlCompiledArgumentResolver_

@class ComYahooSquidbSqlCompiledStatement;
@class ComYahooSquidbSqlSqlBuilder;

@interface ComYahooSquidbSqlCompiledArgumentResolver : NSObject

#pragma mark Public

- (instancetype)initWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder;

- (ComYahooSquidbSqlCompiledStatement *)resolveToCompiledStatement;

@end

J2OBJC_STATIC_INIT(ComYahooSquidbSqlCompiledArgumentResolver)

FOUNDATION_EXPORT void ComYahooSquidbSqlCompiledArgumentResolver_initWithComYahooSquidbSqlSqlBuilder_(ComYahooSquidbSqlCompiledArgumentResolver *self, ComYahooSquidbSqlSqlBuilder *builder);

FOUNDATION_EXPORT ComYahooSquidbSqlCompiledArgumentResolver *new_ComYahooSquidbSqlCompiledArgumentResolver_initWithComYahooSquidbSqlSqlBuilder_(ComYahooSquidbSqlSqlBuilder *builder) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYahooSquidbSqlCompiledArgumentResolver *create_ComYahooSquidbSqlCompiledArgumentResolver_initWithComYahooSquidbSqlSqlBuilder_(ComYahooSquidbSqlSqlBuilder *builder);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlCompiledArgumentResolver)

#endif

#if !defined (ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache_) && (ComYahooSquidbSqlCompiledArgumentResolver_INCLUDE_ALL || defined(ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache_INCLUDE))
#define ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache_

#define JavaUtilLinkedHashMap_RESTRICT 1
#define JavaUtilLinkedHashMap_INCLUDE 1
#include "java/util/LinkedHashMap.h"

@protocol JavaUtilMap_Entry;

@interface ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache : JavaUtilLinkedHashMap

#pragma mark Public

- (instancetype)initWithInt:(jint)maxCapacity;

#pragma mark Protected

- (jboolean)removeEldestEntryWithJavaUtilMap_Entry:(id<JavaUtilMap_Entry>)eldest;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache)

FOUNDATION_EXPORT void ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache_initWithInt_(ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache *self, jint maxCapacity);

FOUNDATION_EXPORT ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache *new_ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache_initWithInt_(jint maxCapacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache *create_ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache_initWithInt_(jint maxCapacity);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbSqlCompiledArgumentResolver_SimpleLruCache)

#endif

#pragma pop_macro("ComYahooSquidbSqlCompiledArgumentResolver_INCLUDE_ALL")
