//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/BetweenCriterion.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/yahoo/squidb/sql/BetweenCriterion.h"
#include "com/yahoo/squidb/sql/BinaryCriterion.h"
#include "com/yahoo/squidb/sql/Field.h"
#include "com/yahoo/squidb/sql/Operator.h"
#include "com/yahoo/squidb/sql/SqlBuilder.h"
#include "java/lang/StringBuilder.h"

@interface ComYahooSquidbSqlBetweenCriterion () {
 @public
  id lower_;
  id upper_;
}

@end

J2OBJC_FIELD_SETTER(ComYahooSquidbSqlBetweenCriterion, lower_, id)
J2OBJC_FIELD_SETTER(ComYahooSquidbSqlBetweenCriterion, upper_, id)

@implementation ComYahooSquidbSqlBetweenCriterion

- (instancetype)initWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)expression
                 withComYahooSquidbSqlOperator:(ComYahooSquidbSqlOperator *)operator_
                                        withId:(id)lower
                                        withId:(id)upper {
  ComYahooSquidbSqlBetweenCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withId_(self, expression, operator_, lower, upper);
  return self;
}

- (void)afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                 withBoolean:(jboolean)forSqlValidation {
  [((ComYahooSquidbSqlSqlBuilder *) nil_chk(builder)) addValueToSqlWithId:lower_ withBoolean:forSqlValidation];
  (void) [((JavaLangStringBuilder *) nil_chk(builder->sql_)) appendWithNSString:@" AND "];
  [builder addValueToSqlWithId:upper_ withBoolean:forSqlValidation];
}

- (ComYahooSquidbSqlBinaryCriterion *)constructNegatedCriterionWithComYahooSquidbSqlOperator:(ComYahooSquidbSqlOperator *)negatedOperator {
  return new_ComYahooSquidbSqlBetweenCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withId_(field_, negatedOperator, lower_, upper_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComYahooSquidbSqlField:withComYahooSquidbSqlOperator:withId:withId:", "BetweenCriterion", NULL, 0x0, NULL, "(Lcom/yahoo/squidb/sql/Field<*>;Lcom/yahoo/squidb/sql/Operator;Ljava/lang/Object;Ljava/lang/Object;)V" },
    { "afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:withBoolean:", "afterPopulateOperator", "V", 0x4, NULL, NULL },
    { "constructNegatedCriterionWithComYahooSquidbSqlOperator:", "constructNegatedCriterion", "Lcom.yahoo.squidb.sql.BinaryCriterion;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "lower_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "upper_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbSqlBetweenCriterion = { 2, "BetweenCriterion", "com.yahoo.squidb.sql", NULL, 0x0, 3, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbSqlBetweenCriterion;
}

@end

void ComYahooSquidbSqlBetweenCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withId_(ComYahooSquidbSqlBetweenCriterion *self, ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id lower, id upper) {
  ComYahooSquidbSqlBinaryCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(self, expression, operator_, nil);
  self->lower_ = lower;
  self->upper_ = upper;
}

ComYahooSquidbSqlBetweenCriterion *new_ComYahooSquidbSqlBetweenCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withId_(ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id lower, id upper) {
  ComYahooSquidbSqlBetweenCriterion *self = [ComYahooSquidbSqlBetweenCriterion alloc];
  ComYahooSquidbSqlBetweenCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withId_(self, expression, operator_, lower, upper);
  return self;
}

ComYahooSquidbSqlBetweenCriterion *create_ComYahooSquidbSqlBetweenCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withId_(ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id lower, id upper) {
  return new_ComYahooSquidbSqlBetweenCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withId_(expression, operator_, lower, upper);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbSqlBetweenCriterion)
