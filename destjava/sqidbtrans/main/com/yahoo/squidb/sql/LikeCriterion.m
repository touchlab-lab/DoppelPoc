//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/sql/LikeCriterion.java
//

#include "J2ObjC_source.h"
#include "com/yahoo/squidb/sql/BinaryCriterion.h"
#include "com/yahoo/squidb/sql/Field.h"
#include "com/yahoo/squidb/sql/LikeCriterion.h"
#include "com/yahoo/squidb/sql/Operator.h"
#include "com/yahoo/squidb/sql/SqlBuilder.h"
#include "com/yahoo/squidb/sql/SqlUtils.h"
#include "java/lang/Character.h"
#include "java/lang/StringBuilder.h"

@interface ComYahooSquidbSqlLikeCriterion () {
 @public
  jchar escape_;
}

@end

@implementation ComYahooSquidbSqlLikeCriterion

- (instancetype)initWithComYahooSquidbSqlField:(ComYahooSquidbSqlField *)expression
                 withComYahooSquidbSqlOperator:(ComYahooSquidbSqlOperator *)operator_
                                        withId:(id)value
                                      withChar:(jchar)escape {
  ComYahooSquidbSqlLikeCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withChar_(self, expression, operator_, value, escape);
  return self;
}

- (void)afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:(ComYahooSquidbSqlSqlBuilder *)builder
                                                 withBoolean:(jboolean)forSqlValidation {
  [super afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:builder withBoolean:forSqlValidation];
  if (escape_ != 0x0000) {
    (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(((ComYahooSquidbSqlSqlBuilder *) nil_chk(builder))->sql_)) appendWithNSString:@" ESCAPE "])) appendWithNSString:ComYahooSquidbSqlSqlUtils_sanitizeStringAsLiteralWithNSString_(JavaLangCharacter_toStringWithChar_(escape_))];
  }
}

- (ComYahooSquidbSqlBinaryCriterion *)constructNegatedCriterionWithComYahooSquidbSqlOperator:(ComYahooSquidbSqlOperator *)negatedOperator {
  return new_ComYahooSquidbSqlLikeCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withChar_(field_, negatedOperator, value_, escape_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComYahooSquidbSqlField:withComYahooSquidbSqlOperator:withId:withChar:", "LikeCriterion", NULL, 0x0, NULL, "(Lcom/yahoo/squidb/sql/Field<*>;Lcom/yahoo/squidb/sql/Operator;Ljava/lang/Object;C)V" },
    { "afterPopulateOperatorWithComYahooSquidbSqlSqlBuilder:withBoolean:", "afterPopulateOperator", "V", 0x4, NULL, NULL },
    { "constructNegatedCriterionWithComYahooSquidbSqlOperator:", "constructNegatedCriterion", "Lcom.yahoo.squidb.sql.BinaryCriterion;", 0x4, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "escape_", NULL, 0x12, "C", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbSqlLikeCriterion = { 2, "LikeCriterion", "com.yahoo.squidb.sql", NULL, 0x0, 3, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbSqlLikeCriterion;
}

@end

void ComYahooSquidbSqlLikeCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withChar_(ComYahooSquidbSqlLikeCriterion *self, ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id value, jchar escape) {
  ComYahooSquidbSqlBinaryCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_(self, expression, operator_, value);
  self->escape_ = escape;
}

ComYahooSquidbSqlLikeCriterion *new_ComYahooSquidbSqlLikeCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withChar_(ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id value, jchar escape) {
  ComYahooSquidbSqlLikeCriterion *self = [ComYahooSquidbSqlLikeCriterion alloc];
  ComYahooSquidbSqlLikeCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withChar_(self, expression, operator_, value, escape);
  return self;
}

ComYahooSquidbSqlLikeCriterion *create_ComYahooSquidbSqlLikeCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withChar_(ComYahooSquidbSqlField *expression, ComYahooSquidbSqlOperator *operator_, id value, jchar escape) {
  return new_ComYahooSquidbSqlLikeCriterion_initWithComYahooSquidbSqlField_withComYahooSquidbSqlOperator_withId_withChar_(expression, operator_, value, escape);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbSqlLikeCriterion)
