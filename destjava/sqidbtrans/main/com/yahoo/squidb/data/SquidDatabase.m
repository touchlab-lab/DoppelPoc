//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb/src/com/yahoo/squidb/data/SquidDatabase.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/yahoo/squidb/data/AbstractModel.h"
#include "com/yahoo/squidb/data/DataChangedNotifier.h"
#include "com/yahoo/squidb/data/ICursor.h"
#include "com/yahoo/squidb/data/ISQLiteDatabase.h"
#include "com/yahoo/squidb/data/ISQLiteOpenHelper.h"
#include "com/yahoo/squidb/data/SquidCursor.h"
#include "com/yahoo/squidb/data/SquidDatabase.h"
#include "com/yahoo/squidb/data/SquidTransactionListener.h"
#include "com/yahoo/squidb/data/TableModel.h"
#include "com/yahoo/squidb/data/ValuesStorage.h"
#include "com/yahoo/squidb/sql/CompiledStatement.h"
#include "com/yahoo/squidb/sql/Criterion.h"
#include "com/yahoo/squidb/sql/Delete.h"
#include "com/yahoo/squidb/sql/Field.h"
#include "com/yahoo/squidb/sql/Index.h"
#include "com/yahoo/squidb/sql/Insert.h"
#include "com/yahoo/squidb/sql/Property.h"
#include "com/yahoo/squidb/sql/Query.h"
#include "com/yahoo/squidb/sql/SqlStatement.h"
#include "com/yahoo/squidb/sql/SqlTable.h"
#include "com/yahoo/squidb/sql/SqlUtils.h"
#include "com/yahoo/squidb/sql/Table.h"
#include "com/yahoo/squidb/sql/TableStatement.h"
#include "com/yahoo/squidb/sql/Update.h"
#include "com/yahoo/squidb/sql/View.h"
#include "com/yahoo/squidb/utility/Logger.h"
#include "com/yahoo/squidb/utility/SquidUtilities.h"
#include "com/yahoo/squidb/utility/VersionCode.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalAccessException.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/InstantiationException.h"
#include "java/lang/Long.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/ThreadLocal.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/Void.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Deque.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/concurrent/locks/ReentrantReadWriteLock.h"

@interface ComYahooSquidbDataSquidDatabase () {
 @public
  ComYahooSquidbDataSquidDatabase *attachedTo_;
  JavaUtilConcurrentLocksReentrantReadWriteLock *readWriteLock_;
  id<ComYahooSquidbDataISQLiteOpenHelper> helper_;
  id<ComYahooSquidbDataISQLiteDatabase> database_;
  ComYahooSquidbUtilityVersionCode *sqliteVersion_;
  id<JavaUtilMap> tableMap_;
  jboolean isInMigration_;
  jboolean isInMigrationFailedHook_;
  JavaLangThreadLocal *transactionSuccessState_;
  id notifiersLock_;
  jboolean dataChangedNotificationsEnabled_;
  id<JavaUtilList> globalNotifiers_;
  id<JavaUtilMap> tableNotifiers_;
  JavaLangThreadLocal *notifierAccumulator_;
}

- (void)registerTableModelsWithComYahooSquidbSqlSqlTableArray:(IOSObjectArray *)tables;

- (id<ComYahooSquidbDataISQLiteOpenHelper>)getOpenHelper;

- (void)openForWritingLocked;

- (NSString *)attachToWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)attachTo;

- (jboolean)detachFromWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)detachFrom;

- (NSString *)getAttachedName;

- (void)recreateLocked;

- (void)closeLocked;

- (void)closeAndDeleteLocked;

- (void)closeAndDeleteInternalWithBoolean:(jboolean)deleteAfterClose;

- (jlong)insertInternalWithComYahooSquidbSqlInsert:(ComYahooSquidbSqlInsert *)insert;

- (jint)deleteInternalWithComYahooSquidbSqlDelete:(ComYahooSquidbSqlDelete *)delete_;

- (jint)updateInternalWithComYahooSquidbSqlUpdate:(ComYahooSquidbSqlUpdate *)update;

- (void)setDatabaseWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db;

- (ComYahooSquidbUtilityVersionCode *)readSqliteVersionLockedWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db;

- (ComYahooSquidbSqlQuery *)inferTableForQueryWithIOSClass:(IOSClass *)modelClass
                                withComYahooSquidbSqlQuery:(ComYahooSquidbSqlQuery *)query;

- (void)ensureSqlCompilesWithNSString:(NSString *)sql;

- (void)notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation:(ComYahooSquidbDataDataChangedNotifier_DBOperation *)op
                                        withComYahooSquidbDataAbstractModel:(ComYahooSquidbDataAbstractModel *)modelValues
                                              withComYahooSquidbSqlSqlTable:(ComYahooSquidbSqlSqlTable *)table
                                                                   withLong:(jlong)rowId;

- (void)onDataChangedWithJavaUtilList:(id<JavaUtilList>)notifiers
withComYahooSquidbDataDataChangedNotifier_DBOperation:(ComYahooSquidbDataDataChangedNotifier_DBOperation *)op
  withComYahooSquidbDataAbstractModel:(ComYahooSquidbDataAbstractModel *)modelValues
        withComYahooSquidbSqlSqlTable:(ComYahooSquidbSqlSqlTable *)table
                             withLong:(jlong)rowId;

- (void)flushAccumulatedNotificationsWithBoolean:(jboolean)transactionSuccess;

@end

J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, attachedTo_, ComYahooSquidbDataSquidDatabase *)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, readWriteLock_, JavaUtilConcurrentLocksReentrantReadWriteLock *)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, helper_, id<ComYahooSquidbDataISQLiteOpenHelper>)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, database_, id<ComYahooSquidbDataISQLiteDatabase>)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, sqliteVersion_, ComYahooSquidbUtilityVersionCode *)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, tableMap_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, transactionSuccessState_, JavaLangThreadLocal *)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, notifiersLock_, id)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, globalNotifiers_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, tableNotifiers_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase, notifierAccumulator_, JavaLangThreadLocal *)

inline jint ComYahooSquidbDataSquidDatabase_get_STRING_BUILDER_INITIAL_CAPACITY();
#define ComYahooSquidbDataSquidDatabase_STRING_BUILDER_INITIAL_CAPACITY 128
J2OBJC_STATIC_FIELD_CONSTANT(ComYahooSquidbDataSquidDatabase, STRING_BUILDER_INITIAL_CAPACITY, jint)

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_registerTableModelsWithComYahooSquidbSqlSqlTableArray_(ComYahooSquidbDataSquidDatabase *self, IOSObjectArray *tables);

__attribute__((unused)) static id<ComYahooSquidbDataISQLiteOpenHelper> ComYahooSquidbDataSquidDatabase_getOpenHelper(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static ComYahooSquidbSqlSqlTable *ComYahooSquidbDataSquidDatabase_getSqlTableWithIOSClass_(ComYahooSquidbDataSquidDatabase *self, IOSClass *modelClass);

__attribute__((unused)) static ComYahooSquidbSqlTable *ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(ComYahooSquidbDataSquidDatabase *self, IOSClass *modelClass);

__attribute__((unused)) static id<ComYahooSquidbDataISQLiteDatabase> ComYahooSquidbDataSquidDatabase_getDatabase(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_openForWritingLocked(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static NSString *ComYahooSquidbDataSquidDatabase_attachToWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataSquidDatabase *attachTo);

__attribute__((unused)) static jboolean ComYahooSquidbDataSquidDatabase_detachFromWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataSquidDatabase *detachFrom);

__attribute__((unused)) static NSString *ComYahooSquidbDataSquidDatabase_getAttachedName(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static jboolean ComYahooSquidbDataSquidDatabase_isOpen(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_recreateLocked(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_closeLocked(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_closeAndDeleteLocked(ComYahooSquidbDataSquidDatabase *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_closeAndDeleteInternalWithBoolean_(ComYahooSquidbDataSquidDatabase *self, jboolean deleteAfterClose);

__attribute__((unused)) static jlong ComYahooSquidbDataSquidDatabase_insertInternalWithComYahooSquidbSqlInsert_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbSqlInsert *insert);

__attribute__((unused)) static jint ComYahooSquidbDataSquidDatabase_deleteInternalWithComYahooSquidbSqlDelete_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbSqlDelete *delete_);

__attribute__((unused)) static jint ComYahooSquidbDataSquidDatabase_updateInternalWithComYahooSquidbSqlUpdate_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbSqlUpdate *update);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(ComYahooSquidbDataSquidDatabase *self, id<ComYahooSquidbDataISQLiteDatabase> db);

__attribute__((unused)) static ComYahooSquidbUtilityVersionCode *ComYahooSquidbDataSquidDatabase_readSqliteVersionLockedWithComYahooSquidbDataISQLiteDatabase_(ComYahooSquidbDataSquidDatabase *self, id<ComYahooSquidbDataISQLiteDatabase> db);

__attribute__((unused)) static ComYahooSquidbSqlQuery *ComYahooSquidbDataSquidDatabase_inferTableForQueryWithIOSClass_withComYahooSquidbSqlQuery_(ComYahooSquidbDataSquidDatabase *self, IOSClass *modelClass, ComYahooSquidbSqlQuery *query);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_ensureSqlCompilesWithNSString_(ComYahooSquidbDataSquidDatabase *self, NSString *sql);

__attribute__((unused)) static jboolean ComYahooSquidbDataSquidDatabase_insertRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataTableModel *item, ComYahooSquidbSqlTableStatement_ConflictAlgorithm *conflictAlgorithm);

__attribute__((unused)) static jboolean ComYahooSquidbDataSquidDatabase_updateRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataTableModel *item, ComYahooSquidbSqlTableStatement_ConflictAlgorithm *conflictAlgorithm);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataDataChangedNotifier_DBOperation *op, ComYahooSquidbDataAbstractModel *modelValues, ComYahooSquidbSqlSqlTable *table, jlong rowId);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_onDataChangedWithJavaUtilList_withComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(ComYahooSquidbDataSquidDatabase *self, id<JavaUtilList> notifiers, ComYahooSquidbDataDataChangedNotifier_DBOperation *op, ComYahooSquidbDataAbstractModel *modelValues, ComYahooSquidbSqlSqlTable *table, jlong rowId);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_flushAccumulatedNotificationsWithBoolean_(ComYahooSquidbDataSquidDatabase *self, jboolean transactionSuccess);

@interface ComYahooSquidbDataSquidDatabase_TransactionSuccessState : NSObject {
 @public
  id<JavaUtilDeque> nestedSuccessStack_;
  jboolean outerTransactionSuccess_;
}

- (void)beginTransaction;

- (jboolean)inTransaction;

- (void)setTransactionSuccessful;

- (void)unsetTransactionSuccessful;

- (void)endTransaction;

- (void)reset;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbDataSquidDatabase_TransactionSuccessState)

J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase_TransactionSuccessState, nestedSuccessStack_, id<JavaUtilDeque>)

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_beginTransaction(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self);

__attribute__((unused)) static jboolean ComYahooSquidbDataSquidDatabase_TransactionSuccessState_inTransaction(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_setTransactionSuccessful(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_unsetTransactionSuccessful(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_endTransaction(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_reset(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self);

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_TransactionSuccessState *new_ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_TransactionSuccessState *create_ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init();

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbDataSquidDatabase_TransactionSuccessState)

@interface ComYahooSquidbDataSquidDatabase_OpenHelperDelegate () {
 @public
  ComYahooSquidbDataSquidDatabase *this$0_;
}

- (instancetype)initWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)outer$;

@end

J2OBJC_FIELD_SETTER(ComYahooSquidbDataSquidDatabase_OpenHelperDelegate, this$0_, ComYahooSquidbDataSquidDatabase *)

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *self, ComYahooSquidbDataSquidDatabase *outer$);

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *new_ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *outer$) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *create_ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *outer$);

@interface ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor : NSObject < ComYahooSquidbSqlProperty_PropertyVisitor >

- (id)appendColumnDefinitionWithNSString:(NSString *)type
           withComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
               withJavaLangStringBuilder:(JavaLangStringBuilder *)sql;

- (id)visitDoubleWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                        withId:(JavaLangStringBuilder *)sql;

- (id)visitIntegerWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                         withId:(JavaLangStringBuilder *)sql;

- (id)visitLongWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                      withId:(JavaLangStringBuilder *)sql;

- (id)visitStringWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                        withId:(JavaLangStringBuilder *)sql;

- (id)visitBooleanWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                         withId:(JavaLangStringBuilder *)sql;

- (id)visitBlobWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                      withId:(JavaLangStringBuilder *)sql;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor)

__attribute__((unused)) static id ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *self, NSString *type, ComYahooSquidbSqlProperty *property, JavaLangStringBuilder *sql);

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init(ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *self);

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *new_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *create_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init();

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor)

@interface ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException : JavaLangRuntimeException

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException)

inline jlong ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_get_serialVersionUID();
#define ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_serialVersionUID 480910684116077495LL
J2OBJC_STATIC_FIELD_CONSTANT(ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException, serialVersionUID, jlong)

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init(ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *self);

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *new_ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *create_ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init();

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException)

inline jlong ComYahooSquidbDataSquidDatabase_MigrationFailedException_get_serialVersionUID();
#define ComYahooSquidbDataSquidDatabase_MigrationFailedException_serialVersionUID 2949995666882182744LL
J2OBJC_STATIC_FIELD_CONSTANT(ComYahooSquidbDataSquidDatabase_MigrationFailedException, serialVersionUID, jlong)

@interface ComYahooSquidbDataSquidDatabase_$1 : JavaLangThreadLocal

- (ComYahooSquidbDataSquidDatabase_TransactionSuccessState *)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbDataSquidDatabase_$1)

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_$1_init(ComYahooSquidbDataSquidDatabase_$1 *self);

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_$1 *new_ComYahooSquidbDataSquidDatabase_$1_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_$1 *create_ComYahooSquidbDataSquidDatabase_$1_init();

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbDataSquidDatabase_$1)

@interface ComYahooSquidbDataSquidDatabase_$2 : JavaLangThreadLocal

- (id<JavaUtilSet>)initialValue OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbDataSquidDatabase_$2)

__attribute__((unused)) static void ComYahooSquidbDataSquidDatabase_$2_init(ComYahooSquidbDataSquidDatabase_$2 *self);

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_$2 *new_ComYahooSquidbDataSquidDatabase_$2_init() NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbDataSquidDatabase_$2 *create_ComYahooSquidbDataSquidDatabase_$2_init();

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbDataSquidDatabase_$2)

@implementation ComYahooSquidbDataSquidDatabase

- (NSString *)getName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jint)getVersion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSObjectArray *)getTables {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSObjectArray *)getViews {
  return nil;
}

- (IOSObjectArray *)getIndexes {
  return nil;
}

- (void)onTablesCreatedWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
}

- (jboolean)onUpgradeWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db
                                                   withInt:(jint)oldVersion
                                                   withInt:(jint)newVersion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)onDowngradeWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db
                                                     withInt:(jint)oldVersion
                                                     withInt:(jint)newVersion {
  return true;
}

- (void)onMigrationFailedWithComYahooSquidbDataSquidDatabase_MigrationFailedException:(ComYahooSquidbDataSquidDatabase_MigrationFailedException *)failure {
  @throw failure;
}

- (void)onConfigureWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
}

- (void)onOpenWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
}

- (void)onErrorWithNSString:(NSString *)message
            withNSException:(NSException *)error {
  ComYahooSquidbUtilityLogger_eWithNSString_withNSString_withNSException_(ComYahooSquidbUtilityLogger_LOG_TAG, JreStrcat("$$$", [[self getClass] getSimpleName], @" -- ", message), error);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYahooSquidbDataSquidDatabase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)registerTableModelsWithComYahooSquidbSqlSqlTableArray:(IOSObjectArray *)tables {
  ComYahooSquidbDataSquidDatabase_registerTableModelsWithComYahooSquidbSqlSqlTableArray_(self, tables);
}

- (id<ComYahooSquidbDataISQLiteOpenHelper>)getOpenHelper {
  return ComYahooSquidbDataSquidDatabase_getOpenHelper(self);
}

- (id<ComYahooSquidbDataISQLiteOpenHelper>)createOpenHelperWithNSString:(NSString *)databaseName
                 withComYahooSquidbDataSquidDatabase_OpenHelperDelegate:(ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *)delegate
                                                                withInt:(jint)version_ {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getDatabasePath {
  return [((id<ComYahooSquidbDataISQLiteOpenHelper>) nil_chk(ComYahooSquidbDataSquidDatabase_getOpenHelper(self))) getDatabasePath];
}

- (ComYahooSquidbSqlSqlTable *)getSqlTableWithIOSClass:(IOSClass *)modelClass {
  return ComYahooSquidbDataSquidDatabase_getSqlTableWithIOSClass_(self, modelClass);
}

- (ComYahooSquidbSqlTable *)getTableWithIOSClass:(IOSClass *)modelClass {
  return ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(self, modelClass);
}

- (id<ComYahooSquidbDataISQLiteDatabase>)getDatabase {
  return ComYahooSquidbDataSquidDatabase_getDatabase(self);
}

- (void)openForWritingLocked {
  ComYahooSquidbDataSquidDatabase_openForWritingLocked(self);
}

- (NSString *)attachDatabaseWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)other {
  if (attachedTo_ != nil) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Can't attach a database to a database that is itself attached");
  }
  if ([self inTransaction]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Can't attach a database while in a transaction on the current thread");
  }
  [self acquireExclusiveLock];
  @try {
    return ComYahooSquidbDataSquidDatabase_attachToWithComYahooSquidbDataSquidDatabase_(nil_chk(other), self);
  }
  @finally {
    [self releaseExclusiveLock];
  }
}

- (jboolean)detachDatabaseWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)other {
  if (((ComYahooSquidbDataSquidDatabase *) nil_chk(other))->attachedTo_ != self) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$", @"Database ", [other getName], @" is not attached to ", [self getName]));
  }
  return ComYahooSquidbDataSquidDatabase_detachFromWithComYahooSquidbDataSquidDatabase_(other, self);
}

- (NSString *)attachToWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)attachTo {
  return ComYahooSquidbDataSquidDatabase_attachToWithComYahooSquidbDataSquidDatabase_(self, attachTo);
}

- (jboolean)detachFromWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)detachFrom {
  return ComYahooSquidbDataSquidDatabase_detachFromWithComYahooSquidbDataSquidDatabase_(self, detachFrom);
}

- (NSString *)getAttachedName {
  return ComYahooSquidbDataSquidDatabase_getAttachedName(self);
}

- (jboolean)isOpen {
  return ComYahooSquidbDataSquidDatabase_isOpen(self);
}

- (void)close {
  [self acquireExclusiveLock];
  @try {
    ComYahooSquidbDataSquidDatabase_closeLocked(self);
  }
  @finally {
    [self releaseExclusiveLock];
  }
}

- (void)clear {
  [self acquireExclusiveLock];
  @try {
    ComYahooSquidbDataSquidDatabase_closeAndDeleteLocked(self);
  }
  @finally {
    [self releaseExclusiveLock];
  }
}

- (void)recreate {
  if (isInMigration_) {
    @throw new_ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init();
  }
  else if (isInMigrationFailedHook_) {
    ComYahooSquidbDataSquidDatabase_recreateLocked(self);
  }
  else {
    [self acquireExclusiveLock];
    @try {
      ComYahooSquidbDataSquidDatabase_recreateLocked(self);
    }
    @finally {
      [self releaseExclusiveLock];
    }
  }
}

- (void)recreateLocked {
  ComYahooSquidbDataSquidDatabase_recreateLocked(self);
}

- (void)closeLocked {
  ComYahooSquidbDataSquidDatabase_closeLocked(self);
}

- (void)closeAndDeleteLocked {
  ComYahooSquidbDataSquidDatabase_closeAndDeleteLocked(self);
}

- (void)closeAndDeleteInternalWithBoolean:(jboolean)deleteAfterClose {
  ComYahooSquidbDataSquidDatabase_closeAndDeleteInternalWithBoolean_(self, deleteAfterClose);
}

- (NSString *)description {
  return JreStrcat("$$", @"DB:", [self getName]);
}

- (id<ComYahooSquidbDataICursor>)rawQueryWithNSString:(NSString *)sql
                                    withNSObjectArray:(IOSObjectArray *)sqlArgs {
  [self acquireNonExclusiveLock];
  @try {
    return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) rawQueryWithNSString:sql withNSObjectArray:sqlArgs];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (NSString *)simpleQueryForStringWithNSString:(NSString *)sql
                             withNSObjectArray:(IOSObjectArray *)sqlArgs {
  [self acquireNonExclusiveLock];
  @try {
    return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) simpleQueryForStringWithNSString:sql withNSObjectArray:sqlArgs];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (jlong)simpleQueryForLongWithNSString:(NSString *)sql
                      withNSObjectArray:(IOSObjectArray *)sqlArgs {
  [self acquireNonExclusiveLock];
  @try {
    return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) simpleQueryForLongWithNSString:sql withNSObjectArray:sqlArgs];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (jlong)insertInternalWithComYahooSquidbSqlInsert:(ComYahooSquidbSqlInsert *)insert {
  return ComYahooSquidbDataSquidDatabase_insertInternalWithComYahooSquidbSqlInsert_(self, insert);
}

- (jint)deleteInternalWithComYahooSquidbSqlDelete:(ComYahooSquidbSqlDelete *)delete_ {
  return ComYahooSquidbDataSquidDatabase_deleteInternalWithComYahooSquidbSqlDelete_(self, delete_);
}

- (jint)updateInternalWithComYahooSquidbSqlUpdate:(ComYahooSquidbSqlUpdate *)update {
  return ComYahooSquidbDataSquidDatabase_updateInternalWithComYahooSquidbSqlUpdate_(self, update);
}

- (void)beginTransaction {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) beginTransaction];
    ComYahooSquidbDataSquidDatabase_TransactionSuccessState_beginTransaction(nil_chk([((JavaLangThreadLocal *) nil_chk(transactionSuccessState_)) get]));
  }
  @catch (JavaLangRuntimeException *e) {
    [self releaseNonExclusiveLock];
    @throw e;
  }
}

- (void)beginTransactionNonExclusive {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) beginTransactionNonExclusive];
    ComYahooSquidbDataSquidDatabase_TransactionSuccessState_beginTransaction(nil_chk([((JavaLangThreadLocal *) nil_chk(transactionSuccessState_)) get]));
  }
  @catch (JavaLangRuntimeException *e) {
    [self releaseNonExclusiveLock];
    @throw e;
  }
}

- (void)beginTransactionWithListenerWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) beginTransactionWithListenerWithComYahooSquidbDataSquidTransactionListener:listener];
    ComYahooSquidbDataSquidDatabase_TransactionSuccessState_beginTransaction(nil_chk([((JavaLangThreadLocal *) nil_chk(transactionSuccessState_)) get]));
  }
  @catch (JavaLangRuntimeException *e) {
    [self releaseNonExclusiveLock];
    @throw e;
  }
}

- (void)beginTransactionWithListenerNonExclusiveWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) beginTransactionWithListenerNonExclusiveWithComYahooSquidbDataSquidTransactionListener:listener];
    ComYahooSquidbDataSquidDatabase_TransactionSuccessState_beginTransaction(nil_chk([((JavaLangThreadLocal *) nil_chk(transactionSuccessState_)) get]));
  }
  @catch (JavaLangRuntimeException *e) {
    [self releaseNonExclusiveLock];
    @throw e;
  }
}

- (void)setTransactionSuccessful {
  [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) setTransactionSuccessful];
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_setTransactionSuccessful(nil_chk([((JavaLangThreadLocal *) nil_chk(transactionSuccessState_)) get]));
}

- (jboolean)inTransaction {
  @synchronized(self) {
    return database_ != nil && [database_ inTransaction];
  }
}

- (void)endTransaction {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState *successState = [((JavaLangThreadLocal *) nil_chk(transactionSuccessState_)) get];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) endTransaction];
  }
  @catch (JavaLangRuntimeException *e) {
    ComYahooSquidbDataSquidDatabase_TransactionSuccessState_unsetTransactionSuccessful(nil_chk(successState));
    @throw e;
  }
  @finally {
    [self releaseNonExclusiveLock];
    ComYahooSquidbDataSquidDatabase_TransactionSuccessState_endTransaction(nil_chk(successState));
    if (!ComYahooSquidbDataSquidDatabase_TransactionSuccessState_inTransaction(successState)) {
      ComYahooSquidbDataSquidDatabase_flushAccumulatedNotificationsWithBoolean_(self, successState->outerTransactionSuccess_);
      ComYahooSquidbDataSquidDatabase_TransactionSuccessState_reset(successState);
    }
  }
}

- (jboolean)yieldIfContendedSafely {
  return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) yieldIfContendedSafely];
}

- (jboolean)yieldIfContendedSafelyWithLong:(jlong)sleepAfterYieldDelay {
  return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) yieldIfContendedSafelyWithLong:sleepAfterYieldDelay];
}

- (void)acquireExclusiveLock {
  if ([((JavaUtilConcurrentLocksReentrantReadWriteLock *) nil_chk(readWriteLock_)) getReadHoldCount] > 0 && [readWriteLock_ getWriteHoldCount] == 0) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(@"Can't acquire an exclusive lock when the calling thread is in a transaction or otherwise holds a non-exclusive lock and not the exclusive lock");
  }
  [((JavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock *) nil_chk([readWriteLock_ writeLock])) lock];
}

- (void)releaseExclusiveLock {
  [((JavaUtilConcurrentLocksReentrantReadWriteLock_WriteLock *) nil_chk([((JavaUtilConcurrentLocksReentrantReadWriteLock *) nil_chk(readWriteLock_)) writeLock])) unlock];
}

- (void)acquireNonExclusiveLock {
  [((JavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock *) nil_chk([((JavaUtilConcurrentLocksReentrantReadWriteLock *) nil_chk(readWriteLock_)) readLock])) lock];
}

- (void)releaseNonExclusiveLock {
  [((JavaUtilConcurrentLocksReentrantReadWriteLock_ReadLock *) nil_chk([((JavaUtilConcurrentLocksReentrantReadWriteLock *) nil_chk(readWriteLock_)) readLock])) unlock];
}

- (void)setDatabaseWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
  ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(self, db);
}

- (ComYahooSquidbUtilityVersionCode *)readSqliteVersionLockedWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
  return ComYahooSquidbDataSquidDatabase_readSqliteVersionLockedWithComYahooSquidbDataISQLiteDatabase_(self, db);
}

- (jboolean)tryAddColumnWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property {
  if (!([((ComYahooSquidbSqlProperty *) nil_chk(property))->table_ isKindOfClass:[ComYahooSquidbSqlTable class]])) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(@"Can't alter table: property does not belong to a Table");
  }
  ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *visitor = new_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init();
  JavaLangStringBuilder *sql = new_JavaLangStringBuilder_initWithInt_(ComYahooSquidbDataSquidDatabase_STRING_BUILDER_INITIAL_CAPACITY);
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sql appendWithNSString:@"ALTER TABLE "])) appendWithNSString:[((ComYahooSquidbSqlSqlTable *) nil_chk(property->table_)) getExpression]])) appendWithNSString:@" ADD "];
  (void) [property acceptWithComYahooSquidbSqlProperty_PropertyVisitor:visitor withId:sql];
  return [self tryExecSqlWithNSString:[sql description]];
}

- (jboolean)tryCreateTableWithComYahooSquidbSqlTable:(ComYahooSquidbSqlTable *)table {
  ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *sqlVisitor = new_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init();
  JavaLangStringBuilder *sql = new_JavaLangStringBuilder_initWithInt_(ComYahooSquidbDataSquidDatabase_STRING_BUILDER_INITIAL_CAPACITY);
  [((ComYahooSquidbSqlTable *) nil_chk(table)) appendCreateTableSqlWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion] withJavaLangStringBuilder:sql withComYahooSquidbSqlProperty_PropertyVisitor:sqlVisitor];
  return [self tryExecSqlWithNSString:[sql description]];
}

- (jboolean)tryDropTableWithComYahooSquidbSqlTable:(ComYahooSquidbSqlTable *)table {
  return [self tryExecSqlWithNSString:JreStrcat("$$", @"DROP TABLE IF EXISTS ", [((ComYahooSquidbSqlTable *) nil_chk(table)) getExpression])];
}

- (jboolean)tryCreateViewWithComYahooSquidbSqlView:(ComYahooSquidbSqlView *)view {
  JavaLangStringBuilder *sql = new_JavaLangStringBuilder_initWithInt_(ComYahooSquidbDataSquidDatabase_STRING_BUILDER_INITIAL_CAPACITY);
  [((ComYahooSquidbSqlView *) nil_chk(view)) createViewSqlWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion] withJavaLangStringBuilder:sql];
  return [self tryExecSqlWithNSString:[sql description]];
}

- (jboolean)tryDropViewWithComYahooSquidbSqlView:(ComYahooSquidbSqlView *)view {
  return [self tryExecSqlWithNSString:JreStrcat("$$", @"DROP VIEW IF EXISTS ", [((ComYahooSquidbSqlView *) nil_chk(view)) getExpression])];
}

- (jboolean)tryCreateIndexWithComYahooSquidbSqlIndex:(ComYahooSquidbSqlIndex *)index {
  return [self tryCreateIndexWithNSString:[((ComYahooSquidbSqlIndex *) nil_chk(index)) getName] withComYahooSquidbSqlTable:[index getTable] withBoolean:[index isUnique] withComYahooSquidbSqlPropertyArray:[index getProperties]];
}

- (jboolean)tryCreateIndexWithNSString:(NSString *)indexName
            withComYahooSquidbSqlTable:(ComYahooSquidbSqlTable *)table
                           withBoolean:(jboolean)unique
    withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties {
  if (properties == nil || properties->size_ == 0) {
    [self onErrorWithNSString:NSString_formatWithNSString_withNSObjectArray_(@"Cannot create index %s: no properties specified", [IOSObjectArray newArrayWithObjects:(id[]){ indexName } count:1 type:NSObject_class_()]) withNSException:nil];
    return false;
  }
  JavaLangStringBuilder *sql = new_JavaLangStringBuilder_initWithInt_(ComYahooSquidbDataSquidDatabase_STRING_BUILDER_INITIAL_CAPACITY);
  (void) [sql appendWithNSString:@"CREATE "];
  if (unique) {
    (void) [sql appendWithNSString:@"UNIQUE "];
  }
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sql appendWithNSString:@"INDEX IF NOT EXISTS "])) appendWithNSString:indexName])) appendWithNSString:@" ON "])) appendWithNSString:[((ComYahooSquidbSqlTable *) nil_chk(table)) getExpression]])) appendWithNSString:@"("];
  {
    IOSObjectArray *a__ = properties;
    ComYahooSquidbSqlProperty * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComYahooSquidbSqlProperty * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComYahooSquidbSqlProperty *p = *b__++;
      (void) [((JavaLangStringBuilder *) nil_chk([sql appendWithNSString:[((ComYahooSquidbSqlProperty *) nil_chk(p)) getName]])) appendWithNSString:@","];
    }
  }
  (void) [sql deleteCharAtWithInt:[sql length] - 1];
  (void) [sql appendWithNSString:@")"];
  return [self tryExecSqlWithNSString:[sql description]];
}

- (jboolean)tryDropIndexWithComYahooSquidbSqlIndex:(ComYahooSquidbSqlIndex *)index {
  return [self tryDropIndexWithNSString:[((ComYahooSquidbSqlIndex *) nil_chk(index)) getName]];
}

- (jboolean)tryDropIndexWithNSString:(NSString *)indexName {
  return [self tryExecSqlWithNSString:JreStrcat("$$", @"DROP INDEX IF EXISTS ", indexName)];
}

- (jboolean)tryExecStatementWithComYahooSquidbSqlSqlStatement:(id<ComYahooSquidbSqlSqlStatement>)statement {
  ComYahooSquidbSqlCompiledStatement *compiled = [((id<ComYahooSquidbSqlSqlStatement>) nil_chk(statement)) compileWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
  return [self tryExecSqlWithNSString:((ComYahooSquidbSqlCompiledStatement *) nil_chk(compiled))->sql_ withNSObjectArray:compiled->sqlArgs_];
}

- (jboolean)tryExecSqlWithNSString:(NSString *)sql {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) execSQLWithNSString:sql];
    return true;
  }
  @catch (JavaLangRuntimeException *e) {
    [self onErrorWithNSString:JreStrcat("$$", @"Failed to execute statement: ", sql) withNSException:e];
    return false;
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (void)execSqlOrThrowWithNSString:(NSString *)sql {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) execSQLWithNSString:sql];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (jboolean)tryExecSqlWithNSString:(NSString *)sql
                 withNSObjectArray:(IOSObjectArray *)bindArgs {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) execSQLWithNSString:sql withNSObjectArray:bindArgs];
    return true;
  }
  @catch (JavaLangRuntimeException *e) {
    [self onErrorWithNSString:JreStrcat("$$", @"Failed to execute statement: ", sql) withNSException:e];
    return false;
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (void)execSqlOrThrowWithNSString:(NSString *)sql
                 withNSObjectArray:(IOSObjectArray *)bindArgs {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) execSQLWithNSString:sql withNSObjectArray:bindArgs];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (ComYahooSquidbUtilityVersionCode *)getSqliteVersion {
  ComYahooSquidbUtilityVersionCode *toReturn = sqliteVersion_;
  if (toReturn == nil) {
    [self acquireNonExclusiveLock];
    @try {
      @synchronized(self) {
        (void) ComYahooSquidbDataSquidDatabase_getDatabase(self);
        return sqliteVersion_;
      }
    }
    @finally {
      [self releaseNonExclusiveLock];
    }
  }
  return toReturn;
}

- (ComYahooSquidbDataSquidCursor *)queryWithIOSClass:(IOSClass *)modelClass
                          withComYahooSquidbSqlQuery:(ComYahooSquidbSqlQuery *)query {
  query = ComYahooSquidbDataSquidDatabase_inferTableForQueryWithIOSClass_withComYahooSquidbSqlQuery_(self, modelClass, query);
  ComYahooSquidbSqlCompiledStatement *compiled = [((ComYahooSquidbSqlQuery *) nil_chk(query)) compileWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
  if (((ComYahooSquidbSqlCompiledStatement *) nil_chk(compiled))->needsValidation_) {
    NSString *validateSql = [query sqlForValidationWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
    ComYahooSquidbDataSquidDatabase_ensureSqlCompilesWithNSString_(self, validateSql);
  }
  id<ComYahooSquidbDataICursor> cursor = [self rawQueryWithNSString:compiled->sql_ withNSObjectArray:compiled->sqlArgs_];
  return new_ComYahooSquidbDataSquidCursor_initWithComYahooSquidbDataICursor_withJavaUtilList_(cursor, [query getFields]);
}

- (void)explainQueryPlanWithIOSClass:(IOSClass *)modelClass
          withComYahooSquidbSqlQuery:(ComYahooSquidbSqlQuery *)query {
  query = ComYahooSquidbDataSquidDatabase_inferTableForQueryWithIOSClass_withComYahooSquidbSqlQuery_(self, modelClass, query);
  ComYahooSquidbSqlCompiledStatement *compiled = [((ComYahooSquidbSqlQuery *) nil_chk(query)) compileWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
  id<ComYahooSquidbDataICursor> cursor = [self rawQueryWithNSString:JreStrcat("$$", @"EXPLAIN QUERY PLAN ", ((ComYahooSquidbSqlCompiledStatement *) nil_chk(compiled))->sql_) withNSObjectArray:compiled->sqlArgs_];
  @try {
    ComYahooSquidbUtilityLogger_dWithNSString_withNSString_(ComYahooSquidbUtilityLogger_LOG_TAG, JreStrcat("$$", @"Query plan for: ", compiled->sql_));
    ComYahooSquidbUtilitySquidUtilities_dumpCursorWithComYahooSquidbDataICursor_withInt_(cursor, -1);
  }
  @finally {
    [((id<ComYahooSquidbDataICursor>) nil_chk(cursor)) close];
  }
}

- (ComYahooSquidbSqlQuery *)inferTableForQueryWithIOSClass:(IOSClass *)modelClass
                                withComYahooSquidbSqlQuery:(ComYahooSquidbSqlQuery *)query {
  return ComYahooSquidbDataSquidDatabase_inferTableForQueryWithIOSClass_withComYahooSquidbSqlQuery_(self, modelClass, query);
}

- (void)ensureSqlCompilesWithNSString:(NSString *)sql {
  ComYahooSquidbDataSquidDatabase_ensureSqlCompilesWithNSString_(self, sql);
}

- (id)fetchWithIOSClass:(IOSClass *)modelClass
               withLong:(jlong)id_
withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties {
  ComYahooSquidbDataSquidCursor *cursor = [self fetchItemByIdWithIOSClass:modelClass withLong:id_ withComYahooSquidbSqlPropertyArray:properties];
  return [self returnFetchResultWithIOSClass:modelClass withComYahooSquidbDataSquidCursor:cursor];
}

- (id)fetchByCriterionWithIOSClass:(IOSClass *)modelClass
    withComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)criterion
withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties {
  ComYahooSquidbDataSquidCursor *cursor = [self fetchFirstItemWithIOSClass:modelClass withComYahooSquidbSqlCriterion:criterion withComYahooSquidbSqlPropertyArray:properties];
  return [self returnFetchResultWithIOSClass:modelClass withComYahooSquidbDataSquidCursor:cursor];
}

- (id)fetchByQueryWithIOSClass:(IOSClass *)modelClass
    withComYahooSquidbSqlQuery:(ComYahooSquidbSqlQuery *)query {
  ComYahooSquidbDataSquidCursor *cursor = [self fetchFirstItemWithIOSClass:modelClass withComYahooSquidbSqlQuery:query];
  return [self returnFetchResultWithIOSClass:modelClass withComYahooSquidbDataSquidCursor:cursor];
}

- (id)returnFetchResultWithIOSClass:(IOSClass *)modelClass
  withComYahooSquidbDataSquidCursor:(ComYahooSquidbDataSquidCursor *)cursor {
  @try {
    if ([((ComYahooSquidbDataSquidCursor *) nil_chk(cursor)) getCount] == 0) {
      return nil;
    }
    ComYahooSquidbDataAbstractModel *toReturn = [((IOSClass *) nil_chk(modelClass)) newInstance];
    [((ComYahooSquidbDataAbstractModel *) nil_chk(toReturn)) readPropertiesFromCursorWithComYahooSquidbDataSquidCursor:cursor];
    return toReturn;
  }
  @catch (JavaLangSecurityException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @catch (JavaLangIllegalArgumentException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @catch (JavaLangInstantiationException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @catch (JavaLangIllegalAccessException *e) {
    @throw new_JavaLangRuntimeException_initWithNSException_(e);
  }
  @finally {
    [((ComYahooSquidbDataSquidCursor *) nil_chk(cursor)) close];
  }
}

- (jboolean)delete__WithIOSClass:(IOSClass *)modelClass
                        withLong:(jlong)id_ {
  ComYahooSquidbSqlTable *table = ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(self, modelClass);
  jint rowsUpdated = ComYahooSquidbDataSquidDatabase_deleteInternalWithComYahooSquidbSqlDelete_(self, [((ComYahooSquidbSqlDelete *) nil_chk(ComYahooSquidbSqlDelete_fromWithComYahooSquidbSqlTable_(table))) whereWithComYahooSquidbSqlCriterion:[((ComYahooSquidbSqlProperty_LongProperty *) nil_chk([((ComYahooSquidbSqlTable *) nil_chk(table)) getIdProperty])) eqWithId:JavaLangLong_valueOfWithLong_(id_)]]);
  if (rowsUpdated > 0) {
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, DELETE), nil, table, id_);
  }
  return rowsUpdated > 0;
}

- (jint)deleteWhereWithIOSClass:(IOSClass *)modelClass
 withComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)where {
  ComYahooSquidbSqlTable *table = ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(self, modelClass);
  ComYahooSquidbSqlDelete *delete_ = ComYahooSquidbSqlDelete_fromWithComYahooSquidbSqlTable_(table);
  if (where != nil) {
    (void) [((ComYahooSquidbSqlDelete *) nil_chk(delete_)) whereWithComYahooSquidbSqlCriterion:where];
  }
  jint rowsUpdated = ComYahooSquidbDataSquidDatabase_deleteInternalWithComYahooSquidbSqlDelete_(self, delete_);
  if (rowsUpdated > 0) {
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, DELETE), nil, table, ComYahooSquidbDataTableModel_NO_ID);
  }
  return rowsUpdated;
}

- (jint)deleteAllWithIOSClass:(IOSClass *)modelClass {
  return [self deleteWhereWithIOSClass:modelClass withComYahooSquidbSqlCriterion:nil];
}

- (jint)delete__WithComYahooSquidbSqlDelete:(ComYahooSquidbSqlDelete *)delete_ {
  jint result = ComYahooSquidbDataSquidDatabase_deleteInternalWithComYahooSquidbSqlDelete_(self, delete_);
  if (result > 0) {
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, DELETE), nil, [((ComYahooSquidbSqlDelete *) nil_chk(delete_)) getTable], ComYahooSquidbDataTableModel_NO_ID);
  }
  return result;
}

- (jint)updateWithComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)where
            withComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)template_ {
  return [self updateWithOnConflictWithComYahooSquidbSqlCriterion:where withComYahooSquidbDataTableModel:template_ withComYahooSquidbSqlTableStatement_ConflictAlgorithm:nil];
}

- (jint)updateAllWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)template_ {
  return [self updateWithComYahooSquidbSqlCriterion:nil withComYahooSquidbDataTableModel:template_];
}

- (jint)updateWithOnConflictWithComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)where
                          withComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)template_
     withComYahooSquidbSqlTableStatement_ConflictAlgorithm:(ComYahooSquidbSqlTableStatement_ConflictAlgorithm *)conflictAlgorithm {
  IOSClass *modelClass = [((ComYahooSquidbDataTableModel *) nil_chk(template_)) getClass];
  ComYahooSquidbSqlTable *table = ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(self, modelClass);
  ComYahooSquidbSqlUpdate *update = [((ComYahooSquidbSqlUpdate *) nil_chk(ComYahooSquidbSqlUpdate_tableWithComYahooSquidbSqlTable_(table))) fromTemplateWithComYahooSquidbDataAbstractModel:template_];
  if (where != nil) {
    (void) [((ComYahooSquidbSqlUpdate *) nil_chk(update)) whereWithComYahooSquidbSqlCriterion:where];
  }
  if (conflictAlgorithm != nil) {
    (void) [((ComYahooSquidbSqlUpdate *) nil_chk(update)) onConflictWithComYahooSquidbSqlTableStatement_ConflictAlgorithm:conflictAlgorithm];
  }
  jint rowsUpdated = ComYahooSquidbDataSquidDatabase_updateInternalWithComYahooSquidbSqlUpdate_(self, update);
  if (rowsUpdated > 0) {
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, UPDATE), template_, table, ComYahooSquidbDataTableModel_NO_ID);
  }
  return rowsUpdated;
}

- (jint)updateAllWithOnConflictWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)template_
          withComYahooSquidbSqlTableStatement_ConflictAlgorithm:(ComYahooSquidbSqlTableStatement_ConflictAlgorithm *)conflictAlgorithm {
  return [self updateWithOnConflictWithComYahooSquidbSqlCriterion:nil withComYahooSquidbDataTableModel:template_ withComYahooSquidbSqlTableStatement_ConflictAlgorithm:conflictAlgorithm];
}

- (jint)updateWithComYahooSquidbSqlUpdate:(ComYahooSquidbSqlUpdate *)update {
  jint result = ComYahooSquidbDataSquidDatabase_updateInternalWithComYahooSquidbSqlUpdate_(self, update);
  if (result > 0) {
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, UPDATE), nil, [((ComYahooSquidbSqlUpdate *) nil_chk(update)) getTable], ComYahooSquidbDataTableModel_NO_ID);
  }
  return result;
}

- (jboolean)persistWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item {
  return [self persistWithOnConflictWithComYahooSquidbDataTableModel:item withComYahooSquidbSqlTableStatement_ConflictAlgorithm:nil];
}

- (jboolean)persistWithOnConflictWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item
            withComYahooSquidbSqlTableStatement_ConflictAlgorithm:(ComYahooSquidbSqlTableStatement_ConflictAlgorithm *)conflictAlgorithm {
  if (![((ComYahooSquidbDataTableModel *) nil_chk(item)) isSaved]) {
    return ComYahooSquidbDataSquidDatabase_insertRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, conflictAlgorithm);
  }
  if (![item isModified]) {
    return true;
  }
  return ComYahooSquidbDataSquidDatabase_updateRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, conflictAlgorithm);
}

- (jboolean)createNewWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item {
  (void) [((ComYahooSquidbDataTableModel *) nil_chk(item)) setIdWithLong:ComYahooSquidbDataTableModel_NO_ID];
  return ComYahooSquidbDataSquidDatabase_insertRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, nil);
}

- (jboolean)saveExistingWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item {
  return ComYahooSquidbDataSquidDatabase_updateRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, nil);
}

- (jboolean)insertRowWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item {
  return ComYahooSquidbDataSquidDatabase_insertRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, nil);
}

- (jboolean)insertRowWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item
withComYahooSquidbSqlTableStatement_ConflictAlgorithm:(ComYahooSquidbSqlTableStatement_ConflictAlgorithm *)conflictAlgorithm {
  return ComYahooSquidbDataSquidDatabase_insertRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, conflictAlgorithm);
}

- (jboolean)updateRowWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item {
  return ComYahooSquidbDataSquidDatabase_updateRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, nil);
}

- (jboolean)updateRowWithComYahooSquidbDataTableModel:(ComYahooSquidbDataTableModel *)item
withComYahooSquidbSqlTableStatement_ConflictAlgorithm:(ComYahooSquidbSqlTableStatement_ConflictAlgorithm *)conflictAlgorithm {
  return ComYahooSquidbDataSquidDatabase_updateRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(self, item, conflictAlgorithm);
}

- (jlong)insertWithComYahooSquidbSqlInsert:(ComYahooSquidbSqlInsert *)insert {
  jlong result = ComYahooSquidbDataSquidDatabase_insertInternalWithComYahooSquidbSqlInsert_(self, insert);
  if (result > ComYahooSquidbDataTableModel_NO_ID) {
    jint numInserted = [((ComYahooSquidbSqlInsert *) nil_chk(insert)) getNumRows];
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, INSERT), nil, [insert getTable], numInserted == 1 ? result : ComYahooSquidbDataTableModel_NO_ID);
  }
  return result;
}

- (ComYahooSquidbDataSquidCursor *)fetchItemByIdWithIOSClass:(IOSClass *)modelClass
                                                    withLong:(jlong)id_
                          withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties {
  ComYahooSquidbSqlTable *table = ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(self, modelClass);
  return [self fetchFirstItemWithIOSClass:modelClass withComYahooSquidbSqlCriterion:[((ComYahooSquidbSqlProperty_LongProperty *) nil_chk([((ComYahooSquidbSqlTable *) nil_chk(table)) getIdProperty])) eqWithId:JavaLangLong_valueOfWithLong_(id_)] withComYahooSquidbSqlPropertyArray:properties];
}

- (ComYahooSquidbDataSquidCursor *)fetchFirstItemWithIOSClass:(IOSClass *)modelClass
                               withComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)criterion
                           withComYahooSquidbSqlPropertyArray:(IOSObjectArray *)properties {
  return [self fetchFirstItemWithIOSClass:modelClass withComYahooSquidbSqlQuery:[((ComYahooSquidbSqlQuery *) nil_chk(ComYahooSquidbSqlQuery_selectWithComYahooSquidbSqlFieldArray_(properties))) whereWithComYahooSquidbSqlCriterion:criterion]];
}

- (ComYahooSquidbDataSquidCursor *)fetchFirstItemWithIOSClass:(IOSClass *)modelClass
                                   withComYahooSquidbSqlQuery:(ComYahooSquidbSqlQuery *)query {
  jboolean immutableQuery = [((ComYahooSquidbSqlQuery *) nil_chk(query)) isImmutable];
  ComYahooSquidbSqlField *beforeLimit = [query getLimit];
  ComYahooSquidbSqlSqlTable *beforeTable = [query getTable];
  query = [query limitWithInt:1];
  ComYahooSquidbDataSquidCursor *cursor = [self queryWithIOSClass:modelClass withComYahooSquidbSqlQuery:query];
  if (!immutableQuery) {
    (void) [((ComYahooSquidbSqlQuery *) nil_chk([((ComYahooSquidbSqlQuery *) nil_chk(query)) fromWithComYahooSquidbSqlSqlTable:beforeTable])) limitWithComYahooSquidbSqlField:beforeLimit];
  }
  [((ComYahooSquidbDataSquidCursor *) nil_chk(cursor)) moveToFirst];
  return cursor;
}

- (jint)countWithIOSClass:(IOSClass *)modelClass
withComYahooSquidbSqlCriterion:(ComYahooSquidbSqlCriterion *)criterion {
  ComYahooSquidbSqlProperty_IntegerProperty *countProperty = ComYahooSquidbSqlProperty_IntegerProperty_countProperty();
  ComYahooSquidbSqlQuery *query = ComYahooSquidbSqlQuery_selectWithComYahooSquidbSqlFieldArray_([IOSObjectArray newArrayWithObjects:(id[]){ countProperty } count:1 type:ComYahooSquidbSqlField_class_()]);
  if (criterion != nil) {
    (void) [((ComYahooSquidbSqlQuery *) nil_chk(query)) whereWithComYahooSquidbSqlCriterion:criterion];
  }
  query = ComYahooSquidbDataSquidDatabase_inferTableForQueryWithIOSClass_withComYahooSquidbSqlQuery_(self, modelClass, query);
  ComYahooSquidbSqlCompiledStatement *compiled = [((ComYahooSquidbSqlQuery *) nil_chk(query)) compileWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
  [self acquireNonExclusiveLock];
  @try {
    return (jint) [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) simpleQueryForLongWithNSString:((ComYahooSquidbSqlCompiledStatement *) nil_chk(compiled))->sql_ withNSObjectArray:compiled->sqlArgs_];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

- (jint)countAllWithIOSClass:(IOSClass *)modelClass {
  return [self countWithIOSClass:modelClass withComYahooSquidbSqlCriterion:nil];
}

- (void)registerDataChangedNotifierWithComYahooSquidbDataDataChangedNotifier:(ComYahooSquidbDataDataChangedNotifier *)notifier {
  if (notifier == nil) {
    return;
  }
  @synchronized(notifiersLock_) {
    id<JavaUtilCollection> tables = [((ComYahooSquidbDataDataChangedNotifier *) nil_chk(notifier)) whichTables];
    if (tables == nil || [tables isEmpty]) {
      [((id<JavaUtilList>) nil_chk(globalNotifiers_)) addWithId:notifier];
    }
    else {
      for (ComYahooSquidbSqlSqlTable * __strong table in tables) {
        id<JavaUtilList> notifiersForTable = [((id<JavaUtilMap>) nil_chk(tableNotifiers_)) getWithId:table];
        if (notifiersForTable == nil) {
          notifiersForTable = new_JavaUtilArrayList_init();
          (void) [tableNotifiers_ putWithId:table withId:notifiersForTable];
        }
        [((id<JavaUtilList>) nil_chk(notifiersForTable)) addWithId:notifier];
      }
    }
  }
}

- (void)unregisterDataChangedNotifierWithComYahooSquidbDataDataChangedNotifier:(ComYahooSquidbDataDataChangedNotifier *)notifier {
  if (notifier == nil) {
    return;
  }
  @synchronized(notifiersLock_) {
    id<JavaUtilCollection> tables = [((ComYahooSquidbDataDataChangedNotifier *) nil_chk(notifier)) whichTables];
    if (tables == nil || [tables isEmpty]) {
      [((id<JavaUtilList>) nil_chk(globalNotifiers_)) removeWithId:notifier];
    }
    else {
      for (ComYahooSquidbSqlSqlTable * __strong table in tables) {
        id<JavaUtilList> notifiersForTable = [((id<JavaUtilMap>) nil_chk(tableNotifiers_)) getWithId:table];
        if (notifiersForTable != nil) {
          [notifiersForTable removeWithId:notifier];
        }
      }
    }
  }
}

- (void)unregisterAllDataChangedNotifiers {
  @synchronized(notifiersLock_) {
    [((id<JavaUtilList>) nil_chk(globalNotifiers_)) clear];
    [((id<JavaUtilMap>) nil_chk(tableNotifiers_)) clear];
  }
}

- (void)setDataChangedNotificationsEnabledWithBoolean:(jboolean)enabled {
  dataChangedNotificationsEnabled_ = enabled;
}

- (void)notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation:(ComYahooSquidbDataDataChangedNotifier_DBOperation *)op
                                        withComYahooSquidbDataAbstractModel:(ComYahooSquidbDataAbstractModel *)modelValues
                                              withComYahooSquidbSqlSqlTable:(ComYahooSquidbSqlSqlTable *)table
                                                                   withLong:(jlong)rowId {
  ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, op, modelValues, table, rowId);
}

- (void)onDataChangedWithJavaUtilList:(id<JavaUtilList>)notifiers
withComYahooSquidbDataDataChangedNotifier_DBOperation:(ComYahooSquidbDataDataChangedNotifier_DBOperation *)op
  withComYahooSquidbDataAbstractModel:(ComYahooSquidbDataAbstractModel *)modelValues
        withComYahooSquidbSqlSqlTable:(ComYahooSquidbSqlSqlTable *)table
                             withLong:(jlong)rowId {
  ComYahooSquidbDataSquidDatabase_onDataChangedWithJavaUtilList_withComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, notifiers, op, modelValues, table, rowId);
}

- (void)flushAccumulatedNotificationsWithBoolean:(jboolean)transactionSuccess {
  ComYahooSquidbDataSquidDatabase_flushAccumulatedNotificationsWithBoolean_(self, transactionSuccess);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getName", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getVersion", NULL, "I", 0x404, NULL, NULL },
    { "getTables", NULL, "[Lcom.yahoo.squidb.sql.Table;", 0x404, NULL, NULL },
    { "getViews", NULL, "[Lcom.yahoo.squidb.sql.View;", 0x4, NULL, NULL },
    { "getIndexes", NULL, "[Lcom.yahoo.squidb.sql.Index;", 0x4, NULL, NULL },
    { "onTablesCreatedWithComYahooSquidbDataISQLiteDatabase:", "onTablesCreated", "V", 0x4, NULL, NULL },
    { "onUpgradeWithComYahooSquidbDataISQLiteDatabase:withInt:withInt:", "onUpgrade", "Z", 0x404, NULL, NULL },
    { "onDowngradeWithComYahooSquidbDataISQLiteDatabase:withInt:withInt:", "onDowngrade", "Z", 0x4, NULL, NULL },
    { "onMigrationFailedWithComYahooSquidbDataSquidDatabase_MigrationFailedException:", "onMigrationFailed", "V", 0x4, NULL, NULL },
    { "onConfigureWithComYahooSquidbDataISQLiteDatabase:", "onConfigure", "V", 0x4, NULL, NULL },
    { "onOpenWithComYahooSquidbDataISQLiteDatabase:", "onOpen", "V", 0x4, NULL, NULL },
    { "onErrorWithNSString:withNSException:", "onError", "V", 0x4, NULL, NULL },
    { "init", "SquidDatabase", NULL, 0x1, NULL, NULL },
    { "registerTableModelsWithComYahooSquidbSqlSqlTableArray:", "registerTableModels", "V", 0x2, NULL, "<T:Lcom/yahoo/squidb/sql/SqlTable<*>;>([TT;)V" },
    { "getOpenHelper", NULL, "Lcom.yahoo.squidb.data.ISQLiteOpenHelper;", 0x22, NULL, NULL },
    { "createOpenHelperWithNSString:withComYahooSquidbDataSquidDatabase_OpenHelperDelegate:withInt:", "createOpenHelper", "Lcom.yahoo.squidb.data.ISQLiteOpenHelper;", 0x404, NULL, NULL },
    { "getDatabasePath", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getSqlTableWithIOSClass:", "getSqlTable", "Lcom.yahoo.squidb.sql.SqlTable;", 0x14, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/AbstractModel;>;)Lcom/yahoo/squidb/sql/SqlTable<*>;" },
    { "getTableWithIOSClass:", "getTable", "Lcom.yahoo.squidb.sql.Table;", 0x14, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/TableModel;>;)Lcom/yahoo/squidb/sql/Table;" },
    { "getDatabase", NULL, "Lcom.yahoo.squidb.data.ISQLiteDatabase;", 0x34, NULL, NULL },
    { "openForWritingLocked", NULL, "V", 0x2, NULL, NULL },
    { "attachDatabaseWithComYahooSquidbDataSquidDatabase:", "attachDatabase", "Ljava.lang.String;", 0x11, NULL, NULL },
    { "detachDatabaseWithComYahooSquidbDataSquidDatabase:", "detachDatabase", "Z", 0x11, NULL, NULL },
    { "attachToWithComYahooSquidbDataSquidDatabase:", "attachTo", "Ljava.lang.String;", 0x2, NULL, NULL },
    { "detachFromWithComYahooSquidbDataSquidDatabase:", "detachFrom", "Z", 0x2, NULL, NULL },
    { "getAttachedName", NULL, "Ljava.lang.String;", 0x2, NULL, NULL },
    { "isOpen", NULL, "Z", 0x31, NULL, NULL },
    { "close", NULL, "V", 0x11, NULL, NULL },
    { "clear", NULL, "V", 0x11, NULL, NULL },
    { "recreate", NULL, "V", 0x11, NULL, NULL },
    { "recreateLocked", NULL, "V", 0x22, NULL, NULL },
    { "closeLocked", NULL, "V", 0x22, NULL, NULL },
    { "closeAndDeleteLocked", NULL, "V", 0x22, NULL, NULL },
    { "closeAndDeleteInternalWithBoolean:", "closeAndDeleteInternal", "V", 0x2, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "rawQueryWithNSString:withNSObjectArray:", "rawQuery", "Lcom.yahoo.squidb.data.ICursor;", 0x1, NULL, NULL },
    { "simpleQueryForStringWithNSString:withNSObjectArray:", "simpleQueryForString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "simpleQueryForLongWithNSString:withNSObjectArray:", "simpleQueryForLong", "J", 0x1, NULL, NULL },
    { "insertInternalWithComYahooSquidbSqlInsert:", "insertInternal", "J", 0x2, NULL, NULL },
    { "deleteInternalWithComYahooSquidbSqlDelete:", "deleteInternal", "I", 0x2, NULL, NULL },
    { "updateInternalWithComYahooSquidbSqlUpdate:", "updateInternal", "I", 0x2, NULL, NULL },
    { "beginTransaction", NULL, "V", 0x1, NULL, NULL },
    { "beginTransactionNonExclusive", NULL, "V", 0x1, NULL, NULL },
    { "beginTransactionWithListenerWithComYahooSquidbDataSquidTransactionListener:", "beginTransactionWithListener", "V", 0x1, NULL, NULL },
    { "beginTransactionWithListenerNonExclusiveWithComYahooSquidbDataSquidTransactionListener:", "beginTransactionWithListenerNonExclusive", "V", 0x1, NULL, NULL },
    { "setTransactionSuccessful", NULL, "V", 0x1, NULL, NULL },
    { "inTransaction", NULL, "Z", 0x21, NULL, NULL },
    { "endTransaction", NULL, "V", 0x1, NULL, NULL },
    { "yieldIfContendedSafely", NULL, "Z", 0x1, NULL, NULL },
    { "yieldIfContendedSafelyWithLong:", "yieldIfContendedSafely", "Z", 0x1, NULL, NULL },
    { "acquireExclusiveLock", NULL, "V", 0x4, NULL, NULL },
    { "releaseExclusiveLock", NULL, "V", 0x4, NULL, NULL },
    { "acquireNonExclusiveLock", NULL, "V", 0x4, NULL, NULL },
    { "releaseNonExclusiveLock", NULL, "V", 0x4, NULL, NULL },
    { "setDatabaseWithComYahooSquidbDataISQLiteDatabase:", "setDatabase", "V", 0x22, NULL, NULL },
    { "readSqliteVersionLockedWithComYahooSquidbDataISQLiteDatabase:", "readSqliteVersionLocked", "Lcom.yahoo.squidb.utility.VersionCode;", 0x2, NULL, NULL },
    { "tryAddColumnWithComYahooSquidbSqlProperty:", "tryAddColumn", "Z", 0x4, NULL, "(Lcom/yahoo/squidb/sql/Property<*>;)Z" },
    { "tryCreateTableWithComYahooSquidbSqlTable:", "tryCreateTable", "Z", 0x4, NULL, NULL },
    { "tryDropTableWithComYahooSquidbSqlTable:", "tryDropTable", "Z", 0x4, NULL, NULL },
    { "tryCreateViewWithComYahooSquidbSqlView:", "tryCreateView", "Z", 0x1, NULL, NULL },
    { "tryDropViewWithComYahooSquidbSqlView:", "tryDropView", "Z", 0x1, NULL, NULL },
    { "tryCreateIndexWithComYahooSquidbSqlIndex:", "tryCreateIndex", "Z", 0x4, NULL, NULL },
    { "tryCreateIndexWithNSString:withComYahooSquidbSqlTable:withBoolean:withComYahooSquidbSqlPropertyArray:", "tryCreateIndex", "Z", 0x84, NULL, NULL },
    { "tryDropIndexWithComYahooSquidbSqlIndex:", "tryDropIndex", "Z", 0x4, NULL, NULL },
    { "tryDropIndexWithNSString:", "tryDropIndex", "Z", 0x4, NULL, NULL },
    { "tryExecStatementWithComYahooSquidbSqlSqlStatement:", "tryExecStatement", "Z", 0x1, NULL, NULL },
    { "tryExecSqlWithNSString:", "tryExecSql", "Z", 0x1, NULL, NULL },
    { "execSqlOrThrowWithNSString:", "execSqlOrThrow", "V", 0x1, NULL, NULL },
    { "tryExecSqlWithNSString:withNSObjectArray:", "tryExecSql", "Z", 0x1, NULL, NULL },
    { "execSqlOrThrowWithNSString:withNSObjectArray:", "execSqlOrThrow", "V", 0x1, NULL, NULL },
    { "getSqliteVersion", NULL, "Lcom.yahoo.squidb.utility.VersionCode;", 0x1, NULL, NULL },
    { "queryWithIOSClass:withComYahooSquidbSqlQuery:", "query", "Lcom.yahoo.squidb.data.SquidCursor;", 0x1, NULL, "<TYPE:Lcom/yahoo/squidb/data/AbstractModel;>(Ljava/lang/Class<TTYPE;>;Lcom/yahoo/squidb/sql/Query;)Lcom/yahoo/squidb/data/SquidCursor<TTYPE;>;" },
    { "explainQueryPlanWithIOSClass:withComYahooSquidbSqlQuery:", "explainQueryPlan", "V", 0x1, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/AbstractModel;>;Lcom/yahoo/squidb/sql/Query;)V" },
    { "inferTableForQueryWithIOSClass:withComYahooSquidbSqlQuery:", "inferTableForQuery", "Lcom.yahoo.squidb.sql.Query;", 0x2, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/AbstractModel;>;Lcom/yahoo/squidb/sql/Query;)Lcom/yahoo/squidb/sql/Query;" },
    { "ensureSqlCompilesWithNSString:", "ensureSqlCompiles", "V", 0x2, NULL, NULL },
    { "fetchWithIOSClass:withLong:withComYahooSquidbSqlPropertyArray:", "fetch", "TTYPE;", 0x81, NULL, "<TYPE:Lcom/yahoo/squidb/data/TableModel;>(Ljava/lang/Class<TTYPE;>;J[Lcom/yahoo/squidb/sql/Property<*>;)TTYPE;" },
    { "fetchByCriterionWithIOSClass:withComYahooSquidbSqlCriterion:withComYahooSquidbSqlPropertyArray:", "fetchByCriterion", "TTYPE;", 0x81, NULL, "<TYPE:Lcom/yahoo/squidb/data/AbstractModel;>(Ljava/lang/Class<TTYPE;>;Lcom/yahoo/squidb/sql/Criterion;[Lcom/yahoo/squidb/sql/Property<*>;)TTYPE;" },
    { "fetchByQueryWithIOSClass:withComYahooSquidbSqlQuery:", "fetchByQuery", "TTYPE;", 0x1, NULL, "<TYPE:Lcom/yahoo/squidb/data/AbstractModel;>(Ljava/lang/Class<TTYPE;>;Lcom/yahoo/squidb/sql/Query;)TTYPE;" },
    { "returnFetchResultWithIOSClass:withComYahooSquidbDataSquidCursor:", "returnFetchResult", "TTYPE;", 0x4, NULL, "<TYPE:Lcom/yahoo/squidb/data/AbstractModel;>(Ljava/lang/Class<TTYPE;>;Lcom/yahoo/squidb/data/SquidCursor<TTYPE;>;)TTYPE;" },
    { "delete__WithIOSClass:withLong:", "delete", "Z", 0x1, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/TableModel;>;J)Z" },
    { "deleteWhereWithIOSClass:withComYahooSquidbSqlCriterion:", "deleteWhere", "I", 0x1, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/TableModel;>;Lcom/yahoo/squidb/sql/Criterion;)I" },
    { "deleteAllWithIOSClass:", "deleteAll", "I", 0x1, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/TableModel;>;)I" },
    { "delete__WithComYahooSquidbSqlDelete:", "delete", "I", 0x1, NULL, NULL },
    { "updateWithComYahooSquidbSqlCriterion:withComYahooSquidbDataTableModel:", "update", "I", 0x1, NULL, NULL },
    { "updateAllWithComYahooSquidbDataTableModel:", "updateAll", "I", 0x1, NULL, NULL },
    { "updateWithOnConflictWithComYahooSquidbSqlCriterion:withComYahooSquidbDataTableModel:withComYahooSquidbSqlTableStatement_ConflictAlgorithm:", "updateWithOnConflict", "I", 0x1, NULL, NULL },
    { "updateAllWithOnConflictWithComYahooSquidbDataTableModel:withComYahooSquidbSqlTableStatement_ConflictAlgorithm:", "updateAllWithOnConflict", "I", 0x1, NULL, NULL },
    { "updateWithComYahooSquidbSqlUpdate:", "update", "I", 0x1, NULL, NULL },
    { "persistWithComYahooSquidbDataTableModel:", "persist", "Z", 0x1, NULL, NULL },
    { "persistWithOnConflictWithComYahooSquidbDataTableModel:withComYahooSquidbSqlTableStatement_ConflictAlgorithm:", "persistWithOnConflict", "Z", 0x1, NULL, NULL },
    { "createNewWithComYahooSquidbDataTableModel:", "createNew", "Z", 0x1, NULL, NULL },
    { "saveExistingWithComYahooSquidbDataTableModel:", "saveExisting", "Z", 0x1, NULL, NULL },
    { "insertRowWithComYahooSquidbDataTableModel:", "insertRow", "Z", 0x14, NULL, NULL },
    { "insertRowWithComYahooSquidbDataTableModel:withComYahooSquidbSqlTableStatement_ConflictAlgorithm:", "insertRow", "Z", 0x14, NULL, NULL },
    { "updateRowWithComYahooSquidbDataTableModel:", "updateRow", "Z", 0x14, NULL, NULL },
    { "updateRowWithComYahooSquidbDataTableModel:withComYahooSquidbSqlTableStatement_ConflictAlgorithm:", "updateRow", "Z", 0x14, NULL, NULL },
    { "insertWithComYahooSquidbSqlInsert:", "insert", "J", 0x1, NULL, NULL },
    { "fetchItemByIdWithIOSClass:withLong:withComYahooSquidbSqlPropertyArray:", "fetchItemById", "Lcom.yahoo.squidb.data.SquidCursor;", 0x84, NULL, "<TYPE:Lcom/yahoo/squidb/data/TableModel;>(Ljava/lang/Class<TTYPE;>;J[Lcom/yahoo/squidb/sql/Property<*>;)Lcom/yahoo/squidb/data/SquidCursor<TTYPE;>;" },
    { "fetchFirstItemWithIOSClass:withComYahooSquidbSqlCriterion:withComYahooSquidbSqlPropertyArray:", "fetchFirstItem", "Lcom.yahoo.squidb.data.SquidCursor;", 0x84, NULL, "<TYPE:Lcom/yahoo/squidb/data/AbstractModel;>(Ljava/lang/Class<TTYPE;>;Lcom/yahoo/squidb/sql/Criterion;[Lcom/yahoo/squidb/sql/Property<*>;)Lcom/yahoo/squidb/data/SquidCursor<TTYPE;>;" },
    { "fetchFirstItemWithIOSClass:withComYahooSquidbSqlQuery:", "fetchFirstItem", "Lcom.yahoo.squidb.data.SquidCursor;", 0x4, NULL, "<TYPE:Lcom/yahoo/squidb/data/AbstractModel;>(Ljava/lang/Class<TTYPE;>;Lcom/yahoo/squidb/sql/Query;)Lcom/yahoo/squidb/data/SquidCursor<TTYPE;>;" },
    { "countWithIOSClass:withComYahooSquidbSqlCriterion:", "count", "I", 0x1, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/AbstractModel;>;Lcom/yahoo/squidb/sql/Criterion;)I" },
    { "countAllWithIOSClass:", "countAll", "I", 0x1, NULL, "(Ljava/lang/Class<+Lcom/yahoo/squidb/data/AbstractModel;>;)I" },
    { "registerDataChangedNotifierWithComYahooSquidbDataDataChangedNotifier:", "registerDataChangedNotifier", "V", 0x1, NULL, "(Lcom/yahoo/squidb/data/DataChangedNotifier<*>;)V" },
    { "unregisterDataChangedNotifierWithComYahooSquidbDataDataChangedNotifier:", "unregisterDataChangedNotifier", "V", 0x1, NULL, "(Lcom/yahoo/squidb/data/DataChangedNotifier<*>;)V" },
    { "unregisterAllDataChangedNotifiers", NULL, "V", 0x1, NULL, NULL },
    { "setDataChangedNotificationsEnabledWithBoolean:", "setDataChangedNotificationsEnabled", "V", 0x1, NULL, NULL },
    { "notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation:withComYahooSquidbDataAbstractModel:withComYahooSquidbSqlSqlTable:withLong:", "notifyForTable", "V", 0x2, NULL, "(Lcom/yahoo/squidb/data/DataChangedNotifier$DBOperation;Lcom/yahoo/squidb/data/AbstractModel;Lcom/yahoo/squidb/sql/SqlTable<*>;J)V" },
    { "onDataChangedWithJavaUtilList:withComYahooSquidbDataDataChangedNotifier_DBOperation:withComYahooSquidbDataAbstractModel:withComYahooSquidbSqlSqlTable:withLong:", "onDataChanged", "V", 0x2, NULL, "(Ljava/util/List<Lcom/yahoo/squidb/data/DataChangedNotifier<*>;>;Lcom/yahoo/squidb/data/DataChangedNotifier$DBOperation;Lcom/yahoo/squidb/data/AbstractModel;Lcom/yahoo/squidb/sql/SqlTable<*>;J)V" },
    { "flushAccumulatedNotificationsWithBoolean:", "flushAccumulatedNotifications", "V", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "STRING_BUILDER_INITIAL_CAPACITY", "STRING_BUILDER_INITIAL_CAPACITY", 0x1a, "I", NULL, NULL, .constantValue.asInt = ComYahooSquidbDataSquidDatabase_STRING_BUILDER_INITIAL_CAPACITY },
    { "attachedTo_", NULL, 0x2, "Lcom.yahoo.squidb.data.SquidDatabase;", NULL, NULL, .constantValue.asLong = 0 },
    { "readWriteLock_", NULL, 0x12, "Ljava.util.concurrent.locks.ReentrantReadWriteLock;", NULL, NULL, .constantValue.asLong = 0 },
    { "helper_", NULL, 0x2, "Lcom.yahoo.squidb.data.ISQLiteOpenHelper;", NULL, NULL, .constantValue.asLong = 0 },
    { "database_", NULL, 0x2, "Lcom.yahoo.squidb.data.ISQLiteDatabase;", NULL, NULL, .constantValue.asLong = 0 },
    { "sqliteVersion_", NULL, 0x2, "Lcom.yahoo.squidb.utility.VersionCode;", NULL, NULL, .constantValue.asLong = 0 },
    { "tableMap_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Ljava/lang/Class<+Lcom/yahoo/squidb/data/AbstractModel;>;Lcom/yahoo/squidb/sql/SqlTable<*>;>;", .constantValue.asLong = 0 },
    { "isInMigration_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "isInMigrationFailedHook_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "transactionSuccessState_", NULL, 0x2, "Ljava.lang.ThreadLocal;", NULL, "Ljava/lang/ThreadLocal<Lcom/yahoo/squidb/data/SquidDatabase$TransactionSuccessState;>;", .constantValue.asLong = 0 },
    { "notifiersLock_", NULL, 0x12, "Ljava.lang.Object;", NULL, NULL, .constantValue.asLong = 0 },
    { "dataChangedNotificationsEnabled_", NULL, 0x2, "Z", NULL, NULL, .constantValue.asLong = 0 },
    { "globalNotifiers_", NULL, 0x2, "Ljava.util.List;", NULL, "Ljava/util/List<Lcom/yahoo/squidb/data/DataChangedNotifier<*>;>;", .constantValue.asLong = 0 },
    { "tableNotifiers_", NULL, 0x2, "Ljava.util.Map;", NULL, "Ljava/util/Map<Lcom/yahoo/squidb/sql/SqlTable<*>;Ljava/util/List<Lcom/yahoo/squidb/data/DataChangedNotifier<*>;>;>;", .constantValue.asLong = 0 },
    { "notifierAccumulator_", NULL, 0x2, "Ljava.lang.ThreadLocal;", NULL, "Ljava/lang/ThreadLocal<Ljava/util/Set<Lcom/yahoo/squidb/data/DataChangedNotifier<*>;>;>;", .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.yahoo.squidb.data.SquidDatabase$TransactionSuccessState;", "Lcom.yahoo.squidb.data.SquidDatabase$OpenHelperDelegate;", "Lcom.yahoo.squidb.data.SquidDatabase$SqlConstructorVisitor;", "Lcom.yahoo.squidb.data.SquidDatabase$RecreateDuringMigrationException;", "Lcom.yahoo.squidb.data.SquidDatabase$MigrationFailedException;"};
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase = { 2, "SquidDatabase", "com.yahoo.squidb.data", NULL, 0x401, 109, methods, 15, fields, 0, NULL, 5, inner_classes, NULL, NULL };
  return &_ComYahooSquidbDataSquidDatabase;
}

@end

void ComYahooSquidbDataSquidDatabase_init(ComYahooSquidbDataSquidDatabase *self) {
  NSObject_init(self);
  self->attachedTo_ = nil;
  self->readWriteLock_ = new_JavaUtilConcurrentLocksReentrantReadWriteLock_init();
  self->helper_ = nil;
  self->database_ = nil;
  self->sqliteVersion_ = nil;
  self->tableMap_ = new_JavaUtilHashMap_init();
  self->transactionSuccessState_ = new_ComYahooSquidbDataSquidDatabase_$1_init();
  self->notifiersLock_ = new_NSObject_init();
  self->dataChangedNotificationsEnabled_ = true;
  self->globalNotifiers_ = new_JavaUtilArrayList_init();
  self->tableNotifiers_ = new_JavaUtilHashMap_init();
  self->notifierAccumulator_ = new_ComYahooSquidbDataSquidDatabase_$2_init();
  ComYahooSquidbDataSquidDatabase_registerTableModelsWithComYahooSquidbSqlSqlTableArray_(self, [self getTables]);
  ComYahooSquidbDataSquidDatabase_registerTableModelsWithComYahooSquidbSqlSqlTableArray_(self, [self getViews]);
}

void ComYahooSquidbDataSquidDatabase_registerTableModelsWithComYahooSquidbSqlSqlTableArray_(ComYahooSquidbDataSquidDatabase *self, IOSObjectArray *tables) {
  if (tables != nil) {
    {
      IOSObjectArray *a__ = tables;
      ComYahooSquidbSqlSqlTable * const *b__ = a__->buffer_;
      ComYahooSquidbSqlSqlTable * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        ComYahooSquidbSqlSqlTable *table = *b__++;
        if ([((ComYahooSquidbSqlSqlTable *) nil_chk(table)) getModelClass] != nil && ![((id<JavaUtilMap>) nil_chk(self->tableMap_)) containsKeyWithId:[table getModelClass]]) {
          (void) [self->tableMap_ putWithId:[table getModelClass] withId:table];
        }
      }
    }
  }
}

id<ComYahooSquidbDataISQLiteOpenHelper> ComYahooSquidbDataSquidDatabase_getOpenHelper(ComYahooSquidbDataSquidDatabase *self) {
  @synchronized(self) {
    if (self->helper_ == nil) {
      self->helper_ = [self createOpenHelperWithNSString:[self getName] withComYahooSquidbDataSquidDatabase_OpenHelperDelegate:new_ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(self) withInt:[self getVersion]];
    }
    return self->helper_;
  }
}

ComYahooSquidbSqlSqlTable *ComYahooSquidbDataSquidDatabase_getSqlTableWithIOSClass_(ComYahooSquidbDataSquidDatabase *self, IOSClass *modelClass) {
  IOSClass *type = modelClass;
  ComYahooSquidbSqlSqlTable *table;
  while ((table = [((id<JavaUtilMap>) nil_chk(self->tableMap_)) getWithId:type]) == nil && type != ComYahooSquidbDataAbstractModel_class_() && type != NSObject_class_()) {
    type = [((IOSClass *) nil_chk(type)) getSuperclass];
  }
  if (table != nil) {
    return table;
  }
  @throw new_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$@", @"Unknown model class ", modelClass));
}

ComYahooSquidbSqlTable *ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(ComYahooSquidbDataSquidDatabase *self, IOSClass *modelClass) {
  return (ComYahooSquidbSqlTable *) cast_chk(ComYahooSquidbDataSquidDatabase_getSqlTableWithIOSClass_(self, modelClass), [ComYahooSquidbSqlTable class]);
}

id<ComYahooSquidbDataISQLiteDatabase> ComYahooSquidbDataSquidDatabase_getDatabase(ComYahooSquidbDataSquidDatabase *self) {
  @synchronized(self) {
    if (self->database_ == nil) {
      ComYahooSquidbDataSquidDatabase_openForWritingLocked(self);
    }
    return self->database_;
  }
}

void ComYahooSquidbDataSquidDatabase_openForWritingLocked(ComYahooSquidbDataSquidDatabase *self) {
  jboolean performRecreate = false;
  @try {
    @try {
      id<ComYahooSquidbDataISQLiteDatabase> db = [((id<ComYahooSquidbDataISQLiteOpenHelper>) nil_chk(ComYahooSquidbDataSquidDatabase_getOpenHelper(self))) openForWriting];
      ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(self, db);
    }
    @catch (ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *recreate) {
      performRecreate = true;
    }
    @catch (ComYahooSquidbDataSquidDatabase_MigrationFailedException *fail) {
      [self onErrorWithNSString:[((ComYahooSquidbDataSquidDatabase_MigrationFailedException *) nil_chk(fail)) getMessage] withNSException:fail];
      self->isInMigrationFailedHook_ = true;
      @try {
        [self onMigrationFailedWithComYahooSquidbDataSquidDatabase_MigrationFailedException:fail];
      }
      @finally {
        self->isInMigrationFailedHook_ = false;
      }
    }
  }
  @catch (JavaLangRuntimeException *e) {
    [self onErrorWithNSString:JreStrcat("$$", @"Failed to open database: ", [self getName]) withNSException:e];
    ComYahooSquidbDataSquidDatabase_closeLocked(self);
    @throw e;
  }
  if (performRecreate) {
    ComYahooSquidbDataSquidDatabase_recreateLocked(self);
  }
}

NSString *ComYahooSquidbDataSquidDatabase_attachToWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataSquidDatabase *attachTo) {
  if (self->attachedTo_ != nil) {
    @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$", @"Database ", [self getName], @" is already attached to ", [self->attachedTo_ getName]));
  }
  if ([self inTransaction]) {
    @throw new_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$$$$$", @"Cannot attach database ", [self getName], @" to ", [((ComYahooSquidbDataSquidDatabase *) nil_chk(attachTo)) getName], @" -- ", [self getName], @" is in a transaction on the calling thread"));
  }
  [self acquireExclusiveLock];
  NSString *attachedAs = ComYahooSquidbDataSquidDatabase_getAttachedName(self);
  if (![((ComYahooSquidbDataSquidDatabase *) nil_chk(attachTo)) tryExecSqlWithNSString:JreStrcat("$$$$C", @"ATTACH '", [self getDatabasePath], @"' AS '", attachedAs, '\'')]) {
    [self releaseExclusiveLock];
    return nil;
  }
  else {
    self->attachedTo_ = attachTo;
    return attachedAs;
  }
}

jboolean ComYahooSquidbDataSquidDatabase_detachFromWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataSquidDatabase *detachFrom) {
  if ([((ComYahooSquidbDataSquidDatabase *) nil_chk(detachFrom)) tryExecSqlWithNSString:JreStrcat("$$C", @"DETACH '", ComYahooSquidbDataSquidDatabase_getAttachedName(self), '\'')]) {
    self->attachedTo_ = nil;
    [self releaseExclusiveLock];
    return true;
  }
  return false;
}

NSString *ComYahooSquidbDataSquidDatabase_getAttachedName(ComYahooSquidbDataSquidDatabase *self) {
  return [((NSString *) nil_chk([self getName])) replace:'.' withChar:'_'];
}

jboolean ComYahooSquidbDataSquidDatabase_isOpen(ComYahooSquidbDataSquidDatabase *self) {
  @synchronized(self) {
    return self->database_ != nil && [self->database_ isOpen];
  }
}

void ComYahooSquidbDataSquidDatabase_recreateLocked(ComYahooSquidbDataSquidDatabase *self) {
  @synchronized(self) {
    ComYahooSquidbDataSquidDatabase_closeAndDeleteLocked(self);
    (void) ComYahooSquidbDataSquidDatabase_getDatabase(self);
  }
}

void ComYahooSquidbDataSquidDatabase_closeLocked(ComYahooSquidbDataSquidDatabase *self) {
  @synchronized(self) {
    ComYahooSquidbDataSquidDatabase_closeAndDeleteInternalWithBoolean_(self, false);
  }
}

void ComYahooSquidbDataSquidDatabase_closeAndDeleteLocked(ComYahooSquidbDataSquidDatabase *self) {
  @synchronized(self) {
    ComYahooSquidbDataSquidDatabase_closeAndDeleteInternalWithBoolean_(self, true);
  }
}

void ComYahooSquidbDataSquidDatabase_closeAndDeleteInternalWithBoolean_(ComYahooSquidbDataSquidDatabase *self, jboolean deleteAfterClose) {
  if (ComYahooSquidbDataSquidDatabase_isOpen(self)) {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(self->database_)) close];
  }
  ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(self, nil);
  if (deleteAfterClose) {
    [((id<ComYahooSquidbDataISQLiteOpenHelper>) nil_chk(ComYahooSquidbDataSquidDatabase_getOpenHelper(self))) deleteDatabase];
  }
  self->helper_ = nil;
}

jlong ComYahooSquidbDataSquidDatabase_insertInternalWithComYahooSquidbSqlInsert_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbSqlInsert *insert) {
  ComYahooSquidbSqlCompiledStatement *compiled = [((ComYahooSquidbSqlInsert *) nil_chk(insert)) compileWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
  [self acquireNonExclusiveLock];
  @try {
    return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) executeInsertWithNSString:((ComYahooSquidbSqlCompiledStatement *) nil_chk(compiled))->sql_ withNSObjectArray:compiled->sqlArgs_];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

jint ComYahooSquidbDataSquidDatabase_deleteInternalWithComYahooSquidbSqlDelete_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbSqlDelete *delete_) {
  ComYahooSquidbSqlCompiledStatement *compiled = [((ComYahooSquidbSqlDelete *) nil_chk(delete_)) compileWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
  [self acquireNonExclusiveLock];
  @try {
    return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) executeUpdateDeleteWithNSString:((ComYahooSquidbSqlCompiledStatement *) nil_chk(compiled))->sql_ withNSObjectArray:compiled->sqlArgs_];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

jint ComYahooSquidbDataSquidDatabase_updateInternalWithComYahooSquidbSqlUpdate_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbSqlUpdate *update) {
  ComYahooSquidbSqlCompiledStatement *compiled = [((ComYahooSquidbSqlUpdate *) nil_chk(update)) compileWithComYahooSquidbUtilityVersionCode:[self getSqliteVersion]];
  [self acquireNonExclusiveLock];
  @try {
    return [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) executeUpdateDeleteWithNSString:((ComYahooSquidbSqlCompiledStatement *) nil_chk(compiled))->sql_ withNSObjectArray:compiled->sqlArgs_];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

void ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(ComYahooSquidbDataSquidDatabase *self, id<ComYahooSquidbDataISQLiteDatabase> db) {
  @synchronized(self) {
    if (self->database_ != nil && db != nil && [db getWrappedObject] == [self->database_ getWrappedObject]) {
      return;
    }
    self->sqliteVersion_ = db != nil ? ComYahooSquidbDataSquidDatabase_readSqliteVersionLockedWithComYahooSquidbDataISQLiteDatabase_(self, db) : nil;
    self->database_ = db;
  }
}

ComYahooSquidbUtilityVersionCode *ComYahooSquidbDataSquidDatabase_readSqliteVersionLockedWithComYahooSquidbDataISQLiteDatabase_(ComYahooSquidbDataSquidDatabase *self, id<ComYahooSquidbDataISQLiteDatabase> db) {
  @try {
    NSString *versionString = [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(db)) simpleQueryForStringWithNSString:@"select sqlite_version()" withNSObjectArray:nil];
    return ComYahooSquidbUtilityVersionCode_parseWithNSString_(versionString);
  }
  @catch (JavaLangRuntimeException *e) {
    [self onErrorWithNSString:@"Failed to read sqlite version" withNSException:e];
    @throw e;
  }
}

ComYahooSquidbSqlQuery *ComYahooSquidbDataSquidDatabase_inferTableForQueryWithIOSClass_withComYahooSquidbSqlQuery_(ComYahooSquidbDataSquidDatabase *self, IOSClass *modelClass, ComYahooSquidbSqlQuery *query) {
  if (![((ComYahooSquidbSqlQuery *) nil_chk(query)) hasTable] && modelClass != nil) {
    ComYahooSquidbSqlSqlTable *table = ComYahooSquidbDataSquidDatabase_getSqlTableWithIOSClass_(self, modelClass);
    if (table == nil) {
      @throw new_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Query has no FROM clause and model class ", [modelClass getSimpleName], @" has no associated table"));
    }
    query = [query fromWithComYahooSquidbSqlSqlTable:table];
  }
  return query;
}

void ComYahooSquidbDataSquidDatabase_ensureSqlCompilesWithNSString_(ComYahooSquidbDataSquidDatabase *self, NSString *sql) {
  [self acquireNonExclusiveLock];
  @try {
    [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(ComYahooSquidbDataSquidDatabase_getDatabase(self))) ensureSqlCompilesWithNSString:sql];
  }
  @finally {
    [self releaseNonExclusiveLock];
  }
}

jboolean ComYahooSquidbDataSquidDatabase_insertRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataTableModel *item, ComYahooSquidbSqlTableStatement_ConflictAlgorithm *conflictAlgorithm) {
  IOSClass *modelClass = [((ComYahooSquidbDataTableModel *) nil_chk(item)) getClass];
  ComYahooSquidbSqlTable *table = ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(self, modelClass);
  ComYahooSquidbDataValuesStorage *mergedValues = [item getMergedValues];
  if ([((ComYahooSquidbDataValuesStorage *) nil_chk(mergedValues)) size] == 0) {
    return false;
  }
  ComYahooSquidbSqlInsert *insert = [((ComYahooSquidbSqlInsert *) nil_chk(ComYahooSquidbSqlInsert_intoWithComYahooSquidbSqlTable_(table))) fromValuesWithComYahooSquidbDataValuesStorage:mergedValues];
  if (conflictAlgorithm != nil) {
    (void) [((ComYahooSquidbSqlInsert *) nil_chk(insert)) onConflictWithComYahooSquidbSqlTableStatement_ConflictAlgorithm:conflictAlgorithm];
  }
  jlong newRow = ComYahooSquidbDataSquidDatabase_insertInternalWithComYahooSquidbSqlInsert_(self, insert);
  jboolean result = newRow > 0;
  if (result) {
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, INSERT), item, table, newRow);
    (void) [item setIdWithLong:newRow];
    [item markSaved];
  }
  return result;
}

jboolean ComYahooSquidbDataSquidDatabase_updateRowWithComYahooSquidbDataTableModel_withComYahooSquidbSqlTableStatement_ConflictAlgorithm_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataTableModel *item, ComYahooSquidbSqlTableStatement_ConflictAlgorithm *conflictAlgorithm) {
  if (![((ComYahooSquidbDataTableModel *) nil_chk(item)) isModified]) {
    return true;
  }
  if (![item isSaved]) {
    return false;
  }
  IOSClass *modelClass = [item getClass];
  ComYahooSquidbSqlTable *table = ComYahooSquidbDataSquidDatabase_getTableWithIOSClass_(self, modelClass);
  ComYahooSquidbSqlUpdate *update = [((ComYahooSquidbSqlUpdate *) nil_chk([((ComYahooSquidbSqlUpdate *) nil_chk(ComYahooSquidbSqlUpdate_tableWithComYahooSquidbSqlTable_(table))) fromTemplateWithComYahooSquidbDataAbstractModel:item])) whereWithComYahooSquidbSqlCriterion:[((ComYahooSquidbSqlProperty_LongProperty *) nil_chk([((ComYahooSquidbSqlTable *) nil_chk(table)) getIdProperty])) eqWithId:JavaLangLong_valueOfWithLong_([item getId])]];
  if (conflictAlgorithm != nil) {
    (void) [((ComYahooSquidbSqlUpdate *) nil_chk(update)) onConflictWithComYahooSquidbSqlTableStatement_ConflictAlgorithm:conflictAlgorithm];
  }
  jboolean result = ComYahooSquidbDataSquidDatabase_updateInternalWithComYahooSquidbSqlUpdate_(self, update) > 0;
  if (result) {
    ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, JreLoadEnum(ComYahooSquidbDataDataChangedNotifier_DBOperation, UPDATE), item, table, [item getId]);
    [item markSaved];
  }
  return result;
}

void ComYahooSquidbDataSquidDatabase_notifyForTableWithComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(ComYahooSquidbDataSquidDatabase *self, ComYahooSquidbDataDataChangedNotifier_DBOperation *op, ComYahooSquidbDataAbstractModel *modelValues, ComYahooSquidbSqlSqlTable *table, jlong rowId) {
  if (!self->dataChangedNotificationsEnabled_) {
    return;
  }
  @synchronized(self->notifiersLock_) {
    ComYahooSquidbDataSquidDatabase_onDataChangedWithJavaUtilList_withComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, self->globalNotifiers_, op, modelValues, table, rowId);
    ComYahooSquidbDataSquidDatabase_onDataChangedWithJavaUtilList_withComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(self, [((id<JavaUtilMap>) nil_chk(self->tableNotifiers_)) getWithId:table], op, modelValues, table, rowId);
  }
  if (![self inTransaction]) {
    ComYahooSquidbDataSquidDatabase_flushAccumulatedNotificationsWithBoolean_(self, true);
  }
}

void ComYahooSquidbDataSquidDatabase_onDataChangedWithJavaUtilList_withComYahooSquidbDataDataChangedNotifier_DBOperation_withComYahooSquidbDataAbstractModel_withComYahooSquidbSqlSqlTable_withLong_(ComYahooSquidbDataSquidDatabase *self, id<JavaUtilList> notifiers, ComYahooSquidbDataDataChangedNotifier_DBOperation *op, ComYahooSquidbDataAbstractModel *modelValues, ComYahooSquidbSqlSqlTable *table, jlong rowId) {
  if (notifiers != nil) {
    for (ComYahooSquidbDataDataChangedNotifier * __strong notifier in notifiers) {
      if ([((ComYahooSquidbDataDataChangedNotifier *) nil_chk(notifier)) onDataChangedWithComYahooSquidbSqlSqlTable:table withComYahooSquidbDataSquidDatabase:self withComYahooSquidbDataDataChangedNotifier_DBOperation:op withComYahooSquidbDataAbstractModel:modelValues withLong:rowId]) {
        [((id<JavaUtilSet>) nil_chk([((JavaLangThreadLocal *) nil_chk(self->notifierAccumulator_)) get])) addWithId:notifier];
      }
    }
  }
}

void ComYahooSquidbDataSquidDatabase_flushAccumulatedNotificationsWithBoolean_(ComYahooSquidbDataSquidDatabase *self, jboolean transactionSuccess) {
  id<JavaUtilSet> accumulatedNotifiers = [((JavaLangThreadLocal *) nil_chk(self->notifierAccumulator_)) get];
  if (![((id<JavaUtilSet>) nil_chk(accumulatedNotifiers)) isEmpty]) {
    for (ComYahooSquidbDataDataChangedNotifier * __strong notifier in accumulatedNotifiers) {
      [((ComYahooSquidbDataDataChangedNotifier *) nil_chk(notifier)) flushAccumulatedNotificationsWithComYahooSquidbDataSquidDatabase:self withBoolean:transactionSuccess && self->dataChangedNotificationsEnabled_];
    }
    [accumulatedNotifiers clear];
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase)

@implementation ComYahooSquidbDataSquidDatabase_TransactionSuccessState

- (void)beginTransaction {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_beginTransaction(self);
}

- (jboolean)inTransaction {
  return ComYahooSquidbDataSquidDatabase_TransactionSuccessState_inTransaction(self);
}

- (void)setTransactionSuccessful {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_setTransactionSuccessful(self);
}

- (void)unsetTransactionSuccessful {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_unsetTransactionSuccessful(self);
}

- (void)endTransaction {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_endTransaction(self);
}

- (void)reset {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_reset(self);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "beginTransaction", NULL, "V", 0x2, NULL, NULL },
    { "inTransaction", NULL, "Z", 0x2, NULL, NULL },
    { "setTransactionSuccessful", NULL, "V", 0x2, NULL, NULL },
    { "unsetTransactionSuccessful", NULL, "V", 0x2, NULL, NULL },
    { "endTransaction", NULL, "V", 0x2, NULL, NULL },
    { "reset", NULL, "V", 0x2, NULL, NULL },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "nestedSuccessStack_", NULL, 0x0, "Ljava.util.Deque;", NULL, "Ljava/util/Deque<Ljava/lang/Boolean;>;", .constantValue.asLong = 0 },
    { "outerTransactionSuccess_", NULL, 0x0, "Z", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase_TransactionSuccessState = { 2, "TransactionSuccessState", "com.yahoo.squidb.data", "SquidDatabase", 0xa, 7, methods, 2, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbDataSquidDatabase_TransactionSuccessState;
}

@end

void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_beginTransaction(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self) {
  [((id<JavaUtilDeque>) nil_chk(self->nestedSuccessStack_)) pushWithId:JavaLangBoolean_valueOfWithBoolean_(false)];
}

jboolean ComYahooSquidbDataSquidDatabase_TransactionSuccessState_inTransaction(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self) {
  return [((id<JavaUtilDeque>) nil_chk(self->nestedSuccessStack_)) size] > 0;
}

void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_setTransactionSuccessful(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self) {
  (void) [((id<JavaUtilDeque>) nil_chk(self->nestedSuccessStack_)) pop];
  [self->nestedSuccessStack_ pushWithId:JavaLangBoolean_valueOfWithBoolean_(true)];
}

void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_unsetTransactionSuccessful(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self) {
  (void) [((id<JavaUtilDeque>) nil_chk(self->nestedSuccessStack_)) pop];
  [self->nestedSuccessStack_ pushWithId:JavaLangBoolean_valueOfWithBoolean_(false)];
}

void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_endTransaction(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self) {
  JavaLangBoolean *mostRecentTransactionSuccess = [((id<JavaUtilDeque>) nil_chk(self->nestedSuccessStack_)) pop];
  if (![((JavaLangBoolean *) nil_chk(mostRecentTransactionSuccess)) booleanValue]) {
    self->outerTransactionSuccess_ = false;
  }
}

void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_reset(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self) {
  [((id<JavaUtilDeque>) nil_chk(self->nestedSuccessStack_)) clear];
  self->outerTransactionSuccess_ = true;
}

void ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init(ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self) {
  NSObject_init(self);
  self->nestedSuccessStack_ = new_JavaUtilLinkedList_init();
  self->outerTransactionSuccess_ = true;
}

ComYahooSquidbDataSquidDatabase_TransactionSuccessState *new_ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init() {
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState *self = [ComYahooSquidbDataSquidDatabase_TransactionSuccessState alloc];
  ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init(self);
  return self;
}

ComYahooSquidbDataSquidDatabase_TransactionSuccessState *create_ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init() {
  return new_ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase_TransactionSuccessState)

@implementation ComYahooSquidbDataSquidDatabase_OpenHelperDelegate

- (instancetype)initWithComYahooSquidbDataSquidDatabase:(ComYahooSquidbDataSquidDatabase *)outer$ {
  ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(self, outer$);
  return self;
}

- (void)onCreateWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
  ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(this$0_, db);
  JavaLangStringBuilder *sql = new_JavaLangStringBuilder_initWithInt_(ComYahooSquidbDataSquidDatabase_STRING_BUILDER_INITIAL_CAPACITY);
  ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *sqlVisitor = new_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init();
  IOSObjectArray *tables = [this$0_ getTables];
  if (tables != nil) {
    {
      IOSObjectArray *a__ = tables;
      ComYahooSquidbSqlTable * const *b__ = a__->buffer_;
      ComYahooSquidbSqlTable * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        ComYahooSquidbSqlTable *table = *b__++;
        [((ComYahooSquidbSqlTable *) nil_chk(table)) appendCreateTableSqlWithComYahooSquidbUtilityVersionCode:[this$0_ getSqliteVersion] withJavaLangStringBuilder:sql withComYahooSquidbSqlProperty_PropertyVisitor:sqlVisitor];
        [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(db)) execSQLWithNSString:[sql description]];
        [sql setLengthWithInt:0];
      }
    }
  }
  IOSObjectArray *views = [this$0_ getViews];
  if (views != nil) {
    {
      IOSObjectArray *a__ = views;
      ComYahooSquidbSqlView * const *b__ = a__->buffer_;
      ComYahooSquidbSqlView * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        ComYahooSquidbSqlView *view = *b__++;
        [((ComYahooSquidbSqlView *) nil_chk(view)) createViewSqlWithComYahooSquidbUtilityVersionCode:[this$0_ getSqliteVersion] withJavaLangStringBuilder:sql];
        [((id<ComYahooSquidbDataISQLiteDatabase>) nil_chk(db)) execSQLWithNSString:[sql description]];
        [sql setLengthWithInt:0];
      }
    }
  }
  IOSObjectArray *indexes = [this$0_ getIndexes];
  if (indexes != nil) {
    {
      IOSObjectArray *a__ = indexes;
      ComYahooSquidbSqlIndex * const *b__ = a__->buffer_;
      ComYahooSquidbSqlIndex * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        ComYahooSquidbSqlIndex *idx = *b__++;
        [this$0_ tryCreateIndexWithComYahooSquidbSqlIndex:idx];
      }
    }
  }
  [this$0_ onTablesCreatedWithComYahooSquidbDataISQLiteDatabase:db];
}

- (void)onUpgradeWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db
                                               withInt:(jint)oldVersion
                                               withInt:(jint)newVersion {
  ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(this$0_, db);
  jboolean success = false;
  NSException *thrown = nil;
  this$0_->isInMigration_ = true;
  @try {
    success = [this$0_ onUpgradeWithComYahooSquidbDataISQLiteDatabase:db withInt:oldVersion withInt:newVersion];
  }
  @catch (NSException *t) {
    thrown = t;
    success = false;
  }
  @finally {
    this$0_->isInMigration_ = false;
  }
  if ([thrown isKindOfClass:[ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException class]]) {
    @throw (ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *) cast_chk(thrown, [ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException class]);
  }
  else if ([thrown isKindOfClass:[ComYahooSquidbDataSquidDatabase_MigrationFailedException class]]) {
    @throw (ComYahooSquidbDataSquidDatabase_MigrationFailedException *) cast_chk(thrown, [ComYahooSquidbDataSquidDatabase_MigrationFailedException class]);
  }
  else if (!success) {
    @throw new_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_([this$0_ getName], oldVersion, newVersion, thrown);
  }
}

- (void)onDowngradeWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db
                                                 withInt:(jint)oldVersion
                                                 withInt:(jint)newVersion {
  ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(this$0_, db);
  jboolean success = false;
  NSException *thrown = nil;
  this$0_->isInMigration_ = true;
  @try {
    success = [this$0_ onDowngradeWithComYahooSquidbDataISQLiteDatabase:db withInt:oldVersion withInt:newVersion];
  }
  @catch (NSException *t) {
    thrown = t;
    success = false;
  }
  @finally {
    this$0_->isInMigration_ = false;
  }
  if ([thrown isKindOfClass:[ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException class]]) {
    @throw (ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *) cast_chk(thrown, [ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException class]);
  }
  else if ([thrown isKindOfClass:[ComYahooSquidbDataSquidDatabase_MigrationFailedException class]]) {
    @throw (ComYahooSquidbDataSquidDatabase_MigrationFailedException *) cast_chk(thrown, [ComYahooSquidbDataSquidDatabase_MigrationFailedException class]);
  }
  else if (!success) {
    @throw new_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_([this$0_ getName], oldVersion, newVersion, thrown);
  }
}

- (void)onConfigureWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
  ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(this$0_, db);
  [this$0_ onConfigureWithComYahooSquidbDataISQLiteDatabase:db];
}

- (void)onOpenWithComYahooSquidbDataISQLiteDatabase:(id<ComYahooSquidbDataISQLiteDatabase>)db {
  ComYahooSquidbDataSquidDatabase_setDatabaseWithComYahooSquidbDataISQLiteDatabase_(this$0_, db);
  [this$0_ onOpenWithComYahooSquidbDataISQLiteDatabase:db];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComYahooSquidbDataSquidDatabase:", "OpenHelperDelegate", NULL, 0x2, NULL, NULL },
    { "onCreateWithComYahooSquidbDataISQLiteDatabase:", "onCreate", "V", 0x1, NULL, NULL },
    { "onUpgradeWithComYahooSquidbDataISQLiteDatabase:withInt:withInt:", "onUpgrade", "V", 0x1, NULL, NULL },
    { "onDowngradeWithComYahooSquidbDataISQLiteDatabase:withInt:withInt:", "onDowngrade", "V", 0x1, NULL, NULL },
    { "onConfigureWithComYahooSquidbDataISQLiteDatabase:", "onConfigure", "V", 0x1, NULL, NULL },
    { "onOpenWithComYahooSquidbDataISQLiteDatabase:", "onOpen", "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lcom.yahoo.squidb.data.SquidDatabase;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase_OpenHelperDelegate = { 2, "OpenHelperDelegate", "com.yahoo.squidb.data", "SquidDatabase", 0x11, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbDataSquidDatabase_OpenHelperDelegate;
}

@end

void ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *self, ComYahooSquidbDataSquidDatabase *outer$) {
  self->this$0_ = outer$;
  NSObject_init(self);
}

ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *new_ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *outer$) {
  ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *self = [ComYahooSquidbDataSquidDatabase_OpenHelperDelegate alloc];
  ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(self, outer$);
  return self;
}

ComYahooSquidbDataSquidDatabase_OpenHelperDelegate *create_ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(ComYahooSquidbDataSquidDatabase *outer$) {
  return new_ComYahooSquidbDataSquidDatabase_OpenHelperDelegate_initWithComYahooSquidbDataSquidDatabase_(outer$);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase_OpenHelperDelegate)

@implementation ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor

- (id)appendColumnDefinitionWithNSString:(NSString *)type
           withComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
               withJavaLangStringBuilder:(JavaLangStringBuilder *)sql {
  return ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(self, type, property, sql);
}

- (id)visitDoubleWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                        withId:(JavaLangStringBuilder *)sql {
  return ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(self, @"REAL", property, sql);
}

- (id)visitIntegerWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                         withId:(JavaLangStringBuilder *)sql {
  return ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(self, @"INTEGER", property, sql);
}

- (id)visitLongWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                      withId:(JavaLangStringBuilder *)sql {
  return ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(self, @"INTEGER", property, sql);
}

- (id)visitStringWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                        withId:(JavaLangStringBuilder *)sql {
  return ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(self, @"TEXT", property, sql);
}

- (id)visitBooleanWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                         withId:(JavaLangStringBuilder *)sql {
  return ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(self, @"INTEGER", property, sql);
}

- (id)visitBlobWithComYahooSquidbSqlProperty:(ComYahooSquidbSqlProperty *)property
                                      withId:(JavaLangStringBuilder *)sql {
  return ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(self, @"BLOB", property, sql);
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "appendColumnDefinitionWithNSString:withComYahooSquidbSqlProperty:withJavaLangStringBuilder:", "appendColumnDefinition", "Ljava.lang.Void;", 0x2, NULL, "(Ljava/lang/String;Lcom/yahoo/squidb/sql/Property<*>;Ljava/lang/StringBuilder;)Ljava/lang/Void;" },
    { "visitDoubleWithComYahooSquidbSqlProperty:withId:", "visitDouble", "Ljava.lang.Void;", 0x1, NULL, "(Lcom/yahoo/squidb/sql/Property<Ljava/lang/Double;>;Ljava/lang/StringBuilder;)Ljava/lang/Void;" },
    { "visitIntegerWithComYahooSquidbSqlProperty:withId:", "visitInteger", "Ljava.lang.Void;", 0x1, NULL, "(Lcom/yahoo/squidb/sql/Property<Ljava/lang/Integer;>;Ljava/lang/StringBuilder;)Ljava/lang/Void;" },
    { "visitLongWithComYahooSquidbSqlProperty:withId:", "visitLong", "Ljava.lang.Void;", 0x1, NULL, "(Lcom/yahoo/squidb/sql/Property<Ljava/lang/Long;>;Ljava/lang/StringBuilder;)Ljava/lang/Void;" },
    { "visitStringWithComYahooSquidbSqlProperty:withId:", "visitString", "Ljava.lang.Void;", 0x1, NULL, "(Lcom/yahoo/squidb/sql/Property<Ljava/lang/String;>;Ljava/lang/StringBuilder;)Ljava/lang/Void;" },
    { "visitBooleanWithComYahooSquidbSqlProperty:withId:", "visitBoolean", "Ljava.lang.Void;", 0x1, NULL, "(Lcom/yahoo/squidb/sql/Property<Ljava/lang/Boolean;>;Ljava/lang/StringBuilder;)Ljava/lang/Void;" },
    { "visitBlobWithComYahooSquidbSqlProperty:withId:", "visitBlob", "Ljava.lang.Void;", 0x1, NULL, "(Lcom/yahoo/squidb/sql/Property<L[B;>;Ljava/lang/StringBuilder;)Ljava/lang/Void;" },
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor = { 2, "SqlConstructorVisitor", "com.yahoo.squidb.data", "SquidDatabase", 0xa, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, "Ljava/lang/Object;Lcom/yahoo/squidb/sql/Property$PropertyVisitor<Ljava/lang/Void;Ljava/lang/StringBuilder;>;" };
  return &_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor;
}

@end

id ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_appendColumnDefinitionWithNSString_withComYahooSquidbSqlProperty_withJavaLangStringBuilder_(ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *self, NSString *type, ComYahooSquidbSqlProperty *property, JavaLangStringBuilder *sql) {
  (void) [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sql)) appendWithNSString:[((ComYahooSquidbSqlProperty *) nil_chk(property)) getName]])) appendWithNSString:@" "])) appendWithNSString:type];
  if (!ComYahooSquidbSqlSqlUtils_isEmptyWithNSString_([property getColumnDefinition])) {
    (void) [((JavaLangStringBuilder *) nil_chk([sql appendWithNSString:@" "])) appendWithNSString:[property getColumnDefinition]];
  }
  return nil;
}

void ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init(ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *self) {
  NSObject_init(self);
}

ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *new_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init() {
  ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *self = [ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor alloc];
  ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init(self);
  return self;
}

ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor *create_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init() {
  return new_ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase_SqlConstructorVisitor)

@implementation ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", NULL, NULL, 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_serialVersionUID },
  };
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException = { 2, "RecreateDuringMigrationException", "com.yahoo.squidb.data", "SquidDatabase", 0xa, 1, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException;
}

@end

void ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init(ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *self) {
  JavaLangRuntimeException_init(self);
}

ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *new_ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init() {
  ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *self = [ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException alloc];
  ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init(self);
  return self;
}

ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException *create_ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init() {
  return new_ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase_RecreateDuringMigrationException)

@implementation ComYahooSquidbDataSquidDatabase_MigrationFailedException

- (instancetype)initWithNSString:(NSString *)dbName
                         withInt:(jint)oldVersion
                         withInt:(jint)newVersion {
  ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_(self, dbName, oldVersion, newVersion);
  return self;
}

- (instancetype)initWithNSString:(NSString *)dbName
                         withInt:(jint)oldVersion
                         withInt:(jint)newVersion
                 withNSException:(NSException *)throwable {
  ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_(self, dbName, oldVersion, newVersion, throwable);
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:withInt:", "MigrationFailedException", NULL, 0x1, NULL, NULL },
    { "initWithNSString:withInt:withInt:withNSException:", "MigrationFailedException", NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "serialVersionUID", 0x1a, "J", NULL, NULL, .constantValue.asLong = ComYahooSquidbDataSquidDatabase_MigrationFailedException_serialVersionUID },
    { "dbName_", NULL, 0x11, "Ljava.lang.String;", NULL, NULL, .constantValue.asLong = 0 },
    { "oldVersion_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
    { "newVersion_", NULL, 0x11, "I", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase_MigrationFailedException = { 2, "MigrationFailedException", "com.yahoo.squidb.data", "SquidDatabase", 0x9, 2, methods, 4, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbDataSquidDatabase_MigrationFailedException;
}

@end

void ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_(ComYahooSquidbDataSquidDatabase_MigrationFailedException *self, NSString *dbName, jint oldVersion, jint newVersion) {
  ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_(self, dbName, oldVersion, newVersion, nil);
}

ComYahooSquidbDataSquidDatabase_MigrationFailedException *new_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_(NSString *dbName, jint oldVersion, jint newVersion) {
  ComYahooSquidbDataSquidDatabase_MigrationFailedException *self = [ComYahooSquidbDataSquidDatabase_MigrationFailedException alloc];
  ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_(self, dbName, oldVersion, newVersion);
  return self;
}

ComYahooSquidbDataSquidDatabase_MigrationFailedException *create_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_(NSString *dbName, jint oldVersion, jint newVersion) {
  return new_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_(dbName, oldVersion, newVersion);
}

void ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_(ComYahooSquidbDataSquidDatabase_MigrationFailedException *self, NSString *dbName, jint oldVersion, jint newVersion, NSException *throwable) {
  JavaLangRuntimeException_initWithNSString_withNSException_(self, JreStrcat("$$$I$I", @"Failed to migrate db ", dbName, @" from version ", oldVersion, @"to ", newVersion), throwable);
  self->dbName_ = dbName;
  self->oldVersion_ = oldVersion;
  self->newVersion_ = newVersion;
}

ComYahooSquidbDataSquidDatabase_MigrationFailedException *new_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_(NSString *dbName, jint oldVersion, jint newVersion, NSException *throwable) {
  ComYahooSquidbDataSquidDatabase_MigrationFailedException *self = [ComYahooSquidbDataSquidDatabase_MigrationFailedException alloc];
  ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_(self, dbName, oldVersion, newVersion, throwable);
  return self;
}

ComYahooSquidbDataSquidDatabase_MigrationFailedException *create_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_(NSString *dbName, jint oldVersion, jint newVersion, NSException *throwable) {
  return new_ComYahooSquidbDataSquidDatabase_MigrationFailedException_initWithNSString_withInt_withInt_withNSException_(dbName, oldVersion, newVersion, throwable);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase_MigrationFailedException)

@implementation ComYahooSquidbDataSquidDatabase_$1

- (ComYahooSquidbDataSquidDatabase_TransactionSuccessState *)initialValue {
  return new_ComYahooSquidbDataSquidDatabase_TransactionSuccessState_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYahooSquidbDataSquidDatabase_$1_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "Lcom.yahoo.squidb.data.SquidDatabase$TransactionSuccessState;", 0x4, NULL, "()Lcom/yahoo/squidb/data/SquidDatabase$TransactionSuccessState;" },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Lcom.yahoo.squidb.data.SquidDatabase$TransactionSuccessState;"};
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase_$1 = { 2, "", "com.yahoo.squidb.data", "SquidDatabase", 0x8008, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/ThreadLocal<Lcom/yahoo/squidb/data/SquidDatabase$TransactionSuccessState;>;" };
  return &_ComYahooSquidbDataSquidDatabase_$1;
}

@end

void ComYahooSquidbDataSquidDatabase_$1_init(ComYahooSquidbDataSquidDatabase_$1 *self) {
  JavaLangThreadLocal_init(self);
}

ComYahooSquidbDataSquidDatabase_$1 *new_ComYahooSquidbDataSquidDatabase_$1_init() {
  ComYahooSquidbDataSquidDatabase_$1 *self = [ComYahooSquidbDataSquidDatabase_$1 alloc];
  ComYahooSquidbDataSquidDatabase_$1_init(self);
  return self;
}

ComYahooSquidbDataSquidDatabase_$1 *create_ComYahooSquidbDataSquidDatabase_$1_init() {
  return new_ComYahooSquidbDataSquidDatabase_$1_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase_$1)

@implementation ComYahooSquidbDataSquidDatabase_$2

- (id<JavaUtilSet>)initialValue {
  return new_JavaUtilHashSet_init();
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ComYahooSquidbDataSquidDatabase_$2_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initialValue", NULL, "Ljava.util.Set;", 0x4, NULL, "()Ljava/util/Set<Lcom/yahoo/squidb/data/DataChangedNotifier<*>;>;" },
    { "init", "", NULL, 0x0, NULL, NULL },
  };
  static const char *superclass_type_args[] = {"Ljava.util.Set;"};
  static const J2ObjcClassInfo _ComYahooSquidbDataSquidDatabase_$2 = { 2, "", "com.yahoo.squidb.data", "SquidDatabase", 0x8008, 2, methods, 0, NULL, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/ThreadLocal<Ljava/util/Set<Lcom/yahoo/squidb/data/DataChangedNotifier<*>;>;>;" };
  return &_ComYahooSquidbDataSquidDatabase_$2;
}

@end

void ComYahooSquidbDataSquidDatabase_$2_init(ComYahooSquidbDataSquidDatabase_$2 *self) {
  JavaLangThreadLocal_init(self);
}

ComYahooSquidbDataSquidDatabase_$2 *new_ComYahooSquidbDataSquidDatabase_$2_init() {
  ComYahooSquidbDataSquidDatabase_$2 *self = [ComYahooSquidbDataSquidDatabase_$2 alloc];
  ComYahooSquidbDataSquidDatabase_$2_init(self);
  return self;
}

ComYahooSquidbDataSquidDatabase_$2 *create_ComYahooSquidbDataSquidDatabase_$2_init() {
  return new_ComYahooSquidbDataSquidDatabase_$2_init();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbDataSquidDatabase_$2)
