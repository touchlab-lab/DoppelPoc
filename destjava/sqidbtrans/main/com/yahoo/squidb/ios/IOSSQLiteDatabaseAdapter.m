//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kgalligan/devel/xp/squidb/squidb-ios/src/com/yahoo/squidb/ios/IOSSQLiteDatabaseAdapter.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/yahoo/android/sqlite/SQLiteDatabase.h"
#include "com/yahoo/android/sqlite/SQLiteStatement.h"
#include "com/yahoo/android/sqlite/SQLiteTransactionListener.h"
#include "com/yahoo/squidb/data/ICursor.h"
#include "com/yahoo/squidb/data/SquidTransactionListener.h"
#include "com/yahoo/squidb/ios/IOSSQLiteDatabaseAdapter.h"
#include "com/yahoo/squidb/ios/SquidCursorFactory.h"
#include "java/lang/NullPointerException.h"

@interface ComYahooSquidbIosIOSSQLiteDatabaseAdapter () {
 @public
  ComYahooAndroidSqliteSQLiteDatabase *db_;
}

@end

J2OBJC_FIELD_SETTER(ComYahooSquidbIosIOSSQLiteDatabaseAdapter, db_, ComYahooAndroidSqliteSQLiteDatabase *)

@interface ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter : NSObject < ComYahooAndroidSqliteSQLiteTransactionListener > {
 @public
  id<ComYahooSquidbDataSquidTransactionListener> listener_;
}

- (instancetype)initWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener;

- (void)onBegin;

- (void)onCommit;

- (void)onRollback;

@end

J2OBJC_EMPTY_STATIC_INIT(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter)

J2OBJC_FIELD_SETTER(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter, listener_, id<ComYahooSquidbDataSquidTransactionListener>)

__attribute__((unused)) static void ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *self, id<ComYahooSquidbDataSquidTransactionListener> listener);

__attribute__((unused)) static ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *create_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener);

J2OBJC_TYPE_LITERAL_HEADER(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter)

@implementation ComYahooSquidbIosIOSSQLiteDatabaseAdapter

- (instancetype)initWithComYahooAndroidSqliteSQLiteDatabase:(ComYahooAndroidSqliteSQLiteDatabase *)db {
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(self, db);
  return self;
}

- (void)beginTransaction {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransaction];
}

- (void)beginTransactionNonExclusive {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransactionNonExclusive];
}

- (void)beginTransactionWithListenerWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransactionWithListenerWithComYahooAndroidSqliteSQLiteTransactionListener:new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(listener)];
}

- (void)beginTransactionWithListenerNonExclusiveWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) beginTransactionWithListenerNonExclusiveWithComYahooAndroidSqliteSQLiteTransactionListener:new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(listener)];
}

- (void)endTransaction {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) endTransaction];
}

- (void)execSQLWithNSString:(NSString *)sql {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) execSQLWithNSString:sql];
}

- (void)execSQLWithNSString:(NSString *)sql
          withNSObjectArray:(IOSObjectArray *)bindArgs {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) execSQLWithNSString:sql withNSObjectArray:bindArgs];
}

- (jboolean)inTransaction {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) inTransaction];
}

- (jboolean)isOpen {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isOpen];
}

- (void)close {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) close];
}

- (void)disableWriteAheadLogging {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) disableWriteAheadLogging];
}

- (jboolean)enableWriteAheadLogging {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) enableWriteAheadLogging];
}

- (jboolean)isWriteAheadLoggingEnabled {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isWriteAheadLoggingEnabled];
}

- (jlong)getMaximumSize {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getMaximumSize];
}

- (jlong)getPageSize {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getPageSize];
}

- (NSString *)getPath {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getPath];
}

- (jboolean)isDatabaseIntegrityOk {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isDatabaseIntegrityOk];
}

- (jboolean)isDbLockedByCurrentThread {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isDbLockedByCurrentThread];
}

- (jboolean)isReadOnly {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) isReadOnly];
}

- (jboolean)needUpgradeWithInt:(jint)newVersion {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) needUpgradeWithInt:newVersion];
}

- (void)setForeignKeyConstraintsEnabledWithBoolean:(jboolean)enable {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setForeignKeyConstraintsEnabledWithBoolean:enable];
}

- (void)setMaxSqlCacheSizeWithInt:(jint)cacheSize {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setMaxSqlCacheSizeWithInt:cacheSize];
}

- (void)setMaximumSizeWithLong:(jlong)numBytes {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setMaximumSizeWithLong:numBytes];
}

- (void)setPageSizeWithLong:(jlong)numBytes {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setPageSizeWithLong:numBytes];
}

- (jint)getVersion {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) getVersion];
}

- (void)setVersionWithInt:(jint)version_ {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setVersionWithInt:version_];
}

- (id<ComYahooSquidbDataICursor>)rawQueryWithNSString:(NSString *)sql
                                    withNSObjectArray:(IOSObjectArray *)bindArgs {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) rawQueryWithFactoryWithComYahooAndroidSqliteSQLiteDatabase_CursorFactory:new_ComYahooSquidbIosSquidCursorFactory_initWithNSObjectArray_(bindArgs) withNSString:sql withNSStringArray:nil withNSString:nil];
}

- (NSString *)simpleQueryForStringWithNSString:(NSString *)sql
                             withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) simpleQueryForString];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (jlong)simpleQueryForLongWithNSString:(NSString *)sql
                      withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) simpleQueryForLong];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (void)setTransactionSuccessful {
  [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) setTransactionSuccessful];
}

- (NSString *)description {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) description];
}

- (jboolean)yieldIfContendedSafely {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) yieldIfContendedSafely];
}

- (jboolean)yieldIfContendedSafelyWithLong:(jlong)sleepAfterYieldDelay {
  return [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) yieldIfContendedSafelyWithLong:sleepAfterYieldDelay];
}

- (jint)executeUpdateDeleteWithNSString:(NSString *)sql
                      withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) executeUpdateDelete];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (jlong)executeInsertWithNSString:(NSString *)sql
                 withNSObjectArray:(IOSObjectArray *)bindArgs {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
    ComYahooSquidbIosSquidCursorFactory_bindArgumentsToProgramWithComYahooAndroidSqliteSQLiteProgram_withNSObjectArray_(statement, bindArgs);
    return [((ComYahooAndroidSqliteSQLiteStatement *) nil_chk(statement)) executeInsert];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (void)ensureSqlCompilesWithNSString:(NSString *)sql {
  ComYahooAndroidSqliteSQLiteStatement *statement = nil;
  @try {
    statement = [((ComYahooAndroidSqliteSQLiteDatabase *) nil_chk(db_)) compileStatementWithNSString:sql];
  }
  @finally {
    if (statement != nil) {
      [statement close];
    }
  }
}

- (ComYahooAndroidSqliteSQLiteDatabase *)getWrappedObject {
  return db_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComYahooAndroidSqliteSQLiteDatabase:", "IOSSQLiteDatabaseAdapter", NULL, 0x1, NULL, NULL },
    { "beginTransaction", NULL, "V", 0x1, NULL, NULL },
    { "beginTransactionNonExclusive", NULL, "V", 0x1, NULL, NULL },
    { "beginTransactionWithListenerWithComYahooSquidbDataSquidTransactionListener:", "beginTransactionWithListener", "V", 0x1, NULL, NULL },
    { "beginTransactionWithListenerNonExclusiveWithComYahooSquidbDataSquidTransactionListener:", "beginTransactionWithListenerNonExclusive", "V", 0x1, NULL, NULL },
    { "endTransaction", NULL, "V", 0x1, NULL, NULL },
    { "execSQLWithNSString:", "execSQL", "V", 0x1, NULL, NULL },
    { "execSQLWithNSString:withNSObjectArray:", "execSQL", "V", 0x1, NULL, NULL },
    { "inTransaction", NULL, "Z", 0x1, NULL, NULL },
    { "isOpen", NULL, "Z", 0x1, NULL, NULL },
    { "close", NULL, "V", 0x1, NULL, NULL },
    { "disableWriteAheadLogging", NULL, "V", 0x1, NULL, NULL },
    { "enableWriteAheadLogging", NULL, "Z", 0x1, NULL, NULL },
    { "isWriteAheadLoggingEnabled", NULL, "Z", 0x1, NULL, NULL },
    { "getMaximumSize", NULL, "J", 0x1, NULL, NULL },
    { "getPageSize", NULL, "J", 0x1, NULL, NULL },
    { "getPath", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "isDatabaseIntegrityOk", NULL, "Z", 0x1, NULL, NULL },
    { "isDbLockedByCurrentThread", NULL, "Z", 0x1, NULL, NULL },
    { "isReadOnly", NULL, "Z", 0x1, NULL, NULL },
    { "needUpgradeWithInt:", "needUpgrade", "Z", 0x1, NULL, NULL },
    { "setForeignKeyConstraintsEnabledWithBoolean:", "setForeignKeyConstraintsEnabled", "V", 0x1, NULL, NULL },
    { "setMaxSqlCacheSizeWithInt:", "setMaxSqlCacheSize", "V", 0x1, NULL, NULL },
    { "setMaximumSizeWithLong:", "setMaximumSize", "V", 0x1, NULL, NULL },
    { "setPageSizeWithLong:", "setPageSize", "V", 0x1, NULL, NULL },
    { "getVersion", NULL, "I", 0x1, NULL, NULL },
    { "setVersionWithInt:", "setVersion", "V", 0x1, NULL, NULL },
    { "rawQueryWithNSString:withNSObjectArray:", "rawQuery", "Lcom.yahoo.squidb.data.ICursor;", 0x1, NULL, NULL },
    { "simpleQueryForStringWithNSString:withNSObjectArray:", "simpleQueryForString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "simpleQueryForLongWithNSString:withNSObjectArray:", "simpleQueryForLong", "J", 0x1, NULL, NULL },
    { "setTransactionSuccessful", NULL, "V", 0x1, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "yieldIfContendedSafely", NULL, "Z", 0x1, NULL, NULL },
    { "yieldIfContendedSafelyWithLong:", "yieldIfContendedSafely", "Z", 0x1, NULL, NULL },
    { "executeUpdateDeleteWithNSString:withNSObjectArray:", "executeUpdateDelete", "I", 0x1, NULL, NULL },
    { "executeInsertWithNSString:withNSObjectArray:", "executeInsert", "J", 0x1, NULL, NULL },
    { "ensureSqlCompilesWithNSString:", "ensureSqlCompiles", "V", 0x1, NULL, NULL },
    { "getWrappedObject", NULL, "Lcom.yahoo.android.sqlite.SQLiteDatabase;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "db_", NULL, 0x12, "Lcom.yahoo.android.sqlite.SQLiteDatabase;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *inner_classes[] = {"Lcom.yahoo.squidb.ios.IOSSQLiteDatabaseAdapter$SQLiteTransactionListenerAdapter;"};
  static const J2ObjcClassInfo _ComYahooSquidbIosIOSSQLiteDatabaseAdapter = { 2, "IOSSQLiteDatabaseAdapter", "com.yahoo.squidb.ios", NULL, 0x1, 38, methods, 1, fields, 0, NULL, 1, inner_classes, NULL, NULL };
  return &_ComYahooSquidbIosIOSSQLiteDatabaseAdapter;
}

@end

void ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(ComYahooSquidbIosIOSSQLiteDatabaseAdapter *self, ComYahooAndroidSqliteSQLiteDatabase *db) {
  NSObject_init(self);
  if (db == nil) {
    @throw new_JavaLangNullPointerException_initWithNSString_(@"Can't create SQLiteDatabaseAdapter with a null SQLiteDatabase");
  }
  self->db_ = db;
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter *new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(ComYahooAndroidSqliteSQLiteDatabase *db) {
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter *self = [ComYahooSquidbIosIOSSQLiteDatabaseAdapter alloc];
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(self, db);
  return self;
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter *create_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(ComYahooAndroidSqliteSQLiteDatabase *db) {
  return new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_initWithComYahooAndroidSqliteSQLiteDatabase_(db);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbIosIOSSQLiteDatabaseAdapter)

@implementation ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter

- (instancetype)initWithComYahooSquidbDataSquidTransactionListener:(id<ComYahooSquidbDataSquidTransactionListener>)listener {
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(self, listener);
  return self;
}

- (void)onBegin {
  [((id<ComYahooSquidbDataSquidTransactionListener>) nil_chk(listener_)) onBegin];
}

- (void)onCommit {
  [((id<ComYahooSquidbDataSquidTransactionListener>) nil_chk(listener_)) onCommit];
}

- (void)onRollback {
  [((id<ComYahooSquidbDataSquidTransactionListener>) nil_chk(listener_)) onRollback];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithComYahooSquidbDataSquidTransactionListener:", "SQLiteTransactionListenerAdapter", NULL, 0x2, NULL, NULL },
    { "onBegin", NULL, "V", 0x1, NULL, NULL },
    { "onCommit", NULL, "V", 0x1, NULL, NULL },
    { "onRollback", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "listener_", NULL, 0x12, "Lcom.yahoo.squidb.data.SquidTransactionListener;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter = { 2, "SQLiteTransactionListenerAdapter", "com.yahoo.squidb.ios", "IOSSQLiteDatabaseAdapter", 0xa, 4, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter;
}

@end

void ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *self, id<ComYahooSquidbDataSquidTransactionListener> listener) {
  NSObject_init(self);
  self->listener_ = listener;
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener) {
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *self = [ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter alloc];
  ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(self, listener);
  return self;
}

ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter *create_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(id<ComYahooSquidbDataSquidTransactionListener> listener) {
  return new_ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter_initWithComYahooSquidbDataSquidTransactionListener_(listener);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComYahooSquidbIosIOSSQLiteDatabaseAdapter_SQLiteTransactionListenerAdapter)
